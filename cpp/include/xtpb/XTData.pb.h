// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: XTData.proto

#ifndef PROTOBUF_XTData_2eproto__INCLUDED
#define PROTOBUF_XTData_2eproto__INCLUDED

#include <string>
#include "XTConfig.h"
#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace XT {

// Internal implementation detail -- do not call these.
void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
void protobuf_AssignDesc_XTData_2eproto();
void protobuf_ShutdownFile_XTData_2eproto();

class ATMInfo;
class ApiData;
class ApiPBTagMsg;
class BarData;
class BarDataMap;
class CfgData;
class CurveCfgData;
class CurveData;
class DateOHLCV;
class DateTimeOHLCV;
class DayData;
class DoubleDoubleData;
class DoubleFunctionParams;
class DoubleInt64Data;
class DoubleIntParams;
class DoubleParam;
class DoubleVectorData;
class ExchangeInfo;
class FCCfgData;
class FCData;
class FillInfo;
class FillStatData;
class ForQuoteInfo;
class ForQuoteMgrCfgData;
class GatewayCfgData;
class GatewayData;
class GlobalCfgData;
class GlobalData;
class GreeksData;
class HalfExposure;
class InstrCfgData;
class InstrData;
class InstrEventInfo;
class InstrSpecData;
class InstrumentEventInfo;
class InstrumentInfo;
class Int64DoubleMapData;
class Int64Int64Data;
class Int64Int64MapData;
class Int64IntMapData;
class Int64Param;
class Int64StringMapData;
class Int64VectorData;
class IntDoubleData;
class IntDoubleMapData;
class IntInt64Data;
class IntInt64MapData;
class IntIntData;
class IntIntMapData;
class IntParam;
class IntPxHalfExposure;
class IntPxInfo;
class IntPxMktInfo;
class IntPxOrderInfo;
class IntStringData;
class IntStringMapData;
class IntVectorData;
class KCBPTagQuoteInfo10;
class KCBPTagQuoteInfo5;
class LadderBookData;
class LadderPxData;
class MktDataEventInfo;
class MktQuoteData;
class MongoDBCfgData;
class OCCfgData;
class OCData;
class OCSCfgData;
class OCSData;
class OCStrikeData;
class OHLCVData;
class OrderEventInfo;
class OrderInfo;
class OrderMgrCfgData;
class OrderMgrData;
class OrderStatData;
class OrdersSzPair;
class PBMsg;
class PBMsgMap;
class PBTagMsg;
class PBTagMsgMap;
class PICfgData;
class PIData;
class PnLData;
class PointData;
class PointDataList;
class PointDataMap;
class PortfolioCfgData;
class PortfolioData;
class PosData;
class PosGreeksData;
class ProductInfo;
class PxPnLData;
class PxVolume;
class PyAT_OrderData;
class PyAT_OrderExecutionInfo;
class QuoteData;
class QuoteInfo;
class RPnLData;
class RequestIdData;
class SQLiteCfgData;
class SessionData;
class SinaQuoteData;
class StratCfgData;
class StratData;
class StringDoubleData;
class StringDoubleMapData;
class StringInt64Data;
class StringInt64MapData;
class StringIntMapData;
class StringMapData;
class StringStringData;
class StringStringMapData;
class StringVectorData;
class TAParams;
class TDXDayData;
class TDXMinData;
class TagData;
class TagMsg;
class TaqStatData;
class TradePxVolumeData;
class TsRange;
class UPnLData;
class VolatilityData;
class VolumeAmount;
class VolumeAmountData;
class VolumeOutlayPair;
class XTMsgData;
class XpStatData;
class ZMQCfgData;
class ZMQData;

// ===================================================================

class XT_COMMON_API IntIntData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntIntData) */ {
 public:
  IntIntData();
  virtual ~IntIntData();

  IntIntData(const IntIntData& from);

  inline IntIntData& operator=(const IntIntData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntIntData& default_instance();

  void Swap(IntIntData* other);

  // implements Message ----------------------------------------------

  inline IntIntData* New() const { return New(NULL); }

  IntIntData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntIntData& from);
  void MergeFrom(const IntIntData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntIntData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 i1 = 1 [default = 0];
  bool has_i1() const;
  void clear_i1();
  static const int kI1FieldNumber = 1;
  ::google::protobuf::int32 i1() const;
  void set_i1(::google::protobuf::int32 value);

  // optional int32 i2 = 2 [default = 0];
  bool has_i2() const;
  void clear_i2();
  static const int kI2FieldNumber = 2;
  ::google::protobuf::int32 i2() const;
  void set_i2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.IntIntData)
 private:
  inline void set_has_i1();
  inline void clear_has_i1();
  inline void set_has_i2();
  inline void clear_has_i2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 i1_;
  ::google::protobuf::int32 i2_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntIntData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntStringData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntStringData) */ {
 public:
  IntStringData();
  virtual ~IntStringData();

  IntStringData(const IntStringData& from);

  inline IntStringData& operator=(const IntStringData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntStringData& default_instance();

  void Swap(IntStringData* other);

  // implements Message ----------------------------------------------

  inline IntStringData* New() const { return New(NULL); }

  IntStringData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntStringData& from);
  void MergeFrom(const IntStringData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntStringData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 i = 1 [default = 0];
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 1;
  ::google::protobuf::int32 i() const;
  void set_i(::google::protobuf::int32 value);

  // optional string s = 2 [default = ""];
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 2;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // @@protoc_insertion_point(class_scope:XT.IntStringData)
 private:
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_s();
  inline void clear_has_s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  ::google::protobuf::int32 i_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntStringData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntDoubleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntDoubleData) */ {
 public:
  IntDoubleData();
  virtual ~IntDoubleData();

  IntDoubleData(const IntDoubleData& from);

  inline IntDoubleData& operator=(const IntDoubleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntDoubleData& default_instance();

  void Swap(IntDoubleData* other);

  // implements Message ----------------------------------------------

  inline IntDoubleData* New() const { return New(NULL); }

  IntDoubleData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntDoubleData& from);
  void MergeFrom(const IntDoubleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntDoubleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 i = 1 [default = 0];
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 1;
  ::google::protobuf::int32 i() const;
  void set_i(::google::protobuf::int32 value);

  // optional double d = 2 [default = 0];
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 2;
  double d() const;
  void set_d(double value);

  // @@protoc_insertion_point(class_scope:XT.IntDoubleData)
 private:
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_d();
  inline void clear_has_d();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double d_;
  ::google::protobuf::int32 i_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntDoubleData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntInt64Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntInt64Data) */ {
 public:
  IntInt64Data();
  virtual ~IntInt64Data();

  IntInt64Data(const IntInt64Data& from);

  inline IntInt64Data& operator=(const IntInt64Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntInt64Data& default_instance();

  void Swap(IntInt64Data* other);

  // implements Message ----------------------------------------------

  inline IntInt64Data* New() const { return New(NULL); }

  IntInt64Data* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntInt64Data& from);
  void MergeFrom(const IntInt64Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntInt64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 i = 1 [default = 0];
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 1;
  ::google::protobuf::int32 i() const;
  void set_i(::google::protobuf::int32 value);

  // optional int64 l = 2 [default = 0];
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 2;
  ::google::protobuf::int64 l() const;
  void set_l(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.IntInt64Data)
 private:
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_l();
  inline void clear_has_l();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 l_;
  ::google::protobuf::int32 i_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntInt64Data* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringStringData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringStringData) */ {
 public:
  StringStringData();
  virtual ~StringStringData();

  StringStringData(const StringStringData& from);

  inline StringStringData& operator=(const StringStringData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringStringData& default_instance();

  void Swap(StringStringData* other);

  // implements Message ----------------------------------------------

  inline StringStringData* New() const { return New(NULL); }

  StringStringData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringStringData& from);
  void MergeFrom(const StringStringData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringStringData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string s1 = 1 [default = ""];
  bool has_s1() const;
  void clear_s1();
  static const int kS1FieldNumber = 1;
  const ::std::string& s1() const;
  void set_s1(const ::std::string& value);
  void set_s1(const char* value);
  void set_s1(const char* value, size_t size);
  ::std::string* mutable_s1();
  ::std::string* release_s1();
  void set_allocated_s1(::std::string* s1);

  // optional string s2 = 2 [default = ""];
  bool has_s2() const;
  void clear_s2();
  static const int kS2FieldNumber = 2;
  const ::std::string& s2() const;
  void set_s2(const ::std::string& value);
  void set_s2(const char* value);
  void set_s2(const char* value, size_t size);
  ::std::string* mutable_s2();
  ::std::string* release_s2();
  void set_allocated_s2(::std::string* s2);

  // @@protoc_insertion_point(class_scope:XT.StringStringData)
 private:
  inline void set_has_s1();
  inline void clear_has_s1();
  inline void set_has_s2();
  inline void clear_has_s2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr s1_;
  ::google::protobuf::internal::ArenaStringPtr s2_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringStringData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringDoubleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringDoubleData) */ {
 public:
  StringDoubleData();
  virtual ~StringDoubleData();

  StringDoubleData(const StringDoubleData& from);

  inline StringDoubleData& operator=(const StringDoubleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringDoubleData& default_instance();

  void Swap(StringDoubleData* other);

  // implements Message ----------------------------------------------

  inline StringDoubleData* New() const { return New(NULL); }

  StringDoubleData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringDoubleData& from);
  void MergeFrom(const StringDoubleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringDoubleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string s = 1 [default = ""];
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 1;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // optional double d = 2 [default = 0];
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 2;
  double d() const;
  void set_d(double value);

  // @@protoc_insertion_point(class_scope:XT.StringDoubleData)
 private:
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_d();
  inline void clear_has_d();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  double d_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringDoubleData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringInt64Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringInt64Data) */ {
 public:
  StringInt64Data();
  virtual ~StringInt64Data();

  StringInt64Data(const StringInt64Data& from);

  inline StringInt64Data& operator=(const StringInt64Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringInt64Data& default_instance();

  void Swap(StringInt64Data* other);

  // implements Message ----------------------------------------------

  inline StringInt64Data* New() const { return New(NULL); }

  StringInt64Data* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringInt64Data& from);
  void MergeFrom(const StringInt64Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringInt64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string s = 1 [default = ""];
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 1;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // optional int64 l = 2 [default = 0];
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 2;
  ::google::protobuf::int64 l() const;
  void set_l(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.StringInt64Data)
 private:
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_l();
  inline void clear_has_l();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  ::google::protobuf::int64 l_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringInt64Data* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleDoubleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleDoubleData) */ {
 public:
  DoubleDoubleData();
  virtual ~DoubleDoubleData();

  DoubleDoubleData(const DoubleDoubleData& from);

  inline DoubleDoubleData& operator=(const DoubleDoubleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleDoubleData& default_instance();

  void Swap(DoubleDoubleData* other);

  // implements Message ----------------------------------------------

  inline DoubleDoubleData* New() const { return New(NULL); }

  DoubleDoubleData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleDoubleData& from);
  void MergeFrom(const DoubleDoubleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleDoubleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double d1 = 1 [default = 0];
  bool has_d1() const;
  void clear_d1();
  static const int kD1FieldNumber = 1;
  double d1() const;
  void set_d1(double value);

  // optional double d2 = 2 [default = 0];
  bool has_d2() const;
  void clear_d2();
  static const int kD2FieldNumber = 2;
  double d2() const;
  void set_d2(double value);

  // @@protoc_insertion_point(class_scope:XT.DoubleDoubleData)
 private:
  inline void set_has_d1();
  inline void clear_has_d1();
  inline void set_has_d2();
  inline void clear_has_d2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double d1_;
  double d2_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleDoubleData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleInt64Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleInt64Data) */ {
 public:
  DoubleInt64Data();
  virtual ~DoubleInt64Data();

  DoubleInt64Data(const DoubleInt64Data& from);

  inline DoubleInt64Data& operator=(const DoubleInt64Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleInt64Data& default_instance();

  void Swap(DoubleInt64Data* other);

  // implements Message ----------------------------------------------

  inline DoubleInt64Data* New() const { return New(NULL); }

  DoubleInt64Data* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleInt64Data& from);
  void MergeFrom(const DoubleInt64Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleInt64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double d = 1 [default = 0];
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 1;
  double d() const;
  void set_d(double value);

  // optional int64 l = 2 [default = 0];
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 2;
  ::google::protobuf::int64 l() const;
  void set_l(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.DoubleInt64Data)
 private:
  inline void set_has_d();
  inline void clear_has_d();
  inline void set_has_l();
  inline void clear_has_l();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double d_;
  ::google::protobuf::int64 l_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleInt64Data* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64Int64Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64Int64Data) */ {
 public:
  Int64Int64Data();
  virtual ~Int64Int64Data();

  Int64Int64Data(const Int64Int64Data& from);

  inline Int64Int64Data& operator=(const Int64Int64Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Int64Data& default_instance();

  void Swap(Int64Int64Data* other);

  // implements Message ----------------------------------------------

  inline Int64Int64Data* New() const { return New(NULL); }

  Int64Int64Data* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64Int64Data& from);
  void MergeFrom(const Int64Int64Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64Int64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 l1 = 1 [default = 0];
  bool has_l1() const;
  void clear_l1();
  static const int kL1FieldNumber = 1;
  ::google::protobuf::int64 l1() const;
  void set_l1(::google::protobuf::int64 value);

  // optional int64 l2 = 2 [default = 0];
  bool has_l2() const;
  void clear_l2();
  static const int kL2FieldNumber = 2;
  ::google::protobuf::int64 l2() const;
  void set_l2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.Int64Int64Data)
 private:
  inline void set_has_l1();
  inline void clear_has_l1();
  inline void set_has_l2();
  inline void clear_has_l2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 l1_;
  ::google::protobuf::int64 l2_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64Int64Data* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntVectorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntVectorData) */ {
 public:
  IntVectorData();
  virtual ~IntVectorData();

  IntVectorData(const IntVectorData& from);

  inline IntVectorData& operator=(const IntVectorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntVectorData& default_instance();

  void Swap(IntVectorData* other);

  // implements Message ----------------------------------------------

  inline IntVectorData* New() const { return New(NULL); }

  IntVectorData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntVectorData& from);
  void MergeFrom(const IntVectorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntVectorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ivec = 1;
  int ivec_size() const;
  void clear_ivec();
  static const int kIvecFieldNumber = 1;
  ::google::protobuf::int32 ivec(int index) const;
  void set_ivec(int index, ::google::protobuf::int32 value);
  void add_ivec(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ivec() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ivec();

  // @@protoc_insertion_point(class_scope:XT.IntVectorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ivec_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntVectorData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringVectorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringVectorData) */ {
 public:
  StringVectorData();
  virtual ~StringVectorData();

  StringVectorData(const StringVectorData& from);

  inline StringVectorData& operator=(const StringVectorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringVectorData& default_instance();

  void Swap(StringVectorData* other);

  // implements Message ----------------------------------------------

  inline StringVectorData* New() const { return New(NULL); }

  StringVectorData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringVectorData& from);
  void MergeFrom(const StringVectorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringVectorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string svec = 1;
  int svec_size() const;
  void clear_svec();
  static const int kSvecFieldNumber = 1;
  const ::std::string& svec(int index) const;
  ::std::string* mutable_svec(int index);
  void set_svec(int index, const ::std::string& value);
  void set_svec(int index, const char* value);
  void set_svec(int index, const char* value, size_t size);
  ::std::string* add_svec();
  void add_svec(const ::std::string& value);
  void add_svec(const char* value);
  void add_svec(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& svec() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_svec();

  // @@protoc_insertion_point(class_scope:XT.StringVectorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> svec_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringVectorData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleVectorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleVectorData) */ {
 public:
  DoubleVectorData();
  virtual ~DoubleVectorData();

  DoubleVectorData(const DoubleVectorData& from);

  inline DoubleVectorData& operator=(const DoubleVectorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleVectorData& default_instance();

  void Swap(DoubleVectorData* other);

  // implements Message ----------------------------------------------

  inline DoubleVectorData* New() const { return New(NULL); }

  DoubleVectorData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleVectorData& from);
  void MergeFrom(const DoubleVectorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleVectorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double dvec = 1;
  int dvec_size() const;
  void clear_dvec();
  static const int kDvecFieldNumber = 1;
  double dvec(int index) const;
  void set_dvec(int index, double value);
  void add_dvec(double value);
  const ::google::protobuf::RepeatedField< double >&
      dvec() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_dvec();

  // @@protoc_insertion_point(class_scope:XT.DoubleVectorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > dvec_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleVectorData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64VectorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64VectorData) */ {
 public:
  Int64VectorData();
  virtual ~Int64VectorData();

  Int64VectorData(const Int64VectorData& from);

  inline Int64VectorData& operator=(const Int64VectorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64VectorData& default_instance();

  void Swap(Int64VectorData* other);

  // implements Message ----------------------------------------------

  inline Int64VectorData* New() const { return New(NULL); }

  Int64VectorData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64VectorData& from);
  void MergeFrom(const Int64VectorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64VectorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 lvec = 1;
  int lvec_size() const;
  void clear_lvec();
  static const int kLvecFieldNumber = 1;
  ::google::protobuf::int64 lvec(int index) const;
  void set_lvec(int index, ::google::protobuf::int64 value);
  void add_lvec(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lvec() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lvec();

  // @@protoc_insertion_point(class_scope:XT.Int64VectorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lvec_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64VectorData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntIntMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntIntMapData) */ {
 public:
  IntIntMapData();
  virtual ~IntIntMapData();

  IntIntMapData(const IntIntMapData& from);

  inline IntIntMapData& operator=(const IntIntMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntIntMapData& default_instance();

  void Swap(IntIntMapData* other);

  // implements Message ----------------------------------------------

  inline IntIntMapData* New() const { return New(NULL); }

  IntIntMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntIntMapData& from);
  void MergeFrom(const IntIntMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntIntMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int32> intintmap = 1;
  int intintmap_size() const;
  void clear_intintmap();
  static const int kIntintmapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      intintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_intintmap();

  // @@protoc_insertion_point(class_scope:XT.IntIntMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      IntIntMapData_IntintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > intintmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntIntMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntStringMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntStringMapData) */ {
 public:
  IntStringMapData();
  virtual ~IntStringMapData();

  IntStringMapData(const IntStringMapData& from);

  inline IntStringMapData& operator=(const IntStringMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntStringMapData& default_instance();

  void Swap(IntStringMapData* other);

  // implements Message ----------------------------------------------

  inline IntStringMapData* New() const { return New(NULL); }

  IntStringMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntStringMapData& from);
  void MergeFrom(const IntStringMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntStringMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, string> intstrmap = 1;
  int intstrmap_size() const;
  void clear_intstrmap();
  static const int kIntstrmapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      intstrmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_intstrmap();

  // @@protoc_insertion_point(class_scope:XT.IntStringMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      IntStringMapData_IntstrmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > intstrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntStringMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntInt64MapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntInt64MapData) */ {
 public:
  IntInt64MapData();
  virtual ~IntInt64MapData();

  IntInt64MapData(const IntInt64MapData& from);

  inline IntInt64MapData& operator=(const IntInt64MapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntInt64MapData& default_instance();

  void Swap(IntInt64MapData* other);

  // implements Message ----------------------------------------------

  inline IntInt64MapData* New() const { return New(NULL); }

  IntInt64MapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntInt64MapData& from);
  void MergeFrom(const IntInt64MapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntInt64MapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int64> intint64map = 1;
  int intint64map_size() const;
  void clear_intint64map();
  static const int kIntint64MapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      intint64map() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_intint64map();

  // @@protoc_insertion_point(class_scope:XT.IntInt64MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      IntInt64MapData_Intint64mapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > intint64map_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntInt64MapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntDoubleMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntDoubleMapData) */ {
 public:
  IntDoubleMapData();
  virtual ~IntDoubleMapData();

  IntDoubleMapData(const IntDoubleMapData& from);

  inline IntDoubleMapData& operator=(const IntDoubleMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntDoubleMapData& default_instance();

  void Swap(IntDoubleMapData* other);

  // implements Message ----------------------------------------------

  inline IntDoubleMapData* New() const { return New(NULL); }

  IntDoubleMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntDoubleMapData& from);
  void MergeFrom(const IntDoubleMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntDoubleMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, double> intdoublemap = 1;
  int intdoublemap_size() const;
  void clear_intdoublemap();
  static const int kIntdoublemapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      intdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_intdoublemap();

  // @@protoc_insertion_point(class_scope:XT.IntDoubleMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      IntDoubleMapData_IntdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > intdoublemap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntDoubleMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringIntMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringIntMapData) */ {
 public:
  StringIntMapData();
  virtual ~StringIntMapData();

  StringIntMapData(const StringIntMapData& from);

  inline StringIntMapData& operator=(const StringIntMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringIntMapData& default_instance();

  void Swap(StringIntMapData* other);

  // implements Message ----------------------------------------------

  inline StringIntMapData* New() const { return New(NULL); }

  StringIntMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringIntMapData& from);
  void MergeFrom(const StringIntMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringIntMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int32> strintmap = 1;
  int strintmap_size() const;
  void clear_strintmap();
  static const int kStrintmapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      strintmap() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_strintmap();

  // @@protoc_insertion_point(class_scope:XT.StringIntMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      StringIntMapData_StrintmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > strintmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringIntMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringStringMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringStringMapData) */ {
 public:
  StringStringMapData();
  virtual ~StringStringMapData();

  StringStringMapData(const StringStringMapData& from);

  inline StringStringMapData& operator=(const StringStringMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringStringMapData& default_instance();

  void Swap(StringStringMapData* other);

  // implements Message ----------------------------------------------

  inline StringStringMapData* New() const { return New(NULL); }

  StringStringMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringStringMapData& from);
  void MergeFrom(const StringStringMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringStringMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> strstrmap = 1;
  int strstrmap_size() const;
  void clear_strstrmap();
  static const int kStrstrmapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strstrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strstrmap();

  // @@protoc_insertion_point(class_scope:XT.StringStringMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      StringStringMapData_StrstrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strstrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringStringMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringDoubleMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringDoubleMapData) */ {
 public:
  StringDoubleMapData();
  virtual ~StringDoubleMapData();

  StringDoubleMapData(const StringDoubleMapData& from);

  inline StringDoubleMapData& operator=(const StringDoubleMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringDoubleMapData& default_instance();

  void Swap(StringDoubleMapData* other);

  // implements Message ----------------------------------------------

  inline StringDoubleMapData* New() const { return New(NULL); }

  StringDoubleMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringDoubleMapData& from);
  void MergeFrom(const StringDoubleMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringDoubleMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> strdoublemap = 1;
  int strdoublemap_size() const;
  void clear_strdoublemap();
  static const int kStrdoublemapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, double >&
      strdoublemap() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_strdoublemap();

  // @@protoc_insertion_point(class_scope:XT.StringDoubleMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      StringDoubleMapData_StrdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > strdoublemap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringDoubleMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringInt64MapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringInt64MapData) */ {
 public:
  StringInt64MapData();
  virtual ~StringInt64MapData();

  StringInt64MapData(const StringInt64MapData& from);

  inline StringInt64MapData& operator=(const StringInt64MapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringInt64MapData& default_instance();

  void Swap(StringInt64MapData* other);

  // implements Message ----------------------------------------------

  inline StringInt64MapData* New() const { return New(NULL); }

  StringInt64MapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringInt64MapData& from);
  void MergeFrom(const StringInt64MapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringInt64MapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int64> strint64map = 1;
  int strint64map_size() const;
  void clear_strint64map();
  static const int kStrint64MapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      strint64map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_strint64map();

  // @@protoc_insertion_point(class_scope:XT.StringInt64MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      StringInt64MapData_Strint64mapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > strint64map_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringInt64MapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64IntMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64IntMapData) */ {
 public:
  Int64IntMapData();
  virtual ~Int64IntMapData();

  Int64IntMapData(const Int64IntMapData& from);

  inline Int64IntMapData& operator=(const Int64IntMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64IntMapData& default_instance();

  void Swap(Int64IntMapData* other);

  // implements Message ----------------------------------------------

  inline Int64IntMapData* New() const { return New(NULL); }

  Int64IntMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64IntMapData& from);
  void MergeFrom(const Int64IntMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64IntMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, int32> int64intmap = 1;
  int int64intmap_size() const;
  void clear_int64intmap();
  static const int kInt64IntmapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
      int64intmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
      mutable_int64intmap();

  // @@protoc_insertion_point(class_scope:XT.Int64IntMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      Int64IntMapData_Int64intmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > int64intmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64IntMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64StringMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64StringMapData) */ {
 public:
  Int64StringMapData();
  virtual ~Int64StringMapData();

  Int64StringMapData(const Int64StringMapData& from);

  inline Int64StringMapData& operator=(const Int64StringMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64StringMapData& default_instance();

  void Swap(Int64StringMapData* other);

  // implements Message ----------------------------------------------

  inline Int64StringMapData* New() const { return New(NULL); }

  Int64StringMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64StringMapData& from);
  void MergeFrom(const Int64StringMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64StringMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, string> int64strmap = 1;
  int int64strmap_size() const;
  void clear_int64strmap();
  static const int kInt64StrmapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
      int64strmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
      mutable_int64strmap();

  // @@protoc_insertion_point(class_scope:XT.Int64StringMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Int64StringMapData_Int64strmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > int64strmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64StringMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64DoubleMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64DoubleMapData) */ {
 public:
  Int64DoubleMapData();
  virtual ~Int64DoubleMapData();

  Int64DoubleMapData(const Int64DoubleMapData& from);

  inline Int64DoubleMapData& operator=(const Int64DoubleMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64DoubleMapData& default_instance();

  void Swap(Int64DoubleMapData* other);

  // implements Message ----------------------------------------------

  inline Int64DoubleMapData* New() const { return New(NULL); }

  Int64DoubleMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64DoubleMapData& from);
  void MergeFrom(const Int64DoubleMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64DoubleMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, double> int64doublemap = 1;
  int int64doublemap_size() const;
  void clear_int64doublemap();
  static const int kInt64DoublemapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, double >&
      int64doublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, double >*
      mutable_int64doublemap();

  // @@protoc_insertion_point(class_scope:XT.Int64DoubleMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      Int64DoubleMapData_Int64doublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > int64doublemap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64DoubleMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64Int64MapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64Int64MapData) */ {
 public:
  Int64Int64MapData();
  virtual ~Int64Int64MapData();

  Int64Int64MapData(const Int64Int64MapData& from);

  inline Int64Int64MapData& operator=(const Int64Int64MapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Int64MapData& default_instance();

  void Swap(Int64Int64MapData* other);

  // implements Message ----------------------------------------------

  inline Int64Int64MapData* New() const { return New(NULL); }

  Int64Int64MapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64Int64MapData& from);
  void MergeFrom(const Int64Int64MapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64Int64MapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, int64> int64int64map = 1;
  int int64int64map_size() const;
  void clear_int64int64map();
  static const int kInt64Int64MapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
      int64int64map() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
      mutable_int64int64map();

  // @@protoc_insertion_point(class_scope:XT.Int64Int64MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      Int64Int64MapData_Int64int64mapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > int64int64map_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64Int64MapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API XTMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.XTMsgData) */ {
 public:
  XTMsgData();
  virtual ~XTMsgData();

  XTMsgData(const XTMsgData& from);

  inline XTMsgData& operator=(const XTMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XTMsgData& default_instance();

  void Swap(XTMsgData* other);

  // implements Message ----------------------------------------------

  inline XTMsgData* New() const { return New(NULL); }

  XTMsgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XTMsgData& from);
  void MergeFrom(const XTMsgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XTMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double d = 2 [default = 0];
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 2;
  double d() const;
  void set_d(double value);

  // optional int32 i = 3 [default = 0];
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 3;
  ::google::protobuf::int32 i() const;
  void set_i(::google::protobuf::int32 value);

  // optional int64 l = 4 [default = 0];
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 4;
  ::google::protobuf::int64 l() const;
  void set_l(::google::protobuf::int64 value);

  // optional string s = 5 [default = ""];
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 5;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // map<string, string> strmap = 6;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrmapFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strmap();

  // @@protoc_insertion_point(class_scope:XT.XTMsgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_d();
  inline void clear_has_d();
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_l();
  inline void clear_has_l();
  inline void set_has_s();
  inline void clear_has_s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double d_;
  ::google::protobuf::int64 l_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      XTMsgData_StrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  ::google::protobuf::int32 i_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static XTMsgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PBTagMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PBTagMsg) */ {
 public:
  PBTagMsg();
  virtual ~PBTagMsg();

  PBTagMsg(const PBTagMsg& from);

  inline PBTagMsg& operator=(const PBTagMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTagMsg& default_instance();

  void Swap(PBTagMsg* other);

  // implements Message ----------------------------------------------

  inline PBTagMsg* New() const { return New(NULL); }

  PBTagMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTagMsg& from);
  void MergeFrom(const PBTagMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTagMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:XT.PBTagMsg)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 tag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PBTagMsg* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PBMsg) */ {
 public:
  PBMsg();
  virtual ~PBMsg();

  PBMsg(const PBMsg& from);

  inline PBMsg& operator=(const PBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMsg& default_instance();

  void Swap(PBMsg* other);

  // implements Message ----------------------------------------------

  inline PBMsg* New() const { return New(NULL); }

  PBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMsg& from);
  void MergeFrom(const PBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool isjson = 2 [default = false];
  bool has_isjson() const;
  void clear_isjson();
  static const int kIsjsonFieldNumber = 2;
  bool isjson() const;
  void set_isjson(bool value);

  // map<string, string> strmap = 3;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrmapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strmap();

  // @@protoc_insertion_point(class_scope:XT.PBMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_isjson();
  inline void clear_has_isjson();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      PBMsg_StrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  bool isjson_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PBMsg* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PBMsgMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PBMsgMap) */ {
 public:
  PBMsgMap();
  virtual ~PBMsgMap();

  PBMsgMap(const PBMsgMap& from);

  inline PBMsgMap& operator=(const PBMsgMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMsgMap& default_instance();

  void Swap(PBMsgMap* other);

  // implements Message ----------------------------------------------

  inline PBMsgMap* New() const { return New(NULL); }

  PBMsgMap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMsgMap& from);
  void MergeFrom(const PBMsgMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBMsgMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // map<string, string> strmap = 2;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrmapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strmap();

  // @@protoc_insertion_point(class_scope:XT.PBMsgMap)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      PBMsgMap_StrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PBMsgMap* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PBTagMsgMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PBTagMsgMap) */ {
 public:
  PBTagMsgMap();
  virtual ~PBTagMsgMap();

  PBTagMsgMap(const PBTagMsgMap& from);

  inline PBTagMsgMap& operator=(const PBTagMsgMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTagMsgMap& default_instance();

  void Swap(PBTagMsgMap* other);

  // implements Message ----------------------------------------------

  inline PBTagMsgMap* New() const { return New(NULL); }

  PBTagMsgMap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTagMsgMap& from);
  void MergeFrom(const PBTagMsgMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTagMsgMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 tag = 1 [default = 0];
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // map<int32, string> strmap = 2;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrmapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_strmap();

  // @@protoc_insertion_point(class_scope:XT.PBTagMsgMap)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      PBTagMsgMap_StrmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  ::google::protobuf::int32 tag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PBTagMsgMap* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ApiPBTagMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ApiPBTagMsg) */ {
 public:
  ApiPBTagMsg();
  virtual ~ApiPBTagMsg();

  ApiPBTagMsg(const ApiPBTagMsg& from);

  inline ApiPBTagMsg& operator=(const ApiPBTagMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApiPBTagMsg& default_instance();

  void Swap(ApiPBTagMsg* other);

  // implements Message ----------------------------------------------

  inline ApiPBTagMsg* New() const { return New(NULL); }

  ApiPBTagMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApiPBTagMsg& from);
  void MergeFrom(const ApiPBTagMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ApiPBTagMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string apiname = 1 [default = ""];
  bool has_apiname() const;
  void clear_apiname();
  static const int kApinameFieldNumber = 1;
  const ::std::string& apiname() const;
  void set_apiname(const ::std::string& value);
  void set_apiname(const char* value);
  void set_apiname(const char* value, size_t size);
  ::std::string* mutable_apiname();
  ::std::string* release_apiname();
  void set_allocated_apiname(::std::string* apiname);

  // optional int32 tag = 2;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // optional string data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional string info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // optional int32 id = 5;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional uint32 uid = 6;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 6;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional bool last = 7;
  bool has_last() const;
  void clear_last();
  static const int kLastFieldNumber = 7;
  bool last() const;
  void set_last(bool value);

  // @@protoc_insertion_point(class_scope:XT.ApiPBTagMsg)
 private:
  inline void set_has_apiname();
  inline void clear_has_apiname();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_last();
  inline void clear_has_last();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr apiname_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 tag_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::uint32 uid_;
  bool last_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ApiPBTagMsg* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ApiData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ApiData) */ {
 public:
  ApiData();
  virtual ~ApiData();

  ApiData(const ApiData& from);

  inline ApiData& operator=(const ApiData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApiData& default_instance();

  void Swap(ApiData* other);

  // implements Message ----------------------------------------------

  inline ApiData* New() const { return New(NULL); }

  ApiData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApiData& from);
  void MergeFrom(const ApiData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ApiData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 apitype = 1 [default = 0];
  bool has_apitype() const;
  void clear_apitype();
  static const int kApitypeFieldNumber = 1;
  ::google::protobuf::int32 apitype() const;
  void set_apitype(::google::protobuf::int32 value);

  // optional string name = 2 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string version = 3 [default = ""];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional int32 initflag = 4 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 4;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 instrfilterflag = 5 [default = 0];
  bool has_instrfilterflag() const;
  void clear_instrfilterflag();
  static const int kInstrfilterflagFieldNumber = 5;
  ::google::protobuf::int32 instrfilterflag() const;
  void set_instrfilterflag(::google::protobuf::int32 value);

  // optional string instrprefixes = 6 [default = ""];
  bool has_instrprefixes() const;
  void clear_instrprefixes();
  static const int kInstrprefixesFieldNumber = 6;
  const ::std::string& instrprefixes() const;
  void set_instrprefixes(const ::std::string& value);
  void set_instrprefixes(const char* value);
  void set_instrprefixes(const char* value, size_t size);
  ::std::string* mutable_instrprefixes();
  ::std::string* release_instrprefixes();
  void set_allocated_instrprefixes(::std::string* instrprefixes);

  // optional string productids = 7 [default = ""];
  bool has_productids() const;
  void clear_productids();
  static const int kProductidsFieldNumber = 7;
  const ::std::string& productids() const;
  void set_productids(const ::std::string& value);
  void set_productids(const char* value);
  void set_productids(const char* value, size_t size);
  ::std::string* mutable_productids();
  ::std::string* release_productids();
  void set_allocated_productids(::std::string* productids);

  // optional string exchids = 8 [default = ""];
  bool has_exchids() const;
  void clear_exchids();
  static const int kExchidsFieldNumber = 8;
  const ::std::string& exchids() const;
  void set_exchids(const ::std::string& value);
  void set_exchids(const char* value);
  void set_exchids(const char* value, size_t size);
  ::std::string* mutable_exchids();
  ::std::string* release_exchids();
  void set_allocated_exchids(::std::string* exchids);

  // @@protoc_insertion_point(class_scope:XT.ApiData)
 private:
  inline void set_has_apitype();
  inline void clear_has_apitype();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_instrfilterflag();
  inline void clear_has_instrfilterflag();
  inline void set_has_instrprefixes();
  inline void clear_has_instrprefixes();
  inline void set_has_productids();
  inline void clear_has_productids();
  inline void set_has_exchids();
  inline void clear_has_exchids();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 apitype_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr instrprefixes_;
  ::google::protobuf::internal::ArenaStringPtr productids_;
  ::google::protobuf::internal::ArenaStringPtr exchids_;
  ::google::protobuf::int32 instrfilterflag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ApiData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TagMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TagMsg) */ {
 public:
  TagMsg();
  virtual ~TagMsg();

  TagMsg(const TagMsg& from);

  inline TagMsg& operator=(const TagMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagMsg& default_instance();

  void Swap(TagMsg* other);

  // implements Message ----------------------------------------------

  inline TagMsg* New() const { return New(NULL); }

  TagMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TagMsg& from);
  void MergeFrom(const TagMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TagMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:XT.TagMsg)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 tag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TagMsg* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TagData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TagData) */ {
 public:
  TagData();
  virtual ~TagData();

  TagData(const TagData& from);

  inline TagData& operator=(const TagData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagData& default_instance();

  void Swap(TagData* other);

  // implements Message ----------------------------------------------

  inline TagData* New() const { return New(NULL); }

  TagData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TagData& from);
  void MergeFrom(const TagData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TagData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // map<int32, int32> intMap = 2;
  int intmap_size() const;
  void clear_intmap();
  static const int kIntMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      intmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_intmap();

  // map<int32, double> doubleMap = 3;
  int doublemap_size() const;
  void clear_doublemap();
  static const int kDoubleMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      doublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_doublemap();

  // map<int32, int64> longMap = 4;
  int longmap_size() const;
  void clear_longmap();
  static const int kLongMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      longmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_longmap();

  // map<int32, string> strMap = 5;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_strmap();

  // map<string, string> strToStrMap = 6;
  int strtostrmap_size() const;
  void clear_strtostrmap();
  static const int kStrToStrMapFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strtostrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strtostrmap();

  // map<string, .XT.TagData> nestedMap = 7;
  int nestedmap_size() const;
  void clear_nestedmap();
  static const int kNestedMapFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::XT::TagData >&
      nestedmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::TagData >*
      mutable_nestedmap();

  // @@protoc_insertion_point(class_scope:XT.TagData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      TagData_IntMapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > intmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      TagData_DoubleMapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > doublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      TagData_LongMapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > longmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      TagData_StrMapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      TagData_StrToStrMapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strtostrmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::TagData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      TagData_NestedMapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::TagData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > nestedmap_;
  ::google::protobuf::int32 id_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TagData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StringMapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StringMapData) */ {
 public:
  StringMapData();
  virtual ~StringMapData();

  StringMapData(const StringMapData& from);

  inline StringMapData& operator=(const StringMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringMapData& default_instance();

  void Swap(StringMapData* other);

  // implements Message ----------------------------------------------

  inline StringMapData* New() const { return New(NULL); }

  StringMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringMapData& from);
  void MergeFrom(const StringMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> strToStrMap = 1;
  int strtostrmap_size() const;
  void clear_strtostrmap();
  static const int kStrToStrMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strtostrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strtostrmap();

  // @@protoc_insertion_point(class_scope:XT.StringMapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      StringMapData_StrToStrMapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strtostrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StringMapData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TsRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TsRange) */ {
 public:
  TsRange();
  virtual ~TsRange();

  TsRange(const TsRange& from);

  inline TsRange& operator=(const TsRange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TsRange& default_instance();

  void Swap(TsRange* other);

  // implements Message ----------------------------------------------

  inline TsRange* New() const { return New(NULL); }

  TsRange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TsRange& from);
  void MergeFrom(const TsRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TsRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 begints = 1 [default = 0];
  bool has_begints() const;
  void clear_begints();
  static const int kBegintsFieldNumber = 1;
  ::google::protobuf::int64 begints() const;
  void set_begints(::google::protobuf::int64 value);

  // optional int64 endts = 2 [default = 0];
  bool has_endts() const;
  void clear_endts();
  static const int kEndtsFieldNumber = 2;
  ::google::protobuf::int64 endts() const;
  void set_endts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.TsRange)
 private:
  inline void set_has_begints();
  inline void clear_has_begints();
  inline void set_has_endts();
  inline void clear_has_endts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 begints_;
  ::google::protobuf::int64 endts_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TsRange* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API SessionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.SessionData) */ {
 public:
  SessionData();
  virtual ~SessionData();

  SessionData(const SessionData& from);

  inline SessionData& operator=(const SessionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionData& default_instance();

  void Swap(SessionData* other);

  // implements Message ----------------------------------------------

  inline SessionData* New() const { return New(NULL); }

  SessionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionData& from);
  void MergeFrom(const SessionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 flag = 2 [default = 0];
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional int32 tradingday = 3 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 3;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 4 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 4;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int64 begints = 5 [default = 0];
  bool has_begints() const;
  void clear_begints();
  static const int kBegintsFieldNumber = 5;
  ::google::protobuf::int64 begints() const;
  void set_begints(::google::protobuf::int64 value);

  // optional int64 endts = 6 [default = 0];
  bool has_endts() const;
  void clear_endts();
  static const int kEndtsFieldNumber = 6;
  ::google::protobuf::int64 endts() const;
  void set_endts(::google::protobuf::int64 value);

  // optional string begindt = 7 [default = ""];
  bool has_begindt() const;
  void clear_begindt();
  static const int kBegindtFieldNumber = 7;
  const ::std::string& begindt() const;
  void set_begindt(const ::std::string& value);
  void set_begindt(const char* value);
  void set_begindt(const char* value, size_t size);
  ::std::string* mutable_begindt();
  ::std::string* release_begindt();
  void set_allocated_begindt(::std::string* begindt);

  // optional string enddt = 8 [default = ""];
  bool has_enddt() const;
  void clear_enddt();
  static const int kEnddtFieldNumber = 8;
  const ::std::string& enddt() const;
  void set_enddt(const ::std::string& value);
  void set_enddt(const char* value);
  void set_enddt(const char* value, size_t size);
  ::std::string* mutable_enddt();
  ::std::string* release_enddt();
  void set_allocated_enddt(::std::string* enddt);

  // optional int64 mktts = 9 [default = 0];
  bool has_mktts() const;
  void clear_mktts();
  static const int kMkttsFieldNumber = 9;
  ::google::protobuf::int64 mktts() const;
  void set_mktts(::google::protobuf::int64 value);

  // optional int32 secselapsed = 10 [default = 0];
  bool has_secselapsed() const;
  void clear_secselapsed();
  static const int kSecselapsedFieldNumber = 10;
  ::google::protobuf::int32 secselapsed() const;
  void set_secselapsed(::google::protobuf::int32 value);

  // optional int32 secsleft = 11 [default = 0];
  bool has_secsleft() const;
  void clear_secsleft();
  static const int kSecsleftFieldNumber = 11;
  ::google::protobuf::int32 secsleft() const;
  void set_secsleft(::google::protobuf::int32 value);

  // optional string cfgstr = 12 [default = ""];
  bool has_cfgstr() const;
  void clear_cfgstr();
  static const int kCfgstrFieldNumber = 12;
  const ::std::string& cfgstr() const;
  void set_cfgstr(const ::std::string& value);
  void set_cfgstr(const char* value);
  void set_cfgstr(const char* value, size_t size);
  ::std::string* mutable_cfgstr();
  ::std::string* release_cfgstr();
  void set_allocated_cfgstr(::std::string* cfgstr);

  // @@protoc_insertion_point(class_scope:XT.SessionData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_begints();
  inline void clear_has_begints();
  inline void set_has_endts();
  inline void clear_has_endts();
  inline void set_has_begindt();
  inline void clear_has_begindt();
  inline void set_has_enddt();
  inline void clear_has_enddt();
  inline void set_has_mktts();
  inline void clear_has_mktts();
  inline void set_has_secselapsed();
  inline void clear_has_secselapsed();
  inline void set_has_secsleft();
  inline void clear_has_secsleft();
  inline void set_has_cfgstr();
  inline void clear_has_cfgstr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int64 begints_;
  ::google::protobuf::int64 endts_;
  ::google::protobuf::internal::ArenaStringPtr begindt_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int32 secselapsed_;
  ::google::protobuf::internal::ArenaStringPtr enddt_;
  ::google::protobuf::int64 mktts_;
  ::google::protobuf::internal::ArenaStringPtr cfgstr_;
  ::google::protobuf::int32 secsleft_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static SessionData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleParam) */ {
 public:
  DoubleParam();
  virtual ~DoubleParam();

  DoubleParam(const DoubleParam& from);

  inline DoubleParam& operator=(const DoubleParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleParam& default_instance();

  void Swap(DoubleParam* other);

  // implements Message ----------------------------------------------

  inline DoubleParam* New() const { return New(NULL); }

  DoubleParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleParam& from);
  void MergeFrom(const DoubleParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double curr = 1 [default = 0];
  bool has_curr() const;
  void clear_curr();
  static const int kCurrFieldNumber = 1;
  double curr() const;
  void set_curr(double value);

  // optional double prev = 2 [default = 0];
  bool has_prev() const;
  void clear_prev();
  static const int kPrevFieldNumber = 2;
  double prev() const;
  void set_prev(double value);

  // optional double temp = 3 [default = 0];
  bool has_temp() const;
  void clear_temp();
  static const int kTempFieldNumber = 3;
  double temp() const;
  void set_temp(double value);

  // optional double min = 4 [default = -999999999];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 4;
  double min() const;
  void set_min(double value);

  // optional double max = 5 [default = 999999999];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 5;
  double max() const;
  void set_max(double value);

  // optional double step = 6 [default = 0.001];
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 6;
  double step() const;
  void set_step(double value);

  // optional int32 idx = 7 [default = 0];
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 7;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // optional string name = 8 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XT.DoubleParam)
 private:
  inline void set_has_curr();
  inline void clear_has_curr();
  inline void set_has_prev();
  inline void clear_has_prev();
  inline void set_has_temp();
  inline void clear_has_temp();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double curr_;
  double prev_;
  double temp_;
  double min_;
  double max_;
  double step_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 idx_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleParam* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntParam) */ {
 public:
  IntParam();
  virtual ~IntParam();

  IntParam(const IntParam& from);

  inline IntParam& operator=(const IntParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntParam& default_instance();

  void Swap(IntParam* other);

  // implements Message ----------------------------------------------

  inline IntParam* New() const { return New(NULL); }

  IntParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntParam& from);
  void MergeFrom(const IntParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 curr = 1 [default = 0];
  bool has_curr() const;
  void clear_curr();
  static const int kCurrFieldNumber = 1;
  ::google::protobuf::int32 curr() const;
  void set_curr(::google::protobuf::int32 value);

  // optional int32 prev = 2 [default = 0];
  bool has_prev() const;
  void clear_prev();
  static const int kPrevFieldNumber = 2;
  ::google::protobuf::int32 prev() const;
  void set_prev(::google::protobuf::int32 value);

  // optional int32 temp = 3 [default = 0];
  bool has_temp() const;
  void clear_temp();
  static const int kTempFieldNumber = 3;
  ::google::protobuf::int32 temp() const;
  void set_temp(::google::protobuf::int32 value);

  // optional int32 min = 4 [default = -999999999];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 4;
  ::google::protobuf::int32 min() const;
  void set_min(::google::protobuf::int32 value);

  // optional int32 max = 5 [default = 999999999];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 5;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // optional int32 step = 6 [default = 1];
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 6;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // optional int32 idx = 7 [default = 0];
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 7;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // optional string name = 8 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XT.IntParam)
 private:
  inline void set_has_curr();
  inline void clear_has_curr();
  inline void set_has_prev();
  inline void clear_has_prev();
  inline void set_has_temp();
  inline void clear_has_temp();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 curr_;
  ::google::protobuf::int32 prev_;
  ::google::protobuf::int32 temp_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 idx_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntParam* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API Int64Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.Int64Param) */ {
 public:
  Int64Param();
  virtual ~Int64Param();

  Int64Param(const Int64Param& from);

  inline Int64Param& operator=(const Int64Param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Param& default_instance();

  void Swap(Int64Param* other);

  // implements Message ----------------------------------------------

  inline Int64Param* New() const { return New(NULL); }

  Int64Param* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int64Param& from);
  void MergeFrom(const Int64Param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64Param* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 curr = 1 [default = 0];
  bool has_curr() const;
  void clear_curr();
  static const int kCurrFieldNumber = 1;
  ::google::protobuf::int64 curr() const;
  void set_curr(::google::protobuf::int64 value);

  // optional int64 prev = 2 [default = 0];
  bool has_prev() const;
  void clear_prev();
  static const int kPrevFieldNumber = 2;
  ::google::protobuf::int64 prev() const;
  void set_prev(::google::protobuf::int64 value);

  // optional int64 temp = 3 [default = 0];
  bool has_temp() const;
  void clear_temp();
  static const int kTempFieldNumber = 3;
  ::google::protobuf::int64 temp() const;
  void set_temp(::google::protobuf::int64 value);

  // optional int64 min = 4 [default = -999999999];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 4;
  ::google::protobuf::int64 min() const;
  void set_min(::google::protobuf::int64 value);

  // optional int64 max = 5 [default = 999999999];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 5;
  ::google::protobuf::int64 max() const;
  void set_max(::google::protobuf::int64 value);

  // optional int64 step = 6 [default = 1];
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 6;
  ::google::protobuf::int64 step() const;
  void set_step(::google::protobuf::int64 value);

  // optional int64 idx = 7 [default = 0];
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 7;
  ::google::protobuf::int64 idx() const;
  void set_idx(::google::protobuf::int64 value);

  // optional string name = 8 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XT.Int64Param)
 private:
  inline void set_has_curr();
  inline void clear_has_curr();
  inline void set_has_prev();
  inline void clear_has_prev();
  inline void set_has_temp();
  inline void clear_has_temp();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 curr_;
  ::google::protobuf::int64 prev_;
  ::google::protobuf::int64 temp_;
  ::google::protobuf::int64 min_;
  ::google::protobuf::int64 max_;
  ::google::protobuf::int64 step_;
  ::google::protobuf::int64 idx_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static Int64Param* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleIntParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleIntParams) */ {
 public:
  DoubleIntParams();
  virtual ~DoubleIntParams();

  DoubleIntParams(const DoubleIntParams& from);

  inline DoubleIntParams& operator=(const DoubleIntParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleIntParams& default_instance();

  void Swap(DoubleIntParams* other);

  // implements Message ----------------------------------------------

  inline DoubleIntParams* New() const { return New(NULL); }

  DoubleIntParams* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleIntParams& from);
  void MergeFrom(const DoubleIntParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleIntParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XT.DoubleParam doubleparams = 1;
  int doubleparams_size() const;
  void clear_doubleparams();
  static const int kDoubleparamsFieldNumber = 1;
  const ::XT::DoubleParam& doubleparams(int index) const;
  ::XT::DoubleParam* mutable_doubleparams(int index);
  ::XT::DoubleParam* add_doubleparams();
  ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >*
      mutable_doubleparams();
  const ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >&
      doubleparams() const;

  // repeated .XT.IntParam intparams = 2;
  int intparams_size() const;
  void clear_intparams();
  static const int kIntparamsFieldNumber = 2;
  const ::XT::IntParam& intparams(int index) const;
  ::XT::IntParam* mutable_intparams(int index);
  ::XT::IntParam* add_intparams();
  ::google::protobuf::RepeatedPtrField< ::XT::IntParam >*
      mutable_intparams();
  const ::google::protobuf::RepeatedPtrField< ::XT::IntParam >&
      intparams() const;

  // optional string name = 3 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XT.DoubleIntParams)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam > doubleparams_;
  ::google::protobuf::RepeatedPtrField< ::XT::IntParam > intparams_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleIntParams* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DoubleFunctionParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DoubleFunctionParams) */ {
 public:
  DoubleFunctionParams();
  virtual ~DoubleFunctionParams();

  DoubleFunctionParams(const DoubleFunctionParams& from);

  inline DoubleFunctionParams& operator=(const DoubleFunctionParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleFunctionParams& default_instance();

  void Swap(DoubleFunctionParams* other);

  // implements Message ----------------------------------------------

  inline DoubleFunctionParams* New() const { return New(NULL); }

  DoubleFunctionParams* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleFunctionParams& from);
  void MergeFrom(const DoubleFunctionParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleFunctionParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .XT.DoubleParam doubleparams = 2;
  int doubleparams_size() const;
  void clear_doubleparams();
  static const int kDoubleparamsFieldNumber = 2;
  const ::XT::DoubleParam& doubleparams(int index) const;
  ::XT::DoubleParam* mutable_doubleparams(int index);
  ::XT::DoubleParam* add_doubleparams();
  ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >*
      mutable_doubleparams();
  const ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >&
      doubleparams() const;

  // repeated .XT.IntParam intparams = 3;
  int intparams_size() const;
  void clear_intparams();
  static const int kIntparamsFieldNumber = 3;
  const ::XT::IntParam& intparams(int index) const;
  ::XT::IntParam* mutable_intparams(int index);
  ::XT::IntParam* add_intparams();
  ::google::protobuf::RepeatedPtrField< ::XT::IntParam >*
      mutable_intparams();
  const ::google::protobuf::RepeatedPtrField< ::XT::IntParam >&
      intparams() const;

  // optional double epsilon = 4 [default = 1e-06];
  bool has_epsilon() const;
  void clear_epsilon();
  static const int kEpsilonFieldNumber = 4;
  double epsilon() const;
  void set_epsilon(double value);

  // @@protoc_insertion_point(class_scope:XT.DoubleFunctionParams)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_epsilon();
  inline void clear_has_epsilon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam > doubleparams_;
  ::google::protobuf::RepeatedPtrField< ::XT::IntParam > intparams_;
  double epsilon_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DoubleFunctionParams* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PointData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PointData) */ {
 public:
  PointData();
  virtual ~PointData();

  PointData(const PointData& from);

  inline PointData& operator=(const PointData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointData& default_instance();

  void Swap(PointData* other);

  // implements Message ----------------------------------------------

  inline PointData* New() const { return New(NULL); }

  PointData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointData& from);
  void MergeFrom(const PointData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = 0];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = 0];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3 [default = 0];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // optional double v = 4 [default = 0];
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 4;
  double v() const;
  void set_v(double value);

  // optional double w = 5 [default = 1];
  bool has_w() const;
  void clear_w();
  static const int kWFieldNumber = 5;
  double w() const;
  void set_w(double value);

  // optional int32 flag = 6 [default = 0];
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 6;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional int64 ts = 7 [default = 0];
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 7;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.PointData)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_v();
  inline void clear_has_v();
  inline void set_has_w();
  inline void clear_has_w();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  double v_;
  double w_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int32 flag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PointData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PointDataMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PointDataMap) */ {
 public:
  PointDataMap();
  virtual ~PointDataMap();

  PointDataMap(const PointDataMap& from);

  inline PointDataMap& operator=(const PointDataMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointDataMap& default_instance();

  void Swap(PointDataMap* other);

  // implements Message ----------------------------------------------

  inline PointDataMap* New() const { return New(NULL); }

  PointDataMap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointDataMap& from);
  void MergeFrom(const PointDataMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointDataMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .XT.PointData> pointsmap = 1;
  int pointsmap_size() const;
  void clear_pointsmap();
  static const int kPointsmapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::PointData >&
      pointsmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::XT::PointData >*
      mutable_pointsmap();

  // optional int64 ts = 2 [default = 0];
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // map<int32, double> tagdoublemap = 3;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<int64, int32> tagtoidxmap = 10;
  int tagtoidxmap_size() const;
  void clear_tagtoidxmap();
  static const int kTagtoidxmapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
      tagtoidxmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
      mutable_tagtoidxmap();

  // repeated int64 tags = 11;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 11;
  ::google::protobuf::int64 tags(int index) const;
  void set_tags(int index, ::google::protobuf::int64 value);
  void add_tags(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      tags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_tags();

  // repeated double xs = 12;
  int xs_size() const;
  void clear_xs();
  static const int kXsFieldNumber = 12;
  double xs(int index) const;
  void set_xs(int index, double value);
  void add_xs(double value);
  const ::google::protobuf::RepeatedField< double >&
      xs() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_xs();

  // repeated double ys = 13;
  int ys_size() const;
  void clear_ys();
  static const int kYsFieldNumber = 13;
  double ys(int index) const;
  void set_ys(int index, double value);
  void add_ys(double value);
  const ::google::protobuf::RepeatedField< double >&
      ys() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_ys();

  // repeated double zs = 14;
  int zs_size() const;
  void clear_zs();
  static const int kZsFieldNumber = 14;
  double zs(int index) const;
  void set_zs(int index, double value);
  void add_zs(double value);
  const ::google::protobuf::RepeatedField< double >&
      zs() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_zs();

  // repeated double vs = 15;
  int vs_size() const;
  void clear_vs();
  static const int kVsFieldNumber = 15;
  double vs(int index) const;
  void set_vs(int index, double value);
  void add_vs(double value);
  const ::google::protobuf::RepeatedField< double >&
      vs() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_vs();

  // repeated double ws = 16;
  int ws_size() const;
  void clear_ws();
  static const int kWsFieldNumber = 16;
  double ws(int index) const;
  void set_ws(int index, double value);
  void add_ws(double value);
  const ::google::protobuf::RepeatedField< double >&
      ws() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_ws();

  // repeated int32 flags = 17;
  int flags_size() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 17;
  ::google::protobuf::int32 flags(int index) const;
  void set_flags(int index, ::google::protobuf::int32 value);
  void add_flags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flags();

  // @@protoc_insertion_point(class_scope:XT.PointDataMap)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::XT::PointData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      PointDataMap_PointsmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::XT::PointData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > pointsmap_;
  ::google::protobuf::int64 ts_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      PointDataMap_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      PointDataMap_TagtoidxmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagtoidxmap_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > tags_;
  ::google::protobuf::RepeatedField< double > xs_;
  ::google::protobuf::RepeatedField< double > ys_;
  ::google::protobuf::RepeatedField< double > zs_;
  ::google::protobuf::RepeatedField< double > vs_;
  ::google::protobuf::RepeatedField< double > ws_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flags_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PointDataMap* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PointDataList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PointDataList) */ {
 public:
  PointDataList();
  virtual ~PointDataList();

  PointDataList(const PointDataList& from);

  inline PointDataList& operator=(const PointDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointDataList& default_instance();

  void Swap(PointDataList* other);

  // implements Message ----------------------------------------------

  inline PointDataList* New() const { return New(NULL); }

  PointDataList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointDataList& from);
  void MergeFrom(const PointDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointDataList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XT.PointData pointslist = 1;
  int pointslist_size() const;
  void clear_pointslist();
  static const int kPointslistFieldNumber = 1;
  const ::XT::PointData& pointslist(int index) const;
  ::XT::PointData* mutable_pointslist(int index);
  ::XT::PointData* add_pointslist();
  ::google::protobuf::RepeatedPtrField< ::XT::PointData >*
      mutable_pointslist();
  const ::google::protobuf::RepeatedPtrField< ::XT::PointData >&
      pointslist() const;

  // @@protoc_insertion_point(class_scope:XT.PointDataList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::XT::PointData > pointslist_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PointDataList* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API CurveCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.CurveCfgData) */ {
 public:
  CurveCfgData();
  virtual ~CurveCfgData();

  CurveCfgData(const CurveCfgData& from);

  inline CurveCfgData& operator=(const CurveCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurveCfgData& default_instance();

  void Swap(CurveCfgData* other);

  // implements Message ----------------------------------------------

  inline CurveCfgData* New() const { return New(NULL); }

  CurveCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurveCfgData& from);
  void MergeFrom(const CurveCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CurveCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 maxnoi = 2 [default = 1000];
  bool has_maxnoi() const;
  void clear_maxnoi();
  static const int kMaxnoiFieldNumber = 2;
  ::google::protobuf::int32 maxnoi() const;
  void set_maxnoi(::google::protobuf::int32 value);

  // optional int32 minstartnoi = 3 [default = 5];
  bool has_minstartnoi() const;
  void clear_minstartnoi();
  static const int kMinstartnoiFieldNumber = 3;
  ::google::protobuf::int32 minstartnoi() const;
  void set_minstartnoi(::google::protobuf::int32 value);

  // optional double roote = 4 [default = 0.0001];
  bool has_roote() const;
  void clear_roote();
  static const int kRooteFieldNumber = 4;
  double roote() const;
  void set_roote(double value);

  // optional double funce = 5 [default = 0.0001];
  bool has_funce() const;
  void clear_funce();
  static const int kFunceFieldNumber = 5;
  double funce() const;
  void set_funce(double value);

  // optional double gradnorme = 6 [default = 0.0001];
  bool has_gradnorme() const;
  void clear_gradnorme();
  static const int kGradnormeFieldNumber = 6;
  double gradnorme() const;
  void set_gradnorme(double value);

  // optional int32 fitmethod = 7 [default = 0];
  bool has_fitmethod() const;
  void clear_fitmethod();
  static const int kFitmethodFieldNumber = 7;
  ::google::protobuf::int32 fitmethod() const;
  void set_fitmethod(::google::protobuf::int32 value);

  // optional int32 weightmethod = 8 [default = 0];
  bool has_weightmethod() const;
  void clear_weightmethod();
  static const int kWeightmethodFieldNumber = 8;
  ::google::protobuf::int32 weightmethod() const;
  void set_weightmethod(::google::protobuf::int32 value);

  // optional int32 fitdataflag = 9 [default = 0];
  bool has_fitdataflag() const;
  void clear_fitdataflag();
  static const int kFitdataflagFieldNumber = 9;
  ::google::protobuf::int32 fitdataflag() const;
  void set_fitdataflag(::google::protobuf::int32 value);

  // optional double minweight = 10 [default = 0];
  bool has_minweight() const;
  void clear_minweight();
  static const int kMinweightFieldNumber = 10;
  double minweight() const;
  void set_minweight(double value);

  // optional double maxweight = 11 [default = 999999999];
  bool has_maxweight() const;
  void clear_maxweight();
  static const int kMaxweightFieldNumber = 11;
  double maxweight() const;
  void set_maxweight(double value);

  // optional double minx = 12 [default = -999999999];
  bool has_minx() const;
  void clear_minx();
  static const int kMinxFieldNumber = 12;
  double minx() const;
  void set_minx(double value);

  // optional double maxx = 13 [default = 999999999];
  bool has_maxx() const;
  void clear_maxx();
  static const int kMaxxFieldNumber = 13;
  double maxx() const;
  void set_maxx(double value);

  // optional double miny = 14 [default = -999999999];
  bool has_miny() const;
  void clear_miny();
  static const int kMinyFieldNumber = 14;
  double miny() const;
  void set_miny(double value);

  // optional double maxy = 15 [default = 999999999];
  bool has_maxy() const;
  void clear_maxy();
  static const int kMaxyFieldNumber = 15;
  double maxy() const;
  void set_maxy(double value);

  // optional double epsilonx = 16 [default = 1e-06];
  bool has_epsilonx() const;
  void clear_epsilonx();
  static const int kEpsilonxFieldNumber = 16;
  double epsilonx() const;
  void set_epsilonx(double value);

  // optional double epsilony = 17 [default = 1e-06];
  bool has_epsilony() const;
  void clear_epsilony();
  static const int kEpsilonyFieldNumber = 17;
  double epsilony() const;
  void set_epsilony(double value);

  // optional int32 pointlistsz = 20 [default = 5];
  bool has_pointlistsz() const;
  void clear_pointlistsz();
  static const int kPointlistszFieldNumber = 20;
  ::google::protobuf::int32 pointlistsz() const;
  void set_pointlistsz(::google::protobuf::int32 value);

  // optional int32 pointlisttype = 21 [default = 0];
  bool has_pointlisttype() const;
  void clear_pointlisttype();
  static const int kPointlisttypeFieldNumber = 21;
  ::google::protobuf::int32 pointlisttype() const;
  void set_pointlisttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.CurveCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_maxnoi();
  inline void clear_has_maxnoi();
  inline void set_has_minstartnoi();
  inline void clear_has_minstartnoi();
  inline void set_has_roote();
  inline void clear_has_roote();
  inline void set_has_funce();
  inline void clear_has_funce();
  inline void set_has_gradnorme();
  inline void clear_has_gradnorme();
  inline void set_has_fitmethod();
  inline void clear_has_fitmethod();
  inline void set_has_weightmethod();
  inline void clear_has_weightmethod();
  inline void set_has_fitdataflag();
  inline void clear_has_fitdataflag();
  inline void set_has_minweight();
  inline void clear_has_minweight();
  inline void set_has_maxweight();
  inline void clear_has_maxweight();
  inline void set_has_minx();
  inline void clear_has_minx();
  inline void set_has_maxx();
  inline void clear_has_maxx();
  inline void set_has_miny();
  inline void clear_has_miny();
  inline void set_has_maxy();
  inline void clear_has_maxy();
  inline void set_has_epsilonx();
  inline void clear_has_epsilonx();
  inline void set_has_epsilony();
  inline void clear_has_epsilony();
  inline void set_has_pointlistsz();
  inline void clear_has_pointlistsz();
  inline void set_has_pointlisttype();
  inline void clear_has_pointlisttype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 maxnoi_;
  ::google::protobuf::int32 minstartnoi_;
  double roote_;
  double funce_;
  double gradnorme_;
  ::google::protobuf::int32 fitmethod_;
  ::google::protobuf::int32 weightmethod_;
  double minweight_;
  double maxweight_;
  double minx_;
  double maxx_;
  ::google::protobuf::int32 fitdataflag_;
  ::google::protobuf::int32 pointlistsz_;
  double miny_;
  double maxy_;
  double epsilonx_;
  double epsilony_;
  ::google::protobuf::int32 pointlisttype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static CurveCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API CurveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.CurveData) */ {
 public:
  CurveData();
  virtual ~CurveData();

  CurveData(const CurveData& from);

  inline CurveData& operator=(const CurveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurveData& default_instance();

  void Swap(CurveData* other);

  // implements Message ----------------------------------------------

  inline CurveData* New() const { return New(NULL); }

  CurveData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurveData& from);
  void MergeFrom(const CurveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CurveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 fitflag = 1 [default = 0];
  bool has_fitflag() const;
  void clear_fitflag();
  static const int kFitflagFieldNumber = 1;
  ::google::protobuf::int32 fitflag() const;
  void set_fitflag(::google::protobuf::int32 value);

  // optional int32 fitfunccount = 2 [default = 0];
  bool has_fitfunccount() const;
  void clear_fitfunccount();
  static const int kFitfunccountFieldNumber = 2;
  ::google::protobuf::int32 fitfunccount() const;
  void set_fitfunccount(::google::protobuf::int32 value);

  // optional double fitfuncvalue = 3 [default = 0];
  bool has_fitfuncvalue() const;
  void clear_fitfuncvalue();
  static const int kFitfuncvalueFieldNumber = 3;
  double fitfuncvalue() const;
  void set_fitfuncvalue(double value);

  // optional int32 endcriteriatype = 4 [default = 0];
  bool has_endcriteriatype() const;
  void clear_endcriteriatype();
  static const int kEndcriteriatypeFieldNumber = 4;
  ::google::protobuf::int32 endcriteriatype() const;
  void set_endcriteriatype(::google::protobuf::int32 value);

  // optional int32 weightflag = 5 [default = 0];
  bool has_weightflag() const;
  void clear_weightflag();
  static const int kWeightflagFieldNumber = 5;
  ::google::protobuf::int32 weightflag() const;
  void set_weightflag(::google::protobuf::int32 value);

  // optional int64 fitts = 6 [default = 0];
  bool has_fitts() const;
  void clear_fitts();
  static const int kFittsFieldNumber = 6;
  ::google::protobuf::int64 fitts() const;
  void set_fitts(::google::protobuf::int64 value);

  // optional int64 fitus = 7 [default = 0];
  bool has_fitus() const;
  void clear_fitus();
  static const int kFitusFieldNumber = 7;
  ::google::protobuf::int64 fitus() const;
  void set_fitus(::google::protobuf::int64 value);

  // optional double currminw = 8 [default = 0];
  bool has_currminw() const;
  void clear_currminw();
  static const int kCurrminwFieldNumber = 8;
  double currminw() const;
  void set_currminw(double value);

  // optional double currmaxw = 9 [default = 0];
  bool has_currmaxw() const;
  void clear_currmaxw();
  static const int kCurrmaxwFieldNumber = 9;
  double currmaxw() const;
  void set_currmaxw(double value);

  // optional double diffvalue = 10 [default = 0];
  bool has_diffvalue() const;
  void clear_diffvalue();
  static const int kDiffvalueFieldNumber = 10;
  double diffvalue() const;
  void set_diffvalue(double value);

  // optional double diffvalueweighted = 11 [default = 0];
  bool has_diffvalueweighted() const;
  void clear_diffvalueweighted();
  static const int kDiffvalueweightedFieldNumber = 11;
  double diffvalueweighted() const;
  void set_diffvalueweighted(double value);

  // optional int32 nvalidxs = 12 [default = 0];
  bool has_nvalidxs() const;
  void clear_nvalidxs();
  static const int kNvalidxsFieldNumber = 12;
  ::google::protobuf::int32 nvalidxs() const;
  void set_nvalidxs(::google::protobuf::int32 value);

  // optional int32 nvalidys = 13 [default = 0];
  bool has_nvalidys() const;
  void clear_nvalidys();
  static const int kNvalidysFieldNumber = 13;
  ::google::protobuf::int32 nvalidys() const;
  void set_nvalidys(::google::protobuf::int32 value);

  // optional int32 nvalidzs = 14 [default = 0];
  bool has_nvalidzs() const;
  void clear_nvalidzs();
  static const int kNvalidzsFieldNumber = 14;
  ::google::protobuf::int32 nvalidzs() const;
  void set_nvalidzs(::google::protobuf::int32 value);

  // map<int32, int32> tagintmap = 15;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // map<int32, double> tagdoublemap = 16;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 16;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<string, int32> strintmap = 17;
  int strintmap_size() const;
  void clear_strintmap();
  static const int kStrintmapFieldNumber = 17;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      strintmap() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_strintmap();

  // map<string, double> strdoublemap = 18;
  int strdoublemap_size() const;
  void clear_strdoublemap();
  static const int kStrdoublemapFieldNumber = 18;
  const ::google::protobuf::Map< ::std::string, double >&
      strdoublemap() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_strdoublemap();

  // @@protoc_insertion_point(class_scope:XT.CurveData)
 private:
  inline void set_has_fitflag();
  inline void clear_has_fitflag();
  inline void set_has_fitfunccount();
  inline void clear_has_fitfunccount();
  inline void set_has_fitfuncvalue();
  inline void clear_has_fitfuncvalue();
  inline void set_has_endcriteriatype();
  inline void clear_has_endcriteriatype();
  inline void set_has_weightflag();
  inline void clear_has_weightflag();
  inline void set_has_fitts();
  inline void clear_has_fitts();
  inline void set_has_fitus();
  inline void clear_has_fitus();
  inline void set_has_currminw();
  inline void clear_has_currminw();
  inline void set_has_currmaxw();
  inline void clear_has_currmaxw();
  inline void set_has_diffvalue();
  inline void clear_has_diffvalue();
  inline void set_has_diffvalueweighted();
  inline void clear_has_diffvalueweighted();
  inline void set_has_nvalidxs();
  inline void clear_has_nvalidxs();
  inline void set_has_nvalidys();
  inline void clear_has_nvalidys();
  inline void set_has_nvalidzs();
  inline void clear_has_nvalidzs();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 fitflag_;
  ::google::protobuf::int32 fitfunccount_;
  double fitfuncvalue_;
  ::google::protobuf::int32 endcriteriatype_;
  ::google::protobuf::int32 weightflag_;
  ::google::protobuf::int64 fitts_;
  ::google::protobuf::int64 fitus_;
  double currminw_;
  double currmaxw_;
  double diffvalue_;
  double diffvalueweighted_;
  ::google::protobuf::int32 nvalidxs_;
  ::google::protobuf::int32 nvalidys_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      CurveData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      CurveData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      CurveData_StrintmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > strintmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      CurveData_StrdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > strdoublemap_;
  ::google::protobuf::int32 nvalidzs_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static CurveData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API GatewayCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.GatewayCfgData) */ {
 public:
  GatewayCfgData();
  virtual ~GatewayCfgData();

  GatewayCfgData(const GatewayCfgData& from);

  inline GatewayCfgData& operator=(const GatewayCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GatewayCfgData& default_instance();

  void Swap(GatewayCfgData* other);

  // implements Message ----------------------------------------------

  inline GatewayCfgData* New() const { return New(NULL); }

  GatewayCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GatewayCfgData& from);
  void MergeFrom(const GatewayCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GatewayCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string typestr = 2 [default = ""];
  bool has_typestr() const;
  void clear_typestr();
  static const int kTypestrFieldNumber = 2;
  const ::std::string& typestr() const;
  void set_typestr(const ::std::string& value);
  void set_typestr(const char* value);
  void set_typestr(const char* value, size_t size);
  ::std::string* mutable_typestr();
  ::std::string* release_typestr();
  void set_allocated_typestr(::std::string* typestr);

  // optional string version = 3 [default = ""];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string frontid = 4 [default = ""];
  bool has_frontid() const;
  void clear_frontid();
  static const int kFrontidFieldNumber = 4;
  const ::std::string& frontid() const;
  void set_frontid(const ::std::string& value);
  void set_frontid(const char* value);
  void set_frontid(const char* value, size_t size);
  ::std::string* mutable_frontid();
  ::std::string* release_frontid();
  void set_allocated_frontid(::std::string* frontid);

  // optional string accountid = 5 [default = ""];
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 5;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // optional string passwd = 6 [default = ""];
  bool has_passwd() const;
  void clear_passwd();
  static const int kPasswdFieldNumber = 6;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // optional string brokerid = 7 [default = ""];
  bool has_brokerid() const;
  void clear_brokerid();
  static const int kBrokeridFieldNumber = 7;
  const ::std::string& brokerid() const;
  void set_brokerid(const ::std::string& value);
  void set_brokerid(const char* value);
  void set_brokerid(const char* value, size_t size);
  ::std::string* mutable_brokerid();
  ::std::string* release_brokerid();
  void set_allocated_brokerid(::std::string* brokerid);

  // optional int32 logdataflag = 8 [default = 0];
  bool has_logdataflag() const;
  void clear_logdataflag();
  static const int kLogdataflagFieldNumber = 8;
  ::google::protobuf::int32 logdataflag() const;
  void set_logdataflag(::google::protobuf::int32 value);

  // optional int32 logdatacountmax = 9 [default = 10000];
  bool has_logdatacountmax() const;
  void clear_logdatacountmax();
  static const int kLogdatacountmaxFieldNumber = 9;
  ::google::protobuf::int32 logdatacountmax() const;
  void set_logdatacountmax(::google::protobuf::int32 value);

  // optional int32 updateflag = 10 [default = 0];
  bool has_updateflag() const;
  void clear_updateflag();
  static const int kUpdateflagFieldNumber = 10;
  ::google::protobuf::int32 updateflag() const;
  void set_updateflag(::google::protobuf::int32 value);

  // optional int32 subscribeflag = 11 [default = 0];
  bool has_subscribeflag() const;
  void clear_subscribeflag();
  static const int kSubscribeflagFieldNumber = 11;
  ::google::protobuf::int32 subscribeflag() const;
  void set_subscribeflag(::google::protobuf::int32 value);

  // optional int32 requestflag = 12 [default = 0];
  bool has_requestflag() const;
  void clear_requestflag();
  static const int kRequestflagFieldNumber = 12;
  ::google::protobuf::int32 requestflag() const;
  void set_requestflag(::google::protobuf::int32 value);

  // optional int32 requestdelayus = 13 [default = 0];
  bool has_requestdelayus() const;
  void clear_requestdelayus();
  static const int kRequestdelayusFieldNumber = 13;
  ::google::protobuf::int32 requestdelayus() const;
  void set_requestdelayus(::google::protobuf::int32 value);

  // optional int32 comboflag = 14 [default = 0];
  bool has_comboflag() const;
  void clear_comboflag();
  static const int kComboflagFieldNumber = 14;
  ::google::protobuf::int32 comboflag() const;
  void set_comboflag(::google::protobuf::int32 value);

  // optional int32 efpflag = 15 [default = 0];
  bool has_efpflag() const;
  void clear_efpflag();
  static const int kEfpflagFieldNumber = 15;
  ::google::protobuf::int32 efpflag() const;
  void set_efpflag(::google::protobuf::int32 value);

  // optional int32 resumeflag = 16 [default = 2];
  bool has_resumeflag() const;
  void clear_resumeflag();
  static const int kResumeflagFieldNumber = 16;
  ::google::protobuf::int32 resumeflag() const;
  void set_resumeflag(::google::protobuf::int32 value);

  // optional int32 instrfilterflag = 17 [default = 0];
  bool has_instrfilterflag() const;
  void clear_instrfilterflag();
  static const int kInstrfilterflagFieldNumber = 17;
  ::google::protobuf::int32 instrfilterflag() const;
  void set_instrfilterflag(::google::protobuf::int32 value);

  // optional string instrprefixes = 18 [default = ""];
  bool has_instrprefixes() const;
  void clear_instrprefixes();
  static const int kInstrprefixesFieldNumber = 18;
  const ::std::string& instrprefixes() const;
  void set_instrprefixes(const ::std::string& value);
  void set_instrprefixes(const char* value);
  void set_instrprefixes(const char* value, size_t size);
  ::std::string* mutable_instrprefixes();
  ::std::string* release_instrprefixes();
  void set_allocated_instrprefixes(::std::string* instrprefixes);

  // optional string productids = 19 [default = ""];
  bool has_productids() const;
  void clear_productids();
  static const int kProductidsFieldNumber = 19;
  const ::std::string& productids() const;
  void set_productids(const ::std::string& value);
  void set_productids(const char* value);
  void set_productids(const char* value, size_t size);
  ::std::string* mutable_productids();
  ::std::string* release_productids();
  void set_allocated_productids(::std::string* productids);

  // optional string exchids = 20 [default = ""];
  bool has_exchids() const;
  void clear_exchids();
  static const int kExchidsFieldNumber = 20;
  const ::std::string& exchids() const;
  void set_exchids(const ::std::string& value);
  void set_exchids(const char* value);
  void set_exchids(const char* value, size_t size);
  ::std::string* mutable_exchids();
  ::std::string* release_exchids();
  void set_allocated_exchids(::std::string* exchids);

  // optional string appid = 21 [default = ""];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 21;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string authcode = 22 [default = ""];
  bool has_authcode() const;
  void clear_authcode();
  static const int kAuthcodeFieldNumber = 22;
  const ::std::string& authcode() const;
  void set_authcode(const ::std::string& value);
  void set_authcode(const char* value);
  void set_authcode(const char* value, size_t size);
  ::std::string* mutable_authcode();
  ::std::string* release_authcode();
  void set_allocated_authcode(::std::string* authcode);

  // optional string userproductinfo = 23 [default = ""];
  bool has_userproductinfo() const;
  void clear_userproductinfo();
  static const int kUserproductinfoFieldNumber = 23;
  const ::std::string& userproductinfo() const;
  void set_userproductinfo(const ::std::string& value);
  void set_userproductinfo(const char* value);
  void set_userproductinfo(const char* value, size_t size);
  ::std::string* mutable_userproductinfo();
  ::std::string* release_userproductinfo();
  void set_allocated_userproductinfo(::std::string* userproductinfo);

  // optional string mcastip = 25 [default = ""];
  bool has_mcastip() const;
  void clear_mcastip();
  static const int kMcastipFieldNumber = 25;
  const ::std::string& mcastip() const;
  void set_mcastip(const ::std::string& value);
  void set_mcastip(const char* value);
  void set_mcastip(const char* value, size_t size);
  ::std::string* mutable_mcastip();
  ::std::string* release_mcastip();
  void set_allocated_mcastip(::std::string* mcastip);

  // optional int32 mcastport = 26 [default = 0];
  bool has_mcastport() const;
  void clear_mcastport();
  static const int kMcastportFieldNumber = 26;
  ::google::protobuf::int32 mcastport() const;
  void set_mcastport(::google::protobuf::int32 value);

  // optional int32 mcastttl = 27 [default = 1];
  bool has_mcastttl() const;
  void clear_mcastttl();
  static const int kMcastttlFieldNumber = 27;
  ::google::protobuf::int32 mcastttl() const;
  void set_mcastttl(::google::protobuf::int32 value);

  // optional string localip = 28 [default = ""];
  bool has_localip() const;
  void clear_localip();
  static const int kLocalipFieldNumber = 28;
  const ::std::string& localip() const;
  void set_localip(const ::std::string& value);
  void set_localip(const char* value);
  void set_localip(const char* value, size_t size);
  ::std::string* mutable_localip();
  ::std::string* release_localip();
  void set_allocated_localip(::std::string* localip);

  // optional int32 localport = 29 [default = 0];
  bool has_localport() const;
  void clear_localport();
  static const int kLocalportFieldNumber = 29;
  ::google::protobuf::int32 localport() const;
  void set_localport(::google::protobuf::int32 value);

  // optional int32 pubsubflag = 30 [default = 0];
  bool has_pubsubflag() const;
  void clear_pubsubflag();
  static const int kPubsubflagFieldNumber = 30;
  ::google::protobuf::int32 pubsubflag() const;
  void set_pubsubflag(::google::protobuf::int32 value);

  // optional int32 timerseconds = 31 [default = 1];
  bool has_timerseconds() const;
  void clear_timerseconds();
  static const int kTimersecondsFieldNumber = 31;
  ::google::protobuf::int32 timerseconds() const;
  void set_timerseconds(::google::protobuf::int32 value);

  // optional int32 udpflag = 32 [default = 0];
  bool has_udpflag() const;
  void clear_udpflag();
  static const int kUdpflagFieldNumber = 32;
  ::google::protobuf::int32 udpflag() const;
  void set_udpflag(::google::protobuf::int32 value);

  // optional int32 mcastflag = 33 [default = 0];
  bool has_mcastflag() const;
  void clear_mcastflag();
  static const int kMcastflagFieldNumber = 33;
  ::google::protobuf::int32 mcastflag() const;
  void set_mcastflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.GatewayCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_typestr();
  inline void clear_has_typestr();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_frontid();
  inline void clear_has_frontid();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_passwd();
  inline void clear_has_passwd();
  inline void set_has_brokerid();
  inline void clear_has_brokerid();
  inline void set_has_logdataflag();
  inline void clear_has_logdataflag();
  inline void set_has_logdatacountmax();
  inline void clear_has_logdatacountmax();
  inline void set_has_updateflag();
  inline void clear_has_updateflag();
  inline void set_has_subscribeflag();
  inline void clear_has_subscribeflag();
  inline void set_has_requestflag();
  inline void clear_has_requestflag();
  inline void set_has_requestdelayus();
  inline void clear_has_requestdelayus();
  inline void set_has_comboflag();
  inline void clear_has_comboflag();
  inline void set_has_efpflag();
  inline void clear_has_efpflag();
  inline void set_has_resumeflag();
  inline void clear_has_resumeflag();
  inline void set_has_instrfilterflag();
  inline void clear_has_instrfilterflag();
  inline void set_has_instrprefixes();
  inline void clear_has_instrprefixes();
  inline void set_has_productids();
  inline void clear_has_productids();
  inline void set_has_exchids();
  inline void clear_has_exchids();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_authcode();
  inline void clear_has_authcode();
  inline void set_has_userproductinfo();
  inline void clear_has_userproductinfo();
  inline void set_has_mcastip();
  inline void clear_has_mcastip();
  inline void set_has_mcastport();
  inline void clear_has_mcastport();
  inline void set_has_mcastttl();
  inline void clear_has_mcastttl();
  inline void set_has_localip();
  inline void clear_has_localip();
  inline void set_has_localport();
  inline void clear_has_localport();
  inline void set_has_pubsubflag();
  inline void clear_has_pubsubflag();
  inline void set_has_timerseconds();
  inline void clear_has_timerseconds();
  inline void set_has_udpflag();
  inline void clear_has_udpflag();
  inline void set_has_mcastflag();
  inline void clear_has_mcastflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr typestr_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr frontid_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr brokerid_;
  ::google::protobuf::int32 logdataflag_;
  ::google::protobuf::int32 logdatacountmax_;
  ::google::protobuf::int32 updateflag_;
  ::google::protobuf::int32 subscribeflag_;
  ::google::protobuf::int32 requestflag_;
  ::google::protobuf::int32 requestdelayus_;
  ::google::protobuf::int32 comboflag_;
  ::google::protobuf::int32 efpflag_;
  ::google::protobuf::int32 resumeflag_;
  ::google::protobuf::int32 instrfilterflag_;
  ::google::protobuf::internal::ArenaStringPtr instrprefixes_;
  ::google::protobuf::internal::ArenaStringPtr productids_;
  ::google::protobuf::internal::ArenaStringPtr exchids_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr authcode_;
  ::google::protobuf::internal::ArenaStringPtr userproductinfo_;
  ::google::protobuf::internal::ArenaStringPtr mcastip_;
  ::google::protobuf::int32 mcastport_;
  ::google::protobuf::int32 mcastttl_;
  ::google::protobuf::internal::ArenaStringPtr localip_;
  ::google::protobuf::int32 localport_;
  ::google::protobuf::int32 pubsubflag_;
  ::google::protobuf::int32 timerseconds_;
  ::google::protobuf::int32 udpflag_;
  ::google::protobuf::int32 mcastflag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static GatewayCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API GatewayData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.GatewayData) */ {
 public:
  GatewayData();
  virtual ~GatewayData();

  GatewayData(const GatewayData& from);

  inline GatewayData& operator=(const GatewayData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GatewayData& default_instance();

  void Swap(GatewayData* other);

  // implements Message ----------------------------------------------

  inline GatewayData* New() const { return New(NULL); }

  GatewayData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GatewayData& from);
  void MergeFrom(const GatewayData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GatewayData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 connectionstatus = 1 [default = 0];
  bool has_connectionstatus() const;
  void clear_connectionstatus();
  static const int kConnectionstatusFieldNumber = 1;
  ::google::protobuf::int32 connectionstatus() const;
  void set_connectionstatus(::google::protobuf::int32 value);

  // optional int32 loginstatus = 2 [default = 0];
  bool has_loginstatus() const;
  void clear_loginstatus();
  static const int kLoginstatusFieldNumber = 2;
  ::google::protobuf::int32 loginstatus() const;
  void set_loginstatus(::google::protobuf::int32 value);

  // optional int32 taskstatus = 3 [default = 0];
  bool has_taskstatus() const;
  void clear_taskstatus();
  static const int kTaskstatusFieldNumber = 3;
  ::google::protobuf::int32 taskstatus() const;
  void set_taskstatus(::google::protobuf::int32 value);

  // optional int32 aynctaskstatus = 4 [default = 0];
  bool has_aynctaskstatus() const;
  void clear_aynctaskstatus();
  static const int kAynctaskstatusFieldNumber = 4;
  ::google::protobuf::int32 aynctaskstatus() const;
  void set_aynctaskstatus(::google::protobuf::int32 value);

  // optional int32 queryinstrflag = 5 [default = 0];
  bool has_queryinstrflag() const;
  void clear_queryinstrflag();
  static const int kQueryinstrflagFieldNumber = 5;
  ::google::protobuf::int32 queryinstrflag() const;
  void set_queryinstrflag(::google::protobuf::int32 value);

  // optional int32 querytradeflag = 6 [default = 0];
  bool has_querytradeflag() const;
  void clear_querytradeflag();
  static const int kQuerytradeflagFieldNumber = 6;
  ::google::protobuf::int32 querytradeflag() const;
  void set_querytradeflag(::google::protobuf::int32 value);

  // optional int32 querypositionflag = 7 [default = 0];
  bool has_querypositionflag() const;
  void clear_querypositionflag();
  static const int kQuerypositionflagFieldNumber = 7;
  ::google::protobuf::int32 querypositionflag() const;
  void set_querypositionflag(::google::protobuf::int32 value);

  // optional int32 initflag = 8 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 8;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 logdatacount = 9 [default = 0];
  bool has_logdatacount() const;
  void clear_logdatacount();
  static const int kLogdatacountFieldNumber = 9;
  ::google::protobuf::int32 logdatacount() const;
  void set_logdatacount(::google::protobuf::int32 value);

  // optional int32 tradingday = 10 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 10;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 intdate = 11 [default = 0];
  bool has_intdate() const;
  void clear_intdate();
  static const int kIntdateFieldNumber = 11;
  ::google::protobuf::int32 intdate() const;
  void set_intdate(::google::protobuf::int32 value);

  // optional int32 dayinttime = 12 [default = 0];
  bool has_dayinttime() const;
  void clear_dayinttime();
  static const int kDayinttimeFieldNumber = 12;
  ::google::protobuf::int32 dayinttime() const;
  void set_dayinttime(::google::protobuf::int32 value);

  // optional int64 ts = 13 [default = 0];
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 13;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // optional int32 nmsg = 14 [default = 0];
  bool has_nmsg() const;
  void clear_nmsg();
  static const int kNmsgFieldNumber = 14;
  ::google::protobuf::int32 nmsg() const;
  void set_nmsg(::google::protobuf::int32 value);

  // optional int64 lastts = 15 [default = 0];
  bool has_lastts() const;
  void clear_lastts();
  static const int kLasttsFieldNumber = 15;
  ::google::protobuf::int64 lastts() const;
  void set_lastts(::google::protobuf::int64 value);

  // optional int64 lastrequestts = 16 [default = 0];
  bool has_lastrequestts() const;
  void clear_lastrequestts();
  static const int kLastrequesttsFieldNumber = 16;
  ::google::protobuf::int64 lastrequestts() const;
  void set_lastrequestts(::google::protobuf::int64 value);

  // optional int64 timerts = 17 [default = 0];
  bool has_timerts() const;
  void clear_timerts();
  static const int kTimertsFieldNumber = 17;
  ::google::protobuf::int64 timerts() const;
  void set_timerts(::google::protobuf::int64 value);

  // optional int32 timercount = 18 [default = 0];
  bool has_timercount() const;
  void clear_timercount();
  static const int kTimercountFieldNumber = 18;
  ::google::protobuf::int32 timercount() const;
  void set_timercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.GatewayData)
 private:
  inline void set_has_connectionstatus();
  inline void clear_has_connectionstatus();
  inline void set_has_loginstatus();
  inline void clear_has_loginstatus();
  inline void set_has_taskstatus();
  inline void clear_has_taskstatus();
  inline void set_has_aynctaskstatus();
  inline void clear_has_aynctaskstatus();
  inline void set_has_queryinstrflag();
  inline void clear_has_queryinstrflag();
  inline void set_has_querytradeflag();
  inline void clear_has_querytradeflag();
  inline void set_has_querypositionflag();
  inline void clear_has_querypositionflag();
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_logdatacount();
  inline void clear_has_logdatacount();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_intdate();
  inline void clear_has_intdate();
  inline void set_has_dayinttime();
  inline void clear_has_dayinttime();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_nmsg();
  inline void clear_has_nmsg();
  inline void set_has_lastts();
  inline void clear_has_lastts();
  inline void set_has_lastrequestts();
  inline void clear_has_lastrequestts();
  inline void set_has_timerts();
  inline void clear_has_timerts();
  inline void set_has_timercount();
  inline void clear_has_timercount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 connectionstatus_;
  ::google::protobuf::int32 loginstatus_;
  ::google::protobuf::int32 taskstatus_;
  ::google::protobuf::int32 aynctaskstatus_;
  ::google::protobuf::int32 queryinstrflag_;
  ::google::protobuf::int32 querytradeflag_;
  ::google::protobuf::int32 querypositionflag_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 logdatacount_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 intdate_;
  ::google::protobuf::int32 dayinttime_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int64 lastts_;
  ::google::protobuf::int64 lastrequestts_;
  ::google::protobuf::int32 nmsg_;
  ::google::protobuf::int32 timercount_;
  ::google::protobuf::int64 timerts_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static GatewayData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API VolumeOutlayPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.VolumeOutlayPair) */ {
 public:
  VolumeOutlayPair();
  virtual ~VolumeOutlayPair();

  VolumeOutlayPair(const VolumeOutlayPair& from);

  inline VolumeOutlayPair& operator=(const VolumeOutlayPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VolumeOutlayPair& default_instance();

  void Swap(VolumeOutlayPair* other);

  // implements Message ----------------------------------------------

  inline VolumeOutlayPair* New() const { return New(NULL); }

  VolumeOutlayPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VolumeOutlayPair& from);
  void MergeFrom(const VolumeOutlayPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VolumeOutlayPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 volume = 1 [default = 0];
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 1;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // optional double pxvolume = 2 [default = 0];
  bool has_pxvolume() const;
  void clear_pxvolume();
  static const int kPxvolumeFieldNumber = 2;
  double pxvolume() const;
  void set_pxvolume(double value);

  // @@protoc_insertion_point(class_scope:XT.VolumeOutlayPair)
 private:
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_pxvolume();
  inline void clear_has_pxvolume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 volume_;
  double pxvolume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static VolumeOutlayPair* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API VolumeAmountData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.VolumeAmountData) */ {
 public:
  VolumeAmountData();
  virtual ~VolumeAmountData();

  VolumeAmountData(const VolumeAmountData& from);

  inline VolumeAmountData& operator=(const VolumeAmountData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VolumeAmountData& default_instance();

  void Swap(VolumeAmountData* other);

  // implements Message ----------------------------------------------

  inline VolumeAmountData* New() const { return New(NULL); }

  VolumeAmountData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VolumeAmountData& from);
  void MergeFrom(const VolumeAmountData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VolumeAmountData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 buyvolume = 1 [default = 0];
  bool has_buyvolume() const;
  void clear_buyvolume();
  static const int kBuyvolumeFieldNumber = 1;
  ::google::protobuf::int64 buyvolume() const;
  void set_buyvolume(::google::protobuf::int64 value);

  // optional int64 sellvolume = 2 [default = 0];
  bool has_sellvolume() const;
  void clear_sellvolume();
  static const int kSellvolumeFieldNumber = 2;
  ::google::protobuf::int64 sellvolume() const;
  void set_sellvolume(::google::protobuf::int64 value);

  // optional double buyamount = 3 [default = 0];
  bool has_buyamount() const;
  void clear_buyamount();
  static const int kBuyamountFieldNumber = 3;
  double buyamount() const;
  void set_buyamount(double value);

  // optional double sellamount = 4 [default = 0];
  bool has_sellamount() const;
  void clear_sellamount();
  static const int kSellamountFieldNumber = 4;
  double sellamount() const;
  void set_sellamount(double value);

  // @@protoc_insertion_point(class_scope:XT.VolumeAmountData)
 private:
  inline void set_has_buyvolume();
  inline void clear_has_buyvolume();
  inline void set_has_sellvolume();
  inline void clear_has_sellvolume();
  inline void set_has_buyamount();
  inline void clear_has_buyamount();
  inline void set_has_sellamount();
  inline void clear_has_sellamount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 buyvolume_;
  ::google::protobuf::int64 sellvolume_;
  double buyamount_;
  double sellamount_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static VolumeAmountData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TradePxVolumeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TradePxVolumeData) */ {
 public:
  TradePxVolumeData();
  virtual ~TradePxVolumeData();

  TradePxVolumeData(const TradePxVolumeData& from);

  inline TradePxVolumeData& operator=(const TradePxVolumeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TradePxVolumeData& default_instance();

  void Swap(TradePxVolumeData* other);

  // implements Message ----------------------------------------------

  inline TradePxVolumeData* New() const { return New(NULL); }

  TradePxVolumeData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TradePxVolumeData& from);
  void MergeFrom(const TradePxVolumeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TradePxVolumeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 buyvolume = 1 [default = 0];
  bool has_buyvolume() const;
  void clear_buyvolume();
  static const int kBuyvolumeFieldNumber = 1;
  ::google::protobuf::int64 buyvolume() const;
  void set_buyvolume(::google::protobuf::int64 value);

  // optional int64 sellvolume = 2 [default = 0];
  bool has_sellvolume() const;
  void clear_sellvolume();
  static const int kSellvolumeFieldNumber = 2;
  ::google::protobuf::int64 sellvolume() const;
  void set_sellvolume(::google::protobuf::int64 value);

  // optional double buypxvolume = 3 [default = 0];
  bool has_buypxvolume() const;
  void clear_buypxvolume();
  static const int kBuypxvolumeFieldNumber = 3;
  double buypxvolume() const;
  void set_buypxvolume(double value);

  // optional double sellpxvolume = 4 [default = 0];
  bool has_sellpxvolume() const;
  void clear_sellpxvolume();
  static const int kSellpxvolumeFieldNumber = 4;
  double sellpxvolume() const;
  void set_sellpxvolume(double value);

  // @@protoc_insertion_point(class_scope:XT.TradePxVolumeData)
 private:
  inline void set_has_buyvolume();
  inline void clear_has_buyvolume();
  inline void set_has_sellvolume();
  inline void clear_has_sellvolume();
  inline void set_has_buypxvolume();
  inline void clear_has_buypxvolume();
  inline void set_has_sellpxvolume();
  inline void clear_has_sellpxvolume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 buyvolume_;
  ::google::protobuf::int64 sellvolume_;
  double buypxvolume_;
  double sellpxvolume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TradePxVolumeData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrSpecData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrSpecData) */ {
 public:
  InstrSpecData();
  virtual ~InstrSpecData();

  InstrSpecData(const InstrSpecData& from);

  inline InstrSpecData& operator=(const InstrSpecData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrSpecData& default_instance();

  void Swap(InstrSpecData* other);

  // implements Message ----------------------------------------------

  inline InstrSpecData* New() const { return New(NULL); }

  InstrSpecData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrSpecData& from);
  void MergeFrom(const InstrSpecData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrSpecData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string exchid = 1 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 1;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional int32 exchtype = 2 [default = 0];
  bool has_exchtype() const;
  void clear_exchtype();
  static const int kExchtypeFieldNumber = 2;
  ::google::protobuf::int32 exchtype() const;
  void set_exchtype(::google::protobuf::int32 value);

  // optional string instrid = 3 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 3;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string securitytypestr = 4 [default = ""];
  bool has_securitytypestr() const;
  void clear_securitytypestr();
  static const int kSecuritytypestrFieldNumber = 4;
  const ::std::string& securitytypestr() const;
  void set_securitytypestr(const ::std::string& value);
  void set_securitytypestr(const char* value);
  void set_securitytypestr(const char* value, size_t size);
  ::std::string* mutable_securitytypestr();
  ::std::string* release_securitytypestr();
  void set_allocated_securitytypestr(::std::string* securitytypestr);

  // optional int32 securitytype = 5 [default = 0];
  bool has_securitytype() const;
  void clear_securitytype();
  static const int kSecuritytypeFieldNumber = 5;
  ::google::protobuf::int32 securitytype() const;
  void set_securitytype(::google::protobuf::int32 value);

  // optional string productid = 6 [default = ""];
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 6;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional int32 expireintdate = 7 [default = 99990101];
  bool has_expireintdate() const;
  void clear_expireintdate();
  static const int kExpireintdateFieldNumber = 7;
  ::google::protobuf::int32 expireintdate() const;
  void set_expireintdate(::google::protobuf::int32 value);

  // optional int32 callputtype = 8 [default = 0];
  bool has_callputtype() const;
  void clear_callputtype();
  static const int kCallputtypeFieldNumber = 8;
  ::google::protobuf::int32 callputtype() const;
  void set_callputtype(::google::protobuf::int32 value);

  // optional double strikeprice = 9 [default = 0];
  bool has_strikeprice() const;
  void clear_strikeprice();
  static const int kStrikepriceFieldNumber = 9;
  double strikeprice() const;
  void set_strikeprice(double value);

  // optional double pricetick = 10 [default = 0];
  bool has_pricetick() const;
  void clear_pricetick();
  static const int kPricetickFieldNumber = 10;
  double pricetick() const;
  void set_pricetick(double value);

  // optional double contractmultiplier = 11 [default = 1];
  bool has_contractmultiplier() const;
  void clear_contractmultiplier();
  static const int kContractmultiplierFieldNumber = 11;
  double contractmultiplier() const;
  void set_contractmultiplier(double value);

  // optional double pxepsilon = 12 [default = 1e-06];
  bool has_pxepsilon() const;
  void clear_pxepsilon();
  static const int kPxepsilonFieldNumber = 12;
  double pxepsilon() const;
  void set_pxepsilon(double value);

  // optional string tagdata = 13 [default = ""];
  bool has_tagdata() const;
  void clear_tagdata();
  static const int kTagdataFieldNumber = 13;
  const ::std::string& tagdata() const;
  void set_tagdata(const ::std::string& value);
  void set_tagdata(const char* value);
  void set_tagdata(const char* value, size_t size);
  ::std::string* mutable_tagdata();
  ::std::string* release_tagdata();
  void set_allocated_tagdata(::std::string* tagdata);

  // optional string tradecurrencyid = 14 [default = ""];
  bool has_tradecurrencyid() const;
  void clear_tradecurrencyid();
  static const int kTradecurrencyidFieldNumber = 14;
  const ::std::string& tradecurrencyid() const;
  void set_tradecurrencyid(const ::std::string& value);
  void set_tradecurrencyid(const char* value);
  void set_tradecurrencyid(const char* value, size_t size);
  ::std::string* mutable_tradecurrencyid();
  ::std::string* release_tradecurrencyid();
  void set_allocated_tradecurrencyid(::std::string* tradecurrencyid);

  // optional string localexchid = 15 [default = ""];
  bool has_localexchid() const;
  void clear_localexchid();
  static const int kLocalexchidFieldNumber = 15;
  const ::std::string& localexchid() const;
  void set_localexchid(const ::std::string& value);
  void set_localexchid(const char* value);
  void set_localexchid(const char* value, size_t size);
  ::std::string* mutable_localexchid();
  ::std::string* release_localexchid();
  void set_allocated_localexchid(::std::string* localexchid);

  // optional string localinstrid = 16 [default = ""];
  bool has_localinstrid() const;
  void clear_localinstrid();
  static const int kLocalinstridFieldNumber = 16;
  const ::std::string& localinstrid() const;
  void set_localinstrid(const ::std::string& value);
  void set_localinstrid(const char* value);
  void set_localinstrid(const char* value, size_t size);
  ::std::string* mutable_localinstrid();
  ::std::string* release_localinstrid();
  void set_allocated_localinstrid(::std::string* localinstrid);

  // optional string localproductid = 17 [default = ""];
  bool has_localproductid() const;
  void clear_localproductid();
  static const int kLocalproductidFieldNumber = 17;
  const ::std::string& localproductid() const;
  void set_localproductid(const ::std::string& value);
  void set_localproductid(const char* value);
  void set_localproductid(const char* value, size_t size);
  ::std::string* mutable_localproductid();
  ::std::string* release_localproductid();
  void set_allocated_localproductid(::std::string* localproductid);

  // optional double undlymultiple = 18 [default = 1];
  bool has_undlymultiple() const;
  void clear_undlymultiple();
  static const int kUndlymultipleFieldNumber = 18;
  double undlymultiple() const;
  void set_undlymultiple(double value);

  // optional string undlyproduct = 19 [default = ""];
  bool has_undlyproduct() const;
  void clear_undlyproduct();
  static const int kUndlyproductFieldNumber = 19;
  const ::std::string& undlyproduct() const;
  void set_undlyproduct(const ::std::string& value);
  void set_undlyproduct(const char* value);
  void set_undlyproduct(const char* value, size_t size);
  ::std::string* mutable_undlyproduct();
  ::std::string* release_undlyproduct();
  void set_allocated_undlyproduct(::std::string* undlyproduct);

  // optional string undlyinstr = 20 [default = ""];
  bool has_undlyinstr() const;
  void clear_undlyinstr();
  static const int kUndlyinstrFieldNumber = 20;
  const ::std::string& undlyinstr() const;
  void set_undlyinstr(const ::std::string& value);
  void set_undlyinstr(const char* value);
  void set_undlyinstr(const char* value, size_t size);
  ::std::string* mutable_undlyinstr();
  ::std::string* release_undlyinstr();
  void set_allocated_undlyinstr(::std::string* undlyinstr);

  // optional double tickvalue = 21 [default = 0];
  bool has_tickvalue() const;
  void clear_tickvalue();
  static const int kTickvalueFieldNumber = 21;
  double tickvalue() const;
  void set_tickvalue(double value);

  // optional int64 int64pxtick = 22 [default = 0];
  bool has_int64pxtick() const;
  void clear_int64pxtick();
  static const int kInt64PxtickFieldNumber = 22;
  ::google::protobuf::int64 int64pxtick() const;
  void set_int64pxtick(::google::protobuf::int64 value);

  // optional double int64pxpointvalue = 23 [default = 0];
  bool has_int64pxpointvalue() const;
  void clear_int64pxpointvalue();
  static const int kInt64PxpointvalueFieldNumber = 23;
  double int64pxpointvalue() const;
  void set_int64pxpointvalue(double value);

  // optional int64 szmultiplier = 24 [default = 1];
  bool has_szmultiplier() const;
  void clear_szmultiplier();
  static const int kSzmultiplierFieldNumber = 24;
  ::google::protobuf::int64 szmultiplier() const;
  void set_szmultiplier(::google::protobuf::int64 value);

  // optional int64 pxscaletoint64 = 25 [default = 1];
  bool has_pxscaletoint64() const;
  void clear_pxscaletoint64();
  static const int kPxscaletoint64FieldNumber = 25;
  ::google::protobuf::int64 pxscaletoint64() const;
  void set_pxscaletoint64(::google::protobuf::int64 value);

  // optional double pxscaletodouble = 26 [default = 1];
  bool has_pxscaletodouble() const;
  void clear_pxscaletodouble();
  static const int kPxscaletodoubleFieldNumber = 26;
  double pxscaletodouble() const;
  void set_pxscaletodouble(double value);

  // optional string expiretime = 27 [default = "15:00:00"];
  bool has_expiretime() const;
  void clear_expiretime();
  static const int kExpiretimeFieldNumber = 27;
  const ::std::string& expiretime() const;
  void set_expiretime(const ::std::string& value);
  void set_expiretime(const char* value);
  void set_expiretime(const char* value, size_t size);
  ::std::string* mutable_expiretime();
  ::std::string* release_expiretime();
  void set_allocated_expiretime(::std::string* expiretime);

  // optional string expiredt = 28 [default = ""];
  bool has_expiredt() const;
  void clear_expiredt();
  static const int kExpiredtFieldNumber = 28;
  const ::std::string& expiredt() const;
  void set_expiredt(const ::std::string& value);
  void set_expiredt(const char* value);
  void set_expiredt(const char* value, size_t size);
  ::std::string* mutable_expiredt();
  ::std::string* release_expiredt();
  void set_allocated_expiredt(::std::string* expiredt);

  // optional int64 expirets = 29 [default = 0];
  bool has_expirets() const;
  void clear_expirets();
  static const int kExpiretsFieldNumber = 29;
  ::google::protobuf::int64 expirets() const;
  void set_expirets(::google::protobuf::int64 value);

  // optional string areas = 30 [default = ""];
  bool has_areas() const;
  void clear_areas();
  static const int kAreasFieldNumber = 30;
  const ::std::string& areas() const;
  void set_areas(const ::std::string& value);
  void set_areas(const char* value);
  void set_areas(const char* value, size_t size);
  ::std::string* mutable_areas();
  ::std::string* release_areas();
  void set_allocated_areas(::std::string* areas);

  // optional string concepts = 31 [default = ""];
  bool has_concepts() const;
  void clear_concepts();
  static const int kConceptsFieldNumber = 31;
  const ::std::string& concepts() const;
  void set_concepts(const ::std::string& value);
  void set_concepts(const char* value);
  void set_concepts(const char* value, size_t size);
  ::std::string* mutable_concepts();
  ::std::string* release_concepts();
  void set_allocated_concepts(::std::string* concepts);

  // optional string industries = 32 [default = ""];
  bool has_industries() const;
  void clear_industries();
  static const int kIndustriesFieldNumber = 32;
  const ::std::string& industries() const;
  void set_industries(const ::std::string& value);
  void set_industries(const char* value);
  void set_industries(const char* value, size_t size);
  ::std::string* mutable_industries();
  ::std::string* release_industries();
  void set_allocated_industries(::std::string* industries);

  // optional int32 listintdate = 33 [default = 0];
  bool has_listintdate() const;
  void clear_listintdate();
  static const int kListintdateFieldNumber = 33;
  ::google::protobuf::int32 listintdate() const;
  void set_listintdate(::google::protobuf::int32 value);

  // optional string name = 34 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 34;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string enname = 35 [default = ""];
  bool has_enname() const;
  void clear_enname();
  static const int kEnnameFieldNumber = 35;
  const ::std::string& enname() const;
  void set_enname(const ::std::string& value);
  void set_enname(const char* value);
  void set_enname(const char* value, size_t size);
  ::std::string* mutable_enname();
  ::std::string* release_enname();
  void set_allocated_enname(::std::string* enname);

  // optional int32 optexercisetype = 36 [default = 0];
  bool has_optexercisetype() const;
  void clear_optexercisetype();
  static const int kOptexercisetypeFieldNumber = 36;
  ::google::protobuf::int32 optexercisetype() const;
  void set_optexercisetype(::google::protobuf::int32 value);

  // optional string exchangeinstid = 101 [default = ""];
  bool has_exchangeinstid() const;
  void clear_exchangeinstid();
  static const int kExchangeinstidFieldNumber = 101;
  const ::std::string& exchangeinstid() const;
  void set_exchangeinstid(const ::std::string& value);
  void set_exchangeinstid(const char* value);
  void set_exchangeinstid(const char* value, size_t size);
  ::std::string* mutable_exchangeinstid();
  ::std::string* release_exchangeinstid();
  void set_allocated_exchangeinstid(::std::string* exchangeinstid);

  // optional int32 productclass = 102 [default = 0];
  bool has_productclass() const;
  void clear_productclass();
  static const int kProductclassFieldNumber = 102;
  ::google::protobuf::int32 productclass() const;
  void set_productclass(::google::protobuf::int32 value);

  // optional int32 deliveryyear = 103 [default = 0];
  bool has_deliveryyear() const;
  void clear_deliveryyear();
  static const int kDeliveryyearFieldNumber = 103;
  ::google::protobuf::int32 deliveryyear() const;
  void set_deliveryyear(::google::protobuf::int32 value);

  // optional int32 deliverymonth = 104 [default = 0];
  bool has_deliverymonth() const;
  void clear_deliverymonth();
  static const int kDeliverymonthFieldNumber = 104;
  ::google::protobuf::int32 deliverymonth() const;
  void set_deliverymonth(::google::protobuf::int32 value);

  // optional int64 maxmarketordervolume = 105 [default = 0];
  bool has_maxmarketordervolume() const;
  void clear_maxmarketordervolume();
  static const int kMaxmarketordervolumeFieldNumber = 105;
  ::google::protobuf::int64 maxmarketordervolume() const;
  void set_maxmarketordervolume(::google::protobuf::int64 value);

  // optional int64 minmarketordervolume = 106 [default = 0];
  bool has_minmarketordervolume() const;
  void clear_minmarketordervolume();
  static const int kMinmarketordervolumeFieldNumber = 106;
  ::google::protobuf::int64 minmarketordervolume() const;
  void set_minmarketordervolume(::google::protobuf::int64 value);

  // optional int64 maxlimitordervolume = 107 [default = 0];
  bool has_maxlimitordervolume() const;
  void clear_maxlimitordervolume();
  static const int kMaxlimitordervolumeFieldNumber = 107;
  ::google::protobuf::int64 maxlimitordervolume() const;
  void set_maxlimitordervolume(::google::protobuf::int64 value);

  // optional int64 minlimitordervolume = 108 [default = 0];
  bool has_minlimitordervolume() const;
  void clear_minlimitordervolume();
  static const int kMinlimitordervolumeFieldNumber = 108;
  ::google::protobuf::int64 minlimitordervolume() const;
  void set_minlimitordervolume(::google::protobuf::int64 value);

  // optional int32 positiontype = 109 [default = 0];
  bool has_positiontype() const;
  void clear_positiontype();
  static const int kPositiontypeFieldNumber = 109;
  ::google::protobuf::int32 positiontype() const;
  void set_positiontype(::google::protobuf::int32 value);

  // optional int32 positiondatetype = 110 [default = 0];
  bool has_positiondatetype() const;
  void clear_positiondatetype();
  static const int kPositiondatetypeFieldNumber = 110;
  ::google::protobuf::int32 positiondatetype() const;
  void set_positiondatetype(::google::protobuf::int32 value);

  // optional int32 closedealtype = 111 [default = 0];
  bool has_closedealtype() const;
  void clear_closedealtype();
  static const int kClosedealtypeFieldNumber = 111;
  ::google::protobuf::int32 closedealtype() const;
  void set_closedealtype(::google::protobuf::int32 value);

  // optional int32 mortgagefunduserange = 112 [default = 0];
  bool has_mortgagefunduserange() const;
  void clear_mortgagefunduserange();
  static const int kMortgagefunduserangeFieldNumber = 112;
  ::google::protobuf::int32 mortgagefunduserange() const;
  void set_mortgagefunduserange(::google::protobuf::int32 value);

  // optional string exchangeproductid = 113 [default = ""];
  bool has_exchangeproductid() const;
  void clear_exchangeproductid();
  static const int kExchangeproductidFieldNumber = 113;
  const ::std::string& exchangeproductid() const;
  void set_exchangeproductid(const ::std::string& value);
  void set_exchangeproductid(const char* value);
  void set_exchangeproductid(const char* value, size_t size);
  ::std::string* mutable_exchangeproductid();
  ::std::string* release_exchangeproductid();
  void set_allocated_exchangeproductid(::std::string* exchangeproductid);

  // map<string, string> strmap = 200;
  int strmap_size() const;
  void clear_strmap();
  static const int kStrmapFieldNumber = 200;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      strmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_strmap();

  // @@protoc_insertion_point(class_scope:XT.InstrSpecData)
 private:
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_exchtype();
  inline void clear_has_exchtype();
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_securitytypestr();
  inline void clear_has_securitytypestr();
  inline void set_has_securitytype();
  inline void clear_has_securitytype();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_expireintdate();
  inline void clear_has_expireintdate();
  inline void set_has_callputtype();
  inline void clear_has_callputtype();
  inline void set_has_strikeprice();
  inline void clear_has_strikeprice();
  inline void set_has_pricetick();
  inline void clear_has_pricetick();
  inline void set_has_contractmultiplier();
  inline void clear_has_contractmultiplier();
  inline void set_has_pxepsilon();
  inline void clear_has_pxepsilon();
  inline void set_has_tagdata();
  inline void clear_has_tagdata();
  inline void set_has_tradecurrencyid();
  inline void clear_has_tradecurrencyid();
  inline void set_has_localexchid();
  inline void clear_has_localexchid();
  inline void set_has_localinstrid();
  inline void clear_has_localinstrid();
  inline void set_has_localproductid();
  inline void clear_has_localproductid();
  inline void set_has_undlymultiple();
  inline void clear_has_undlymultiple();
  inline void set_has_undlyproduct();
  inline void clear_has_undlyproduct();
  inline void set_has_undlyinstr();
  inline void clear_has_undlyinstr();
  inline void set_has_tickvalue();
  inline void clear_has_tickvalue();
  inline void set_has_int64pxtick();
  inline void clear_has_int64pxtick();
  inline void set_has_int64pxpointvalue();
  inline void clear_has_int64pxpointvalue();
  inline void set_has_szmultiplier();
  inline void clear_has_szmultiplier();
  inline void set_has_pxscaletoint64();
  inline void clear_has_pxscaletoint64();
  inline void set_has_pxscaletodouble();
  inline void clear_has_pxscaletodouble();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_expiredt();
  inline void clear_has_expiredt();
  inline void set_has_expirets();
  inline void clear_has_expirets();
  inline void set_has_areas();
  inline void clear_has_areas();
  inline void set_has_concepts();
  inline void clear_has_concepts();
  inline void set_has_industries();
  inline void clear_has_industries();
  inline void set_has_listintdate();
  inline void clear_has_listintdate();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_enname();
  inline void clear_has_enname();
  inline void set_has_optexercisetype();
  inline void clear_has_optexercisetype();
  inline void set_has_exchangeinstid();
  inline void clear_has_exchangeinstid();
  inline void set_has_productclass();
  inline void clear_has_productclass();
  inline void set_has_deliveryyear();
  inline void clear_has_deliveryyear();
  inline void set_has_deliverymonth();
  inline void clear_has_deliverymonth();
  inline void set_has_maxmarketordervolume();
  inline void clear_has_maxmarketordervolume();
  inline void set_has_minmarketordervolume();
  inline void clear_has_minmarketordervolume();
  inline void set_has_maxlimitordervolume();
  inline void clear_has_maxlimitordervolume();
  inline void set_has_minlimitordervolume();
  inline void clear_has_minlimitordervolume();
  inline void set_has_positiontype();
  inline void clear_has_positiontype();
  inline void set_has_positiondatetype();
  inline void clear_has_positiondatetype();
  inline void set_has_closedealtype();
  inline void clear_has_closedealtype();
  inline void set_has_mortgagefunduserange();
  inline void clear_has_mortgagefunduserange();
  inline void set_has_exchangeproductid();
  inline void clear_has_exchangeproductid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int32 exchtype_;
  ::google::protobuf::int32 securitytype_;
  ::google::protobuf::internal::ArenaStringPtr securitytypestr_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::int32 expireintdate_;
  ::google::protobuf::int32 callputtype_;
  double strikeprice_;
  double pricetick_;
  double contractmultiplier_;
  double pxepsilon_;
  ::google::protobuf::internal::ArenaStringPtr tagdata_;
  ::google::protobuf::internal::ArenaStringPtr tradecurrencyid_;
  ::google::protobuf::internal::ArenaStringPtr localexchid_;
  ::google::protobuf::internal::ArenaStringPtr localinstrid_;
  ::google::protobuf::internal::ArenaStringPtr localproductid_;
  double undlymultiple_;
  ::google::protobuf::internal::ArenaStringPtr undlyproduct_;
  ::google::protobuf::internal::ArenaStringPtr undlyinstr_;
  double tickvalue_;
  ::google::protobuf::int64 int64pxtick_;
  double int64pxpointvalue_;
  ::google::protobuf::int64 szmultiplier_;
  ::google::protobuf::int64 pxscaletoint64_;
  double pxscaletodouble_;
  static ::std::string* _default_expiretime_;
  ::google::protobuf::internal::ArenaStringPtr expiretime_;
  ::google::protobuf::internal::ArenaStringPtr expiredt_;
  ::google::protobuf::int64 expirets_;
  ::google::protobuf::internal::ArenaStringPtr areas_;
  ::google::protobuf::internal::ArenaStringPtr concepts_;
  ::google::protobuf::internal::ArenaStringPtr industries_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 listintdate_;
  ::google::protobuf::int32 optexercisetype_;
  ::google::protobuf::internal::ArenaStringPtr enname_;
  ::google::protobuf::internal::ArenaStringPtr exchangeinstid_;
  ::google::protobuf::int32 productclass_;
  ::google::protobuf::int32 deliveryyear_;
  ::google::protobuf::int64 maxmarketordervolume_;
  ::google::protobuf::int64 minmarketordervolume_;
  ::google::protobuf::int32 deliverymonth_;
  ::google::protobuf::int32 positiontype_;
  ::google::protobuf::int64 maxlimitordervolume_;
  ::google::protobuf::int64 minlimitordervolume_;
  ::google::protobuf::int32 positiondatetype_;
  ::google::protobuf::int32 closedealtype_;
  ::google::protobuf::internal::ArenaStringPtr exchangeproductid_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      InstrSpecData_StrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > strmap_;
  ::google::protobuf::int32 mortgagefunduserange_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrSpecData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API GlobalCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.GlobalCfgData) */ {
 public:
  GlobalCfgData();
  virtual ~GlobalCfgData();

  GlobalCfgData(const GlobalCfgData& from);

  inline GlobalCfgData& operator=(const GlobalCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalCfgData& default_instance();

  void Swap(GlobalCfgData* other);

  // implements Message ----------------------------------------------

  inline GlobalCfgData* New() const { return New(NULL); }

  GlobalCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalCfgData& from);
  void MergeFrom(const GlobalCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GlobalCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string basedir = 1 [default = ""];
  bool has_basedir() const;
  void clear_basedir();
  static const int kBasedirFieldNumber = 1;
  const ::std::string& basedir() const;
  void set_basedir(const ::std::string& value);
  void set_basedir(const char* value);
  void set_basedir(const char* value, size_t size);
  ::std::string* mutable_basedir();
  ::std::string* release_basedir();
  void set_allocated_basedir(::std::string* basedir);

  // optional string appdir = 2 [default = ""];
  bool has_appdir() const;
  void clear_appdir();
  static const int kAppdirFieldNumber = 2;
  const ::std::string& appdir() const;
  void set_appdir(const ::std::string& value);
  void set_appdir(const char* value);
  void set_appdir(const char* value, size_t size);
  ::std::string* mutable_appdir();
  ::std::string* release_appdir();
  void set_allocated_appdir(::std::string* appdir);

  // optional string logdir = 3 [default = ""];
  bool has_logdir() const;
  void clear_logdir();
  static const int kLogdirFieldNumber = 3;
  const ::std::string& logdir() const;
  void set_logdir(const ::std::string& value);
  void set_logdir(const char* value);
  void set_logdir(const char* value, size_t size);
  ::std::string* mutable_logdir();
  ::std::string* release_logdir();
  void set_allocated_logdir(::std::string* logdir);

  // optional string datadir = 4 [default = ""];
  bool has_datadir() const;
  void clear_datadir();
  static const int kDatadirFieldNumber = 4;
  const ::std::string& datadir() const;
  void set_datadir(const ::std::string& value);
  void set_datadir(const char* value);
  void set_datadir(const char* value, size_t size);
  ::std::string* mutable_datadir();
  ::std::string* release_datadir();
  void set_allocated_datadir(::std::string* datadir);

  // optional string cfgdir = 5 [default = ""];
  bool has_cfgdir() const;
  void clear_cfgdir();
  static const int kCfgdirFieldNumber = 5;
  const ::std::string& cfgdir() const;
  void set_cfgdir(const ::std::string& value);
  void set_cfgdir(const char* value);
  void set_cfgdir(const char* value, size_t size);
  ::std::string* mutable_cfgdir();
  ::std::string* release_cfgdir();
  void set_allocated_cfgdir(::std::string* cfgdir);

  // optional string libdir = 6 [default = ""];
  bool has_libdir() const;
  void clear_libdir();
  static const int kLibdirFieldNumber = 6;
  const ::std::string& libdir() const;
  void set_libdir(const ::std::string& value);
  void set_libdir(const char* value);
  void set_libdir(const char* value, size_t size);
  ::std::string* mutable_libdir();
  ::std::string* release_libdir();
  void set_allocated_libdir(::std::string* libdir);

  // optional string plugindir = 7 [default = ""];
  bool has_plugindir() const;
  void clear_plugindir();
  static const int kPlugindirFieldNumber = 7;
  const ::std::string& plugindir() const;
  void set_plugindir(const ::std::string& value);
  void set_plugindir(const char* value);
  void set_plugindir(const char* value, size_t size);
  ::std::string* mutable_plugindir();
  ::std::string* release_plugindir();
  void set_allocated_plugindir(::std::string* plugindir);

  // optional string maindbfile = 8 [default = ""];
  bool has_maindbfile() const;
  void clear_maindbfile();
  static const int kMaindbfileFieldNumber = 8;
  const ::std::string& maindbfile() const;
  void set_maindbfile(const ::std::string& value);
  void set_maindbfile(const char* value);
  void set_maindbfile(const char* value, size_t size);
  ::std::string* mutable_maindbfile();
  ::std::string* release_maindbfile();
  void set_allocated_maindbfile(::std::string* maindbfile);

  // optional string trddbfile = 9 [default = ""];
  bool has_trddbfile() const;
  void clear_trddbfile();
  static const int kTrddbfileFieldNumber = 9;
  const ::std::string& trddbfile() const;
  void set_trddbfile(const ::std::string& value);
  void set_trddbfile(const char* value);
  void set_trddbfile(const char* value, size_t size);
  ::std::string* mutable_trddbfile();
  ::std::string* release_trddbfile();
  void set_allocated_trddbfile(::std::string* trddbfile);

  // optional int32 issim = 10 [default = 0];
  bool has_issim() const;
  void clear_issim();
  static const int kIssimFieldNumber = 10;
  ::google::protobuf::int32 issim() const;
  void set_issim(::google::protobuf::int32 value);

  // optional int32 isnone = 11 [default = 0];
  bool has_isnone() const;
  void clear_isnone();
  static const int kIsnoneFieldNumber = 11;
  ::google::protobuf::int32 isnone() const;
  void set_isnone(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 12 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 12;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int32 tradingday = 15 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 15;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 currintdate = 16 [default = 0];
  bool has_currintdate() const;
  void clear_currintdate();
  static const int kCurrintdateFieldNumber = 16;
  ::google::protobuf::int32 currintdate() const;
  void set_currintdate(::google::protobuf::int32 value);

  // optional int32 outsideorderflag = 17 [default = 0];
  bool has_outsideorderflag() const;
  void clear_outsideorderflag();
  static const int kOutsideorderflagFieldNumber = 17;
  ::google::protobuf::int32 outsideorderflag() const;
  void set_outsideorderflag(::google::protobuf::int32 value);

  // optional int32 outsidetradeflag = 18 [default = 0];
  bool has_outsidetradeflag() const;
  void clear_outsidetradeflag();
  static const int kOutsidetradeflagFieldNumber = 18;
  ::google::protobuf::int32 outsidetradeflag() const;
  void set_outsidetradeflag(::google::protobuf::int32 value);

  // optional int32 pubflag = 19 [default = 0];
  bool has_pubflag() const;
  void clear_pubflag();
  static const int kPubflagFieldNumber = 19;
  ::google::protobuf::int32 pubflag() const;
  void set_pubflag(::google::protobuf::int32 value);

  // optional int32 subflag = 20 [default = 0];
  bool has_subflag() const;
  void clear_subflag();
  static const int kSubflagFieldNumber = 20;
  ::google::protobuf::int32 subflag() const;
  void set_subflag(::google::protobuf::int32 value);

  // optional int32 instrfilterflag = 21 [default = 0];
  bool has_instrfilterflag() const;
  void clear_instrfilterflag();
  static const int kInstrfilterflagFieldNumber = 21;
  ::google::protobuf::int32 instrfilterflag() const;
  void set_instrfilterflag(::google::protobuf::int32 value);

  // optional string instrprefixes = 22 [default = ""];
  bool has_instrprefixes() const;
  void clear_instrprefixes();
  static const int kInstrprefixesFieldNumber = 22;
  const ::std::string& instrprefixes() const;
  void set_instrprefixes(const ::std::string& value);
  void set_instrprefixes(const char* value);
  void set_instrprefixes(const char* value, size_t size);
  ::std::string* mutable_instrprefixes();
  ::std::string* release_instrprefixes();
  void set_allocated_instrprefixes(::std::string* instrprefixes);

  // optional string productids = 23 [default = ""];
  bool has_productids() const;
  void clear_productids();
  static const int kProductidsFieldNumber = 23;
  const ::std::string& productids() const;
  void set_productids(const ::std::string& value);
  void set_productids(const char* value);
  void set_productids(const char* value, size_t size);
  ::std::string* mutable_productids();
  ::std::string* release_productids();
  void set_allocated_productids(::std::string* productids);

  // optional string exchids = 24 [default = ""];
  bool has_exchids() const;
  void clear_exchids();
  static const int kExchidsFieldNumber = 24;
  const ::std::string& exchids() const;
  void set_exchids(const ::std::string& value);
  void set_exchids(const char* value);
  void set_exchids(const char* value, size_t size);
  ::std::string* mutable_exchids();
  ::std::string* release_exchids();
  void set_allocated_exchids(::std::string* exchids);

  // map<string, string> namestrmap = 30;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 30;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.GlobalCfgData)
 private:
  inline void set_has_basedir();
  inline void clear_has_basedir();
  inline void set_has_appdir();
  inline void clear_has_appdir();
  inline void set_has_logdir();
  inline void clear_has_logdir();
  inline void set_has_datadir();
  inline void clear_has_datadir();
  inline void set_has_cfgdir();
  inline void clear_has_cfgdir();
  inline void set_has_libdir();
  inline void clear_has_libdir();
  inline void set_has_plugindir();
  inline void clear_has_plugindir();
  inline void set_has_maindbfile();
  inline void clear_has_maindbfile();
  inline void set_has_trddbfile();
  inline void clear_has_trddbfile();
  inline void set_has_issim();
  inline void clear_has_issim();
  inline void set_has_isnone();
  inline void clear_has_isnone();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_currintdate();
  inline void clear_has_currintdate();
  inline void set_has_outsideorderflag();
  inline void clear_has_outsideorderflag();
  inline void set_has_outsidetradeflag();
  inline void clear_has_outsidetradeflag();
  inline void set_has_pubflag();
  inline void clear_has_pubflag();
  inline void set_has_subflag();
  inline void clear_has_subflag();
  inline void set_has_instrfilterflag();
  inline void clear_has_instrfilterflag();
  inline void set_has_instrprefixes();
  inline void clear_has_instrprefixes();
  inline void set_has_productids();
  inline void clear_has_productids();
  inline void set_has_exchids();
  inline void clear_has_exchids();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr basedir_;
  ::google::protobuf::internal::ArenaStringPtr appdir_;
  ::google::protobuf::internal::ArenaStringPtr logdir_;
  ::google::protobuf::internal::ArenaStringPtr datadir_;
  ::google::protobuf::internal::ArenaStringPtr cfgdir_;
  ::google::protobuf::internal::ArenaStringPtr libdir_;
  ::google::protobuf::internal::ArenaStringPtr plugindir_;
  ::google::protobuf::internal::ArenaStringPtr maindbfile_;
  ::google::protobuf::internal::ArenaStringPtr trddbfile_;
  ::google::protobuf::int32 issim_;
  ::google::protobuf::int32 isnone_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 currintdate_;
  ::google::protobuf::int32 outsideorderflag_;
  ::google::protobuf::int32 outsidetradeflag_;
  ::google::protobuf::int32 pubflag_;
  ::google::protobuf::int32 subflag_;
  ::google::protobuf::int32 instrfilterflag_;
  ::google::protobuf::internal::ArenaStringPtr instrprefixes_;
  ::google::protobuf::internal::ArenaStringPtr productids_;
  ::google::protobuf::internal::ArenaStringPtr exchids_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      GlobalCfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static GlobalCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API GlobalData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.GlobalData) */ {
 public:
  GlobalData();
  virtual ~GlobalData();

  GlobalData(const GlobalData& from);

  inline GlobalData& operator=(const GlobalData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalData& default_instance();

  void Swap(GlobalData* other);

  // implements Message ----------------------------------------------

  inline GlobalData* New() const { return New(NULL); }

  GlobalData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalData& from);
  void MergeFrom(const GlobalData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GlobalData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 idleflag = 2 [default = 0];
  bool has_idleflag() const;
  void clear_idleflag();
  static const int kIdleflagFieldNumber = 2;
  ::google::protobuf::int32 idleflag() const;
  void set_idleflag(::google::protobuf::int32 value);

  // optional int32 tradingflag = 3 [default = 0];
  bool has_tradingflag() const;
  void clear_tradingflag();
  static const int kTradingflagFieldNumber = 3;
  ::google::protobuf::int32 tradingflag() const;
  void set_tradingflag(::google::protobuf::int32 value);

  // optional int32 tradingflagprev = 4 [default = 0];
  bool has_tradingflagprev() const;
  void clear_tradingflagprev();
  static const int kTradingflagprevFieldNumber = 4;
  ::google::protobuf::int32 tradingflagprev() const;
  void set_tradingflagprev(::google::protobuf::int32 value);

  // optional int32 exitflag = 5 [default = 0];
  bool has_exitflag() const;
  void clear_exitflag();
  static const int kExitflagFieldNumber = 5;
  ::google::protobuf::int32 exitflag() const;
  void set_exitflag(::google::protobuf::int32 value);

  // optional int32 lasterrorid = 10 [default = 0];
  bool has_lasterrorid() const;
  void clear_lasterrorid();
  static const int kLasterroridFieldNumber = 10;
  ::google::protobuf::int32 lasterrorid() const;
  void set_lasterrorid(::google::protobuf::int32 value);

  // optional string lasterrormsg = 11 [default = ""];
  bool has_lasterrormsg() const;
  void clear_lasterrormsg();
  static const int kLasterrormsgFieldNumber = 11;
  const ::std::string& lasterrormsg() const;
  void set_lasterrormsg(const ::std::string& value);
  void set_lasterrormsg(const char* value);
  void set_lasterrormsg(const char* value, size_t size);
  ::std::string* mutable_lasterrormsg();
  ::std::string* release_lasterrormsg();
  void set_allocated_lasterrormsg(::std::string* lasterrormsg);

  // optional int64 lasterrorts = 12 [default = 0];
  bool has_lasterrorts() const;
  void clear_lasterrorts();
  static const int kLasterrortsFieldNumber = 12;
  ::google::protobuf::int64 lasterrorts() const;
  void set_lasterrorts(::google::protobuf::int64 value);

  // optional int32 lastcriticalerrorid = 13 [default = 0];
  bool has_lastcriticalerrorid() const;
  void clear_lastcriticalerrorid();
  static const int kLastcriticalerroridFieldNumber = 13;
  ::google::protobuf::int32 lastcriticalerrorid() const;
  void set_lastcriticalerrorid(::google::protobuf::int32 value);

  // optional string lastcriticalerrormsg = 14 [default = ""];
  bool has_lastcriticalerrormsg() const;
  void clear_lastcriticalerrormsg();
  static const int kLastcriticalerrormsgFieldNumber = 14;
  const ::std::string& lastcriticalerrormsg() const;
  void set_lastcriticalerrormsg(const ::std::string& value);
  void set_lastcriticalerrormsg(const char* value);
  void set_lastcriticalerrormsg(const char* value, size_t size);
  ::std::string* mutable_lastcriticalerrormsg();
  ::std::string* release_lastcriticalerrormsg();
  void set_allocated_lastcriticalerrormsg(::std::string* lastcriticalerrormsg);

  // optional int64 lastcriticalerrorts = 15 [default = 0];
  bool has_lastcriticalerrorts() const;
  void clear_lastcriticalerrorts();
  static const int kLastcriticalerrortsFieldNumber = 15;
  ::google::protobuf::int64 lastcriticalerrorts() const;
  void set_lastcriticalerrorts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.GlobalData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_idleflag();
  inline void clear_has_idleflag();
  inline void set_has_tradingflag();
  inline void clear_has_tradingflag();
  inline void set_has_tradingflagprev();
  inline void clear_has_tradingflagprev();
  inline void set_has_exitflag();
  inline void clear_has_exitflag();
  inline void set_has_lasterrorid();
  inline void clear_has_lasterrorid();
  inline void set_has_lasterrormsg();
  inline void clear_has_lasterrormsg();
  inline void set_has_lasterrorts();
  inline void clear_has_lasterrorts();
  inline void set_has_lastcriticalerrorid();
  inline void clear_has_lastcriticalerrorid();
  inline void set_has_lastcriticalerrormsg();
  inline void clear_has_lastcriticalerrormsg();
  inline void set_has_lastcriticalerrorts();
  inline void clear_has_lastcriticalerrorts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 idleflag_;
  ::google::protobuf::int32 tradingflag_;
  ::google::protobuf::int32 tradingflagprev_;
  ::google::protobuf::int32 exitflag_;
  ::google::protobuf::int32 lasterrorid_;
  ::google::protobuf::internal::ArenaStringPtr lasterrormsg_;
  ::google::protobuf::int64 lasterrorts_;
  ::google::protobuf::internal::ArenaStringPtr lastcriticalerrormsg_;
  ::google::protobuf::int64 lastcriticalerrorts_;
  ::google::protobuf::int32 lastcriticalerrorid_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static GlobalData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API MongoDBCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.MongoDBCfgData) */ {
 public:
  MongoDBCfgData();
  virtual ~MongoDBCfgData();

  MongoDBCfgData(const MongoDBCfgData& from);

  inline MongoDBCfgData& operator=(const MongoDBCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MongoDBCfgData& default_instance();

  void Swap(MongoDBCfgData* other);

  // implements Message ----------------------------------------------

  inline MongoDBCfgData* New() const { return New(NULL); }

  MongoDBCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MongoDBCfgData& from);
  void MergeFrom(const MongoDBCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MongoDBCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1 [default = ""];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int32 port = 2 [default = 0];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional string username = 3 [default = ""];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string passwd = 4 [default = ""];
  bool has_passwd() const;
  void clear_passwd();
  static const int kPasswdFieldNumber = 4;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:XT.MongoDBCfgData)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_passwd();
  inline void clear_has_passwd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::int32 port_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static MongoDBCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API SQLiteCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.SQLiteCfgData) */ {
 public:
  SQLiteCfgData();
  virtual ~SQLiteCfgData();

  SQLiteCfgData(const SQLiteCfgData& from);

  inline SQLiteCfgData& operator=(const SQLiteCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SQLiteCfgData& default_instance();

  void Swap(SQLiteCfgData* other);

  // implements Message ----------------------------------------------

  inline SQLiteCfgData* New() const { return New(NULL); }

  SQLiteCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SQLiteCfgData& from);
  void MergeFrom(const SQLiteCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SQLiteCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string maindbfile = 1 [default = ""];
  bool has_maindbfile() const;
  void clear_maindbfile();
  static const int kMaindbfileFieldNumber = 1;
  const ::std::string& maindbfile() const;
  void set_maindbfile(const ::std::string& value);
  void set_maindbfile(const char* value);
  void set_maindbfile(const char* value, size_t size);
  ::std::string* mutable_maindbfile();
  ::std::string* release_maindbfile();
  void set_allocated_maindbfile(::std::string* maindbfile);

  // optional string trddbfile = 2 [default = ""];
  bool has_trddbfile() const;
  void clear_trddbfile();
  static const int kTrddbfileFieldNumber = 2;
  const ::std::string& trddbfile() const;
  void set_trddbfile(const ::std::string& value);
  void set_trddbfile(const char* value);
  void set_trddbfile(const char* value, size_t size);
  ::std::string* mutable_trddbfile();
  ::std::string* release_trddbfile();
  void set_allocated_trddbfile(::std::string* trddbfile);

  // @@protoc_insertion_point(class_scope:XT.SQLiteCfgData)
 private:
  inline void set_has_maindbfile();
  inline void clear_has_maindbfile();
  inline void set_has_trddbfile();
  inline void clear_has_trddbfile();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr maindbfile_;
  ::google::protobuf::internal::ArenaStringPtr trddbfile_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static SQLiteCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ZMQCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ZMQCfgData) */ {
 public:
  ZMQCfgData();
  virtual ~ZMQCfgData();

  ZMQCfgData(const ZMQCfgData& from);

  inline ZMQCfgData& operator=(const ZMQCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZMQCfgData& default_instance();

  void Swap(ZMQCfgData* other);

  // implements Message ----------------------------------------------

  inline ZMQCfgData* New() const { return New(NULL); }

  ZMQCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZMQCfgData& from);
  void MergeFrom(const ZMQCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ZMQCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pubaddresses = 1 [default = ""];
  bool has_pubaddresses() const;
  void clear_pubaddresses();
  static const int kPubaddressesFieldNumber = 1;
  const ::std::string& pubaddresses() const;
  void set_pubaddresses(const ::std::string& value);
  void set_pubaddresses(const char* value);
  void set_pubaddresses(const char* value, size_t size);
  ::std::string* mutable_pubaddresses();
  ::std::string* release_pubaddresses();
  void set_allocated_pubaddresses(::std::string* pubaddresses);

  // optional string subaddresses = 2 [default = ""];
  bool has_subaddresses() const;
  void clear_subaddresses();
  static const int kSubaddressesFieldNumber = 2;
  const ::std::string& subaddresses() const;
  void set_subaddresses(const ::std::string& value);
  void set_subaddresses(const char* value);
  void set_subaddresses(const char* value, size_t size);
  ::std::string* mutable_subaddresses();
  ::std::string* release_subaddresses();
  void set_allocated_subaddresses(::std::string* subaddresses);

  // @@protoc_insertion_point(class_scope:XT.ZMQCfgData)
 private:
  inline void set_has_pubaddresses();
  inline void clear_has_pubaddresses();
  inline void set_has_subaddresses();
  inline void clear_has_subaddresses();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pubaddresses_;
  ::google::protobuf::internal::ArenaStringPtr subaddresses_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ZMQCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ZMQData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ZMQData) */ {
 public:
  ZMQData();
  virtual ~ZMQData();

  ZMQData(const ZMQData& from);

  inline ZMQData& operator=(const ZMQData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZMQData& default_instance();

  void Swap(ZMQData* other);

  // implements Message ----------------------------------------------

  inline ZMQData* New() const { return New(NULL); }

  ZMQData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZMQData& from);
  void MergeFrom(const ZMQData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ZMQData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.ZMQData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ZMQData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StratCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StratCfgData) */ {
 public:
  StratCfgData();
  virtual ~StratCfgData();

  StratCfgData(const StratCfgData& from);

  inline StratCfgData& operator=(const StratCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StratCfgData& default_instance();

  void Swap(StratCfgData* other);

  // implements Message ----------------------------------------------

  inline StratCfgData* New() const { return New(NULL); }

  StratCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StratCfgData& from);
  void MergeFrom(const StratCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StratCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = "strategy"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 issim = 2 [default = 0];
  bool has_issim() const;
  void clear_issim();
  static const int kIssimFieldNumber = 2;
  ::google::protobuf::int32 issim() const;
  void set_issim(::google::protobuf::int32 value);

  // optional int32 isnone = 3 [default = 0];
  bool has_isnone() const;
  void clear_isnone();
  static const int kIsnoneFieldNumber = 3;
  ::google::protobuf::int32 isnone() const;
  void set_isnone(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 4 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 4;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int32 tradingday = 5 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 5;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 currintdate = 6 [default = 0];
  bool has_currintdate() const;
  void clear_currintdate();
  static const int kCurrintdateFieldNumber = 6;
  ::google::protobuf::int32 currintdate() const;
  void set_currintdate(::google::protobuf::int32 value);

  // optional string mdapi = 8 [default = ""];
  bool has_mdapi() const;
  void clear_mdapi();
  static const int kMdapiFieldNumber = 8;
  const ::std::string& mdapi() const;
  void set_mdapi(const ::std::string& value);
  void set_mdapi(const char* value);
  void set_mdapi(const char* value, size_t size);
  ::std::string* mutable_mdapi();
  ::std::string* release_mdapi();
  void set_allocated_mdapi(::std::string* mdapi);

  // optional string trdapi = 9 [default = ""];
  bool has_trdapi() const;
  void clear_trdapi();
  static const int kTrdapiFieldNumber = 9;
  const ::std::string& trdapi() const;
  void set_trdapi(const ::std::string& value);
  void set_trdapi(const char* value);
  void set_trdapi(const char* value, size_t size);
  ::std::string* mutable_trdapi();
  ::std::string* release_trdapi();
  void set_allocated_trdapi(::std::string* trdapi);

  // optional string pubcfg = 10 [default = ""];
  bool has_pubcfg() const;
  void clear_pubcfg();
  static const int kPubcfgFieldNumber = 10;
  const ::std::string& pubcfg() const;
  void set_pubcfg(const ::std::string& value);
  void set_pubcfg(const char* value);
  void set_pubcfg(const char* value, size_t size);
  ::std::string* mutable_pubcfg();
  ::std::string* release_pubcfg();
  void set_allocated_pubcfg(::std::string* pubcfg);

  // optional string subcfg = 11 [default = ""];
  bool has_subcfg() const;
  void clear_subcfg();
  static const int kSubcfgFieldNumber = 11;
  const ::std::string& subcfg() const;
  void set_subcfg(const ::std::string& value);
  void set_subcfg(const char* value);
  void set_subcfg(const char* value, size_t size);
  ::std::string* mutable_subcfg();
  ::std::string* release_subcfg();
  void set_allocated_subcfg(::std::string* subcfg);

  // optional int32 outsideorderflag = 12 [default = 0];
  bool has_outsideorderflag() const;
  void clear_outsideorderflag();
  static const int kOutsideorderflagFieldNumber = 12;
  ::google::protobuf::int32 outsideorderflag() const;
  void set_outsideorderflag(::google::protobuf::int32 value);

  // optional int32 outsidetradeflag = 13 [default = 0];
  bool has_outsidetradeflag() const;
  void clear_outsidetradeflag();
  static const int kOutsidetradeflagFieldNumber = 13;
  ::google::protobuf::int32 outsidetradeflag() const;
  void set_outsidetradeflag(::google::protobuf::int32 value);

  // optional int32 instrfilterflag = 17 [default = 0];
  bool has_instrfilterflag() const;
  void clear_instrfilterflag();
  static const int kInstrfilterflagFieldNumber = 17;
  ::google::protobuf::int32 instrfilterflag() const;
  void set_instrfilterflag(::google::protobuf::int32 value);

  // optional string instrprefixes = 18 [default = ""];
  bool has_instrprefixes() const;
  void clear_instrprefixes();
  static const int kInstrprefixesFieldNumber = 18;
  const ::std::string& instrprefixes() const;
  void set_instrprefixes(const ::std::string& value);
  void set_instrprefixes(const char* value);
  void set_instrprefixes(const char* value, size_t size);
  ::std::string* mutable_instrprefixes();
  ::std::string* release_instrprefixes();
  void set_allocated_instrprefixes(::std::string* instrprefixes);

  // optional string productids = 19 [default = ""];
  bool has_productids() const;
  void clear_productids();
  static const int kProductidsFieldNumber = 19;
  const ::std::string& productids() const;
  void set_productids(const ::std::string& value);
  void set_productids(const char* value);
  void set_productids(const char* value, size_t size);
  ::std::string* mutable_productids();
  ::std::string* release_productids();
  void set_allocated_productids(::std::string* productids);

  // optional string exchids = 20 [default = ""];
  bool has_exchids() const;
  void clear_exchids();
  static const int kExchidsFieldNumber = 20;
  const ::std::string& exchids() const;
  void set_exchids(const ::std::string& value);
  void set_exchids(const char* value);
  void set_exchids(const char* value, size_t size);
  ::std::string* mutable_exchids();
  ::std::string* release_exchids();
  void set_allocated_exchids(::std::string* exchids);

  // map<string, string> namestrmap = 30;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 30;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.StratCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_issim();
  inline void clear_has_issim();
  inline void set_has_isnone();
  inline void clear_has_isnone();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_currintdate();
  inline void clear_has_currintdate();
  inline void set_has_mdapi();
  inline void clear_has_mdapi();
  inline void set_has_trdapi();
  inline void clear_has_trdapi();
  inline void set_has_pubcfg();
  inline void clear_has_pubcfg();
  inline void set_has_subcfg();
  inline void clear_has_subcfg();
  inline void set_has_outsideorderflag();
  inline void clear_has_outsideorderflag();
  inline void set_has_outsidetradeflag();
  inline void clear_has_outsidetradeflag();
  inline void set_has_instrfilterflag();
  inline void clear_has_instrfilterflag();
  inline void set_has_instrprefixes();
  inline void clear_has_instrprefixes();
  inline void set_has_productids();
  inline void clear_has_productids();
  inline void set_has_exchids();
  inline void clear_has_exchids();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 issim_;
  ::google::protobuf::int32 isnone_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::internal::ArenaStringPtr mdapi_;
  ::google::protobuf::internal::ArenaStringPtr trdapi_;
  ::google::protobuf::int32 currintdate_;
  ::google::protobuf::int32 outsideorderflag_;
  ::google::protobuf::internal::ArenaStringPtr pubcfg_;
  ::google::protobuf::internal::ArenaStringPtr subcfg_;
  ::google::protobuf::int32 outsidetradeflag_;
  ::google::protobuf::int32 instrfilterflag_;
  ::google::protobuf::internal::ArenaStringPtr instrprefixes_;
  ::google::protobuf::internal::ArenaStringPtr productids_;
  ::google::protobuf::internal::ArenaStringPtr exchids_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      StratCfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StratCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API StratData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.StratData) */ {
 public:
  StratData();
  virtual ~StratData();

  StratData(const StratData& from);

  inline StratData& operator=(const StratData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StratData& default_instance();

  void Swap(StratData* other);

  // implements Message ----------------------------------------------

  inline StratData* New() const { return New(NULL); }

  StratData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StratData& from);
  void MergeFrom(const StratData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StratData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 mdflag = 2 [default = 0];
  bool has_mdflag() const;
  void clear_mdflag();
  static const int kMdflagFieldNumber = 2;
  ::google::protobuf::int32 mdflag() const;
  void set_mdflag(::google::protobuf::int32 value);

  // optional int32 trdstatus = 3 [default = 0];
  bool has_trdstatus() const;
  void clear_trdstatus();
  static const int kTrdstatusFieldNumber = 3;
  ::google::protobuf::int32 trdstatus() const;
  void set_trdstatus(::google::protobuf::int32 value);

  // optional int32 lastmktinttime = 4 [default = 0];
  bool has_lastmktinttime() const;
  void clear_lastmktinttime();
  static const int kLastmktinttimeFieldNumber = 4;
  ::google::protobuf::int32 lastmktinttime() const;
  void set_lastmktinttime(::google::protobuf::int32 value);

  // optional int64 lastmktts = 5 [default = 0];
  bool has_lastmktts() const;
  void clear_lastmktts();
  static const int kLastmkttsFieldNumber = 5;
  ::google::protobuf::int64 lastmktts() const;
  void set_lastmktts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.StratData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_mdflag();
  inline void clear_has_mdflag();
  inline void set_has_trdstatus();
  inline void clear_has_trdstatus();
  inline void set_has_lastmktinttime();
  inline void clear_has_lastmktinttime();
  inline void set_has_lastmktts();
  inline void clear_has_lastmktts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 mdflag_;
  ::google::protobuf::int32 trdstatus_;
  ::google::protobuf::int32 lastmktinttime_;
  ::google::protobuf::int64 lastmktts_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static StratData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrCfgData) */ {
 public:
  InstrCfgData();
  virtual ~InstrCfgData();

  InstrCfgData(const InstrCfgData& from);

  inline InstrCfgData& operator=(const InstrCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrCfgData& default_instance();

  void Swap(InstrCfgData* other);

  // implements Message ----------------------------------------------

  inline InstrCfgData* New() const { return New(NULL); }

  InstrCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrCfgData& from);
  void MergeFrom(const InstrCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 mdapi = 1 [default = 0];
  bool has_mdapi() const;
  void clear_mdapi();
  static const int kMdapiFieldNumber = 1;
  ::google::protobuf::int32 mdapi() const;
  void set_mdapi(::google::protobuf::int32 value);

  // optional int32 trdapi = 2 [default = 0];
  bool has_trdapi() const;
  void clear_trdapi();
  static const int kTrdapiFieldNumber = 2;
  ::google::protobuf::int32 trdapi() const;
  void set_trdapi(::google::protobuf::int32 value);

  // optional int32 booklevels = 3 [default = 5];
  bool has_booklevels() const;
  void clear_booklevels();
  static const int kBooklevelsFieldNumber = 3;
  ::google::protobuf::int32 booklevels() const;
  void set_booklevels(::google::protobuf::int32 value);

  // optional int32 mktrollingwindow = 4 [default = 30];
  bool has_mktrollingwindow() const;
  void clear_mktrollingwindow();
  static const int kMktrollingwindowFieldNumber = 4;
  ::google::protobuf::int32 mktrollingwindow() const;
  void set_mktrollingwindow(::google::protobuf::int32 value);

  // optional int64 maxsz = 10 [default = 0];
  bool has_maxsz() const;
  void clear_maxsz();
  static const int kMaxszFieldNumber = 10;
  ::google::protobuf::int64 maxsz() const;
  void set_maxsz(::google::protobuf::int64 value);

  // optional int64 maxpos = 11 [default = 0];
  bool has_maxpos() const;
  void clear_maxpos();
  static const int kMaxposFieldNumber = 11;
  ::google::protobuf::int64 maxpos() const;
  void set_maxpos(::google::protobuf::int64 value);

  // map<string, string> namestrmap = 30;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 30;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.InstrCfgData)
 private:
  inline void set_has_mdapi();
  inline void clear_has_mdapi();
  inline void set_has_trdapi();
  inline void clear_has_trdapi();
  inline void set_has_booklevels();
  inline void clear_has_booklevels();
  inline void set_has_mktrollingwindow();
  inline void clear_has_mktrollingwindow();
  inline void set_has_maxsz();
  inline void clear_has_maxsz();
  inline void set_has_maxpos();
  inline void clear_has_maxpos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mdapi_;
  ::google::protobuf::int32 trdapi_;
  ::google::protobuf::int32 booklevels_;
  ::google::protobuf::int32 mktrollingwindow_;
  ::google::protobuf::int64 maxsz_;
  ::google::protobuf::int64 maxpos_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      InstrCfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrData) */ {
 public:
  InstrData();
  virtual ~InstrData();

  InstrData(const InstrData& from);

  inline InstrData& operator=(const InstrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrData& default_instance();

  void Swap(InstrData* other);

  // implements Message ----------------------------------------------

  inline InstrData* New() const { return New(NULL); }

  InstrData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrData& from);
  void MergeFrom(const InstrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, double> tagdoublemap = 1;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<int32, int32> tagintmap = 2;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // map<string, string> namestrmap = 3;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // optional int32 initflag = 8 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 8;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional double T = 10 [default = 0];
  bool has_t() const;
  void clear_t();
  static const int kTFieldNumber = 10;
  double t() const;
  void set_t(double value);

  // optional double dte = 11 [default = 0];
  bool has_dte() const;
  void clear_dte();
  static const int kDteFieldNumber = 11;
  double dte() const;
  void set_dte(double value);

  // optional double tte = 12 [default = 0];
  bool has_tte() const;
  void clear_tte();
  static const int kTteFieldNumber = 12;
  double tte() const;
  void set_tte(double value);

  // @@protoc_insertion_point(class_scope:XT.InstrData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_t();
  inline void clear_has_t();
  inline void set_has_dte();
  inline void clear_has_dte();
  inline void set_has_tte();
  inline void clear_has_tte();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      InstrData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      InstrData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      InstrData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  double t_;
  double dte_;
  double tte_;
  ::google::protobuf::int32 initflag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API FCCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.FCCfgData) */ {
 public:
  FCCfgData();
  virtual ~FCCfgData();

  FCCfgData(const FCCfgData& from);

  inline FCCfgData& operator=(const FCCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCCfgData& default_instance();

  void Swap(FCCfgData* other);

  // implements Message ----------------------------------------------

  inline FCCfgData* New() const { return New(NULL); }

  FCCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCCfgData& from);
  void MergeFrom(const FCCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FCCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string productid = 3 [default = ""];
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 3;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string undlyproduct = 4 [default = ""];
  bool has_undlyproduct() const;
  void clear_undlyproduct();
  static const int kUndlyproductFieldNumber = 4;
  const ::std::string& undlyproduct() const;
  void set_undlyproduct(const ::std::string& value);
  void set_undlyproduct(const char* value);
  void set_undlyproduct(const char* value, size_t size);
  ::std::string* mutable_undlyproduct();
  ::std::string* release_undlyproduct();
  void set_allocated_undlyproduct(::std::string* undlyproduct);

  // optional string hedgingproduct = 5 [default = ""];
  bool has_hedgingproduct() const;
  void clear_hedgingproduct();
  static const int kHedgingproductFieldNumber = 5;
  const ::std::string& hedgingproduct() const;
  void set_hedgingproduct(const ::std::string& value);
  void set_hedgingproduct(const char* value);
  void set_hedgingproduct(const char* value, size_t size);
  ::std::string* mutable_hedgingproduct();
  ::std::string* release_hedgingproduct();
  void set_allocated_hedgingproduct(::std::string* hedgingproduct);

  // optional string pxundlyproduct = 6 [default = ""];
  bool has_pxundlyproduct() const;
  void clear_pxundlyproduct();
  static const int kPxundlyproductFieldNumber = 6;
  const ::std::string& pxundlyproduct() const;
  void set_pxundlyproduct(const ::std::string& value);
  void set_pxundlyproduct(const char* value);
  void set_pxundlyproduct(const char* value, size_t size);
  ::std::string* mutable_pxundlyproduct();
  ::std::string* release_pxundlyproduct();
  void set_allocated_pxundlyproduct(::std::string* pxundlyproduct);

  // optional double pxundlyratio = 7 [default = 1];
  bool has_pxundlyratio() const;
  void clear_pxundlyratio();
  static const int kPxundlyratioFieldNumber = 7;
  double pxundlyratio() const;
  void set_pxundlyratio(double value);

  // optional string undlyinstr = 8 [default = ""];
  bool has_undlyinstr() const;
  void clear_undlyinstr();
  static const int kUndlyinstrFieldNumber = 8;
  const ::std::string& undlyinstr() const;
  void set_undlyinstr(const ::std::string& value);
  void set_undlyinstr(const char* value);
  void set_undlyinstr(const char* value, size_t size);
  ::std::string* mutable_undlyinstr();
  ::std::string* release_undlyinstr();
  void set_allocated_undlyinstr(::std::string* undlyinstr);

  // optional string hedginginstr = 9 [default = ""];
  bool has_hedginginstr() const;
  void clear_hedginginstr();
  static const int kHedginginstrFieldNumber = 9;
  const ::std::string& hedginginstr() const;
  void set_hedginginstr(const ::std::string& value);
  void set_hedginginstr(const char* value);
  void set_hedginginstr(const char* value, size_t size);
  ::std::string* mutable_hedginginstr();
  ::std::string* release_hedginginstr();
  void set_allocated_hedginginstr(::std::string* hedginginstr);

  // optional string pxundlyinstr = 10 [default = ""];
  bool has_pxundlyinstr() const;
  void clear_pxundlyinstr();
  static const int kPxundlyinstrFieldNumber = 10;
  const ::std::string& pxundlyinstr() const;
  void set_pxundlyinstr(const ::std::string& value);
  void set_pxundlyinstr(const char* value);
  void set_pxundlyinstr(const char* value, size_t size);
  ::std::string* mutable_pxundlyinstr();
  ::std::string* release_pxundlyinstr();
  void set_allocated_pxundlyinstr(::std::string* pxundlyinstr);

  // optional double undlybias = 11 [default = 0];
  bool has_undlybias() const;
  void clear_undlybias();
  static const int kUndlybiasFieldNumber = 11;
  double undlybias() const;
  void set_undlybias(double value);

  // optional double undlybiasmin = 12 [default = -100];
  bool has_undlybiasmin() const;
  void clear_undlybiasmin();
  static const int kUndlybiasminFieldNumber = 12;
  double undlybiasmin() const;
  void set_undlybiasmin(double value);

  // optional double undlybiasmax = 13 [default = 100];
  bool has_undlybiasmax() const;
  void clear_undlybiasmax();
  static const int kUndlybiasmaxFieldNumber = 13;
  double undlybiasmax() const;
  void set_undlybiasmax(double value);

  // optional int32 undlybiascountmin = 14 [default = 30];
  bool has_undlybiascountmin() const;
  void clear_undlybiascountmin();
  static const int kUndlybiascountminFieldNumber = 14;
  ::google::protobuf::int32 undlybiascountmin() const;
  void set_undlybiascountmin(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingsz = 15 [default = 300];
  bool has_undlybiasrollingsz() const;
  void clear_undlybiasrollingsz();
  static const int kUndlybiasrollingszFieldNumber = 15;
  ::google::protobuf::int32 undlybiasrollingsz() const;
  void set_undlybiasrollingsz(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingtype = 16 [default = 0];
  bool has_undlybiasrollingtype() const;
  void clear_undlybiasrollingtype();
  static const int kUndlybiasrollingtypeFieldNumber = 16;
  ::google::protobuf::int32 undlybiasrollingtype() const;
  void set_undlybiasrollingtype(::google::protobuf::int32 value);

  // optional int32 curveflag = 17 [default = 0];
  bool has_curveflag() const;
  void clear_curveflag();
  static const int kCurveflagFieldNumber = 17;
  ::google::protobuf::int32 curveflag() const;
  void set_curveflag(::google::protobuf::int32 value);

  // optional string curvetype = 18 [default = ""];
  bool has_curvetype() const;
  void clear_curvetype();
  static const int kCurvetypeFieldNumber = 18;
  const ::std::string& curvetype() const;
  void set_curvetype(const ::std::string& value);
  void set_curvetype(const char* value);
  void set_curvetype(const char* value, size_t size);
  ::std::string* mutable_curvetype();
  ::std::string* release_curvetype();
  void set_allocated_curvetype(::std::string* curvetype);

  // optional string deltanorminstr = 20 [default = ""];
  bool has_deltanorminstr() const;
  void clear_deltanorminstr();
  static const int kDeltanorminstrFieldNumber = 20;
  const ::std::string& deltanorminstr() const;
  void set_deltanorminstr(const ::std::string& value);
  void set_deltanorminstr(const char* value);
  void set_deltanorminstr(const char* value, size_t size);
  ::std::string* mutable_deltanorminstr();
  ::std::string* release_deltanorminstr();
  void set_allocated_deltanorminstr(::std::string* deltanorminstr);

  // optional double deltanormmax = 21 [default = 0];
  bool has_deltanormmax() const;
  void clear_deltanormmax();
  static const int kDeltanormmaxFieldNumber = 21;
  double deltanormmax() const;
  void set_deltanormmax(double value);

  // map<string, string> namestrmap = 30;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 30;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.FCCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_undlyproduct();
  inline void clear_has_undlyproduct();
  inline void set_has_hedgingproduct();
  inline void clear_has_hedgingproduct();
  inline void set_has_pxundlyproduct();
  inline void clear_has_pxundlyproduct();
  inline void set_has_pxundlyratio();
  inline void clear_has_pxundlyratio();
  inline void set_has_undlyinstr();
  inline void clear_has_undlyinstr();
  inline void set_has_hedginginstr();
  inline void clear_has_hedginginstr();
  inline void set_has_pxundlyinstr();
  inline void clear_has_pxundlyinstr();
  inline void set_has_undlybias();
  inline void clear_has_undlybias();
  inline void set_has_undlybiasmin();
  inline void clear_has_undlybiasmin();
  inline void set_has_undlybiasmax();
  inline void clear_has_undlybiasmax();
  inline void set_has_undlybiascountmin();
  inline void clear_has_undlybiascountmin();
  inline void set_has_undlybiasrollingsz();
  inline void clear_has_undlybiasrollingsz();
  inline void set_has_undlybiasrollingtype();
  inline void clear_has_undlybiasrollingtype();
  inline void set_has_curveflag();
  inline void clear_has_curveflag();
  inline void set_has_curvetype();
  inline void clear_has_curvetype();
  inline void set_has_deltanorminstr();
  inline void clear_has_deltanorminstr();
  inline void set_has_deltanormmax();
  inline void clear_has_deltanormmax();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr undlyproduct_;
  ::google::protobuf::internal::ArenaStringPtr hedgingproduct_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyproduct_;
  double pxundlyratio_;
  ::google::protobuf::internal::ArenaStringPtr undlyinstr_;
  ::google::protobuf::internal::ArenaStringPtr hedginginstr_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyinstr_;
  double undlybias_;
  double undlybiasmin_;
  double undlybiasmax_;
  ::google::protobuf::int32 undlybiascountmin_;
  ::google::protobuf::int32 undlybiasrollingsz_;
  ::google::protobuf::int32 undlybiasrollingtype_;
  ::google::protobuf::int32 curveflag_;
  ::google::protobuf::internal::ArenaStringPtr curvetype_;
  ::google::protobuf::internal::ArenaStringPtr deltanorminstr_;
  double deltanormmax_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      FCCfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static FCCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API FCData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.FCData) */ {
 public:
  FCData();
  virtual ~FCData();

  FCData(const FCData& from);

  inline FCData& operator=(const FCData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCData& default_instance();

  void Swap(FCData* other);

  // implements Message ----------------------------------------------

  inline FCData* New() const { return New(NULL); }

  FCData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCData& from);
  void MergeFrom(const FCData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FCData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 tradingday = 2 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 2;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 3 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 3;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // map<int32, double> tagdoublemap = 10;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<int32, int32> tagintmap = 11;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // @@protoc_insertion_point(class_scope:XT.FCData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 tradingday_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      FCData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      FCData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  ::google::protobuf::int32 prevtradingday_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static FCData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OCCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OCCfgData) */ {
 public:
  OCCfgData();
  virtual ~OCCfgData();

  OCCfgData(const OCCfgData& from);

  inline OCCfgData& operator=(const OCCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCCfgData& default_instance();

  void Swap(OCCfgData* other);

  // implements Message ----------------------------------------------

  inline OCCfgData* New() const { return New(NULL); }

  OCCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCCfgData& from);
  void MergeFrom(const OCCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string undlyproduct = 3 [default = ""];
  bool has_undlyproduct() const;
  void clear_undlyproduct();
  static const int kUndlyproductFieldNumber = 3;
  const ::std::string& undlyproduct() const;
  void set_undlyproduct(const ::std::string& value);
  void set_undlyproduct(const char* value);
  void set_undlyproduct(const char* value, size_t size);
  ::std::string* mutable_undlyproduct();
  ::std::string* release_undlyproduct();
  void set_allocated_undlyproduct(::std::string* undlyproduct);

  // optional int32 expireintdate = 4 [default = 99990101];
  bool has_expireintdate() const;
  void clear_expireintdate();
  static const int kExpireintdateFieldNumber = 4;
  ::google::protobuf::int32 expireintdate() const;
  void set_expireintdate(::google::protobuf::int32 value);

  // optional string productid = 5 [default = ""];
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 5;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string hedgingproduct = 6 [default = ""];
  bool has_hedgingproduct() const;
  void clear_hedgingproduct();
  static const int kHedgingproductFieldNumber = 6;
  const ::std::string& hedgingproduct() const;
  void set_hedgingproduct(const ::std::string& value);
  void set_hedgingproduct(const char* value);
  void set_hedgingproduct(const char* value, size_t size);
  ::std::string* mutable_hedgingproduct();
  ::std::string* release_hedgingproduct();
  void set_allocated_hedgingproduct(::std::string* hedgingproduct);

  // optional string pxundlyproduct = 7 [default = ""];
  bool has_pxundlyproduct() const;
  void clear_pxundlyproduct();
  static const int kPxundlyproductFieldNumber = 7;
  const ::std::string& pxundlyproduct() const;
  void set_pxundlyproduct(const ::std::string& value);
  void set_pxundlyproduct(const char* value);
  void set_pxundlyproduct(const char* value, size_t size);
  ::std::string* mutable_pxundlyproduct();
  ::std::string* release_pxundlyproduct();
  void set_allocated_pxundlyproduct(::std::string* pxundlyproduct);

  // optional double pxundlyratio = 8 [default = 1];
  bool has_pxundlyratio() const;
  void clear_pxundlyratio();
  static const int kPxundlyratioFieldNumber = 8;
  double pxundlyratio() const;
  void set_pxundlyratio(double value);

  // optional string undlyinstr = 9 [default = ""];
  bool has_undlyinstr() const;
  void clear_undlyinstr();
  static const int kUndlyinstrFieldNumber = 9;
  const ::std::string& undlyinstr() const;
  void set_undlyinstr(const ::std::string& value);
  void set_undlyinstr(const char* value);
  void set_undlyinstr(const char* value, size_t size);
  ::std::string* mutable_undlyinstr();
  ::std::string* release_undlyinstr();
  void set_allocated_undlyinstr(::std::string* undlyinstr);

  // optional string hedginginstr = 10 [default = ""];
  bool has_hedginginstr() const;
  void clear_hedginginstr();
  static const int kHedginginstrFieldNumber = 10;
  const ::std::string& hedginginstr() const;
  void set_hedginginstr(const ::std::string& value);
  void set_hedginginstr(const char* value);
  void set_hedginginstr(const char* value, size_t size);
  ::std::string* mutable_hedginginstr();
  ::std::string* release_hedginginstr();
  void set_allocated_hedginginstr(::std::string* hedginginstr);

  // optional string pxundlyinstr = 11 [default = ""];
  bool has_pxundlyinstr() const;
  void clear_pxundlyinstr();
  static const int kPxundlyinstrFieldNumber = 11;
  const ::std::string& pxundlyinstr() const;
  void set_pxundlyinstr(const ::std::string& value);
  void set_pxundlyinstr(const char* value);
  void set_pxundlyinstr(const char* value, size_t size);
  ::std::string* mutable_pxundlyinstr();
  ::std::string* release_pxundlyinstr();
  void set_allocated_pxundlyinstr(::std::string* pxundlyinstr);

  // optional string expiretime = 12 [default = "15:00:00"];
  bool has_expiretime() const;
  void clear_expiretime();
  static const int kExpiretimeFieldNumber = 12;
  const ::std::string& expiretime() const;
  void set_expiretime(const ::std::string& value);
  void set_expiretime(const char* value);
  void set_expiretime(const char* value, size_t size);
  ::std::string* mutable_expiretime();
  ::std::string* release_expiretime();
  void set_allocated_expiretime(::std::string* expiretime);

  // optional string expiredt = 13 [default = ""];
  bool has_expiredt() const;
  void clear_expiredt();
  static const int kExpiredtFieldNumber = 13;
  const ::std::string& expiredt() const;
  void set_expiredt(const ::std::string& value);
  void set_expiredt(const char* value);
  void set_expiredt(const char* value, size_t size);
  ::std::string* mutable_expiredt();
  ::std::string* release_expiredt();
  void set_allocated_expiredt(::std::string* expiredt);

  // optional int64 expirets = 14 [default = 0];
  bool has_expirets() const;
  void clear_expirets();
  static const int kExpiretsFieldNumber = 14;
  ::google::protobuf::int64 expirets() const;
  void set_expirets(::google::protobuf::int64 value);

  // optional int32 quotingflag = 15 [default = 0];
  bool has_quotingflag() const;
  void clear_quotingflag();
  static const int kQuotingflagFieldNumber = 15;
  ::google::protobuf::int32 quotingflag() const;
  void set_quotingflag(::google::protobuf::int32 value);

  // optional int32 rspflag = 16 [default = 1];
  bool has_rspflag() const;
  void clear_rspflag();
  static const int kRspflagFieldNumber = 16;
  ::google::protobuf::int32 rspflag() const;
  void set_rspflag(::google::protobuf::int32 value);

  // optional int32 hedgingflag = 17 [default = 0];
  bool has_hedgingflag() const;
  void clear_hedgingflag();
  static const int kHedgingflagFieldNumber = 17;
  ::google::protobuf::int32 hedgingflag() const;
  void set_hedgingflag(::google::protobuf::int32 value);

  // optional int32 fitflag = 18 [default = 0];
  bool has_fitflag() const;
  void clear_fitflag();
  static const int kFitflagFieldNumber = 18;
  ::google::protobuf::int32 fitflag() const;
  void set_fitflag(::google::protobuf::int32 value);

  // optional int32 fitmethod = 19 [default = 0];
  bool has_fitmethod() const;
  void clear_fitmethod();
  static const int kFitmethodFieldNumber = 19;
  ::google::protobuf::int32 fitmethod() const;
  void set_fitmethod(::google::protobuf::int32 value);

  // optional double fitthreshticks = 20 [default = 10];
  bool has_fitthreshticks() const;
  void clear_fitthreshticks();
  static const int kFitthreshticksFieldNumber = 20;
  double fitthreshticks() const;
  void set_fitthreshticks(double value);

  // optional double joinhedgethresh = 21 [default = 1];
  bool has_joinhedgethresh() const;
  void clear_joinhedgethresh();
  static const int kJoinhedgethreshFieldNumber = 21;
  double joinhedgethresh() const;
  void set_joinhedgethresh(double value);

  // optional double hithedgethresh = 22 [default = 5];
  bool has_hithedgethresh() const;
  void clear_hithedgethresh();
  static const int kHithedgethreshFieldNumber = 22;
  double hithedgethresh() const;
  void set_hithedgethresh(double value);

  // optional int32 safehedgedistticks = 23 [default = 5];
  bool has_safehedgedistticks() const;
  void clear_safehedgedistticks();
  static const int kSafehedgedistticksFieldNumber = 23;
  ::google::protobuf::int32 safehedgedistticks() const;
  void set_safehedgedistticks(::google::protobuf::int32 value);

  // optional int32 hedgedistticks = 24 [default = 1];
  bool has_hedgedistticks() const;
  void clear_hedgedistticks();
  static const int kHedgedistticksFieldNumber = 24;
  ::google::protobuf::int32 hedgedistticks() const;
  void set_hedgedistticks(::google::protobuf::int32 value);

  // optional int64 maxpos = 26 [default = 10];
  bool has_maxpos() const;
  void clear_maxpos();
  static const int kMaxposFieldNumber = 26;
  ::google::protobuf::int64 maxpos() const;
  void set_maxpos(::google::protobuf::int64 value);

  // optional double ocmaxdeltanorm = 27 [default = 10];
  bool has_ocmaxdeltanorm() const;
  void clear_ocmaxdeltanorm();
  static const int kOcmaxdeltanormFieldNumber = 27;
  double ocmaxdeltanorm() const;
  void set_ocmaxdeltanorm(double value);

  // optional double octgtdeltanorm = 28 [default = 0];
  bool has_octgtdeltanorm() const;
  void clear_octgtdeltanorm();
  static const int kOctgtdeltanormFieldNumber = 28;
  double octgtdeltanorm() const;
  void set_octgtdeltanorm(double value);

  // optional double ocmaxvega = 29 [default = 10000];
  bool has_ocmaxvega() const;
  void clear_ocmaxvega();
  static const int kOcmaxvegaFieldNumber = 29;
  double ocmaxvega() const;
  void set_ocmaxvega(double value);

  // optional double octgtvega = 30 [default = 0];
  bool has_octgtvega() const;
  void clear_octgtvega();
  static const int kOctgtvegaFieldNumber = 30;
  double octgtvega() const;
  void set_octgtvega(double value);

  // optional int32 quotepxmethod = 31 [default = 0];
  bool has_quotepxmethod() const;
  void clear_quotepxmethod();
  static const int kQuotepxmethodFieldNumber = 31;
  ::google::protobuf::int32 quotepxmethod() const;
  void set_quotepxmethod(::google::protobuf::int32 value);

  // optional int32 maxhitticks = 32 [default = 0];
  bool has_maxhitticks() const;
  void clear_maxhitticks();
  static const int kMaxhitticksFieldNumber = 32;
  ::google::protobuf::int32 maxhitticks() const;
  void set_maxhitticks(::google::protobuf::int32 value);

  // optional double rcp = 33 [default = 0.5];
  bool has_rcp() const;
  void clear_rcp();
  static const int kRcpFieldNumber = 33;
  double rcp() const;
  void set_rcp(double value);

  // optional double rrp = 34 [default = 0.8];
  bool has_rrp() const;
  void clear_rrp();
  static const int kRrpFieldNumber = 34;
  double rrp() const;
  void set_rrp(double value);

  // optional double minretreatratio = 35 [default = 0.2];
  bool has_minretreatratio() const;
  void clear_minretreatratio();
  static const int kMinretreatratioFieldNumber = 35;
  double minretreatratio() const;
  void set_minretreatratio(double value);

  // optional double maxretreatratio = 36 [default = 2];
  bool has_maxretreatratio() const;
  void clear_maxretreatratio();
  static const int kMaxretreatratioFieldNumber = 36;
  double maxretreatratio() const;
  void set_maxretreatratio(double value);

  // optional double leanonmktratio = 37 [default = 0.75];
  bool has_leanonmktratio() const;
  void clear_leanonmktratio();
  static const int kLeanonmktratioFieldNumber = 37;
  double leanonmktratio() const;
  void set_leanonmktratio(double value);

  // optional int32 pxchgthreshticksmin = 38 [default = 1];
  bool has_pxchgthreshticksmin() const;
  void clear_pxchgthreshticksmin();
  static const int kPxchgthreshticksminFieldNumber = 38;
  ::google::protobuf::int32 pxchgthreshticksmin() const;
  void set_pxchgthreshticksmin(::google::protobuf::int32 value);

  // optional int32 pxchgthreshticksmax = 39 [default = 10];
  bool has_pxchgthreshticksmax() const;
  void clear_pxchgthreshticksmax();
  static const int kPxchgthreshticksmaxFieldNumber = 39;
  ::google::protobuf::int32 pxchgthreshticksmax() const;
  void set_pxchgthreshticksmax(::google::protobuf::int32 value);

  // optional double pxchgthreshratio = 40 [default = 0.2];
  bool has_pxchgthreshratio() const;
  void clear_pxchgthreshratio();
  static const int kPxchgthreshratioFieldNumber = 40;
  double pxchgthreshratio() const;
  void set_pxchgthreshratio(double value);

  // optional int64 minquotesz = 41 [default = 1];
  bool has_minquotesz() const;
  void clear_minquotesz();
  static const int kMinquoteszFieldNumber = 41;
  ::google::protobuf::int64 minquotesz() const;
  void set_minquotesz(::google::protobuf::int64 value);

  // optional int64 minrspsz = 42 [default = 1];
  bool has_minrspsz() const;
  void clear_minrspsz();
  static const int kMinrspszFieldNumber = 42;
  ::google::protobuf::int64 minrspsz() const;
  void set_minrspsz(::google::protobuf::int64 value);

  // optional double minimpvol = 43 [default = 0.0006];
  bool has_minimpvol() const;
  void clear_minimpvol();
  static const int kMinimpvolFieldNumber = 43;
  double minimpvol() const;
  void set_minimpvol(double value);

  // optional double maximpvol = 44 [default = 3];
  bool has_maximpvol() const;
  void clear_maximpvol();
  static const int kMaximpvolFieldNumber = 44;
  double maximpvol() const;
  void set_maximpvol(double value);

  // optional double xscale = 45 [default = 1];
  bool has_xscale() const;
  void clear_xscale();
  static const int kXscaleFieldNumber = 45;
  double xscale() const;
  void set_xscale(double value);

  // optional int32 pxprecision = 46 [default = 5];
  bool has_pxprecision() const;
  void clear_pxprecision();
  static const int kPxprecisionFieldNumber = 46;
  ::google::protobuf::int32 pxprecision() const;
  void set_pxprecision(::google::protobuf::int32 value);

  // optional int32 exercisetype = 47 [default = 0];
  bool has_exercisetype() const;
  void clear_exercisetype();
  static const int kExercisetypeFieldNumber = 47;
  ::google::protobuf::int32 exercisetype() const;
  void set_exercisetype(::google::protobuf::int32 value);

  // optional double minoptionpxtick = 48 [default = 0];
  bool has_minoptionpxtick() const;
  void clear_minoptionpxtick();
  static const int kMinoptionpxtickFieldNumber = 48;
  double minoptionpxtick() const;
  void set_minoptionpxtick(double value);

  // optional double pxepsilon = 49 [default = 1e-06];
  bool has_pxepsilon() const;
  void clear_pxepsilon();
  static const int kPxepsilonFieldNumber = 49;
  double pxepsilon() const;
  void set_pxepsilon(double value);

  // optional int32 undlychgrollingsz = 50 [default = 36];
  bool has_undlychgrollingsz() const;
  void clear_undlychgrollingsz();
  static const int kUndlychgrollingszFieldNumber = 50;
  ::google::protobuf::int32 undlychgrollingsz() const;
  void set_undlychgrollingsz(::google::protobuf::int32 value);

  // optional int32 undlychgrollingtype = 51 [default = 0];
  bool has_undlychgrollingtype() const;
  void clear_undlychgrollingtype();
  static const int kUndlychgrollingtypeFieldNumber = 51;
  ::google::protobuf::int32 undlychgrollingtype() const;
  void set_undlychgrollingtype(::google::protobuf::int32 value);

  // optional double undlybigmovethresh = 52 [default = 0];
  bool has_undlybigmovethresh() const;
  void clear_undlybigmovethresh();
  static const int kUndlybigmovethreshFieldNumber = 52;
  double undlybigmovethresh() const;
  void set_undlybigmovethresh(double value);

  // optional int32 vcrrollingsz = 53 [default = 300];
  bool has_vcrrollingsz() const;
  void clear_vcrrollingsz();
  static const int kVcrrollingszFieldNumber = 53;
  ::google::protobuf::int32 vcrrollingsz() const;
  void set_vcrrollingsz(::google::protobuf::int32 value);

  // optional int32 vcrrollingtype = 54 [default = 0];
  bool has_vcrrollingtype() const;
  void clear_vcrrollingtype();
  static const int kVcrrollingtypeFieldNumber = 54;
  ::google::protobuf::int32 vcrrollingtype() const;
  void set_vcrrollingtype(::google::protobuf::int32 value);

  // optional int32 pnlexitpxflag = 55 [default = 0];
  bool has_pnlexitpxflag() const;
  void clear_pnlexitpxflag();
  static const int kPnlexitpxflagFieldNumber = 55;
  ::google::protobuf::int32 pnlexitpxflag() const;
  void set_pnlexitpxflag(::google::protobuf::int32 value);

  // optional int32 logflag = 56 [default = 0];
  bool has_logflag() const;
  void clear_logflag();
  static const int kLogflagFieldNumber = 56;
  ::google::protobuf::int32 logflag() const;
  void set_logflag(::google::protobuf::int32 value);

  // optional double r = 57 [default = 0.015];
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 57;
  double r() const;
  void set_r(double value);

  // optional double b = 58 [default = 0];
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 58;
  double b() const;
  void set_b(double value);

  // optional double undlybias = 60 [default = 0];
  bool has_undlybias() const;
  void clear_undlybias();
  static const int kUndlybiasFieldNumber = 60;
  double undlybias() const;
  void set_undlybias(double value);

  // optional double undlybiasmin = 61 [default = -100];
  bool has_undlybiasmin() const;
  void clear_undlybiasmin();
  static const int kUndlybiasminFieldNumber = 61;
  double undlybiasmin() const;
  void set_undlybiasmin(double value);

  // optional double undlybiasmax = 62 [default = 100];
  bool has_undlybiasmax() const;
  void clear_undlybiasmax();
  static const int kUndlybiasmaxFieldNumber = 62;
  double undlybiasmax() const;
  void set_undlybiasmax(double value);

  // optional int32 undlybiascountmin = 63 [default = 30];
  bool has_undlybiascountmin() const;
  void clear_undlybiascountmin();
  static const int kUndlybiascountminFieldNumber = 63;
  ::google::protobuf::int32 undlybiascountmin() const;
  void set_undlybiascountmin(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingsz = 64 [default = 300];
  bool has_undlybiasrollingsz() const;
  void clear_undlybiasrollingsz();
  static const int kUndlybiasrollingszFieldNumber = 64;
  ::google::protobuf::int32 undlybiasrollingsz() const;
  void set_undlybiasrollingsz(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingtype = 65 [default = 0];
  bool has_undlybiasrollingtype() const;
  void clear_undlybiasrollingtype();
  static const int kUndlybiasrollingtypeFieldNumber = 65;
  ::google::protobuf::int32 undlybiasrollingtype() const;
  void set_undlybiasrollingtype(::google::protobuf::int32 value);

  // map<string, string> namestrmap = 80;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 80;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.OCCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_undlyproduct();
  inline void clear_has_undlyproduct();
  inline void set_has_expireintdate();
  inline void clear_has_expireintdate();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_hedgingproduct();
  inline void clear_has_hedgingproduct();
  inline void set_has_pxundlyproduct();
  inline void clear_has_pxundlyproduct();
  inline void set_has_pxundlyratio();
  inline void clear_has_pxundlyratio();
  inline void set_has_undlyinstr();
  inline void clear_has_undlyinstr();
  inline void set_has_hedginginstr();
  inline void clear_has_hedginginstr();
  inline void set_has_pxundlyinstr();
  inline void clear_has_pxundlyinstr();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_expiredt();
  inline void clear_has_expiredt();
  inline void set_has_expirets();
  inline void clear_has_expirets();
  inline void set_has_quotingflag();
  inline void clear_has_quotingflag();
  inline void set_has_rspflag();
  inline void clear_has_rspflag();
  inline void set_has_hedgingflag();
  inline void clear_has_hedgingflag();
  inline void set_has_fitflag();
  inline void clear_has_fitflag();
  inline void set_has_fitmethod();
  inline void clear_has_fitmethod();
  inline void set_has_fitthreshticks();
  inline void clear_has_fitthreshticks();
  inline void set_has_joinhedgethresh();
  inline void clear_has_joinhedgethresh();
  inline void set_has_hithedgethresh();
  inline void clear_has_hithedgethresh();
  inline void set_has_safehedgedistticks();
  inline void clear_has_safehedgedistticks();
  inline void set_has_hedgedistticks();
  inline void clear_has_hedgedistticks();
  inline void set_has_maxpos();
  inline void clear_has_maxpos();
  inline void set_has_ocmaxdeltanorm();
  inline void clear_has_ocmaxdeltanorm();
  inline void set_has_octgtdeltanorm();
  inline void clear_has_octgtdeltanorm();
  inline void set_has_ocmaxvega();
  inline void clear_has_ocmaxvega();
  inline void set_has_octgtvega();
  inline void clear_has_octgtvega();
  inline void set_has_quotepxmethod();
  inline void clear_has_quotepxmethod();
  inline void set_has_maxhitticks();
  inline void clear_has_maxhitticks();
  inline void set_has_rcp();
  inline void clear_has_rcp();
  inline void set_has_rrp();
  inline void clear_has_rrp();
  inline void set_has_minretreatratio();
  inline void clear_has_minretreatratio();
  inline void set_has_maxretreatratio();
  inline void clear_has_maxretreatratio();
  inline void set_has_leanonmktratio();
  inline void clear_has_leanonmktratio();
  inline void set_has_pxchgthreshticksmin();
  inline void clear_has_pxchgthreshticksmin();
  inline void set_has_pxchgthreshticksmax();
  inline void clear_has_pxchgthreshticksmax();
  inline void set_has_pxchgthreshratio();
  inline void clear_has_pxchgthreshratio();
  inline void set_has_minquotesz();
  inline void clear_has_minquotesz();
  inline void set_has_minrspsz();
  inline void clear_has_minrspsz();
  inline void set_has_minimpvol();
  inline void clear_has_minimpvol();
  inline void set_has_maximpvol();
  inline void clear_has_maximpvol();
  inline void set_has_xscale();
  inline void clear_has_xscale();
  inline void set_has_pxprecision();
  inline void clear_has_pxprecision();
  inline void set_has_exercisetype();
  inline void clear_has_exercisetype();
  inline void set_has_minoptionpxtick();
  inline void clear_has_minoptionpxtick();
  inline void set_has_pxepsilon();
  inline void clear_has_pxepsilon();
  inline void set_has_undlychgrollingsz();
  inline void clear_has_undlychgrollingsz();
  inline void set_has_undlychgrollingtype();
  inline void clear_has_undlychgrollingtype();
  inline void set_has_undlybigmovethresh();
  inline void clear_has_undlybigmovethresh();
  inline void set_has_vcrrollingsz();
  inline void clear_has_vcrrollingsz();
  inline void set_has_vcrrollingtype();
  inline void clear_has_vcrrollingtype();
  inline void set_has_pnlexitpxflag();
  inline void clear_has_pnlexitpxflag();
  inline void set_has_logflag();
  inline void clear_has_logflag();
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_undlybias();
  inline void clear_has_undlybias();
  inline void set_has_undlybiasmin();
  inline void clear_has_undlybiasmin();
  inline void set_has_undlybiasmax();
  inline void clear_has_undlybiasmax();
  inline void set_has_undlybiascountmin();
  inline void clear_has_undlybiascountmin();
  inline void set_has_undlybiasrollingsz();
  inline void clear_has_undlybiasrollingsz();
  inline void set_has_undlybiasrollingtype();
  inline void clear_has_undlybiasrollingtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr undlyproduct_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr hedgingproduct_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyproduct_;
  double pxundlyratio_;
  ::google::protobuf::internal::ArenaStringPtr undlyinstr_;
  ::google::protobuf::int32 expireintdate_;
  ::google::protobuf::int32 quotingflag_;
  ::google::protobuf::internal::ArenaStringPtr hedginginstr_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyinstr_;
  static ::std::string* _default_expiretime_;
  ::google::protobuf::internal::ArenaStringPtr expiretime_;
  ::google::protobuf::internal::ArenaStringPtr expiredt_;
  ::google::protobuf::int64 expirets_;
  ::google::protobuf::int32 rspflag_;
  ::google::protobuf::int32 hedgingflag_;
  ::google::protobuf::int32 fitflag_;
  ::google::protobuf::int32 fitmethod_;
  double fitthreshticks_;
  double joinhedgethresh_;
  double hithedgethresh_;
  ::google::protobuf::int32 safehedgedistticks_;
  ::google::protobuf::int32 hedgedistticks_;
  ::google::protobuf::int64 maxpos_;
  double ocmaxdeltanorm_;
  double octgtdeltanorm_;
  double ocmaxvega_;
  double octgtvega_;
  ::google::protobuf::int32 quotepxmethod_;
  ::google::protobuf::int32 maxhitticks_;
  double rcp_;
  double rrp_;
  double minretreatratio_;
  double maxretreatratio_;
  double leanonmktratio_;
  ::google::protobuf::int32 pxchgthreshticksmin_;
  ::google::protobuf::int32 pxchgthreshticksmax_;
  double pxchgthreshratio_;
  ::google::protobuf::int64 minquotesz_;
  ::google::protobuf::int64 minrspsz_;
  double minimpvol_;
  double maximpvol_;
  double xscale_;
  ::google::protobuf::int32 pxprecision_;
  ::google::protobuf::int32 exercisetype_;
  double minoptionpxtick_;
  double pxepsilon_;
  ::google::protobuf::int32 undlychgrollingsz_;
  ::google::protobuf::int32 undlychgrollingtype_;
  double undlybigmovethresh_;
  ::google::protobuf::int32 vcrrollingsz_;
  ::google::protobuf::int32 vcrrollingtype_;
  ::google::protobuf::int32 pnlexitpxflag_;
  ::google::protobuf::int32 logflag_;
  double r_;
  double b_;
  double undlybias_;
  double undlybiasmin_;
  double undlybiasmax_;
  ::google::protobuf::int32 undlybiascountmin_;
  ::google::protobuf::int32 undlybiasrollingsz_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      OCCfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  ::google::protobuf::int32 undlybiasrollingtype_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OCCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OCStrikeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OCStrikeData) */ {
 public:
  OCStrikeData();
  virtual ~OCStrikeData();

  OCStrikeData(const OCStrikeData& from);

  inline OCStrikeData& operator=(const OCStrikeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCStrikeData& default_instance();

  void Swap(OCStrikeData* other);

  // implements Message ----------------------------------------------

  inline OCStrikeData* New() const { return New(NULL); }

  OCStrikeData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCStrikeData& from);
  void MergeFrom(const OCStrikeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCStrikeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional double strike = 1 [default = 0];
  bool has_strike() const;
  void clear_strike();
  static const int kStrikeFieldNumber = 1;
  double strike() const;
  void set_strike(double value);

  // optional .XT.PosGreeksData posgreeks = 2;
  bool has_posgreeks() const;
  void clear_posgreeks();
  static const int kPosgreeksFieldNumber = 2;
  const ::XT::PosGreeksData& posgreeks() const;
  ::XT::PosGreeksData* mutable_posgreeks();
  ::XT::PosGreeksData* release_posgreeks();
  void set_allocated_posgreeks(::XT::PosGreeksData* posgreeks);

  // optional .XT.GreeksData greeks = 3;
  bool has_greeks() const;
  void clear_greeks();
  static const int kGreeksFieldNumber = 3;
  const ::XT::GreeksData& greeks() const;
  ::XT::GreeksData* mutable_greeks();
  ::XT::GreeksData* release_greeks();
  void set_allocated_greeks(::XT::GreeksData* greeks);

  // optional .XT.VolatilityData volatility = 4;
  bool has_volatility() const;
  void clear_volatility();
  static const int kVolatilityFieldNumber = 4;
  const ::XT::VolatilityData& volatility() const;
  ::XT::VolatilityData* mutable_volatility();
  ::XT::VolatilityData* release_volatility();
  void set_allocated_volatility(::XT::VolatilityData* volatility);

  // optional .XT.TradePxVolumeData tradepxvolume = 5;
  bool has_tradepxvolume() const;
  void clear_tradepxvolume();
  static const int kTradepxvolumeFieldNumber = 5;
  const ::XT::TradePxVolumeData& tradepxvolume() const;
  ::XT::TradePxVolumeData* mutable_tradepxvolume();
  ::XT::TradePxVolumeData* release_tradepxvolume();
  void set_allocated_tradepxvolume(::XT::TradePxVolumeData* tradepxvolume);

  // optional .XT.PnLData pnls = 6;
  bool has_pnls() const;
  void clear_pnls();
  static const int kPnlsFieldNumber = 6;
  const ::XT::PnLData& pnls() const;
  ::XT::PnLData* mutable_pnls();
  ::XT::PnLData* release_pnls();
  void set_allocated_pnls(::XT::PnLData* pnls);

  // optional double volweight = 7 [default = 1];
  bool has_volweight() const;
  void clear_volweight();
  static const int kVolweightFieldNumber = 7;
  double volweight() const;
  void set_volweight(double value);

  // optional double synfwdbid = 8 [default = 0];
  bool has_synfwdbid() const;
  void clear_synfwdbid();
  static const int kSynfwdbidFieldNumber = 8;
  double synfwdbid() const;
  void set_synfwdbid(double value);

  // optional double synfwdask = 9 [default = 0];
  bool has_synfwdask() const;
  void clear_synfwdask();
  static const int kSynfwdaskFieldNumber = 9;
  double synfwdask() const;
  void set_synfwdask(double value);

  // optional double synfwdmid = 10 [default = 0];
  bool has_synfwdmid() const;
  void clear_synfwdmid();
  static const int kSynfwdmidFieldNumber = 10;
  double synfwdmid() const;
  void set_synfwdmid(double value);

  // optional double synfwdclose = 11 [default = 0];
  bool has_synfwdclose() const;
  void clear_synfwdclose();
  static const int kSynfwdcloseFieldNumber = 11;
  double synfwdclose() const;
  void set_synfwdclose(double value);

  // optional double synfwdsettle = 12 [default = 0];
  bool has_synfwdsettle() const;
  void clear_synfwdsettle();
  static const int kSynfwdsettleFieldNumber = 12;
  double synfwdsettle() const;
  void set_synfwdsettle(double value);

  // map<int32, int32> tagintmap = 20;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 20;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // map<int32, double> tagdoublemap = 21;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 21;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // @@protoc_insertion_point(class_scope:XT.OCStrikeData)
 private:
  inline void set_has_strike();
  inline void clear_has_strike();
  inline void set_has_posgreeks();
  inline void clear_has_posgreeks();
  inline void set_has_greeks();
  inline void clear_has_greeks();
  inline void set_has_volatility();
  inline void clear_has_volatility();
  inline void set_has_tradepxvolume();
  inline void clear_has_tradepxvolume();
  inline void set_has_pnls();
  inline void clear_has_pnls();
  inline void set_has_volweight();
  inline void clear_has_volweight();
  inline void set_has_synfwdbid();
  inline void clear_has_synfwdbid();
  inline void set_has_synfwdask();
  inline void clear_has_synfwdask();
  inline void set_has_synfwdmid();
  inline void clear_has_synfwdmid();
  inline void set_has_synfwdclose();
  inline void clear_has_synfwdclose();
  inline void set_has_synfwdsettle();
  inline void clear_has_synfwdsettle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double strike_;
  ::XT::PosGreeksData* posgreeks_;
  ::XT::GreeksData* greeks_;
  ::XT::VolatilityData* volatility_;
  ::XT::TradePxVolumeData* tradepxvolume_;
  ::XT::PnLData* pnls_;
  double volweight_;
  double synfwdbid_;
  double synfwdask_;
  double synfwdmid_;
  double synfwdclose_;
  double synfwdsettle_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      OCStrikeData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      OCStrikeData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OCStrikeData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ATMInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ATMInfo) */ {
 public:
  ATMInfo();
  virtual ~ATMInfo();

  ATMInfo(const ATMInfo& from);

  inline ATMInfo& operator=(const ATMInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ATMInfo& default_instance();

  void Swap(ATMInfo* other);

  // implements Message ----------------------------------------------

  inline ATMInfo* New() const { return New(NULL); }

  ATMInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ATMInfo& from);
  void MergeFrom(const ATMInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ATMInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 atmindex = 1 [default = -1];
  bool has_atmindex() const;
  void clear_atmindex();
  static const int kAtmindexFieldNumber = 1;
  ::google::protobuf::int32 atmindex() const;
  void set_atmindex(::google::protobuf::int32 value);

  // optional double atmstrike = 2 [default = 0];
  bool has_atmstrike() const;
  void clear_atmstrike();
  static const int kAtmstrikeFieldNumber = 2;
  double atmstrike() const;
  void set_atmstrike(double value);

  // optional int64 atmintstrike = 3 [default = 0];
  bool has_atmintstrike() const;
  void clear_atmintstrike();
  static const int kAtmintstrikeFieldNumber = 3;
  ::google::protobuf::int64 atmintstrike() const;
  void set_atmintstrike(::google::protobuf::int64 value);

  // optional double atmstraddlevega = 4 [default = 0];
  bool has_atmstraddlevega() const;
  void clear_atmstraddlevega();
  static const int kAtmstraddlevegaFieldNumber = 4;
  double atmstraddlevega() const;
  void set_atmstraddlevega(double value);

  // optional int32 atmindexprev = 5 [default = -1];
  bool has_atmindexprev() const;
  void clear_atmindexprev();
  static const int kAtmindexprevFieldNumber = 5;
  ::google::protobuf::int32 atmindexprev() const;
  void set_atmindexprev(::google::protobuf::int32 value);

  // optional double atmstrikeprev = 6 [default = 0];
  bool has_atmstrikeprev() const;
  void clear_atmstrikeprev();
  static const int kAtmstrikeprevFieldNumber = 6;
  double atmstrikeprev() const;
  void set_atmstrikeprev(double value);

  // @@protoc_insertion_point(class_scope:XT.ATMInfo)
 private:
  inline void set_has_atmindex();
  inline void clear_has_atmindex();
  inline void set_has_atmstrike();
  inline void clear_has_atmstrike();
  inline void set_has_atmintstrike();
  inline void clear_has_atmintstrike();
  inline void set_has_atmstraddlevega();
  inline void clear_has_atmstraddlevega();
  inline void set_has_atmindexprev();
  inline void clear_has_atmindexprev();
  inline void set_has_atmstrikeprev();
  inline void clear_has_atmstrikeprev();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double atmstrike_;
  ::google::protobuf::int64 atmintstrike_;
  ::google::protobuf::int32 atmindex_;
  ::google::protobuf::int32 atmindexprev_;
  double atmstraddlevega_;
  double atmstrikeprev_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ATMInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OCData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OCData) */ {
 public:
  OCData();
  virtual ~OCData();

  OCData(const OCData& from);

  inline OCData& operator=(const OCData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCData& default_instance();

  void Swap(OCData* other);

  // implements Message ----------------------------------------------

  inline OCData* New() const { return New(NULL); }

  OCData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCData& from);
  void MergeFrom(const OCData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 tradingday = 2 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 2;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 3 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 3;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional .XT.ATMInfo atminfo = 11;
  bool has_atminfo() const;
  void clear_atminfo();
  static const int kAtminfoFieldNumber = 11;
  const ::XT::ATMInfo& atminfo() const;
  ::XT::ATMInfo* mutable_atminfo();
  ::XT::ATMInfo* release_atminfo();
  void set_allocated_atminfo(::XT::ATMInfo* atminfo);

  // optional .XT.PnLData pnls = 12;
  bool has_pnls() const;
  void clear_pnls();
  static const int kPnlsFieldNumber = 12;
  const ::XT::PnLData& pnls() const;
  ::XT::PnLData* mutable_pnls();
  ::XT::PnLData* release_pnls();
  void set_allocated_pnls(::XT::PnLData* pnls);

  // optional .XT.TradePxVolumeData tradepxvolume = 13;
  bool has_tradepxvolume() const;
  void clear_tradepxvolume();
  static const int kTradepxvolumeFieldNumber = 13;
  const ::XT::TradePxVolumeData& tradepxvolume() const;
  ::XT::TradePxVolumeData* mutable_tradepxvolume();
  ::XT::TradePxVolumeData* release_tradepxvolume();
  void set_allocated_tradepxvolume(::XT::TradePxVolumeData* tradepxvolume);

  // optional .XT.PosGreeksData posgreeks = 14;
  bool has_posgreeks() const;
  void clear_posgreeks();
  static const int kPosgreeksFieldNumber = 14;
  const ::XT::PosGreeksData& posgreeks() const;
  ::XT::PosGreeksData* mutable_posgreeks();
  ::XT::PosGreeksData* release_posgreeks();
  void set_allocated_posgreeks(::XT::PosGreeksData* posgreeks);

  // optional int64 lastundlyquotets = 15 [default = 0];
  bool has_lastundlyquotets() const;
  void clear_lastundlyquotets();
  static const int kLastundlyquotetsFieldNumber = 15;
  ::google::protobuf::int64 lastundlyquotets() const;
  void set_lastundlyquotets(::google::protobuf::int64 value);

  // optional int64 lastoptionquotets = 16 [default = 0];
  bool has_lastoptionquotets() const;
  void clear_lastoptionquotets();
  static const int kLastoptionquotetsFieldNumber = 16;
  ::google::protobuf::int64 lastoptionquotets() const;
  void set_lastoptionquotets(::google::protobuf::int64 value);

  // optional int64 lastquotets = 17 [default = 0];
  bool has_lastquotets() const;
  void clear_lastquotets();
  static const int kLastquotetsFieldNumber = 17;
  ::google::protobuf::int64 lastquotets() const;
  void set_lastquotets(::google::protobuf::int64 value);

  // optional double undlypxclose = 20 [default = 0];
  bool has_undlypxclose() const;
  void clear_undlypxclose();
  static const int kUndlypxcloseFieldNumber = 20;
  double undlypxclose() const;
  void set_undlypxclose(double value);

  // optional double undlypxsettle = 21 [default = 0];
  bool has_undlypxsettle() const;
  void clear_undlypxsettle();
  static const int kUndlypxsettleFieldNumber = 21;
  double undlypxsettle() const;
  void set_undlypxsettle(double value);

  // optional double atmstrikeclose = 22 [default = 0];
  bool has_atmstrikeclose() const;
  void clear_atmstrikeclose();
  static const int kAtmstrikecloseFieldNumber = 22;
  double atmstrikeclose() const;
  void set_atmstrikeclose(double value);

  // optional double atmstrikesettle = 23 [default = 0];
  bool has_atmstrikesettle() const;
  void clear_atmstrikesettle();
  static const int kAtmstrikesettleFieldNumber = 23;
  double atmstrikesettle() const;
  void set_atmstrikesettle(double value);

  // optional double atmvolclose = 24 [default = 0];
  bool has_atmvolclose() const;
  void clear_atmvolclose();
  static const int kAtmvolcloseFieldNumber = 24;
  double atmvolclose() const;
  void set_atmvolclose(double value);

  // optional double atmvolsettle = 25 [default = 0];
  bool has_atmvolsettle() const;
  void clear_atmvolsettle();
  static const int kAtmvolsettleFieldNumber = 25;
  double atmvolsettle() const;
  void set_atmvolsettle(double value);

  // optional double beginT = 26 [default = 0];
  bool has_begint() const;
  void clear_begint();
  static const int kBeginTFieldNumber = 26;
  double begint() const;
  void set_begint(double value);

  // optional double endT = 27 [default = 0];
  bool has_endt() const;
  void clear_endt();
  static const int kEndTFieldNumber = 27;
  double endt() const;
  void set_endt(double value);

  // optional double T = 28 [default = 0];
  bool has_t() const;
  void clear_t();
  static const int kTFieldNumber = 28;
  double t() const;
  void set_t(double value);

  // optional double dte = 29 [default = 0];
  bool has_dte() const;
  void clear_dte();
  static const int kDteFieldNumber = 29;
  double dte() const;
  void set_dte(double value);

  // optional double tte = 30 [default = 0];
  bool has_tte() const;
  void clear_tte();
  static const int kTteFieldNumber = 30;
  double tte() const;
  void set_tte(double value);

  // optional int32 nstrikes = 31 [default = 0];
  bool has_nstrikes() const;
  void clear_nstrikes();
  static const int kNstrikesFieldNumber = 31;
  ::google::protobuf::int32 nstrikes() const;
  void set_nstrikes(::google::protobuf::int32 value);

  // optional int32 ncalls = 32 [default = 0];
  bool has_ncalls() const;
  void clear_ncalls();
  static const int kNcallsFieldNumber = 32;
  ::google::protobuf::int32 ncalls() const;
  void set_ncalls(::google::protobuf::int32 value);

  // optional int32 nputs = 33 [default = 0];
  bool has_nputs() const;
  void clear_nputs();
  static const int kNputsFieldNumber = 33;
  ::google::protobuf::int32 nputs() const;
  void set_nputs(::google::protobuf::int32 value);

  // map<int32, double> tagdoublemap = 50;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 50;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<int32, int32> tagintmap = 51;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 51;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // @@protoc_insertion_point(class_scope:XT.OCData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_atminfo();
  inline void clear_has_atminfo();
  inline void set_has_pnls();
  inline void clear_has_pnls();
  inline void set_has_tradepxvolume();
  inline void clear_has_tradepxvolume();
  inline void set_has_posgreeks();
  inline void clear_has_posgreeks();
  inline void set_has_lastundlyquotets();
  inline void clear_has_lastundlyquotets();
  inline void set_has_lastoptionquotets();
  inline void clear_has_lastoptionquotets();
  inline void set_has_lastquotets();
  inline void clear_has_lastquotets();
  inline void set_has_undlypxclose();
  inline void clear_has_undlypxclose();
  inline void set_has_undlypxsettle();
  inline void clear_has_undlypxsettle();
  inline void set_has_atmstrikeclose();
  inline void clear_has_atmstrikeclose();
  inline void set_has_atmstrikesettle();
  inline void clear_has_atmstrikesettle();
  inline void set_has_atmvolclose();
  inline void clear_has_atmvolclose();
  inline void set_has_atmvolsettle();
  inline void clear_has_atmvolsettle();
  inline void set_has_begint();
  inline void clear_has_begint();
  inline void set_has_endt();
  inline void clear_has_endt();
  inline void set_has_t();
  inline void clear_has_t();
  inline void set_has_dte();
  inline void clear_has_dte();
  inline void set_has_tte();
  inline void clear_has_tte();
  inline void set_has_nstrikes();
  inline void clear_has_nstrikes();
  inline void set_has_ncalls();
  inline void clear_has_ncalls();
  inline void set_has_nputs();
  inline void clear_has_nputs();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 tradingday_;
  ::XT::ATMInfo* atminfo_;
  ::XT::PnLData* pnls_;
  ::XT::TradePxVolumeData* tradepxvolume_;
  ::XT::PosGreeksData* posgreeks_;
  ::google::protobuf::int64 lastundlyquotets_;
  ::google::protobuf::int64 lastoptionquotets_;
  ::google::protobuf::int64 lastquotets_;
  double undlypxclose_;
  double undlypxsettle_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int32 nstrikes_;
  double atmstrikeclose_;
  double atmstrikesettle_;
  double atmvolclose_;
  double atmvolsettle_;
  double begint_;
  double endt_;
  double t_;
  double dte_;
  double tte_;
  ::google::protobuf::int32 ncalls_;
  ::google::protobuf::int32 nputs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      OCData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      OCData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OCData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OCSCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OCSCfgData) */ {
 public:
  OCSCfgData();
  virtual ~OCSCfgData();

  OCSCfgData(const OCSCfgData& from);

  inline OCSCfgData& operator=(const OCSCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCSCfgData& default_instance();

  void Swap(OCSCfgData* other);

  // implements Message ----------------------------------------------

  inline OCSCfgData* New() const { return New(NULL); }

  OCSCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCSCfgData& from);
  void MergeFrom(const OCSCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCSCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string productid = 3 [default = ""];
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 3;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string undlyproduct = 4 [default = ""];
  bool has_undlyproduct() const;
  void clear_undlyproduct();
  static const int kUndlyproductFieldNumber = 4;
  const ::std::string& undlyproduct() const;
  void set_undlyproduct(const ::std::string& value);
  void set_undlyproduct(const char* value);
  void set_undlyproduct(const char* value, size_t size);
  ::std::string* mutable_undlyproduct();
  ::std::string* release_undlyproduct();
  void set_allocated_undlyproduct(::std::string* undlyproduct);

  // optional string hedgingproduct = 5 [default = ""];
  bool has_hedgingproduct() const;
  void clear_hedgingproduct();
  static const int kHedgingproductFieldNumber = 5;
  const ::std::string& hedgingproduct() const;
  void set_hedgingproduct(const ::std::string& value);
  void set_hedgingproduct(const char* value);
  void set_hedgingproduct(const char* value, size_t size);
  ::std::string* mutable_hedgingproduct();
  ::std::string* release_hedgingproduct();
  void set_allocated_hedgingproduct(::std::string* hedgingproduct);

  // optional string pxundlyproduct = 6 [default = ""];
  bool has_pxundlyproduct() const;
  void clear_pxundlyproduct();
  static const int kPxundlyproductFieldNumber = 6;
  const ::std::string& pxundlyproduct() const;
  void set_pxundlyproduct(const ::std::string& value);
  void set_pxundlyproduct(const char* value);
  void set_pxundlyproduct(const char* value, size_t size);
  ::std::string* mutable_pxundlyproduct();
  ::std::string* release_pxundlyproduct();
  void set_allocated_pxundlyproduct(::std::string* pxundlyproduct);

  // optional double pxundlyratio = 7 [default = 1];
  bool has_pxundlyratio() const;
  void clear_pxundlyratio();
  static const int kPxundlyratioFieldNumber = 7;
  double pxundlyratio() const;
  void set_pxundlyratio(double value);

  // optional string undlyinstr = 8 [default = ""];
  bool has_undlyinstr() const;
  void clear_undlyinstr();
  static const int kUndlyinstrFieldNumber = 8;
  const ::std::string& undlyinstr() const;
  void set_undlyinstr(const ::std::string& value);
  void set_undlyinstr(const char* value);
  void set_undlyinstr(const char* value, size_t size);
  ::std::string* mutable_undlyinstr();
  ::std::string* release_undlyinstr();
  void set_allocated_undlyinstr(::std::string* undlyinstr);

  // optional string hedginginstr = 9 [default = ""];
  bool has_hedginginstr() const;
  void clear_hedginginstr();
  static const int kHedginginstrFieldNumber = 9;
  const ::std::string& hedginginstr() const;
  void set_hedginginstr(const ::std::string& value);
  void set_hedginginstr(const char* value);
  void set_hedginginstr(const char* value, size_t size);
  ::std::string* mutable_hedginginstr();
  ::std::string* release_hedginginstr();
  void set_allocated_hedginginstr(::std::string* hedginginstr);

  // optional string pxundlyinstr = 10 [default = ""];
  bool has_pxundlyinstr() const;
  void clear_pxundlyinstr();
  static const int kPxundlyinstrFieldNumber = 10;
  const ::std::string& pxundlyinstr() const;
  void set_pxundlyinstr(const ::std::string& value);
  void set_pxundlyinstr(const char* value);
  void set_pxundlyinstr(const char* value, size_t size);
  ::std::string* mutable_pxundlyinstr();
  ::std::string* release_pxundlyinstr();
  void set_allocated_pxundlyinstr(::std::string* pxundlyinstr);

  // optional double undlybias = 60 [default = 0];
  bool has_undlybias() const;
  void clear_undlybias();
  static const int kUndlybiasFieldNumber = 60;
  double undlybias() const;
  void set_undlybias(double value);

  // optional double undlybiasmin = 61 [default = -100];
  bool has_undlybiasmin() const;
  void clear_undlybiasmin();
  static const int kUndlybiasminFieldNumber = 61;
  double undlybiasmin() const;
  void set_undlybiasmin(double value);

  // optional double undlybiasmax = 62 [default = 100];
  bool has_undlybiasmax() const;
  void clear_undlybiasmax();
  static const int kUndlybiasmaxFieldNumber = 62;
  double undlybiasmax() const;
  void set_undlybiasmax(double value);

  // optional int32 undlybiascountmin = 63 [default = 30];
  bool has_undlybiascountmin() const;
  void clear_undlybiascountmin();
  static const int kUndlybiascountminFieldNumber = 63;
  ::google::protobuf::int32 undlybiascountmin() const;
  void set_undlybiascountmin(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingsz = 64 [default = 300];
  bool has_undlybiasrollingsz() const;
  void clear_undlybiasrollingsz();
  static const int kUndlybiasrollingszFieldNumber = 64;
  ::google::protobuf::int32 undlybiasrollingsz() const;
  void set_undlybiasrollingsz(::google::protobuf::int32 value);

  // optional int32 undlybiasrollingtype = 65 [default = 0];
  bool has_undlybiasrollingtype() const;
  void clear_undlybiasrollingtype();
  static const int kUndlybiasrollingtypeFieldNumber = 65;
  ::google::protobuf::int32 undlybiasrollingtype() const;
  void set_undlybiasrollingtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.OCSCfgData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_undlyproduct();
  inline void clear_has_undlyproduct();
  inline void set_has_hedgingproduct();
  inline void clear_has_hedgingproduct();
  inline void set_has_pxundlyproduct();
  inline void clear_has_pxundlyproduct();
  inline void set_has_pxundlyratio();
  inline void clear_has_pxundlyratio();
  inline void set_has_undlyinstr();
  inline void clear_has_undlyinstr();
  inline void set_has_hedginginstr();
  inline void clear_has_hedginginstr();
  inline void set_has_pxundlyinstr();
  inline void clear_has_pxundlyinstr();
  inline void set_has_undlybias();
  inline void clear_has_undlybias();
  inline void set_has_undlybiasmin();
  inline void clear_has_undlybiasmin();
  inline void set_has_undlybiasmax();
  inline void clear_has_undlybiasmax();
  inline void set_has_undlybiascountmin();
  inline void clear_has_undlybiascountmin();
  inline void set_has_undlybiasrollingsz();
  inline void clear_has_undlybiasrollingsz();
  inline void set_has_undlybiasrollingtype();
  inline void clear_has_undlybiasrollingtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr undlyproduct_;
  ::google::protobuf::internal::ArenaStringPtr hedgingproduct_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyproduct_;
  double pxundlyratio_;
  ::google::protobuf::internal::ArenaStringPtr undlyinstr_;
  ::google::protobuf::internal::ArenaStringPtr hedginginstr_;
  ::google::protobuf::internal::ArenaStringPtr pxundlyinstr_;
  double undlybias_;
  double undlybiasmin_;
  double undlybiasmax_;
  ::google::protobuf::int32 undlybiascountmin_;
  ::google::protobuf::int32 undlybiasrollingsz_;
  ::google::protobuf::int32 undlybiasrollingtype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OCSCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OCSData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OCSData) */ {
 public:
  OCSData();
  virtual ~OCSData();

  OCSData(const OCSData& from);

  inline OCSData& operator=(const OCSData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCSData& default_instance();

  void Swap(OCSData* other);

  // implements Message ----------------------------------------------

  inline OCSData* New() const { return New(NULL); }

  OCSData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCSData& from);
  void MergeFrom(const OCSData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCSData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 initflag = 1 [default = 0];
  bool has_initflag() const;
  void clear_initflag();
  static const int kInitflagFieldNumber = 1;
  ::google::protobuf::int32 initflag() const;
  void set_initflag(::google::protobuf::int32 value);

  // optional int32 tradingday = 2 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 2;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 3 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 3;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int64 currmktts = 10 [default = 0];
  bool has_currmktts() const;
  void clear_currmktts();
  static const int kCurrmkttsFieldNumber = 10;
  ::google::protobuf::int64 currmktts() const;
  void set_currmktts(::google::protobuf::int64 value);

  // optional int32 currsessionidx = 11 [default = 0];
  bool has_currsessionidx() const;
  void clear_currsessionidx();
  static const int kCurrsessionidxFieldNumber = 11;
  ::google::protobuf::int32 currsessionidx() const;
  void set_currsessionidx(::google::protobuf::int32 value);

  // optional int64 currsessionbegints = 12 [default = 0];
  bool has_currsessionbegints() const;
  void clear_currsessionbegints();
  static const int kCurrsessionbegintsFieldNumber = 12;
  ::google::protobuf::int64 currsessionbegints() const;
  void set_currsessionbegints(::google::protobuf::int64 value);

  // optional int64 currsessionendts = 13 [default = 0];
  bool has_currsessionendts() const;
  void clear_currsessionendts();
  static const int kCurrsessionendtsFieldNumber = 13;
  ::google::protobuf::int64 currsessionendts() const;
  void set_currsessionendts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.OCSData)
 private:
  inline void set_has_initflag();
  inline void clear_has_initflag();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_currmktts();
  inline void clear_has_currmktts();
  inline void set_has_currsessionidx();
  inline void clear_has_currsessionidx();
  inline void set_has_currsessionbegints();
  inline void clear_has_currsessionbegints();
  inline void set_has_currsessionendts();
  inline void clear_has_currsessionendts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 initflag_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int64 currmktts_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int32 currsessionidx_;
  ::google::protobuf::int64 currsessionbegints_;
  ::google::protobuf::int64 currsessionendts_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OCSData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PortfolioCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PortfolioCfgData) */ {
 public:
  PortfolioCfgData();
  virtual ~PortfolioCfgData();

  PortfolioCfgData(const PortfolioCfgData& from);

  inline PortfolioCfgData& operator=(const PortfolioCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PortfolioCfgData& default_instance();

  void Swap(PortfolioCfgData* other);

  // implements Message ----------------------------------------------

  inline PortfolioCfgData* New() const { return New(NULL); }

  PortfolioCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PortfolioCfgData& from);
  void MergeFrom(const PortfolioCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PortfolioCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instr = 1 [default = ""];
  bool has_instr() const;
  void clear_instr();
  static const int kInstrFieldNumber = 1;
  const ::std::string& instr() const;
  void set_instr(const ::std::string& value);
  void set_instr(const char* value);
  void set_instr(const char* value, size_t size);
  ::std::string* mutable_instr();
  ::std::string* release_instr();
  void set_allocated_instr(::std::string* instr);

  // optional string ocs = 2 [default = ""];
  bool has_ocs() const;
  void clear_ocs();
  static const int kOcsFieldNumber = 2;
  const ::std::string& ocs() const;
  void set_ocs(const ::std::string& value);
  void set_ocs(const char* value);
  void set_ocs(const char* value, size_t size);
  ::std::string* mutable_ocs();
  ::std::string* release_ocs();
  void set_allocated_ocs(::std::string* ocs);

  // optional string fc = 3 [default = ""];
  bool has_fc() const;
  void clear_fc();
  static const int kFcFieldNumber = 3;
  const ::std::string& fc() const;
  void set_fc(const ::std::string& value);
  void set_fc(const char* value);
  void set_fc(const char* value, size_t size);
  ::std::string* mutable_fc();
  ::std::string* release_fc();
  void set_allocated_fc(::std::string* fc);

  // @@protoc_insertion_point(class_scope:XT.PortfolioCfgData)
 private:
  inline void set_has_instr();
  inline void clear_has_instr();
  inline void set_has_ocs();
  inline void clear_has_ocs();
  inline void set_has_fc();
  inline void clear_has_fc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instr_;
  ::google::protobuf::internal::ArenaStringPtr ocs_;
  ::google::protobuf::internal::ArenaStringPtr fc_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PortfolioCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PortfolioData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PortfolioData) */ {
 public:
  PortfolioData();
  virtual ~PortfolioData();

  PortfolioData(const PortfolioData& from);

  inline PortfolioData& operator=(const PortfolioData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PortfolioData& default_instance();

  void Swap(PortfolioData* other);

  // implements Message ----------------------------------------------

  inline PortfolioData* New() const { return New(NULL); }

  PortfolioData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PortfolioData& from);
  void MergeFrom(const PortfolioData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PortfolioData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double rpnlcurr = 11 [default = 0];
  bool has_rpnlcurr() const;
  void clear_rpnlcurr();
  static const int kRpnlcurrFieldNumber = 11;
  double rpnlcurr() const;
  void set_rpnlcurr(double value);

  // optional double upnlcurr = 12 [default = 0];
  bool has_upnlcurr() const;
  void clear_upnlcurr();
  static const int kUpnlcurrFieldNumber = 12;
  double upnlcurr() const;
  void set_upnlcurr(double value);

  // optional double rpnlprev = 13 [default = 0];
  bool has_rpnlprev() const;
  void clear_rpnlprev();
  static const int kRpnlprevFieldNumber = 13;
  double rpnlprev() const;
  void set_rpnlprev(double value);

  // optional double upnlprev = 14 [default = 0];
  bool has_upnlprev() const;
  void clear_upnlprev();
  static const int kUpnlprevFieldNumber = 14;
  double upnlprev() const;
  void set_upnlprev(double value);

  // optional double rpnl = 15 [default = 0];
  bool has_rpnl() const;
  void clear_rpnl();
  static const int kRpnlFieldNumber = 15;
  double rpnl() const;
  void set_rpnl(double value);

  // optional double upnl = 16 [default = 0];
  bool has_upnl() const;
  void clear_upnl();
  static const int kUpnlFieldNumber = 16;
  double upnl() const;
  void set_upnl(double value);

  // @@protoc_insertion_point(class_scope:XT.PortfolioData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rpnlcurr();
  inline void clear_has_rpnlcurr();
  inline void set_has_upnlcurr();
  inline void clear_has_upnlcurr();
  inline void set_has_rpnlprev();
  inline void clear_has_rpnlprev();
  inline void set_has_upnlprev();
  inline void clear_has_upnlprev();
  inline void set_has_rpnl();
  inline void clear_has_rpnl();
  inline void set_has_upnl();
  inline void clear_has_upnl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double rpnlcurr_;
  double upnlcurr_;
  double rpnlprev_;
  double upnlprev_;
  double rpnl_;
  double upnl_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PortfolioData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PICfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PICfgData) */ {
 public:
  PICfgData();
  virtual ~PICfgData();

  PICfgData(const PICfgData& from);

  inline PICfgData& operator=(const PICfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PICfgData& default_instance();

  void Swap(PICfgData* other);

  // implements Message ----------------------------------------------

  inline PICfgData* New() const { return New(NULL); }

  PICfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PICfgData& from);
  void MergeFrom(const PICfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PICfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional double deltanormmax = 1 [default = 0];
  bool has_deltanormmax() const;
  void clear_deltanormmax();
  static const int kDeltanormmaxFieldNumber = 1;
  double deltanormmax() const;
  void set_deltanormmax(double value);

  // map<string, string> namestrmap = 30;
  int namestrmap_size() const;
  void clear_namestrmap();
  static const int kNamestrmapFieldNumber = 30;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      namestrmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_namestrmap();

  // @@protoc_insertion_point(class_scope:XT.PICfgData)
 private:
  inline void set_has_deltanormmax();
  inline void clear_has_deltanormmax();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double deltanormmax_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      PICfgData_NamestrmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > namestrmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PICfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PIData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PIData) */ {
 public:
  PIData();
  virtual ~PIData();

  PIData(const PIData& from);

  inline PIData& operator=(const PIData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PIData& default_instance();

  void Swap(PIData* other);

  // implements Message ----------------------------------------------

  inline PIData* New() const { return New(NULL); }

  PIData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PIData& from);
  void MergeFrom(const PIData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PIData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string product = 2 [default = ""];
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 2;
  const ::std::string& product() const;
  void set_product(const ::std::string& value);
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  ::std::string* mutable_product();
  ::std::string* release_product();
  void set_allocated_product(::std::string* product);

  // optional int32 tradingday = 3 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 3;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 4 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 4;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int64 currmktts = 5 [default = 0];
  bool has_currmktts() const;
  void clear_currmktts();
  static const int kCurrmkttsFieldNumber = 5;
  ::google::protobuf::int64 currmktts() const;
  void set_currmktts(::google::protobuf::int64 value);

  // optional int32 currsessionidx = 6 [default = 0];
  bool has_currsessionidx() const;
  void clear_currsessionidx();
  static const int kCurrsessionidxFieldNumber = 6;
  ::google::protobuf::int32 currsessionidx() const;
  void set_currsessionidx(::google::protobuf::int32 value);

  // optional int64 currsessionbegints = 7 [default = 0];
  bool has_currsessionbegints() const;
  void clear_currsessionbegints();
  static const int kCurrsessionbegintsFieldNumber = 7;
  ::google::protobuf::int64 currsessionbegints() const;
  void set_currsessionbegints(::google::protobuf::int64 value);

  // optional int64 currsessionendts = 8 [default = 0];
  bool has_currsessionendts() const;
  void clear_currsessionendts();
  static const int kCurrsessionendtsFieldNumber = 8;
  ::google::protobuf::int64 currsessionendts() const;
  void set_currsessionendts(::google::protobuf::int64 value);

  // map<int32, double> tagdoublemap = 30;
  int tagdoublemap_size() const;
  void clear_tagdoublemap();
  static const int kTagdoublemapFieldNumber = 30;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      tagdoublemap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_tagdoublemap();

  // map<int32, int32> tagintmap = 31;
  int tagintmap_size() const;
  void clear_tagintmap();
  static const int kTagintmapFieldNumber = 31;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      tagintmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_tagintmap();

  // @@protoc_insertion_point(class_scope:XT.PIData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_product();
  inline void clear_has_product();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_currmktts();
  inline void clear_has_currmktts();
  inline void set_has_currsessionidx();
  inline void clear_has_currsessionidx();
  inline void set_has_currsessionbegints();
  inline void clear_has_currsessionbegints();
  inline void set_has_currsessionendts();
  inline void clear_has_currsessionendts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr product_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 prevtradingday_;
  ::google::protobuf::int64 currmktts_;
  ::google::protobuf::int64 currsessionbegints_;
  ::google::protobuf::int64 currsessionendts_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      PIData_TagdoublemapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > tagdoublemap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      PIData_TagintmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tagintmap_;
  ::google::protobuf::int32 currsessionidx_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PIData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrderMgrData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrderMgrData) */ {
 public:
  OrderMgrData();
  virtual ~OrderMgrData();

  OrderMgrData(const OrderMgrData& from);

  inline OrderMgrData& operator=(const OrderMgrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderMgrData& default_instance();

  void Swap(OrderMgrData* other);

  // implements Message ----------------------------------------------

  inline OrderMgrData* New() const { return New(NULL); }

  OrderMgrData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderMgrData& from);
  void MergeFrom(const OrderMgrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderMgrData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 orderpoolsz = 1 [default = 128];
  bool has_orderpoolsz() const;
  void clear_orderpoolsz();
  static const int kOrderpoolszFieldNumber = 1;
  ::google::protobuf::int32 orderpoolsz() const;
  void set_orderpoolsz(::google::protobuf::int32 value);

  // optional int32 quotepoolsz = 2 [default = 0];
  bool has_quotepoolsz() const;
  void clear_quotepoolsz();
  static const int kQuotepoolszFieldNumber = 2;
  ::google::protobuf::int32 quotepoolsz() const;
  void set_quotepoolsz(::google::protobuf::int32 value);

  // optional int32 numorderssent = 3 [default = 0];
  bool has_numorderssent() const;
  void clear_numorderssent();
  static const int kNumorderssentFieldNumber = 3;
  ::google::protobuf::int32 numorderssent() const;
  void set_numorderssent(::google::protobuf::int32 value);

  // optional int32 numorderssentrejected = 4 [default = 0];
  bool has_numorderssentrejected() const;
  void clear_numorderssentrejected();
  static const int kNumorderssentrejectedFieldNumber = 4;
  ::google::protobuf::int32 numorderssentrejected() const;
  void set_numorderssentrejected(::google::protobuf::int32 value);

  // optional int32 numorderscxlsent = 5 [default = 0];
  bool has_numorderscxlsent() const;
  void clear_numorderscxlsent();
  static const int kNumorderscxlsentFieldNumber = 5;
  ::google::protobuf::int32 numorderscxlsent() const;
  void set_numorderscxlsent(::google::protobuf::int32 value);

  // optional int32 numorderscxlrejected = 6 [default = 0];
  bool has_numorderscxlrejected() const;
  void clear_numorderscxlrejected();
  static const int kNumorderscxlrejectedFieldNumber = 6;
  ::google::protobuf::int32 numorderscxlrejected() const;
  void set_numorderscxlrejected(::google::protobuf::int32 value);

  // optional int32 numquotessent = 7 [default = 0];
  bool has_numquotessent() const;
  void clear_numquotessent();
  static const int kNumquotessentFieldNumber = 7;
  ::google::protobuf::int32 numquotessent() const;
  void set_numquotessent(::google::protobuf::int32 value);

  // optional int32 numquotessentrejected = 8 [default = 0];
  bool has_numquotessentrejected() const;
  void clear_numquotessentrejected();
  static const int kNumquotessentrejectedFieldNumber = 8;
  ::google::protobuf::int32 numquotessentrejected() const;
  void set_numquotessentrejected(::google::protobuf::int32 value);

  // optional int32 numquotescxlsent = 9 [default = 0];
  bool has_numquotescxlsent() const;
  void clear_numquotescxlsent();
  static const int kNumquotescxlsentFieldNumber = 9;
  ::google::protobuf::int32 numquotescxlsent() const;
  void set_numquotescxlsent(::google::protobuf::int32 value);

  // optional int32 numquotescxlrejected = 10 [default = 0];
  bool has_numquotescxlrejected() const;
  void clear_numquotescxlrejected();
  static const int kNumquotescxlrejectedFieldNumber = 10;
  ::google::protobuf::int32 numquotescxlrejected() const;
  void set_numquotescxlrejected(::google::protobuf::int32 value);

  // optional int64 tssuspend = 11 [default = 0];
  bool has_tssuspend() const;
  void clear_tssuspend();
  static const int kTssuspendFieldNumber = 11;
  ::google::protobuf::int64 tssuspend() const;
  void set_tssuspend(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.OrderMgrData)
 private:
  inline void set_has_orderpoolsz();
  inline void clear_has_orderpoolsz();
  inline void set_has_quotepoolsz();
  inline void clear_has_quotepoolsz();
  inline void set_has_numorderssent();
  inline void clear_has_numorderssent();
  inline void set_has_numorderssentrejected();
  inline void clear_has_numorderssentrejected();
  inline void set_has_numorderscxlsent();
  inline void clear_has_numorderscxlsent();
  inline void set_has_numorderscxlrejected();
  inline void clear_has_numorderscxlrejected();
  inline void set_has_numquotessent();
  inline void clear_has_numquotessent();
  inline void set_has_numquotessentrejected();
  inline void clear_has_numquotessentrejected();
  inline void set_has_numquotescxlsent();
  inline void clear_has_numquotescxlsent();
  inline void set_has_numquotescxlrejected();
  inline void clear_has_numquotescxlrejected();
  inline void set_has_tssuspend();
  inline void clear_has_tssuspend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 orderpoolsz_;
  ::google::protobuf::int32 quotepoolsz_;
  ::google::protobuf::int32 numorderssent_;
  ::google::protobuf::int32 numorderssentrejected_;
  ::google::protobuf::int32 numorderscxlsent_;
  ::google::protobuf::int32 numorderscxlrejected_;
  ::google::protobuf::int32 numquotessent_;
  ::google::protobuf::int32 numquotessentrejected_;
  ::google::protobuf::int32 numquotescxlsent_;
  ::google::protobuf::int32 numquotescxlrejected_;
  ::google::protobuf::int64 tssuspend_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrderMgrData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrderMgrCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrderMgrCfgData) */ {
 public:
  OrderMgrCfgData();
  virtual ~OrderMgrCfgData();

  OrderMgrCfgData(const OrderMgrCfgData& from);

  inline OrderMgrCfgData& operator=(const OrderMgrCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderMgrCfgData& default_instance();

  void Swap(OrderMgrCfgData* other);

  // implements Message ----------------------------------------------

  inline OrderMgrCfgData* New() const { return New(NULL); }

  OrderMgrCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderMgrCfgData& from);
  void MergeFrom(const OrderMgrCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderMgrCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 orderpoolszstep = 1 [default = 128];
  bool has_orderpoolszstep() const;
  void clear_orderpoolszstep();
  static const int kOrderpoolszstepFieldNumber = 1;
  ::google::protobuf::int32 orderpoolszstep() const;
  void set_orderpoolszstep(::google::protobuf::int32 value);

  // optional int32 orderpoolszmax = 2 [default = 4096];
  bool has_orderpoolszmax() const;
  void clear_orderpoolszmax();
  static const int kOrderpoolszmaxFieldNumber = 2;
  ::google::protobuf::int32 orderpoolszmax() const;
  void set_orderpoolszmax(::google::protobuf::int32 value);

  // optional int32 quotepoolszstep = 3 [default = 128];
  bool has_quotepoolszstep() const;
  void clear_quotepoolszstep();
  static const int kQuotepoolszstepFieldNumber = 3;
  ::google::protobuf::int32 quotepoolszstep() const;
  void set_quotepoolszstep(::google::protobuf::int32 value);

  // optional int32 quotepoolszmax = 4 [default = 4096];
  bool has_quotepoolszmax() const;
  void clear_quotepoolszmax();
  static const int kQuotepoolszmaxFieldNumber = 4;
  ::google::protobuf::int32 quotepoolszmax() const;
  void set_quotepoolszmax(::google::protobuf::int32 value);

  // optional int32 maxreqpersec = 5 [default = 498];
  bool has_maxreqpersec() const;
  void clear_maxreqpersec();
  static const int kMaxreqpersecFieldNumber = 5;
  ::google::protobuf::int32 maxreqpersec() const;
  void set_maxreqpersec(::google::protobuf::int32 value);

  // optional int32 maxfemasreqpersec = 6 [default = 123];
  bool has_maxfemasreqpersec() const;
  void clear_maxfemasreqpersec();
  static const int kMaxfemasreqpersecFieldNumber = 6;
  ::google::protobuf::int32 maxfemasreqpersec() const;
  void set_maxfemasreqpersec(::google::protobuf::int32 value);

  // optional int32 maxorderssent = 7 [default = 0];
  bool has_maxorderssent() const;
  void clear_maxorderssent();
  static const int kMaxorderssentFieldNumber = 7;
  ::google::protobuf::int32 maxorderssent() const;
  void set_maxorderssent(::google::protobuf::int32 value);

  // optional int32 maxorderscxled = 8 [default = 0];
  bool has_maxorderscxled() const;
  void clear_maxorderscxled();
  static const int kMaxorderscxledFieldNumber = 8;
  ::google::protobuf::int32 maxorderscxled() const;
  void set_maxorderscxled(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.OrderMgrCfgData)
 private:
  inline void set_has_orderpoolszstep();
  inline void clear_has_orderpoolszstep();
  inline void set_has_orderpoolszmax();
  inline void clear_has_orderpoolszmax();
  inline void set_has_quotepoolszstep();
  inline void clear_has_quotepoolszstep();
  inline void set_has_quotepoolszmax();
  inline void clear_has_quotepoolszmax();
  inline void set_has_maxreqpersec();
  inline void clear_has_maxreqpersec();
  inline void set_has_maxfemasreqpersec();
  inline void clear_has_maxfemasreqpersec();
  inline void set_has_maxorderssent();
  inline void clear_has_maxorderssent();
  inline void set_has_maxorderscxled();
  inline void clear_has_maxorderscxled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 orderpoolszstep_;
  ::google::protobuf::int32 orderpoolszmax_;
  ::google::protobuf::int32 quotepoolszstep_;
  ::google::protobuf::int32 quotepoolszmax_;
  ::google::protobuf::int32 maxreqpersec_;
  ::google::protobuf::int32 maxfemasreqpersec_;
  ::google::protobuf::int32 maxorderssent_;
  ::google::protobuf::int32 maxorderscxled_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrderMgrCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ForQuoteMgrCfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ForQuoteMgrCfgData) */ {
 public:
  ForQuoteMgrCfgData();
  virtual ~ForQuoteMgrCfgData();

  ForQuoteMgrCfgData(const ForQuoteMgrCfgData& from);

  inline ForQuoteMgrCfgData& operator=(const ForQuoteMgrCfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForQuoteMgrCfgData& default_instance();

  void Swap(ForQuoteMgrCfgData* other);

  // implements Message ----------------------------------------------

  inline ForQuoteMgrCfgData* New() const { return New(NULL); }

  ForQuoteMgrCfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForQuoteMgrCfgData& from);
  void MergeFrom(const ForQuoteMgrCfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForQuoteMgrCfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rspwaitingseconds = 1 [default = 5];
  bool has_rspwaitingseconds() const;
  void clear_rspwaitingseconds();
  static const int kRspwaitingsecondsFieldNumber = 1;
  ::google::protobuf::int32 rspwaitingseconds() const;
  void set_rspwaitingseconds(::google::protobuf::int32 value);

  // optional int32 maxqueuesz = 2 [default = 4096];
  bool has_maxqueuesz() const;
  void clear_maxqueuesz();
  static const int kMaxqueueszFieldNumber = 2;
  ::google::protobuf::int32 maxqueuesz() const;
  void set_maxqueuesz(::google::protobuf::int32 value);

  // optional int32 maxwaitingseconds = 3 [default = 20];
  bool has_maxwaitingseconds() const;
  void clear_maxwaitingseconds();
  static const int kMaxwaitingsecondsFieldNumber = 3;
  ::google::protobuf::int32 maxwaitingseconds() const;
  void set_maxwaitingseconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.ForQuoteMgrCfgData)
 private:
  inline void set_has_rspwaitingseconds();
  inline void clear_has_rspwaitingseconds();
  inline void set_has_maxqueuesz();
  inline void clear_has_maxqueuesz();
  inline void set_has_maxwaitingseconds();
  inline void clear_has_maxwaitingseconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rspwaitingseconds_;
  ::google::protobuf::int32 maxqueuesz_;
  ::google::protobuf::int32 maxwaitingseconds_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ForQuoteMgrCfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API CfgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.CfgData) */ {
 public:
  CfgData();
  virtual ~CfgData();

  CfgData(const CfgData& from);

  inline CfgData& operator=(const CfgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CfgData& default_instance();

  void Swap(CfgData* other);

  // implements Message ----------------------------------------------

  inline CfgData* New() const { return New(NULL); }

  CfgData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CfgData& from);
  void MergeFrom(const CfgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CfgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .XT.StratCfgData> stratcfgmap = 1;
  int stratcfgmap_size() const;
  void clear_stratcfgmap();
  static const int kStratcfgmapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::XT::StratCfgData >&
      stratcfgmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::StratCfgData >*
      mutable_stratcfgmap();

  // map<string, .XT.PICfgData> picfgmap = 2;
  int picfgmap_size() const;
  void clear_picfgmap();
  static const int kPicfgmapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::XT::PICfgData >&
      picfgmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::PICfgData >*
      mutable_picfgmap();

  // map<string, .XT.OCCfgData> occfgmap = 3;
  int occfgmap_size() const;
  void clear_occfgmap();
  static const int kOccfgmapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::XT::OCCfgData >&
      occfgmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::OCCfgData >*
      mutable_occfgmap();

  // map<string, .XT.FCCfgData> fccfgmap = 4;
  int fccfgmap_size() const;
  void clear_fccfgmap();
  static const int kFccfgmapFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::XT::FCCfgData >&
      fccfgmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::FCCfgData >*
      mutable_fccfgmap();

  // map<string, .XT.InstrCfgData> instrcfgmap = 5;
  int instrcfgmap_size() const;
  void clear_instrcfgmap();
  static const int kInstrcfgmapFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::XT::InstrCfgData >&
      instrcfgmap() const;
  ::google::protobuf::Map< ::std::string, ::XT::InstrCfgData >*
      mutable_instrcfgmap();

  // @@protoc_insertion_point(class_scope:XT.CfgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::StratCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      CfgData_StratcfgmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::StratCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > stratcfgmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::PICfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      CfgData_PicfgmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::PICfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > picfgmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::OCCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      CfgData_OccfgmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::OCCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > occfgmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::FCCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      CfgData_FccfgmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::FCCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > fccfgmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::XT::InstrCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      CfgData_InstrcfgmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::XT::InstrCfgData,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > instrcfgmap_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static CfgData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ExchangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ExchangeInfo) */ {
 public:
  ExchangeInfo();
  virtual ~ExchangeInfo();

  ExchangeInfo(const ExchangeInfo& from);

  inline ExchangeInfo& operator=(const ExchangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeInfo& default_instance();

  void Swap(ExchangeInfo* other);

  // implements Message ----------------------------------------------

  inline ExchangeInfo* New() const { return New(NULL); }

  ExchangeInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeInfo& from);
  void MergeFrom(const ExchangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExchangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exchid = 1;
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 1;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional int32 exchtype = 2;
  bool has_exchtype() const;
  void clear_exchtype();
  static const int kExchtypeFieldNumber = 2;
  ::google::protobuf::int32 exchtype() const;
  void set_exchtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.ExchangeInfo)
 private:
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_exchtype();
  inline void clear_has_exchtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::int32 exchtype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ExchangeInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API FillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.FillInfo) */ {
 public:
  FillInfo();
  virtual ~FillInfo();

  FillInfo(const FillInfo& from);

  inline FillInfo& operator=(const FillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FillInfo& default_instance();

  void Swap(FillInfo* other);

  // implements Message ----------------------------------------------

  inline FillInfo* New() const { return New(NULL); }

  FillInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FillInfo& from);
  void MergeFrom(const FillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional int64 ts = 2 [default = 0];
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // optional int32 orderid = 3 [default = 0];
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int32 orderid() const;
  void set_orderid(::google::protobuf::int32 value);

  // optional int32 bstype = 4 [default = 0];
  bool has_bstype() const;
  void clear_bstype();
  static const int kBstypeFieldNumber = 4;
  ::google::protobuf::int32 bstype() const;
  void set_bstype(::google::protobuf::int32 value);

  // optional double px = 5 [default = 0];
  bool has_px() const;
  void clear_px();
  static const int kPxFieldNumber = 5;
  double px() const;
  void set_px(double value);

  // optional int64 sz = 6 [default = 0];
  bool has_sz() const;
  void clear_sz();
  static const int kSzFieldNumber = 6;
  ::google::protobuf::int64 sz() const;
  void set_sz(::google::protobuf::int64 value);

  // optional int32 ocflag = 7 [default = 0];
  bool has_ocflag() const;
  void clear_ocflag();
  static const int kOcflagFieldNumber = 7;
  ::google::protobuf::int32 ocflag() const;
  void set_ocflag(::google::protobuf::int32 value);

  // optional int32 flag = 8 [default = 0];
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 8;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.FillInfo)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_bstype();
  inline void clear_has_bstype();
  inline void set_has_px();
  inline void clear_has_px();
  inline void set_has_sz();
  inline void clear_has_sz();
  inline void set_has_ocflag();
  inline void clear_has_ocflag();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int32 orderid_;
  ::google::protobuf::int32 bstype_;
  double px_;
  ::google::protobuf::int64 sz_;
  ::google::protobuf::int32 ocflag_;
  ::google::protobuf::int32 flag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static FillInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API FillStatData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.FillStatData) */ {
 public:
  FillStatData();
  virtual ~FillStatData();

  FillStatData(const FillStatData& from);

  inline FillStatData& operator=(const FillStatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FillStatData& default_instance();

  void Swap(FillStatData* other);

  // implements Message ----------------------------------------------

  inline FillStatData* New() const { return New(NULL); }

  FillStatData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FillStatData& from);
  void MergeFrom(const FillStatData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FillStatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double buypxvolume = 1 [default = 0];
  bool has_buypxvolume() const;
  void clear_buypxvolume();
  static const int kBuypxvolumeFieldNumber = 1;
  double buypxvolume() const;
  void set_buypxvolume(double value);

  // optional double sellpxvolume = 2 [default = 0];
  bool has_sellpxvolume() const;
  void clear_sellpxvolume();
  static const int kSellpxvolumeFieldNumber = 2;
  double sellpxvolume() const;
  void set_sellpxvolume(double value);

  // optional int64 buyvolume = 3 [default = 0];
  bool has_buyvolume() const;
  void clear_buyvolume();
  static const int kBuyvolumeFieldNumber = 3;
  ::google::protobuf::int64 buyvolume() const;
  void set_buyvolume(::google::protobuf::int64 value);

  // optional int64 sellvolume = 4 [default = 0];
  bool has_sellvolume() const;
  void clear_sellvolume();
  static const int kSellvolumeFieldNumber = 4;
  ::google::protobuf::int64 sellvolume() const;
  void set_sellvolume(::google::protobuf::int64 value);

  // optional double rpxpnl = 5 [default = 0];
  bool has_rpxpnl() const;
  void clear_rpxpnl();
  static const int kRpxpnlFieldNumber = 5;
  double rpxpnl() const;
  void set_rpxpnl(double value);

  // optional double poscost = 6 [default = 0];
  bool has_poscost() const;
  void clear_poscost();
  static const int kPoscostFieldNumber = 6;
  double poscost() const;
  void set_poscost(double value);

  // optional int64 netpos = 7 [default = 0];
  bool has_netpos() const;
  void clear_netpos();
  static const int kNetposFieldNumber = 7;
  ::google::protobuf::int64 netpos() const;
  void set_netpos(::google::protobuf::int64 value);

  // optional int64 netposprev = 8 [default = 0];
  bool has_netposprev() const;
  void clear_netposprev();
  static const int kNetposprevFieldNumber = 8;
  ::google::protobuf::int64 netposprev() const;
  void set_netposprev(::google::protobuf::int64 value);

  // optional int64 netposnew = 9 [default = 0];
  bool has_netposnew() const;
  void clear_netposnew();
  static const int kNetposnewFieldNumber = 9;
  ::google::protobuf::int64 netposnew() const;
  void set_netposnew(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.FillStatData)
 private:
  inline void set_has_buypxvolume();
  inline void clear_has_buypxvolume();
  inline void set_has_sellpxvolume();
  inline void clear_has_sellpxvolume();
  inline void set_has_buyvolume();
  inline void clear_has_buyvolume();
  inline void set_has_sellvolume();
  inline void clear_has_sellvolume();
  inline void set_has_rpxpnl();
  inline void clear_has_rpxpnl();
  inline void set_has_poscost();
  inline void clear_has_poscost();
  inline void set_has_netpos();
  inline void clear_has_netpos();
  inline void set_has_netposprev();
  inline void clear_has_netposprev();
  inline void set_has_netposnew();
  inline void clear_has_netposnew();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double buypxvolume_;
  double sellpxvolume_;
  ::google::protobuf::int64 buyvolume_;
  ::google::protobuf::int64 sellvolume_;
  double rpxpnl_;
  double poscost_;
  ::google::protobuf::int64 netpos_;
  ::google::protobuf::int64 netposprev_;
  ::google::protobuf::int64 netposnew_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static FillStatData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API RequestIdData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.RequestIdData) */ {
 public:
  RequestIdData();
  virtual ~RequestIdData();

  RequestIdData(const RequestIdData& from);

  inline RequestIdData& operator=(const RequestIdData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestIdData& default_instance();

  void Swap(RequestIdData* other);

  // implements Message ----------------------------------------------

  inline RequestIdData* New() const { return New(NULL); }

  RequestIdData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestIdData& from);
  void MergeFrom(const RequestIdData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestIdData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idtype = 1 [default = 0];
  bool has_idtype() const;
  void clear_idtype();
  static const int kIdtypeFieldNumber = 1;
  ::google::protobuf::int32 idtype() const;
  void set_idtype(::google::protobuf::int32 value);

  // optional int64 reqidbase = 2 [default = 0];
  bool has_reqidbase() const;
  void clear_reqidbase();
  static const int kReqidbaseFieldNumber = 2;
  ::google::protobuf::int64 reqidbase() const;
  void set_reqidbase(::google::protobuf::int64 value);

  // optional int32 currinttime = 3 [default = 0];
  bool has_currinttime() const;
  void clear_currinttime();
  static const int kCurrinttimeFieldNumber = 3;
  ::google::protobuf::int32 currinttime() const;
  void set_currinttime(::google::protobuf::int32 value);

  // optional int32 previnttime = 4 [default = 0];
  bool has_previnttime() const;
  void clear_previnttime();
  static const int kPrevinttimeFieldNumber = 4;
  ::google::protobuf::int32 previnttime() const;
  void set_previnttime(::google::protobuf::int32 value);

  // optional int64 currtssec = 5 [default = 0];
  bool has_currtssec() const;
  void clear_currtssec();
  static const int kCurrtssecFieldNumber = 5;
  ::google::protobuf::int64 currtssec() const;
  void set_currtssec(::google::protobuf::int64 value);

  // optional int64 prevtssec = 6 [default = 0];
  bool has_prevtssec() const;
  void clear_prevtssec();
  static const int kPrevtssecFieldNumber = 6;
  ::google::protobuf::int64 prevtssec() const;
  void set_prevtssec(::google::protobuf::int64 value);

  // optional int32 currreqidinsec = 7 [default = 0];
  bool has_currreqidinsec() const;
  void clear_currreqidinsec();
  static const int kCurrreqidinsecFieldNumber = 7;
  ::google::protobuf::int32 currreqidinsec() const;
  void set_currreqidinsec(::google::protobuf::int32 value);

  // optional int32 maxreqidinsec = 8 [default = 800];
  bool has_maxreqidinsec() const;
  void clear_maxreqidinsec();
  static const int kMaxreqidinsecFieldNumber = 8;
  ::google::protobuf::int32 maxreqidinsec() const;
  void set_maxreqidinsec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.RequestIdData)
 private:
  inline void set_has_idtype();
  inline void clear_has_idtype();
  inline void set_has_reqidbase();
  inline void clear_has_reqidbase();
  inline void set_has_currinttime();
  inline void clear_has_currinttime();
  inline void set_has_previnttime();
  inline void clear_has_previnttime();
  inline void set_has_currtssec();
  inline void clear_has_currtssec();
  inline void set_has_prevtssec();
  inline void clear_has_prevtssec();
  inline void set_has_currreqidinsec();
  inline void clear_has_currreqidinsec();
  inline void set_has_maxreqidinsec();
  inline void clear_has_maxreqidinsec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 reqidbase_;
  ::google::protobuf::int32 idtype_;
  ::google::protobuf::int32 currinttime_;
  ::google::protobuf::int64 currtssec_;
  ::google::protobuf::int32 previnttime_;
  ::google::protobuf::int32 currreqidinsec_;
  ::google::protobuf::int64 prevtssec_;
  ::google::protobuf::int32 maxreqidinsec_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static RequestIdData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrderInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrderInfo) */ {
 public:
  OrderInfo();
  virtual ~OrderInfo();

  OrderInfo(const OrderInfo& from);

  inline OrderInfo& operator=(const OrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderInfo& default_instance();

  void Swap(OrderInfo* other);

  // implements Message ----------------------------------------------

  inline OrderInfo* New() const { return New(NULL); }

  OrderInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderInfo& from);
  void MergeFrom(const OrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional int32 iid = 2 [default = 0];
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 2;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 orderid = 3 [default = 0];
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int32 orderid() const;
  void set_orderid(::google::protobuf::int32 value);

  // optional int32 qid = 4 [default = 0];
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 4;
  ::google::protobuf::int32 qid() const;
  void set_qid(::google::protobuf::int32 value);

  // optional int32 bstype = 5 [default = 0];
  bool has_bstype() const;
  void clear_bstype();
  static const int kBstypeFieldNumber = 5;
  ::google::protobuf::int32 bstype() const;
  void set_bstype(::google::protobuf::int32 value);

  // optional double px = 6 [default = 0];
  bool has_px() const;
  void clear_px();
  static const int kPxFieldNumber = 6;
  double px() const;
  void set_px(double value);

  // optional int64 origsz = 7 [default = 0];
  bool has_origsz() const;
  void clear_origsz();
  static const int kOrigszFieldNumber = 7;
  ::google::protobuf::int64 origsz() const;
  void set_origsz(::google::protobuf::int64 value);

  // optional int64 opensz = 8 [default = 0];
  bool has_opensz() const;
  void clear_opensz();
  static const int kOpenszFieldNumber = 8;
  ::google::protobuf::int64 opensz() const;
  void set_opensz(::google::protobuf::int64 value);

  // optional int64 filledsz = 9 [default = 0];
  bool has_filledsz() const;
  void clear_filledsz();
  static const int kFilledszFieldNumber = 9;
  ::google::protobuf::int64 filledsz() const;
  void set_filledsz(::google::protobuf::int64 value);

  // optional int32 trdapi = 10 [default = 0];
  bool has_trdapi() const;
  void clear_trdapi();
  static const int kTrdapiFieldNumber = 10;
  ::google::protobuf::int32 trdapi() const;
  void set_trdapi(::google::protobuf::int32 value);

  // optional int32 ordertype = 11 [default = 0];
  bool has_ordertype() const;
  void clear_ordertype();
  static const int kOrdertypeFieldNumber = 11;
  ::google::protobuf::int32 ordertype() const;
  void set_ordertype(::google::protobuf::int32 value);

  // optional int32 status = 12 [default = 0];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 12;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 coupleoid = 13 [default = 0];
  bool has_coupleoid() const;
  void clear_coupleoid();
  static const int kCoupleoidFieldNumber = 13;
  ::google::protobuf::int32 coupleoid() const;
  void set_coupleoid(::google::protobuf::int32 value);

  // optional int64 oid64 = 14 [default = 0];
  bool has_oid64() const;
  void clear_oid64();
  static const int kOid64FieldNumber = 14;
  ::google::protobuf::int64 oid64() const;
  void set_oid64(::google::protobuf::int64 value);

  // optional string gtwystrid = 15 [default = ""];
  bool has_gtwystrid() const;
  void clear_gtwystrid();
  static const int kGtwystridFieldNumber = 15;
  const ::std::string& gtwystrid() const;
  void set_gtwystrid(const ::std::string& value);
  void set_gtwystrid(const char* value);
  void set_gtwystrid(const char* value, size_t size);
  ::std::string* mutable_gtwystrid();
  ::std::string* release_gtwystrid();
  void set_allocated_gtwystrid(::std::string* gtwystrid);

  // optional string exchstrid = 16 [default = ""];
  bool has_exchstrid() const;
  void clear_exchstrid();
  static const int kExchstridFieldNumber = 16;
  const ::std::string& exchstrid() const;
  void set_exchstrid(const ::std::string& value);
  void set_exchstrid(const char* value);
  void set_exchstrid(const char* value, size_t size);
  ::std::string* mutable_exchstrid();
  ::std::string* release_exchstrid();
  void set_allocated_exchstrid(::std::string* exchstrid);

  // optional string localstrid = 17 [default = ""];
  bool has_localstrid() const;
  void clear_localstrid();
  static const int kLocalstridFieldNumber = 17;
  const ::std::string& localstrid() const;
  void set_localstrid(const ::std::string& value);
  void set_localstrid(const char* value);
  void set_localstrid(const char* value, size_t size);
  ::std::string* mutable_localstrid();
  ::std::string* release_localstrid();
  void set_allocated_localstrid(::std::string* localstrid);

  // optional int32 stratflag = 20 [default = 0];
  bool has_stratflag() const;
  void clear_stratflag();
  static const int kStratflagFieldNumber = 20;
  ::google::protobuf::int32 stratflag() const;
  void set_stratflag(::google::protobuf::int32 value);

  // optional int32 ocflag = 21 [default = 0];
  bool has_ocflag() const;
  void clear_ocflag();
  static const int kOcflagFieldNumber = 21;
  ::google::protobuf::int32 ocflag() const;
  void set_ocflag(::google::protobuf::int32 value);

  // optional int32 ocflagautotype = 22 [default = 0];
  bool has_ocflagautotype() const;
  void clear_ocflagautotype();
  static const int kOcflagautotypeFieldNumber = 22;
  ::google::protobuf::int32 ocflagautotype() const;
  void set_ocflagautotype(::google::protobuf::int32 value);

  // optional int32 ocflagautothresh = 23 [default = 0];
  bool has_ocflagautothresh() const;
  void clear_ocflagautothresh();
  static const int kOcflagautothreshFieldNumber = 23;
  ::google::protobuf::int32 ocflagautothresh() const;
  void set_ocflagautothresh(::google::protobuf::int32 value);

  // optional int32 oqrtypemask = 24 [default = 0];
  bool has_oqrtypemask() const;
  void clear_oqrtypemask();
  static const int kOqrtypemaskFieldNumber = 24;
  ::google::protobuf::int32 oqrtypemask() const;
  void set_oqrtypemask(::google::protobuf::int32 value);

  // optional int64 tssent = 25 [default = 0];
  bool has_tssent() const;
  void clear_tssent();
  static const int kTssentFieldNumber = 25;
  ::google::protobuf::int64 tssent() const;
  void set_tssent(::google::protobuf::int64 value);

  // optional int64 tssentrejected = 26 [default = 0];
  bool has_tssentrejected() const;
  void clear_tssentrejected();
  static const int kTssentrejectedFieldNumber = 26;
  ::google::protobuf::int64 tssentrejected() const;
  void set_tssentrejected(::google::protobuf::int64 value);

  // optional int64 tsgtwy = 27 [default = 0];
  bool has_tsgtwy() const;
  void clear_tsgtwy();
  static const int kTsgtwyFieldNumber = 27;
  ::google::protobuf::int64 tsgtwy() const;
  void set_tsgtwy(::google::protobuf::int64 value);

  // optional int64 tscnf = 28 [default = 0];
  bool has_tscnf() const;
  void clear_tscnf();
  static const int kTscnfFieldNumber = 28;
  ::google::protobuf::int64 tscnf() const;
  void set_tscnf(::google::protobuf::int64 value);

  // optional int64 tscxlsent = 29 [default = 0];
  bool has_tscxlsent() const;
  void clear_tscxlsent();
  static const int kTscxlsentFieldNumber = 29;
  ::google::protobuf::int64 tscxlsent() const;
  void set_tscxlsent(::google::protobuf::int64 value);

  // optional int64 tscxlrejected = 30 [default = 0];
  bool has_tscxlrejected() const;
  void clear_tscxlrejected();
  static const int kTscxlrejectedFieldNumber = 30;
  ::google::protobuf::int64 tscxlrejected() const;
  void set_tscxlrejected(::google::protobuf::int64 value);

  // optional int64 tsfinished = 31 [default = 0];
  bool has_tsfinished() const;
  void clear_tsfinished();
  static const int kTsfinishedFieldNumber = 31;
  ::google::protobuf::int64 tsfinished() const;
  void set_tsfinished(::google::protobuf::int64 value);

  // optional int64 tsexchrcv = 32 [default = 0];
  bool has_tsexchrcv() const;
  void clear_tsexchrcv();
  static const int kTsexchrcvFieldNumber = 32;
  ::google::protobuf::int64 tsexchrcv() const;
  void set_tsexchrcv(::google::protobuf::int64 value);

  // optional int64 tsexchrcvrejected = 33 [default = 0];
  bool has_tsexchrcvrejected() const;
  void clear_tsexchrcvrejected();
  static const int kTsexchrcvrejectedFieldNumber = 33;
  ::google::protobuf::int64 tsexchrcvrejected() const;
  void set_tsexchrcvrejected(::google::protobuf::int64 value);

  // optional int64 tsexchcnf = 34 [default = 0];
  bool has_tsexchcnf() const;
  void clear_tsexchcnf();
  static const int kTsexchcnfFieldNumber = 34;
  ::google::protobuf::int64 tsexchcnf() const;
  void set_tsexchcnf(::google::protobuf::int64 value);

  // optional int64 tsexchcxlrcv = 35 [default = 0];
  bool has_tsexchcxlrcv() const;
  void clear_tsexchcxlrcv();
  static const int kTsexchcxlrcvFieldNumber = 35;
  ::google::protobuf::int64 tsexchcxlrcv() const;
  void set_tsexchcxlrcv(::google::protobuf::int64 value);

  // optional int64 tsexchcxlrejected = 36 [default = 0];
  bool has_tsexchcxlrejected() const;
  void clear_tsexchcxlrejected();
  static const int kTsexchcxlrejectedFieldNumber = 36;
  ::google::protobuf::int64 tsexchcxlrejected() const;
  void set_tsexchcxlrejected(::google::protobuf::int64 value);

  // optional int64 tsexchfinished = 37 [default = 0];
  bool has_tsexchfinished() const;
  void clear_tsexchfinished();
  static const int kTsexchfinishedFieldNumber = 37;
  ::google::protobuf::int64 tsexchfinished() const;
  void set_tsexchfinished(::google::protobuf::int64 value);

  // optional int32 reasonflag = 50 [default = 0];
  bool has_reasonflag() const;
  void clear_reasonflag();
  static const int kReasonflagFieldNumber = 50;
  ::google::protobuf::int32 reasonflag() const;
  void set_reasonflag(::google::protobuf::int32 value);

  // optional string sendmemo = 51 [default = ""];
  bool has_sendmemo() const;
  void clear_sendmemo();
  static const int kSendmemoFieldNumber = 51;
  const ::std::string& sendmemo() const;
  void set_sendmemo(const ::std::string& value);
  void set_sendmemo(const char* value);
  void set_sendmemo(const char* value, size_t size);
  ::std::string* mutable_sendmemo();
  ::std::string* release_sendmemo();
  void set_allocated_sendmemo(::std::string* sendmemo);

  // optional string cxlmemo = 52 [default = ""];
  bool has_cxlmemo() const;
  void clear_cxlmemo();
  static const int kCxlmemoFieldNumber = 52;
  const ::std::string& cxlmemo() const;
  void set_cxlmemo(const ::std::string& value);
  void set_cxlmemo(const char* value);
  void set_cxlmemo(const char* value, size_t size);
  ::std::string* mutable_cxlmemo();
  ::std::string* release_cxlmemo();
  void set_allocated_cxlmemo(::std::string* cxlmemo);

  // optional int32 idx = 53 [default = 0];
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 53;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.OrderInfo)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_qid();
  inline void clear_has_qid();
  inline void set_has_bstype();
  inline void clear_has_bstype();
  inline void set_has_px();
  inline void clear_has_px();
  inline void set_has_origsz();
  inline void clear_has_origsz();
  inline void set_has_opensz();
  inline void clear_has_opensz();
  inline void set_has_filledsz();
  inline void clear_has_filledsz();
  inline void set_has_trdapi();
  inline void clear_has_trdapi();
  inline void set_has_ordertype();
  inline void clear_has_ordertype();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_coupleoid();
  inline void clear_has_coupleoid();
  inline void set_has_oid64();
  inline void clear_has_oid64();
  inline void set_has_gtwystrid();
  inline void clear_has_gtwystrid();
  inline void set_has_exchstrid();
  inline void clear_has_exchstrid();
  inline void set_has_localstrid();
  inline void clear_has_localstrid();
  inline void set_has_stratflag();
  inline void clear_has_stratflag();
  inline void set_has_ocflag();
  inline void clear_has_ocflag();
  inline void set_has_ocflagautotype();
  inline void clear_has_ocflagautotype();
  inline void set_has_ocflagautothresh();
  inline void clear_has_ocflagautothresh();
  inline void set_has_oqrtypemask();
  inline void clear_has_oqrtypemask();
  inline void set_has_tssent();
  inline void clear_has_tssent();
  inline void set_has_tssentrejected();
  inline void clear_has_tssentrejected();
  inline void set_has_tsgtwy();
  inline void clear_has_tsgtwy();
  inline void set_has_tscnf();
  inline void clear_has_tscnf();
  inline void set_has_tscxlsent();
  inline void clear_has_tscxlsent();
  inline void set_has_tscxlrejected();
  inline void clear_has_tscxlrejected();
  inline void set_has_tsfinished();
  inline void clear_has_tsfinished();
  inline void set_has_tsexchrcv();
  inline void clear_has_tsexchrcv();
  inline void set_has_tsexchrcvrejected();
  inline void clear_has_tsexchrcvrejected();
  inline void set_has_tsexchcnf();
  inline void clear_has_tsexchcnf();
  inline void set_has_tsexchcxlrcv();
  inline void clear_has_tsexchcxlrcv();
  inline void set_has_tsexchcxlrejected();
  inline void clear_has_tsexchcxlrejected();
  inline void set_has_tsexchfinished();
  inline void clear_has_tsexchfinished();
  inline void set_has_reasonflag();
  inline void clear_has_reasonflag();
  inline void set_has_sendmemo();
  inline void clear_has_sendmemo();
  inline void set_has_cxlmemo();
  inline void clear_has_cxlmemo();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 orderid_;
  ::google::protobuf::int32 qid_;
  ::google::protobuf::int32 bstype_;
  double px_;
  ::google::protobuf::int64 origsz_;
  ::google::protobuf::int64 opensz_;
  ::google::protobuf::int64 filledsz_;
  ::google::protobuf::int32 trdapi_;
  ::google::protobuf::int32 ordertype_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 coupleoid_;
  ::google::protobuf::int64 oid64_;
  ::google::protobuf::internal::ArenaStringPtr gtwystrid_;
  ::google::protobuf::internal::ArenaStringPtr exchstrid_;
  ::google::protobuf::internal::ArenaStringPtr localstrid_;
  ::google::protobuf::int32 stratflag_;
  ::google::protobuf::int32 ocflag_;
  ::google::protobuf::int32 ocflagautotype_;
  ::google::protobuf::int32 ocflagautothresh_;
  ::google::protobuf::int64 tssent_;
  ::google::protobuf::int64 tssentrejected_;
  ::google::protobuf::int64 tsgtwy_;
  ::google::protobuf::int64 tscnf_;
  ::google::protobuf::int64 tscxlsent_;
  ::google::protobuf::int64 tscxlrejected_;
  ::google::protobuf::int64 tsfinished_;
  ::google::protobuf::int32 oqrtypemask_;
  ::google::protobuf::int32 reasonflag_;
  ::google::protobuf::int64 tsexchrcv_;
  ::google::protobuf::int64 tsexchrcvrejected_;
  ::google::protobuf::int64 tsexchcnf_;
  ::google::protobuf::int64 tsexchcxlrcv_;
  ::google::protobuf::int64 tsexchcxlrejected_;
  ::google::protobuf::int64 tsexchfinished_;
  ::google::protobuf::internal::ArenaStringPtr sendmemo_;
  ::google::protobuf::internal::ArenaStringPtr cxlmemo_;
  ::google::protobuf::int32 idx_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API QuoteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.QuoteInfo) */ {
 public:
  QuoteInfo();
  virtual ~QuoteInfo();

  QuoteInfo(const QuoteInfo& from);

  inline QuoteInfo& operator=(const QuoteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuoteInfo& default_instance();

  void Swap(QuoteInfo* other);

  // implements Message ----------------------------------------------

  inline QuoteInfo* New() const { return New(NULL); }

  QuoteInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuoteInfo& from);
  void MergeFrom(const QuoteInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuoteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional int32 iid = 2 [default = 0];
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 2;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 qid = 3 [default = 0];
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 3;
  ::google::protobuf::int32 qid() const;
  void set_qid(::google::protobuf::int32 value);

  // optional int32 bidorderid = 4 [default = 0];
  bool has_bidorderid() const;
  void clear_bidorderid();
  static const int kBidorderidFieldNumber = 4;
  ::google::protobuf::int32 bidorderid() const;
  void set_bidorderid(::google::protobuf::int32 value);

  // optional int32 askorderid = 5 [default = 0];
  bool has_askorderid() const;
  void clear_askorderid();
  static const int kAskorderidFieldNumber = 5;
  ::google::protobuf::int32 askorderid() const;
  void set_askorderid(::google::protobuf::int32 value);

  // optional int32 status = 6 [default = 0];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 bidocflag = 7 [default = 0];
  bool has_bidocflag() const;
  void clear_bidocflag();
  static const int kBidocflagFieldNumber = 7;
  ::google::protobuf::int32 bidocflag() const;
  void set_bidocflag(::google::protobuf::int32 value);

  // optional int32 askocflag = 8 [default = 0];
  bool has_askocflag() const;
  void clear_askocflag();
  static const int kAskocflagFieldNumber = 8;
  ::google::protobuf::int32 askocflag() const;
  void set_askocflag(::google::protobuf::int32 value);

  // optional int32 ocflagautotype = 9 [default = 0];
  bool has_ocflagautotype() const;
  void clear_ocflagautotype();
  static const int kOcflagautotypeFieldNumber = 9;
  ::google::protobuf::int32 ocflagautotype() const;
  void set_ocflagautotype(::google::protobuf::int32 value);

  // optional int32 ocflagautothresh = 10 [default = 0];
  bool has_ocflagautothresh() const;
  void clear_ocflagautothresh();
  static const int kOcflagautothreshFieldNumber = 10;
  ::google::protobuf::int32 ocflagautothresh() const;
  void set_ocflagautothresh(::google::protobuf::int32 value);

  // optional int32 oqrtypemask = 11 [default = 0];
  bool has_oqrtypemask() const;
  void clear_oqrtypemask();
  static const int kOqrtypemaskFieldNumber = 11;
  ::google::protobuf::int32 oqrtypemask() const;
  void set_oqrtypemask(::google::protobuf::int32 value);

  // optional string quotesysid = 12 [default = ""];
  bool has_quotesysid() const;
  void clear_quotesysid();
  static const int kQuotesysidFieldNumber = 12;
  const ::std::string& quotesysid() const;
  void set_quotesysid(const ::std::string& value);
  void set_quotesysid(const char* value);
  void set_quotesysid(const char* value, size_t size);
  ::std::string* mutable_quotesysid();
  ::std::string* release_quotesysid();
  void set_allocated_quotesysid(::std::string* quotesysid);

  // optional string bidordersysid = 13 [default = ""];
  bool has_bidordersysid() const;
  void clear_bidordersysid();
  static const int kBidordersysidFieldNumber = 13;
  const ::std::string& bidordersysid() const;
  void set_bidordersysid(const ::std::string& value);
  void set_bidordersysid(const char* value);
  void set_bidordersysid(const char* value, size_t size);
  ::std::string* mutable_bidordersysid();
  ::std::string* release_bidordersysid();
  void set_allocated_bidordersysid(::std::string* bidordersysid);

  // optional string askordersysid = 14 [default = ""];
  bool has_askordersysid() const;
  void clear_askordersysid();
  static const int kAskordersysidFieldNumber = 14;
  const ::std::string& askordersysid() const;
  void set_askordersysid(const ::std::string& value);
  void set_askordersysid(const char* value);
  void set_askordersysid(const char* value, size_t size);
  ::std::string* mutable_askordersysid();
  ::std::string* release_askordersysid();
  void set_allocated_askordersysid(::std::string* askordersysid);

  // optional string forquotesysid = 15 [default = ""];
  bool has_forquotesysid() const;
  void clear_forquotesysid();
  static const int kForquotesysidFieldNumber = 15;
  const ::std::string& forquotesysid() const;
  void set_forquotesysid(const ::std::string& value);
  void set_forquotesysid(const char* value);
  void set_forquotesysid(const char* value, size_t size);
  ::std::string* mutable_forquotesysid();
  ::std::string* release_forquotesysid();
  void set_allocated_forquotesysid(::std::string* forquotesysid);

  // optional string forquotetime = 16 [default = ""];
  bool has_forquotetime() const;
  void clear_forquotetime();
  static const int kForquotetimeFieldNumber = 16;
  const ::std::string& forquotetime() const;
  void set_forquotetime(const ::std::string& value);
  void set_forquotetime(const char* value);
  void set_forquotetime(const char* value, size_t size);
  ::std::string* mutable_forquotetime();
  ::std::string* release_forquotetime();
  void set_allocated_forquotetime(::std::string* forquotetime);

  // optional string quoteref = 17 [default = ""];
  bool has_quoteref() const;
  void clear_quoteref();
  static const int kQuoterefFieldNumber = 17;
  const ::std::string& quoteref() const;
  void set_quoteref(const ::std::string& value);
  void set_quoteref(const char* value);
  void set_quoteref(const char* value, size_t size);
  ::std::string* mutable_quoteref();
  ::std::string* release_quoteref();
  void set_allocated_quoteref(::std::string* quoteref);

  // optional string bidorderref = 18 [default = ""];
  bool has_bidorderref() const;
  void clear_bidorderref();
  static const int kBidorderrefFieldNumber = 18;
  const ::std::string& bidorderref() const;
  void set_bidorderref(const ::std::string& value);
  void set_bidorderref(const char* value);
  void set_bidorderref(const char* value, size_t size);
  ::std::string* mutable_bidorderref();
  ::std::string* release_bidorderref();
  void set_allocated_bidorderref(::std::string* bidorderref);

  // optional string askorderref = 19 [default = ""];
  bool has_askorderref() const;
  void clear_askorderref();
  static const int kAskorderrefFieldNumber = 19;
  const ::std::string& askorderref() const;
  void set_askorderref(const ::std::string& value);
  void set_askorderref(const char* value);
  void set_askorderref(const char* value, size_t size);
  ::std::string* mutable_askorderref();
  ::std::string* release_askorderref();
  void set_allocated_askorderref(::std::string* askorderref);

  // optional string quotelocalid = 20 [default = ""];
  bool has_quotelocalid() const;
  void clear_quotelocalid();
  static const int kQuotelocalidFieldNumber = 20;
  const ::std::string& quotelocalid() const;
  void set_quotelocalid(const ::std::string& value);
  void set_quotelocalid(const char* value);
  void set_quotelocalid(const char* value, size_t size);
  ::std::string* mutable_quotelocalid();
  ::std::string* release_quotelocalid();
  void set_allocated_quotelocalid(::std::string* quotelocalid);

  // optional double bidpx = 21 [default = 0];
  bool has_bidpx() const;
  void clear_bidpx();
  static const int kBidpxFieldNumber = 21;
  double bidpx() const;
  void set_bidpx(double value);

  // optional double askpx = 22 [default = 0];
  bool has_askpx() const;
  void clear_askpx();
  static const int kAskpxFieldNumber = 22;
  double askpx() const;
  void set_askpx(double value);

  // optional int64 bidsz = 23 [default = 0];
  bool has_bidsz() const;
  void clear_bidsz();
  static const int kBidszFieldNumber = 23;
  ::google::protobuf::int64 bidsz() const;
  void set_bidsz(::google::protobuf::int64 value);

  // optional int64 asksz = 24 [default = 0];
  bool has_asksz() const;
  void clear_asksz();
  static const int kAskszFieldNumber = 24;
  ::google::protobuf::int64 asksz() const;
  void set_asksz(::google::protobuf::int64 value);

  // optional int64 bidfilledsz = 25 [default = 0];
  bool has_bidfilledsz() const;
  void clear_bidfilledsz();
  static const int kBidfilledszFieldNumber = 25;
  ::google::protobuf::int64 bidfilledsz() const;
  void set_bidfilledsz(::google::protobuf::int64 value);

  // optional int64 askfilledsz = 26 [default = 0];
  bool has_askfilledsz() const;
  void clear_askfilledsz();
  static const int kAskfilledszFieldNumber = 26;
  ::google::protobuf::int64 askfilledsz() const;
  void set_askfilledsz(::google::protobuf::int64 value);

  // optional int64 bidopensz = 27 [default = 0];
  bool has_bidopensz() const;
  void clear_bidopensz();
  static const int kBidopenszFieldNumber = 27;
  ::google::protobuf::int64 bidopensz() const;
  void set_bidopensz(::google::protobuf::int64 value);

  // optional int64 askopensz = 28 [default = 0];
  bool has_askopensz() const;
  void clear_askopensz();
  static const int kAskopenszFieldNumber = 28;
  ::google::protobuf::int64 askopensz() const;
  void set_askopensz(::google::protobuf::int64 value);

  // optional int64 tssent = 30 [default = 0];
  bool has_tssent() const;
  void clear_tssent();
  static const int kTssentFieldNumber = 30;
  ::google::protobuf::int64 tssent() const;
  void set_tssent(::google::protobuf::int64 value);

  // optional int64 tssentrejected = 31 [default = 0];
  bool has_tssentrejected() const;
  void clear_tssentrejected();
  static const int kTssentrejectedFieldNumber = 31;
  ::google::protobuf::int64 tssentrejected() const;
  void set_tssentrejected(::google::protobuf::int64 value);

  // optional int64 tsgtwy = 32 [default = 0];
  bool has_tsgtwy() const;
  void clear_tsgtwy();
  static const int kTsgtwyFieldNumber = 32;
  ::google::protobuf::int64 tsgtwy() const;
  void set_tsgtwy(::google::protobuf::int64 value);

  // optional int64 tscnf = 33 [default = 0];
  bool has_tscnf() const;
  void clear_tscnf();
  static const int kTscnfFieldNumber = 33;
  ::google::protobuf::int64 tscnf() const;
  void set_tscnf(::google::protobuf::int64 value);

  // optional int64 tscxlsent = 34 [default = 0];
  bool has_tscxlsent() const;
  void clear_tscxlsent();
  static const int kTscxlsentFieldNumber = 34;
  ::google::protobuf::int64 tscxlsent() const;
  void set_tscxlsent(::google::protobuf::int64 value);

  // optional int64 tscxlrejected = 35 [default = 0];
  bool has_tscxlrejected() const;
  void clear_tscxlrejected();
  static const int kTscxlrejectedFieldNumber = 35;
  ::google::protobuf::int64 tscxlrejected() const;
  void set_tscxlrejected(::google::protobuf::int64 value);

  // optional int64 tsfinished = 36 [default = 0];
  bool has_tsfinished() const;
  void clear_tsfinished();
  static const int kTsfinishedFieldNumber = 36;
  ::google::protobuf::int64 tsfinished() const;
  void set_tsfinished(::google::protobuf::int64 value);

  // optional int64 tsexchrcv = 37 [default = 0];
  bool has_tsexchrcv() const;
  void clear_tsexchrcv();
  static const int kTsexchrcvFieldNumber = 37;
  ::google::protobuf::int64 tsexchrcv() const;
  void set_tsexchrcv(::google::protobuf::int64 value);

  // optional int64 tsexchrcvrejected = 38 [default = 0];
  bool has_tsexchrcvrejected() const;
  void clear_tsexchrcvrejected();
  static const int kTsexchrcvrejectedFieldNumber = 38;
  ::google::protobuf::int64 tsexchrcvrejected() const;
  void set_tsexchrcvrejected(::google::protobuf::int64 value);

  // optional int64 tsexchcnf = 39 [default = 0];
  bool has_tsexchcnf() const;
  void clear_tsexchcnf();
  static const int kTsexchcnfFieldNumber = 39;
  ::google::protobuf::int64 tsexchcnf() const;
  void set_tsexchcnf(::google::protobuf::int64 value);

  // optional int64 tsexchcxlrcv = 40 [default = 0];
  bool has_tsexchcxlrcv() const;
  void clear_tsexchcxlrcv();
  static const int kTsexchcxlrcvFieldNumber = 40;
  ::google::protobuf::int64 tsexchcxlrcv() const;
  void set_tsexchcxlrcv(::google::protobuf::int64 value);

  // optional int64 tsexchcxlrejected = 41 [default = 0];
  bool has_tsexchcxlrejected() const;
  void clear_tsexchcxlrejected();
  static const int kTsexchcxlrejectedFieldNumber = 41;
  ::google::protobuf::int64 tsexchcxlrejected() const;
  void set_tsexchcxlrejected(::google::protobuf::int64 value);

  // optional int64 tsexchfinished = 42 [default = 0];
  bool has_tsexchfinished() const;
  void clear_tsexchfinished();
  static const int kTsexchfinishedFieldNumber = 42;
  ::google::protobuf::int64 tsexchfinished() const;
  void set_tsexchfinished(::google::protobuf::int64 value);

  // optional int64 tsbidcxled = 43 [default = 0];
  bool has_tsbidcxled() const;
  void clear_tsbidcxled();
  static const int kTsbidcxledFieldNumber = 43;
  ::google::protobuf::int64 tsbidcxled() const;
  void set_tsbidcxled(::google::protobuf::int64 value);

  // optional int64 tsaskcxled = 44 [default = 0];
  bool has_tsaskcxled() const;
  void clear_tsaskcxled();
  static const int kTsaskcxledFieldNumber = 44;
  ::google::protobuf::int64 tsaskcxled() const;
  void set_tsaskcxled(::google::protobuf::int64 value);

  // optional int64 tsbidallfilled = 45 [default = 0];
  bool has_tsbidallfilled() const;
  void clear_tsbidallfilled();
  static const int kTsbidallfilledFieldNumber = 45;
  ::google::protobuf::int64 tsbidallfilled() const;
  void set_tsbidallfilled(::google::protobuf::int64 value);

  // optional int64 tsaskallfilled = 46 [default = 0];
  bool has_tsaskallfilled() const;
  void clear_tsaskallfilled();
  static const int kTsaskallfilledFieldNumber = 46;
  ::google::protobuf::int64 tsaskallfilled() const;
  void set_tsaskallfilled(::google::protobuf::int64 value);

  // optional int32 reasonflag = 50 [default = 0];
  bool has_reasonflag() const;
  void clear_reasonflag();
  static const int kReasonflagFieldNumber = 50;
  ::google::protobuf::int32 reasonflag() const;
  void set_reasonflag(::google::protobuf::int32 value);

  // optional string sendmemo = 51 [default = ""];
  bool has_sendmemo() const;
  void clear_sendmemo();
  static const int kSendmemoFieldNumber = 51;
  const ::std::string& sendmemo() const;
  void set_sendmemo(const ::std::string& value);
  void set_sendmemo(const char* value);
  void set_sendmemo(const char* value, size_t size);
  ::std::string* mutable_sendmemo();
  ::std::string* release_sendmemo();
  void set_allocated_sendmemo(::std::string* sendmemo);

  // optional string cxlmemo = 52 [default = ""];
  bool has_cxlmemo() const;
  void clear_cxlmemo();
  static const int kCxlmemoFieldNumber = 52;
  const ::std::string& cxlmemo() const;
  void set_cxlmemo(const ::std::string& value);
  void set_cxlmemo(const char* value);
  void set_cxlmemo(const char* value, size_t size);
  ::std::string* mutable_cxlmemo();
  ::std::string* release_cxlmemo();
  void set_allocated_cxlmemo(::std::string* cxlmemo);

  // optional double idx = 53 [default = -1];
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 53;
  double idx() const;
  void set_idx(double value);

  // @@protoc_insertion_point(class_scope:XT.QuoteInfo)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_qid();
  inline void clear_has_qid();
  inline void set_has_bidorderid();
  inline void clear_has_bidorderid();
  inline void set_has_askorderid();
  inline void clear_has_askorderid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_bidocflag();
  inline void clear_has_bidocflag();
  inline void set_has_askocflag();
  inline void clear_has_askocflag();
  inline void set_has_ocflagautotype();
  inline void clear_has_ocflagautotype();
  inline void set_has_ocflagautothresh();
  inline void clear_has_ocflagautothresh();
  inline void set_has_oqrtypemask();
  inline void clear_has_oqrtypemask();
  inline void set_has_quotesysid();
  inline void clear_has_quotesysid();
  inline void set_has_bidordersysid();
  inline void clear_has_bidordersysid();
  inline void set_has_askordersysid();
  inline void clear_has_askordersysid();
  inline void set_has_forquotesysid();
  inline void clear_has_forquotesysid();
  inline void set_has_forquotetime();
  inline void clear_has_forquotetime();
  inline void set_has_quoteref();
  inline void clear_has_quoteref();
  inline void set_has_bidorderref();
  inline void clear_has_bidorderref();
  inline void set_has_askorderref();
  inline void clear_has_askorderref();
  inline void set_has_quotelocalid();
  inline void clear_has_quotelocalid();
  inline void set_has_bidpx();
  inline void clear_has_bidpx();
  inline void set_has_askpx();
  inline void clear_has_askpx();
  inline void set_has_bidsz();
  inline void clear_has_bidsz();
  inline void set_has_asksz();
  inline void clear_has_asksz();
  inline void set_has_bidfilledsz();
  inline void clear_has_bidfilledsz();
  inline void set_has_askfilledsz();
  inline void clear_has_askfilledsz();
  inline void set_has_bidopensz();
  inline void clear_has_bidopensz();
  inline void set_has_askopensz();
  inline void clear_has_askopensz();
  inline void set_has_tssent();
  inline void clear_has_tssent();
  inline void set_has_tssentrejected();
  inline void clear_has_tssentrejected();
  inline void set_has_tsgtwy();
  inline void clear_has_tsgtwy();
  inline void set_has_tscnf();
  inline void clear_has_tscnf();
  inline void set_has_tscxlsent();
  inline void clear_has_tscxlsent();
  inline void set_has_tscxlrejected();
  inline void clear_has_tscxlrejected();
  inline void set_has_tsfinished();
  inline void clear_has_tsfinished();
  inline void set_has_tsexchrcv();
  inline void clear_has_tsexchrcv();
  inline void set_has_tsexchrcvrejected();
  inline void clear_has_tsexchrcvrejected();
  inline void set_has_tsexchcnf();
  inline void clear_has_tsexchcnf();
  inline void set_has_tsexchcxlrcv();
  inline void clear_has_tsexchcxlrcv();
  inline void set_has_tsexchcxlrejected();
  inline void clear_has_tsexchcxlrejected();
  inline void set_has_tsexchfinished();
  inline void clear_has_tsexchfinished();
  inline void set_has_tsbidcxled();
  inline void clear_has_tsbidcxled();
  inline void set_has_tsaskcxled();
  inline void clear_has_tsaskcxled();
  inline void set_has_tsbidallfilled();
  inline void clear_has_tsbidallfilled();
  inline void set_has_tsaskallfilled();
  inline void clear_has_tsaskallfilled();
  inline void set_has_reasonflag();
  inline void clear_has_reasonflag();
  inline void set_has_sendmemo();
  inline void clear_has_sendmemo();
  inline void set_has_cxlmemo();
  inline void clear_has_cxlmemo();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 qid_;
  ::google::protobuf::int32 bidorderid_;
  ::google::protobuf::int32 askorderid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 bidocflag_;
  ::google::protobuf::int32 askocflag_;
  ::google::protobuf::int32 ocflagautotype_;
  ::google::protobuf::int32 ocflagautothresh_;
  ::google::protobuf::int32 oqrtypemask_;
  ::google::protobuf::internal::ArenaStringPtr quotesysid_;
  ::google::protobuf::internal::ArenaStringPtr bidordersysid_;
  ::google::protobuf::internal::ArenaStringPtr askordersysid_;
  ::google::protobuf::internal::ArenaStringPtr forquotesysid_;
  ::google::protobuf::internal::ArenaStringPtr forquotetime_;
  ::google::protobuf::internal::ArenaStringPtr quoteref_;
  ::google::protobuf::internal::ArenaStringPtr bidorderref_;
  ::google::protobuf::internal::ArenaStringPtr askorderref_;
  ::google::protobuf::internal::ArenaStringPtr quotelocalid_;
  double bidpx_;
  double askpx_;
  ::google::protobuf::int64 bidsz_;
  ::google::protobuf::int64 asksz_;
  ::google::protobuf::int64 bidfilledsz_;
  ::google::protobuf::int64 askfilledsz_;
  ::google::protobuf::int64 bidopensz_;
  ::google::protobuf::int64 askopensz_;
  ::google::protobuf::int64 tssent_;
  ::google::protobuf::int64 tssentrejected_;
  ::google::protobuf::int64 tsgtwy_;
  ::google::protobuf::int64 tscnf_;
  ::google::protobuf::int64 tscxlsent_;
  ::google::protobuf::int64 tscxlrejected_;
  ::google::protobuf::int64 tsfinished_;
  ::google::protobuf::int64 tsexchrcv_;
  ::google::protobuf::int64 tsexchrcvrejected_;
  ::google::protobuf::int64 tsexchcnf_;
  ::google::protobuf::int64 tsexchcxlrcv_;
  ::google::protobuf::int64 tsexchcxlrejected_;
  ::google::protobuf::int64 tsexchfinished_;
  ::google::protobuf::int64 tsbidcxled_;
  ::google::protobuf::int64 tsaskcxled_;
  ::google::protobuf::int64 tsbidallfilled_;
  ::google::protobuf::int64 tsaskallfilled_;
  ::google::protobuf::internal::ArenaStringPtr sendmemo_;
  ::google::protobuf::internal::ArenaStringPtr cxlmemo_;
  double idx_;
  ::google::protobuf::int32 reasonflag_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static QuoteInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API MktDataEventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.MktDataEventInfo) */ {
 public:
  MktDataEventInfo();
  virtual ~MktDataEventInfo();

  MktDataEventInfo(const MktDataEventInfo& from);

  inline MktDataEventInfo& operator=(const MktDataEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MktDataEventInfo& default_instance();

  void Swap(MktDataEventInfo* other);

  // implements Message ----------------------------------------------

  inline MktDataEventInfo* New() const { return New(NULL); }

  MktDataEventInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MktDataEventInfo& from);
  void MergeFrom(const MktDataEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MktDataEventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iid = 1 [default = 0];
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 1;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 eventtype = 2 [default = 0];
  bool has_eventtype() const;
  void clear_eventtype();
  static const int kEventtypeFieldNumber = 2;
  ::google::protobuf::int32 eventtype() const;
  void set_eventtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.MktDataEventInfo)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_eventtype();
  inline void clear_has_eventtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 eventtype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static MktDataEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrderEventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrderEventInfo) */ {
 public:
  OrderEventInfo();
  virtual ~OrderEventInfo();

  OrderEventInfo(const OrderEventInfo& from);

  inline OrderEventInfo& operator=(const OrderEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderEventInfo& default_instance();

  void Swap(OrderEventInfo* other);

  // implements Message ----------------------------------------------

  inline OrderEventInfo* New() const { return New(NULL); }

  OrderEventInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderEventInfo& from);
  void MergeFrom(const OrderEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderEventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iid = 1 [default = 0];
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 1;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 oid = 2 [default = 0];
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  ::google::protobuf::int32 oid() const;
  void set_oid(::google::protobuf::int32 value);

  // optional int32 qid = 3 [default = 0];
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 3;
  ::google::protobuf::int32 qid() const;
  void set_qid(::google::protobuf::int32 value);

  // optional int32 eventtype = 4 [default = 0];
  bool has_eventtype() const;
  void clear_eventtype();
  static const int kEventtypeFieldNumber = 4;
  ::google::protobuf::int32 eventtype() const;
  void set_eventtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.OrderEventInfo)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_qid();
  inline void clear_has_qid();
  inline void set_has_eventtype();
  inline void clear_has_eventtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 oid_;
  ::google::protobuf::int32 qid_;
  ::google::protobuf::int32 eventtype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrderEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrEventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrEventInfo) */ {
 public:
  InstrEventInfo();
  virtual ~InstrEventInfo();

  InstrEventInfo(const InstrEventInfo& from);

  inline InstrEventInfo& operator=(const InstrEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrEventInfo& default_instance();

  void Swap(InstrEventInfo* other);

  // implements Message ----------------------------------------------

  inline InstrEventInfo* New() const { return New(NULL); }

  InstrEventInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrEventInfo& from);
  void MergeFrom(const InstrEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrEventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iid = 1 [default = 0];
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 1;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 oid = 2 [default = 0];
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  ::google::protobuf::int32 oid() const;
  void set_oid(::google::protobuf::int32 value);

  // optional int32 qid = 3 [default = 0];
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 3;
  ::google::protobuf::int32 qid() const;
  void set_qid(::google::protobuf::int32 value);

  // optional int32 flag = 4 [default = 0];
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.InstrEventInfo)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_qid();
  inline void clear_has_qid();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 oid_;
  ::google::protobuf::int32 qid_;
  ::google::protobuf::int32 flag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ForQuoteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ForQuoteInfo) */ {
 public:
  ForQuoteInfo();
  virtual ~ForQuoteInfo();

  ForQuoteInfo(const ForQuoteInfo& from);

  inline ForQuoteInfo& operator=(const ForQuoteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForQuoteInfo& default_instance();

  void Swap(ForQuoteInfo* other);

  // implements Message ----------------------------------------------

  inline ForQuoteInfo* New() const { return New(NULL); }

  ForQuoteInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForQuoteInfo& from);
  void MergeFrom(const ForQuoteInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForQuoteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string forquotesysid = 3 [default = ""];
  bool has_forquotesysid() const;
  void clear_forquotesysid();
  static const int kForquotesysidFieldNumber = 3;
  const ::std::string& forquotesysid() const;
  void set_forquotesysid(const ::std::string& value);
  void set_forquotesysid(const char* value);
  void set_forquotesysid(const char* value, size_t size);
  ::std::string* mutable_forquotesysid();
  ::std::string* release_forquotesysid();
  void set_allocated_forquotesysid(::std::string* forquotesysid);

  // optional string forquotedate = 4 [default = ""];
  bool has_forquotedate() const;
  void clear_forquotedate();
  static const int kForquotedateFieldNumber = 4;
  const ::std::string& forquotedate() const;
  void set_forquotedate(const ::std::string& value);
  void set_forquotedate(const char* value);
  void set_forquotedate(const char* value, size_t size);
  ::std::string* mutable_forquotedate();
  ::std::string* release_forquotedate();
  void set_allocated_forquotedate(::std::string* forquotedate);

  // optional string forquotetime = 5 [default = ""];
  bool has_forquotetime() const;
  void clear_forquotetime();
  static const int kForquotetimeFieldNumber = 5;
  const ::std::string& forquotetime() const;
  void set_forquotetime(const ::std::string& value);
  void set_forquotetime(const char* value);
  void set_forquotetime(const char* value, size_t size);
  ::std::string* mutable_forquotetime();
  ::std::string* release_forquotetime();
  void set_allocated_forquotetime(::std::string* forquotetime);

  // optional int32 tradingday = 6 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 6;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int64 exchts = 7 [default = 0];
  bool has_exchts() const;
  void clear_exchts();
  static const int kExchtsFieldNumber = 7;
  ::google::protobuf::int64 exchts() const;
  void set_exchts(::google::protobuf::int64 value);

  // optional int64 rcvts = 8 [default = 0];
  bool has_rcvts() const;
  void clear_rcvts();
  static const int kRcvtsFieldNumber = 8;
  ::google::protobuf::int64 rcvts() const;
  void set_rcvts(::google::protobuf::int64 value);

  // optional int64 rspts = 9 [default = 0];
  bool has_rspts() const;
  void clear_rspts();
  static const int kRsptsFieldNumber = 9;
  ::google::protobuf::int64 rspts() const;
  void set_rspts(::google::protobuf::int64 value);

  // optional int32 currqid = 10 [default = 0];
  bool has_currqid() const;
  void clear_currqid();
  static const int kCurrqidFieldNumber = 10;
  ::google::protobuf::int32 currqid() const;
  void set_currqid(::google::protobuf::int32 value);

  // optional int32 rspstatus = 11 [default = 0];
  bool has_rspstatus() const;
  void clear_rspstatus();
  static const int kRspstatusFieldNumber = 11;
  ::google::protobuf::int32 rspstatus() const;
  void set_rspstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.ForQuoteInfo)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_forquotesysid();
  inline void clear_has_forquotesysid();
  inline void set_has_forquotedate();
  inline void clear_has_forquotedate();
  inline void set_has_forquotetime();
  inline void clear_has_forquotetime();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_exchts();
  inline void clear_has_exchts();
  inline void set_has_rcvts();
  inline void clear_has_rcvts();
  inline void set_has_rspts();
  inline void clear_has_rspts();
  inline void set_has_currqid();
  inline void clear_has_currqid();
  inline void set_has_rspstatus();
  inline void clear_has_rspstatus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr forquotesysid_;
  ::google::protobuf::internal::ArenaStringPtr forquotedate_;
  ::google::protobuf::internal::ArenaStringPtr forquotetime_;
  ::google::protobuf::int64 exchts_;
  ::google::protobuf::int64 rcvts_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 currqid_;
  ::google::protobuf::int64 rspts_;
  ::google::protobuf::int32 rspstatus_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ForQuoteInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API VolumeAmount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.VolumeAmount) */ {
 public:
  VolumeAmount();
  virtual ~VolumeAmount();

  VolumeAmount(const VolumeAmount& from);

  inline VolumeAmount& operator=(const VolumeAmount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VolumeAmount& default_instance();

  void Swap(VolumeAmount* other);

  // implements Message ----------------------------------------------

  inline VolumeAmount* New() const { return New(NULL); }

  VolumeAmount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VolumeAmount& from);
  void MergeFrom(const VolumeAmount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VolumeAmount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 volume = 1 [default = 0];
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 1;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // optional double amount = 2 [default = 0];
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  double amount() const;
  void set_amount(double value);

  // @@protoc_insertion_point(class_scope:XT.VolumeAmount)
 private:
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 volume_;
  double amount_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static VolumeAmount* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PxVolume : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PxVolume) */ {
 public:
  PxVolume();
  virtual ~PxVolume();

  PxVolume(const PxVolume& from);

  inline PxVolume& operator=(const PxVolume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PxVolume& default_instance();

  void Swap(PxVolume* other);

  // implements Message ----------------------------------------------

  inline PxVolume* New() const { return New(NULL); }

  PxVolume* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PxVolume& from);
  void MergeFrom(const PxVolume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PxVolume* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double px = 1 [default = 0];
  bool has_px() const;
  void clear_px();
  static const int kPxFieldNumber = 1;
  double px() const;
  void set_px(double value);

  // optional int64 volume = 2 [default = 0];
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 2;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.PxVolume)
 private:
  inline void set_has_px();
  inline void clear_has_px();
  inline void set_has_volume();
  inline void clear_has_volume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double px_;
  ::google::protobuf::int64 volume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PxVolume* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntPxHalfExposure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntPxHalfExposure) */ {
 public:
  IntPxHalfExposure();
  virtual ~IntPxHalfExposure();

  IntPxHalfExposure(const IntPxHalfExposure& from);

  inline IntPxHalfExposure& operator=(const IntPxHalfExposure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntPxHalfExposure& default_instance();

  void Swap(IntPxHalfExposure* other);

  // implements Message ----------------------------------------------

  inline IntPxHalfExposure* New() const { return New(NULL); }

  IntPxHalfExposure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntPxHalfExposure& from);
  void MergeFrom(const IntPxHalfExposure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntPxHalfExposure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 intpx = 1 [default = 0];
  bool has_intpx() const;
  void clear_intpx();
  static const int kIntpxFieldNumber = 1;
  ::google::protobuf::int64 intpx() const;
  void set_intpx(::google::protobuf::int64 value);

  // optional int32 workingnumorders = 2 [default = 0];
  bool has_workingnumorders() const;
  void clear_workingnumorders();
  static const int kWorkingnumordersFieldNumber = 2;
  ::google::protobuf::int32 workingnumorders() const;
  void set_workingnumorders(::google::protobuf::int32 value);

  // optional int64 workingsz = 3 [default = 0];
  bool has_workingsz() const;
  void clear_workingsz();
  static const int kWorkingszFieldNumber = 3;
  ::google::protobuf::int64 workingsz() const;
  void set_workingsz(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.IntPxHalfExposure)
 private:
  inline void set_has_intpx();
  inline void clear_has_intpx();
  inline void set_has_workingnumorders();
  inline void clear_has_workingnumorders();
  inline void set_has_workingsz();
  inline void clear_has_workingsz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 intpx_;
  ::google::protobuf::int64 workingsz_;
  ::google::protobuf::int32 workingnumorders_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntPxHalfExposure* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntPxInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntPxInfo) */ {
 public:
  IntPxInfo();
  virtual ~IntPxInfo();

  IntPxInfo(const IntPxInfo& from);

  inline IntPxInfo& operator=(const IntPxInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntPxInfo& default_instance();

  void Swap(IntPxInfo* other);

  // implements Message ----------------------------------------------

  inline IntPxInfo* New() const { return New(NULL); }

  IntPxInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntPxInfo& from);
  void MergeFrom(const IntPxInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntPxInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 intpx = 1 [default = 0];
  bool has_intpx() const;
  void clear_intpx();
  static const int kIntpxFieldNumber = 1;
  ::google::protobuf::int64 intpx() const;
  void set_intpx(::google::protobuf::int64 value);

  // optional int32 mktbstype = 2 [default = 0];
  bool has_mktbstype() const;
  void clear_mktbstype();
  static const int kMktbstypeFieldNumber = 2;
  ::google::protobuf::int32 mktbstype() const;
  void set_mktbstype(::google::protobuf::int32 value);

  // optional int64 mktsz = 3 [default = 0];
  bool has_mktsz() const;
  void clear_mktsz();
  static const int kMktszFieldNumber = 3;
  ::google::protobuf::int64 mktsz() const;
  void set_mktsz(::google::protobuf::int64 value);

  // optional int32 mktnumorders = 4 [default = 0];
  bool has_mktnumorders() const;
  void clear_mktnumorders();
  static const int kMktnumordersFieldNumber = 4;
  ::google::protobuf::int32 mktnumorders() const;
  void set_mktnumorders(::google::protobuf::int32 value);

  // optional int64 mktbuyvolume = 5 [default = 0];
  bool has_mktbuyvolume() const;
  void clear_mktbuyvolume();
  static const int kMktbuyvolumeFieldNumber = 5;
  ::google::protobuf::int64 mktbuyvolume() const;
  void set_mktbuyvolume(::google::protobuf::int64 value);

  // optional double mktbuyamount = 6 [default = 0];
  bool has_mktbuyamount() const;
  void clear_mktbuyamount();
  static const int kMktbuyamountFieldNumber = 6;
  double mktbuyamount() const;
  void set_mktbuyamount(double value);

  // optional int64 mktsellvolume = 7 [default = 0];
  bool has_mktsellvolume() const;
  void clear_mktsellvolume();
  static const int kMktsellvolumeFieldNumber = 7;
  ::google::protobuf::int64 mktsellvolume() const;
  void set_mktsellvolume(::google::protobuf::int64 value);

  // optional double mktsellamount = 8 [default = 0];
  bool has_mktsellamount() const;
  void clear_mktsellamount();
  static const int kMktsellamountFieldNumber = 8;
  double mktsellamount() const;
  void set_mktsellamount(double value);

  // optional int64 buyvolume = 21 [default = 0];
  bool has_buyvolume() const;
  void clear_buyvolume();
  static const int kBuyvolumeFieldNumber = 21;
  ::google::protobuf::int64 buyvolume() const;
  void set_buyvolume(::google::protobuf::int64 value);

  // optional double buyamount = 22 [default = 0];
  bool has_buyamount() const;
  void clear_buyamount();
  static const int kBuyamountFieldNumber = 22;
  double buyamount() const;
  void set_buyamount(double value);

  // optional int64 sellvolume = 23 [default = 0];
  bool has_sellvolume() const;
  void clear_sellvolume();
  static const int kSellvolumeFieldNumber = 23;
  ::google::protobuf::int64 sellvolume() const;
  void set_sellvolume(::google::protobuf::int64 value);

  // optional double sellamount = 24 [default = 0];
  bool has_sellamount() const;
  void clear_sellamount();
  static const int kSellamountFieldNumber = 24;
  double sellamount() const;
  void set_sellamount(double value);

  // optional int32 buynumorders = 25 [default = 0];
  bool has_buynumorders() const;
  void clear_buynumorders();
  static const int kBuynumordersFieldNumber = 25;
  ::google::protobuf::int32 buynumorders() const;
  void set_buynumorders(::google::protobuf::int32 value);

  // optional int64 buysz = 26 [default = 0];
  bool has_buysz() const;
  void clear_buysz();
  static const int kBuyszFieldNumber = 26;
  ::google::protobuf::int64 buysz() const;
  void set_buysz(::google::protobuf::int64 value);

  // optional int32 sellnumorders = 27 [default = 0];
  bool has_sellnumorders() const;
  void clear_sellnumorders();
  static const int kSellnumordersFieldNumber = 27;
  ::google::protobuf::int32 sellnumorders() const;
  void set_sellnumorders(::google::protobuf::int32 value);

  // optional int64 sellsz = 28 [default = 0];
  bool has_sellsz() const;
  void clear_sellsz();
  static const int kSellszFieldNumber = 28;
  ::google::protobuf::int64 sellsz() const;
  void set_sellsz(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.IntPxInfo)
 private:
  inline void set_has_intpx();
  inline void clear_has_intpx();
  inline void set_has_mktbstype();
  inline void clear_has_mktbstype();
  inline void set_has_mktsz();
  inline void clear_has_mktsz();
  inline void set_has_mktnumorders();
  inline void clear_has_mktnumorders();
  inline void set_has_mktbuyvolume();
  inline void clear_has_mktbuyvolume();
  inline void set_has_mktbuyamount();
  inline void clear_has_mktbuyamount();
  inline void set_has_mktsellvolume();
  inline void clear_has_mktsellvolume();
  inline void set_has_mktsellamount();
  inline void clear_has_mktsellamount();
  inline void set_has_buyvolume();
  inline void clear_has_buyvolume();
  inline void set_has_buyamount();
  inline void clear_has_buyamount();
  inline void set_has_sellvolume();
  inline void clear_has_sellvolume();
  inline void set_has_sellamount();
  inline void clear_has_sellamount();
  inline void set_has_buynumorders();
  inline void clear_has_buynumorders();
  inline void set_has_buysz();
  inline void clear_has_buysz();
  inline void set_has_sellnumorders();
  inline void clear_has_sellnumorders();
  inline void set_has_sellsz();
  inline void clear_has_sellsz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 intpx_;
  ::google::protobuf::int64 mktsz_;
  ::google::protobuf::int32 mktbstype_;
  ::google::protobuf::int32 mktnumorders_;
  ::google::protobuf::int64 mktbuyvolume_;
  double mktbuyamount_;
  ::google::protobuf::int64 mktsellvolume_;
  double mktsellamount_;
  ::google::protobuf::int64 buyvolume_;
  double buyamount_;
  ::google::protobuf::int64 sellvolume_;
  double sellamount_;
  ::google::protobuf::int64 buysz_;
  ::google::protobuf::int32 buynumorders_;
  ::google::protobuf::int32 sellnumorders_;
  ::google::protobuf::int64 sellsz_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntPxInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntPxMktInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntPxMktInfo) */ {
 public:
  IntPxMktInfo();
  virtual ~IntPxMktInfo();

  IntPxMktInfo(const IntPxMktInfo& from);

  inline IntPxMktInfo& operator=(const IntPxMktInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntPxMktInfo& default_instance();

  void Swap(IntPxMktInfo* other);

  // implements Message ----------------------------------------------

  inline IntPxMktInfo* New() const { return New(NULL); }

  IntPxMktInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntPxMktInfo& from);
  void MergeFrom(const IntPxMktInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntPxMktInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 intpx = 1 [default = 0];
  bool has_intpx() const;
  void clear_intpx();
  static const int kIntpxFieldNumber = 1;
  ::google::protobuf::int64 intpx() const;
  void set_intpx(::google::protobuf::int64 value);

  // optional int32 mktbstype = 2 [default = 0];
  bool has_mktbstype() const;
  void clear_mktbstype();
  static const int kMktbstypeFieldNumber = 2;
  ::google::protobuf::int32 mktbstype() const;
  void set_mktbstype(::google::protobuf::int32 value);

  // optional int64 mktsz = 3 [default = 0];
  bool has_mktsz() const;
  void clear_mktsz();
  static const int kMktszFieldNumber = 3;
  ::google::protobuf::int64 mktsz() const;
  void set_mktsz(::google::protobuf::int64 value);

  // optional int32 mktnumorders = 4 [default = 0];
  bool has_mktnumorders() const;
  void clear_mktnumorders();
  static const int kMktnumordersFieldNumber = 4;
  ::google::protobuf::int32 mktnumorders() const;
  void set_mktnumorders(::google::protobuf::int32 value);

  // optional int64 mktbuyvolume = 5 [default = 0];
  bool has_mktbuyvolume() const;
  void clear_mktbuyvolume();
  static const int kMktbuyvolumeFieldNumber = 5;
  ::google::protobuf::int64 mktbuyvolume() const;
  void set_mktbuyvolume(::google::protobuf::int64 value);

  // optional int64 rmktbuyvolume = 6 [default = 0];
  bool has_rmktbuyvolume() const;
  void clear_rmktbuyvolume();
  static const int kRmktbuyvolumeFieldNumber = 6;
  ::google::protobuf::int64 rmktbuyvolume() const;
  void set_rmktbuyvolume(::google::protobuf::int64 value);

  // optional int64 mktsellvolume = 7 [default = 0];
  bool has_mktsellvolume() const;
  void clear_mktsellvolume();
  static const int kMktsellvolumeFieldNumber = 7;
  ::google::protobuf::int64 mktsellvolume() const;
  void set_mktsellvolume(::google::protobuf::int64 value);

  // optional int64 rmktsellvolume = 8 [default = 0];
  bool has_rmktsellvolume() const;
  void clear_rmktsellvolume();
  static const int kRmktsellvolumeFieldNumber = 8;
  ::google::protobuf::int64 rmktsellvolume() const;
  void set_rmktsellvolume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.IntPxMktInfo)
 private:
  inline void set_has_intpx();
  inline void clear_has_intpx();
  inline void set_has_mktbstype();
  inline void clear_has_mktbstype();
  inline void set_has_mktsz();
  inline void clear_has_mktsz();
  inline void set_has_mktnumorders();
  inline void clear_has_mktnumorders();
  inline void set_has_mktbuyvolume();
  inline void clear_has_mktbuyvolume();
  inline void set_has_rmktbuyvolume();
  inline void clear_has_rmktbuyvolume();
  inline void set_has_mktsellvolume();
  inline void clear_has_mktsellvolume();
  inline void set_has_rmktsellvolume();
  inline void clear_has_rmktsellvolume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 intpx_;
  ::google::protobuf::int64 mktsz_;
  ::google::protobuf::int32 mktbstype_;
  ::google::protobuf::int32 mktnumorders_;
  ::google::protobuf::int64 mktbuyvolume_;
  ::google::protobuf::int64 rmktbuyvolume_;
  ::google::protobuf::int64 mktsellvolume_;
  ::google::protobuf::int64 rmktsellvolume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntPxMktInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API IntPxOrderInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.IntPxOrderInfo) */ {
 public:
  IntPxOrderInfo();
  virtual ~IntPxOrderInfo();

  IntPxOrderInfo(const IntPxOrderInfo& from);

  inline IntPxOrderInfo& operator=(const IntPxOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntPxOrderInfo& default_instance();

  void Swap(IntPxOrderInfo* other);

  // implements Message ----------------------------------------------

  inline IntPxOrderInfo* New() const { return New(NULL); }

  IntPxOrderInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntPxOrderInfo& from);
  void MergeFrom(const IntPxOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntPxOrderInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int64 intpx = 1 [default = 0];
  bool has_intpx() const;
  void clear_intpx();
  static const int kIntpxFieldNumber = 1;
  ::google::protobuf::int64 intpx() const;
  void set_intpx(::google::protobuf::int64 value);

  // optional int32 workingnumorders = 2 [default = 0];
  bool has_workingnumorders() const;
  void clear_workingnumorders();
  static const int kWorkingnumordersFieldNumber = 2;
  ::google::protobuf::int32 workingnumorders() const;
  void set_workingnumorders(::google::protobuf::int32 value);

  // optional int64 workingsz = 3 [default = 0];
  bool has_workingsz() const;
  void clear_workingsz();
  static const int kWorkingszFieldNumber = 3;
  ::google::protobuf::int64 workingsz() const;
  void set_workingsz(::google::protobuf::int64 value);

  // map<int32, int64> orderid2openszmap = 4;
  int orderid2openszmap_size() const;
  void clear_orderid2openszmap();
  static const int kOrderid2OpenszmapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      orderid2openszmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_orderid2openszmap();

  // @@protoc_insertion_point(class_scope:XT.IntPxOrderInfo)
 private:
  inline void set_has_intpx();
  inline void clear_has_intpx();
  inline void set_has_workingnumorders();
  inline void clear_has_workingnumorders();
  inline void set_has_workingsz();
  inline void clear_has_workingsz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 intpx_;
  ::google::protobuf::int64 workingsz_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      IntPxOrderInfo_Orderid2openszmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > orderid2openszmap_;
  ::google::protobuf::int32 workingnumorders_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static IntPxOrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API HalfExposure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.HalfExposure) */ {
 public:
  HalfExposure();
  virtual ~HalfExposure();

  HalfExposure(const HalfExposure& from);

  inline HalfExposure& operator=(const HalfExposure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HalfExposure& default_instance();

  void Swap(HalfExposure* other);

  // implements Message ----------------------------------------------

  inline HalfExposure* New() const { return New(NULL); }

  HalfExposure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HalfExposure& from);
  void MergeFrom(const HalfExposure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HalfExposure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 workingnumorders = 1 [default = 0];
  bool has_workingnumorders() const;
  void clear_workingnumorders();
  static const int kWorkingnumordersFieldNumber = 1;
  ::google::protobuf::int32 workingnumorders() const;
  void set_workingnumorders(::google::protobuf::int32 value);

  // optional int64 workingsz = 2 [default = 0];
  bool has_workingsz() const;
  void clear_workingsz();
  static const int kWorkingszFieldNumber = 2;
  ::google::protobuf::int64 workingsz() const;
  void set_workingsz(::google::protobuf::int64 value);

  // optional int64 volume = 3 [default = 0];
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 3;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // optional double amount = 4 [default = 0];
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  double amount() const;
  void set_amount(double value);

  // optional int64 volumesession = 5 [default = 0];
  bool has_volumesession() const;
  void clear_volumesession();
  static const int kVolumesessionFieldNumber = 5;
  ::google::protobuf::int64 volumesession() const;
  void set_volumesession(::google::protobuf::int64 value);

  // optional double amountsession = 6 [default = 0];
  bool has_amountsession() const;
  void clear_amountsession();
  static const int kAmountsessionFieldNumber = 6;
  double amountsession() const;
  void set_amountsession(double value);

  // @@protoc_insertion_point(class_scope:XT.HalfExposure)
 private:
  inline void set_has_workingnumorders();
  inline void clear_has_workingnumorders();
  inline void set_has_workingsz();
  inline void clear_has_workingsz();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_volumesession();
  inline void clear_has_volumesession();
  inline void set_has_amountsession();
  inline void clear_has_amountsession();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 workingsz_;
  ::google::protobuf::int64 volume_;
  double amount_;
  ::google::protobuf::int64 volumesession_;
  double amountsession_;
  ::google::protobuf::int32 workingnumorders_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static HalfExposure* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API MktQuoteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.MktQuoteData) */ {
 public:
  MktQuoteData();
  virtual ~MktQuoteData();

  MktQuoteData(const MktQuoteData& from);

  inline MktQuoteData& operator=(const MktQuoteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MktQuoteData& default_instance();

  void Swap(MktQuoteData* other);

  // implements Message ----------------------------------------------

  inline MktQuoteData* New() const { return New(NULL); }

  MktQuoteData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MktQuoteData& from);
  void MergeFrom(const MktQuoteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MktQuoteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string source = 3 [default = ""];
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional int64 exchts = 4 [default = 0];
  bool has_exchts() const;
  void clear_exchts();
  static const int kExchtsFieldNumber = 4;
  ::google::protobuf::int64 exchts() const;
  void set_exchts(::google::protobuf::int64 value);

  // optional int64 recvts = 5 [default = 0];
  bool has_recvts() const;
  void clear_recvts();
  static const int kRecvtsFieldNumber = 5;
  ::google::protobuf::int64 recvts() const;
  void set_recvts(::google::protobuf::int64 value);

  // optional double lastpx = 6 [default = 0];
  bool has_lastpx() const;
  void clear_lastpx();
  static const int kLastpxFieldNumber = 6;
  double lastpx() const;
  void set_lastpx(double value);

  // optional int64 lastts = 7 [default = 0];
  bool has_lastts() const;
  void clear_lastts();
  static const int kLasttsFieldNumber = 7;
  ::google::protobuf::int64 lastts() const;
  void set_lastts(::google::protobuf::int64 value);

  // optional int64 totvolume = 8 [default = 0];
  bool has_totvolume() const;
  void clear_totvolume();
  static const int kTotvolumeFieldNumber = 8;
  ::google::protobuf::int64 totvolume() const;
  void set_totvolume(::google::protobuf::int64 value);

  // optional double totamount = 9 [default = 0];
  bool has_totamount() const;
  void clear_totamount();
  static const int kTotamountFieldNumber = 9;
  double totamount() const;
  void set_totamount(double value);

  // optional int64 totoi = 10 [default = 0];
  bool has_totoi() const;
  void clear_totoi();
  static const int kTotoiFieldNumber = 10;
  ::google::protobuf::int64 totoi() const;
  void set_totoi(::google::protobuf::int64 value);

  // optional double bidpx0 = 11 [default = 0];
  bool has_bidpx0() const;
  void clear_bidpx0();
  static const int kBidpx0FieldNumber = 11;
  double bidpx0() const;
  void set_bidpx0(double value);

  // optional double askpx0 = 12 [default = 0];
  bool has_askpx0() const;
  void clear_askpx0();
  static const int kAskpx0FieldNumber = 12;
  double askpx0() const;
  void set_askpx0(double value);

  // optional int64 bidsz0 = 13 [default = 0];
  bool has_bidsz0() const;
  void clear_bidsz0();
  static const int kBidsz0FieldNumber = 13;
  ::google::protobuf::int64 bidsz0() const;
  void set_bidsz0(::google::protobuf::int64 value);

  // optional int64 asksz0 = 14 [default = 0];
  bool has_asksz0() const;
  void clear_asksz0();
  static const int kAsksz0FieldNumber = 14;
  ::google::protobuf::int64 asksz0() const;
  void set_asksz0(::google::protobuf::int64 value);

  // optional int32 tradingday = 15 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 15;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional string exchdt = 16 [default = ""];
  bool has_exchdt() const;
  void clear_exchdt();
  static const int kExchdtFieldNumber = 16;
  const ::std::string& exchdt() const;
  void set_exchdt(const ::std::string& value);
  void set_exchdt(const char* value);
  void set_exchdt(const char* value, size_t size);
  ::std::string* mutable_exchdt();
  ::std::string* release_exchdt();
  void set_allocated_exchdt(::std::string* exchdt);

  // optional double bidpx1 = 20 [default = 0];
  bool has_bidpx1() const;
  void clear_bidpx1();
  static const int kBidpx1FieldNumber = 20;
  double bidpx1() const;
  void set_bidpx1(double value);

  // optional double askpx1 = 21 [default = 0];
  bool has_askpx1() const;
  void clear_askpx1();
  static const int kAskpx1FieldNumber = 21;
  double askpx1() const;
  void set_askpx1(double value);

  // optional int64 bidsz1 = 22 [default = 0];
  bool has_bidsz1() const;
  void clear_bidsz1();
  static const int kBidsz1FieldNumber = 22;
  ::google::protobuf::int64 bidsz1() const;
  void set_bidsz1(::google::protobuf::int64 value);

  // optional int64 asksz1 = 23 [default = 0];
  bool has_asksz1() const;
  void clear_asksz1();
  static const int kAsksz1FieldNumber = 23;
  ::google::protobuf::int64 asksz1() const;
  void set_asksz1(::google::protobuf::int64 value);

  // optional double bidpx2 = 24 [default = 0];
  bool has_bidpx2() const;
  void clear_bidpx2();
  static const int kBidpx2FieldNumber = 24;
  double bidpx2() const;
  void set_bidpx2(double value);

  // optional double askpx2 = 25 [default = 0];
  bool has_askpx2() const;
  void clear_askpx2();
  static const int kAskpx2FieldNumber = 25;
  double askpx2() const;
  void set_askpx2(double value);

  // optional int64 bidsz2 = 26 [default = 0];
  bool has_bidsz2() const;
  void clear_bidsz2();
  static const int kBidsz2FieldNumber = 26;
  ::google::protobuf::int64 bidsz2() const;
  void set_bidsz2(::google::protobuf::int64 value);

  // optional int64 asksz2 = 27 [default = 0];
  bool has_asksz2() const;
  void clear_asksz2();
  static const int kAsksz2FieldNumber = 27;
  ::google::protobuf::int64 asksz2() const;
  void set_asksz2(::google::protobuf::int64 value);

  // optional double bidpx3 = 28 [default = 0];
  bool has_bidpx3() const;
  void clear_bidpx3();
  static const int kBidpx3FieldNumber = 28;
  double bidpx3() const;
  void set_bidpx3(double value);

  // optional double askpx3 = 29 [default = 0];
  bool has_askpx3() const;
  void clear_askpx3();
  static const int kAskpx3FieldNumber = 29;
  double askpx3() const;
  void set_askpx3(double value);

  // optional int64 bidsz3 = 30 [default = 0];
  bool has_bidsz3() const;
  void clear_bidsz3();
  static const int kBidsz3FieldNumber = 30;
  ::google::protobuf::int64 bidsz3() const;
  void set_bidsz3(::google::protobuf::int64 value);

  // optional int64 asksz3 = 31 [default = 0];
  bool has_asksz3() const;
  void clear_asksz3();
  static const int kAsksz3FieldNumber = 31;
  ::google::protobuf::int64 asksz3() const;
  void set_asksz3(::google::protobuf::int64 value);

  // optional double bidpx4 = 32 [default = 0];
  bool has_bidpx4() const;
  void clear_bidpx4();
  static const int kBidpx4FieldNumber = 32;
  double bidpx4() const;
  void set_bidpx4(double value);

  // optional double askpx4 = 33 [default = 0];
  bool has_askpx4() const;
  void clear_askpx4();
  static const int kAskpx4FieldNumber = 33;
  double askpx4() const;
  void set_askpx4(double value);

  // optional int64 bidsz4 = 34 [default = 0];
  bool has_bidsz4() const;
  void clear_bidsz4();
  static const int kBidsz4FieldNumber = 34;
  ::google::protobuf::int64 bidsz4() const;
  void set_bidsz4(::google::protobuf::int64 value);

  // optional int64 asksz4 = 35 [default = 0];
  bool has_asksz4() const;
  void clear_asksz4();
  static const int kAsksz4FieldNumber = 35;
  ::google::protobuf::int64 asksz4() const;
  void set_asksz4(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.MktQuoteData)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_exchts();
  inline void clear_has_exchts();
  inline void set_has_recvts();
  inline void clear_has_recvts();
  inline void set_has_lastpx();
  inline void clear_has_lastpx();
  inline void set_has_lastts();
  inline void clear_has_lastts();
  inline void set_has_totvolume();
  inline void clear_has_totvolume();
  inline void set_has_totamount();
  inline void clear_has_totamount();
  inline void set_has_totoi();
  inline void clear_has_totoi();
  inline void set_has_bidpx0();
  inline void clear_has_bidpx0();
  inline void set_has_askpx0();
  inline void clear_has_askpx0();
  inline void set_has_bidsz0();
  inline void clear_has_bidsz0();
  inline void set_has_asksz0();
  inline void clear_has_asksz0();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_exchdt();
  inline void clear_has_exchdt();
  inline void set_has_bidpx1();
  inline void clear_has_bidpx1();
  inline void set_has_askpx1();
  inline void clear_has_askpx1();
  inline void set_has_bidsz1();
  inline void clear_has_bidsz1();
  inline void set_has_asksz1();
  inline void clear_has_asksz1();
  inline void set_has_bidpx2();
  inline void clear_has_bidpx2();
  inline void set_has_askpx2();
  inline void clear_has_askpx2();
  inline void set_has_bidsz2();
  inline void clear_has_bidsz2();
  inline void set_has_asksz2();
  inline void clear_has_asksz2();
  inline void set_has_bidpx3();
  inline void clear_has_bidpx3();
  inline void set_has_askpx3();
  inline void clear_has_askpx3();
  inline void set_has_bidsz3();
  inline void clear_has_bidsz3();
  inline void set_has_asksz3();
  inline void clear_has_asksz3();
  inline void set_has_bidpx4();
  inline void clear_has_bidpx4();
  inline void set_has_askpx4();
  inline void clear_has_askpx4();
  inline void set_has_bidsz4();
  inline void clear_has_bidsz4();
  inline void set_has_asksz4();
  inline void clear_has_asksz4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::int64 exchts_;
  ::google::protobuf::int64 recvts_;
  double lastpx_;
  ::google::protobuf::int64 lastts_;
  ::google::protobuf::int64 totvolume_;
  double totamount_;
  ::google::protobuf::int64 totoi_;
  double bidpx0_;
  double askpx0_;
  ::google::protobuf::int64 bidsz0_;
  ::google::protobuf::int64 asksz0_;
  ::google::protobuf::internal::ArenaStringPtr exchdt_;
  double bidpx1_;
  double askpx1_;
  ::google::protobuf::int64 bidsz1_;
  ::google::protobuf::int64 asksz1_;
  double bidpx2_;
  double askpx2_;
  ::google::protobuf::int64 bidsz2_;
  ::google::protobuf::int64 asksz2_;
  double bidpx3_;
  double askpx3_;
  ::google::protobuf::int64 bidsz3_;
  ::google::protobuf::int64 asksz3_;
  double bidpx4_;
  double askpx4_;
  ::google::protobuf::int64 bidsz4_;
  ::google::protobuf::int64 asksz4_;
  ::google::protobuf::int32 tradingday_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static MktQuoteData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API GreeksData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.GreeksData) */ {
 public:
  GreeksData();
  virtual ~GreeksData();

  GreeksData(const GreeksData& from);

  inline GreeksData& operator=(const GreeksData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GreeksData& default_instance();

  void Swap(GreeksData* other);

  // implements Message ----------------------------------------------

  inline GreeksData* New() const { return New(NULL); }

  GreeksData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GreeksData& from);
  void MergeFrom(const GreeksData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GreeksData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double delta = 1 [default = 0];
  bool has_delta() const;
  void clear_delta();
  static const int kDeltaFieldNumber = 1;
  double delta() const;
  void set_delta(double value);

  // optional double gamma = 2 [default = 0];
  bool has_gamma() const;
  void clear_gamma();
  static const int kGammaFieldNumber = 2;
  double gamma() const;
  void set_gamma(double value);

  // optional double vega = 3 [default = 0];
  bool has_vega() const;
  void clear_vega();
  static const int kVegaFieldNumber = 3;
  double vega() const;
  void set_vega(double value);

  // optional double theta = 4 [default = 0];
  bool has_theta() const;
  void clear_theta();
  static const int kThetaFieldNumber = 4;
  double theta() const;
  void set_theta(double value);

  // optional double rho = 5 [default = 0];
  bool has_rho() const;
  void clear_rho();
  static const int kRhoFieldNumber = 5;
  double rho() const;
  void set_rho(double value);

  // @@protoc_insertion_point(class_scope:XT.GreeksData)
 private:
  inline void set_has_delta();
  inline void clear_has_delta();
  inline void set_has_gamma();
  inline void clear_has_gamma();
  inline void set_has_vega();
  inline void clear_has_vega();
  inline void set_has_theta();
  inline void clear_has_theta();
  inline void set_has_rho();
  inline void clear_has_rho();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double delta_;
  double gamma_;
  double vega_;
  double theta_;
  double rho_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static GreeksData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PosData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PosData) */ {
 public:
  PosData();
  virtual ~PosData();

  PosData(const PosData& from);

  inline PosData& operator=(const PosData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PosData& default_instance();

  void Swap(PosData* other);

  // implements Message ----------------------------------------------

  inline PosData* New() const { return New(NULL); }

  PosData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PosData& from);
  void MergeFrom(const PosData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PosData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 netpos = 1 [default = 0];
  bool has_netpos() const;
  void clear_netpos();
  static const int kNetposFieldNumber = 1;
  ::google::protobuf::int64 netpos() const;
  void set_netpos(::google::protobuf::int64 value);

  // optional int64 netposprev = 2 [default = 0];
  bool has_netposprev() const;
  void clear_netposprev();
  static const int kNetposprevFieldNumber = 2;
  ::google::protobuf::int64 netposprev() const;
  void set_netposprev(::google::protobuf::int64 value);

  // optional int64 netposnew = 3 [default = 0];
  bool has_netposnew() const;
  void clear_netposnew();
  static const int kNetposnewFieldNumber = 3;
  ::google::protobuf::int64 netposnew() const;
  void set_netposnew(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.PosData)
 private:
  inline void set_has_netpos();
  inline void clear_has_netpos();
  inline void set_has_netposprev();
  inline void clear_has_netposprev();
  inline void set_has_netposnew();
  inline void clear_has_netposnew();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 netpos_;
  ::google::protobuf::int64 netposprev_;
  ::google::protobuf::int64 netposnew_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PosData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PnLData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PnLData) */ {
 public:
  PnLData();
  virtual ~PnLData();

  PnLData(const PnLData& from);

  inline PnLData& operator=(const PnLData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PnLData& default_instance();

  void Swap(PnLData* other);

  // implements Message ----------------------------------------------

  inline PnLData* New() const { return New(NULL); }

  PnLData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PnLData& from);
  void MergeFrom(const PnLData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PnLData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double rpnlcurr = 1 [default = 0];
  bool has_rpnlcurr() const;
  void clear_rpnlcurr();
  static const int kRpnlcurrFieldNumber = 1;
  double rpnlcurr() const;
  void set_rpnlcurr(double value);

  // optional double upnlcurr = 2 [default = 0];
  bool has_upnlcurr() const;
  void clear_upnlcurr();
  static const int kUpnlcurrFieldNumber = 2;
  double upnlcurr() const;
  void set_upnlcurr(double value);

  // optional double rpnlprev = 3 [default = 0];
  bool has_rpnlprev() const;
  void clear_rpnlprev();
  static const int kRpnlprevFieldNumber = 3;
  double rpnlprev() const;
  void set_rpnlprev(double value);

  // optional double upnlprev = 4 [default = 0];
  bool has_upnlprev() const;
  void clear_upnlprev();
  static const int kUpnlprevFieldNumber = 4;
  double upnlprev() const;
  void set_upnlprev(double value);

  // optional double rpnl = 5 [default = 0];
  bool has_rpnl() const;
  void clear_rpnl();
  static const int kRpnlFieldNumber = 5;
  double rpnl() const;
  void set_rpnl(double value);

  // optional double upnl = 6 [default = 0];
  bool has_upnl() const;
  void clear_upnl();
  static const int kUpnlFieldNumber = 6;
  double upnl() const;
  void set_upnl(double value);

  // @@protoc_insertion_point(class_scope:XT.PnLData)
 private:
  inline void set_has_rpnlcurr();
  inline void clear_has_rpnlcurr();
  inline void set_has_upnlcurr();
  inline void clear_has_upnlcurr();
  inline void set_has_rpnlprev();
  inline void clear_has_rpnlprev();
  inline void set_has_upnlprev();
  inline void clear_has_upnlprev();
  inline void set_has_rpnl();
  inline void clear_has_rpnl();
  inline void set_has_upnl();
  inline void clear_has_upnl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double rpnlcurr_;
  double upnlcurr_;
  double rpnlprev_;
  double upnlprev_;
  double rpnl_;
  double upnl_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PnLData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PxPnLData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PxPnLData) */ {
 public:
  PxPnLData();
  virtual ~PxPnLData();

  PxPnLData(const PxPnLData& from);

  inline PxPnLData& operator=(const PxPnLData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PxPnLData& default_instance();

  void Swap(PxPnLData* other);

  // implements Message ----------------------------------------------

  inline PxPnLData* New() const { return New(NULL); }

  PxPnLData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PxPnLData& from);
  void MergeFrom(const PxPnLData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PxPnLData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double rpxpnltdy = 1 [default = 0];
  bool has_rpxpnltdy() const;
  void clear_rpxpnltdy();
  static const int kRpxpnltdyFieldNumber = 1;
  double rpxpnltdy() const;
  void set_rpxpnltdy(double value);

  // optional double upxpnltdy = 2 [default = 0];
  bool has_upxpnltdy() const;
  void clear_upxpnltdy();
  static const int kUpxpnltdyFieldNumber = 2;
  double upxpnltdy() const;
  void set_upxpnltdy(double value);

  // optional double rpxpnlytd = 3 [default = 0];
  bool has_rpxpnlytd() const;
  void clear_rpxpnlytd();
  static const int kRpxpnlytdFieldNumber = 3;
  double rpxpnlytd() const;
  void set_rpxpnlytd(double value);

  // optional double upxpnlytd = 4 [default = 0];
  bool has_upxpnlytd() const;
  void clear_upxpnlytd();
  static const int kUpxpnlytdFieldNumber = 4;
  double upxpnlytd() const;
  void set_upxpnlytd(double value);

  // @@protoc_insertion_point(class_scope:XT.PxPnLData)
 private:
  inline void set_has_rpxpnltdy();
  inline void clear_has_rpxpnltdy();
  inline void set_has_upxpnltdy();
  inline void clear_has_upxpnltdy();
  inline void set_has_rpxpnlytd();
  inline void clear_has_rpxpnlytd();
  inline void set_has_upxpnlytd();
  inline void clear_has_upxpnlytd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double rpxpnltdy_;
  double upxpnltdy_;
  double rpxpnlytd_;
  double upxpnlytd_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PxPnLData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API RPnLData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.RPnLData) */ {
 public:
  RPnLData();
  virtual ~RPnLData();

  RPnLData(const RPnLData& from);

  inline RPnLData& operator=(const RPnLData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RPnLData& default_instance();

  void Swap(RPnLData* other);

  // implements Message ----------------------------------------------

  inline RPnLData* New() const { return New(NULL); }

  RPnLData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RPnLData& from);
  void MergeFrom(const RPnLData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RPnLData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double rpxpnl = 1 [default = 0];
  bool has_rpxpnl() const;
  void clear_rpxpnl();
  static const int kRpxpnlFieldNumber = 1;
  double rpxpnl() const;
  void set_rpxpnl(double value);

  // optional double rpnl = 2 [default = 0];
  bool has_rpnl() const;
  void clear_rpnl();
  static const int kRpnlFieldNumber = 2;
  double rpnl() const;
  void set_rpnl(double value);

  // @@protoc_insertion_point(class_scope:XT.RPnLData)
 private:
  inline void set_has_rpxpnl();
  inline void clear_has_rpxpnl();
  inline void set_has_rpnl();
  inline void clear_has_rpnl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double rpxpnl_;
  double rpnl_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static RPnLData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API UPnLData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.UPnLData) */ {
 public:
  UPnLData();
  virtual ~UPnLData();

  UPnLData(const UPnLData& from);

  inline UPnLData& operator=(const UPnLData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UPnLData& default_instance();

  void Swap(UPnLData* other);

  // implements Message ----------------------------------------------

  inline UPnLData* New() const { return New(NULL); }

  UPnLData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UPnLData& from);
  void MergeFrom(const UPnLData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UPnLData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double upxpnl = 1 [default = 0];
  bool has_upxpnl() const;
  void clear_upxpnl();
  static const int kUpxpnlFieldNumber = 1;
  double upxpnl() const;
  void set_upxpnl(double value);

  // optional double upnl = 2 [default = 0];
  bool has_upnl() const;
  void clear_upnl();
  static const int kUpnlFieldNumber = 2;
  double upnl() const;
  void set_upnl(double value);

  // @@protoc_insertion_point(class_scope:XT.UPnLData)
 private:
  inline void set_has_upxpnl();
  inline void clear_has_upxpnl();
  inline void set_has_upnl();
  inline void clear_has_upnl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double upxpnl_;
  double upnl_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static UPnLData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PosGreeksData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PosGreeksData) */ {
 public:
  PosGreeksData();
  virtual ~PosGreeksData();

  PosGreeksData(const PosGreeksData& from);

  inline PosGreeksData& operator=(const PosGreeksData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PosGreeksData& default_instance();

  void Swap(PosGreeksData* other);

  // implements Message ----------------------------------------------

  inline PosGreeksData* New() const { return New(NULL); }

  PosGreeksData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PosGreeksData& from);
  void MergeFrom(const PosGreeksData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PosGreeksData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double posdelta = 1 [default = 0];
  bool has_posdelta() const;
  void clear_posdelta();
  static const int kPosdeltaFieldNumber = 1;
  double posdelta() const;
  void set_posdelta(double value);

  // optional double posdeltanorm = 2 [default = 0];
  bool has_posdeltanorm() const;
  void clear_posdeltanorm();
  static const int kPosdeltanormFieldNumber = 2;
  double posdeltanorm() const;
  void set_posdeltanorm(double value);

  // optional double posgamma = 3 [default = 0];
  bool has_posgamma() const;
  void clear_posgamma();
  static const int kPosgammaFieldNumber = 3;
  double posgamma() const;
  void set_posgamma(double value);

  // optional double posgammanorm = 4 [default = 0];
  bool has_posgammanorm() const;
  void clear_posgammanorm();
  static const int kPosgammanormFieldNumber = 4;
  double posgammanorm() const;
  void set_posgammanorm(double value);

  // optional double posvega = 5 [default = 0];
  bool has_posvega() const;
  void clear_posvega();
  static const int kPosvegaFieldNumber = 5;
  double posvega() const;
  void set_posvega(double value);

  // optional double posveganorm = 6 [default = 0];
  bool has_posveganorm() const;
  void clear_posveganorm();
  static const int kPosveganormFieldNumber = 6;
  double posveganorm() const;
  void set_posveganorm(double value);

  // optional double postheta = 7 [default = 0];
  bool has_postheta() const;
  void clear_postheta();
  static const int kPosthetaFieldNumber = 7;
  double postheta() const;
  void set_postheta(double value);

  // optional double posrho = 8 [default = 0];
  bool has_posrho() const;
  void clear_posrho();
  static const int kPosrhoFieldNumber = 8;
  double posrho() const;
  void set_posrho(double value);

  // @@protoc_insertion_point(class_scope:XT.PosGreeksData)
 private:
  inline void set_has_posdelta();
  inline void clear_has_posdelta();
  inline void set_has_posdeltanorm();
  inline void clear_has_posdeltanorm();
  inline void set_has_posgamma();
  inline void clear_has_posgamma();
  inline void set_has_posgammanorm();
  inline void clear_has_posgammanorm();
  inline void set_has_posvega();
  inline void clear_has_posvega();
  inline void set_has_posveganorm();
  inline void clear_has_posveganorm();
  inline void set_has_postheta();
  inline void clear_has_postheta();
  inline void set_has_posrho();
  inline void clear_has_posrho();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double posdelta_;
  double posdeltanorm_;
  double posgamma_;
  double posgammanorm_;
  double posvega_;
  double posveganorm_;
  double postheta_;
  double posrho_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PosGreeksData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API QuoteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.QuoteData) */ {
 public:
  QuoteData();
  virtual ~QuoteData();

  QuoteData(const QuoteData& from);

  inline QuoteData& operator=(const QuoteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuoteData& default_instance();

  void Swap(QuoteData* other);

  // implements Message ----------------------------------------------

  inline QuoteData* New() const { return New(NULL); }

  QuoteData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuoteData& from);
  void MergeFrom(const QuoteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuoteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 theopxts = 1 [default = 0];
  bool has_theopxts() const;
  void clear_theopxts();
  static const int kTheopxtsFieldNumber = 1;
  ::google::protobuf::int64 theopxts() const;
  void set_theopxts(::google::protobuf::int64 value);

  // optional double theopx = 2 [default = 0];
  bool has_theopx() const;
  void clear_theopx();
  static const int kTheopxFieldNumber = 2;
  double theopx() const;
  void set_theopx(double value);

  // optional double riskpx = 3 [default = 0];
  bool has_riskpx() const;
  void clear_riskpx();
  static const int kRiskpxFieldNumber = 3;
  double riskpx() const;
  void set_riskpx(double value);

  // optional int64 quotepxts = 4 [default = 0];
  bool has_quotepxts() const;
  void clear_quotepxts();
  static const int kQuotepxtsFieldNumber = 4;
  ::google::protobuf::int64 quotepxts() const;
  void set_quotepxts(::google::protobuf::int64 value);

  // optional double quotepx = 5 [default = 0];
  bool has_quotepx() const;
  void clear_quotepx();
  static const int kQuotepxFieldNumber = 5;
  double quotepx() const;
  void set_quotepx(double value);

  // optional double quotebidpx = 6 [default = 0];
  bool has_quotebidpx() const;
  void clear_quotebidpx();
  static const int kQuotebidpxFieldNumber = 6;
  double quotebidpx() const;
  void set_quotebidpx(double value);

  // optional double quoteaskpx = 7 [default = 0];
  bool has_quoteaskpx() const;
  void clear_quoteaskpx();
  static const int kQuoteaskpxFieldNumber = 7;
  double quoteaskpx() const;
  void set_quoteaskpx(double value);

  // optional int64 quotebidsz = 8 [default = 0];
  bool has_quotebidsz() const;
  void clear_quotebidsz();
  static const int kQuotebidszFieldNumber = 8;
  ::google::protobuf::int64 quotebidsz() const;
  void set_quotebidsz(::google::protobuf::int64 value);

  // optional int64 quoteasksz = 9 [default = 0];
  bool has_quoteasksz() const;
  void clear_quoteasksz();
  static const int kQuoteaskszFieldNumber = 9;
  ::google::protobuf::int64 quoteasksz() const;
  void set_quoteasksz(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.QuoteData)
 private:
  inline void set_has_theopxts();
  inline void clear_has_theopxts();
  inline void set_has_theopx();
  inline void clear_has_theopx();
  inline void set_has_riskpx();
  inline void clear_has_riskpx();
  inline void set_has_quotepxts();
  inline void clear_has_quotepxts();
  inline void set_has_quotepx();
  inline void clear_has_quotepx();
  inline void set_has_quotebidpx();
  inline void clear_has_quotebidpx();
  inline void set_has_quoteaskpx();
  inline void clear_has_quoteaskpx();
  inline void set_has_quotebidsz();
  inline void clear_has_quotebidsz();
  inline void set_has_quoteasksz();
  inline void clear_has_quoteasksz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 theopxts_;
  double theopx_;
  double riskpx_;
  ::google::protobuf::int64 quotepxts_;
  double quotepx_;
  double quotebidpx_;
  double quoteaskpx_;
  ::google::protobuf::int64 quotebidsz_;
  ::google::protobuf::int64 quoteasksz_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static QuoteData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API VolatilityData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.VolatilityData) */ {
 public:
  VolatilityData();
  virtual ~VolatilityData();

  VolatilityData(const VolatilityData& from);

  inline VolatilityData& operator=(const VolatilityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VolatilityData& default_instance();

  void Swap(VolatilityData* other);

  // implements Message ----------------------------------------------

  inline VolatilityData* New() const { return New(NULL); }

  VolatilityData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VolatilityData& from);
  void MergeFrom(const VolatilityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VolatilityData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double impvolbid = 1 [default = 0];
  bool has_impvolbid() const;
  void clear_impvolbid();
  static const int kImpvolbidFieldNumber = 1;
  double impvolbid() const;
  void set_impvolbid(double value);

  // optional double impvolask = 2 [default = 0];
  bool has_impvolask() const;
  void clear_impvolask();
  static const int kImpvolaskFieldNumber = 2;
  double impvolask() const;
  void set_impvolask(double value);

  // optional double impvolmid = 3 [default = 0];
  bool has_impvolmid() const;
  void clear_impvolmid();
  static const int kImpvolmidFieldNumber = 3;
  double impvolmid() const;
  void set_impvolmid(double value);

  // optional double theovol = 4 [default = 0];
  bool has_theovol() const;
  void clear_theovol();
  static const int kTheovolFieldNumber = 4;
  double theovol() const;
  void set_theovol(double value);

  // optional double riskvol = 5 [default = 0];
  bool has_riskvol() const;
  void clear_riskvol();
  static const int kRiskvolFieldNumber = 5;
  double riskvol() const;
  void set_riskvol(double value);

  // optional double fittedvol = 6 [default = 0];
  bool has_fittedvol() const;
  void clear_fittedvol();
  static const int kFittedvolFieldNumber = 6;
  double fittedvol() const;
  void set_fittedvol(double value);

  // optional double prevsettlevol = 7 [default = 0];
  bool has_prevsettlevol() const;
  void clear_prevsettlevol();
  static const int kPrevsettlevolFieldNumber = 7;
  double prevsettlevol() const;
  void set_prevsettlevol(double value);

  // optional double prevclosevol = 8 [default = 0];
  bool has_prevclosevol() const;
  void clear_prevclosevol();
  static const int kPrevclosevolFieldNumber = 8;
  double prevclosevol() const;
  void set_prevclosevol(double value);

  // optional double settlevol = 9 [default = 0];
  bool has_settlevol() const;
  void clear_settlevol();
  static const int kSettlevolFieldNumber = 9;
  double settlevol() const;
  void set_settlevol(double value);

  // optional double closevol = 10 [default = 0];
  bool has_closevol() const;
  void clear_closevol();
  static const int kClosevolFieldNumber = 10;
  double closevol() const;
  void set_closevol(double value);

  // optional double avgvol = 11 [default = 0];
  bool has_avgvol() const;
  void clear_avgvol();
  static const int kAvgvolFieldNumber = 11;
  double avgvol() const;
  void set_avgvol(double value);

  // optional double histvol = 12 [default = 0];
  bool has_histvol() const;
  void clear_histvol();
  static const int kHistvolFieldNumber = 12;
  double histvol() const;
  void set_histvol(double value);

  // @@protoc_insertion_point(class_scope:XT.VolatilityData)
 private:
  inline void set_has_impvolbid();
  inline void clear_has_impvolbid();
  inline void set_has_impvolask();
  inline void clear_has_impvolask();
  inline void set_has_impvolmid();
  inline void clear_has_impvolmid();
  inline void set_has_theovol();
  inline void clear_has_theovol();
  inline void set_has_riskvol();
  inline void clear_has_riskvol();
  inline void set_has_fittedvol();
  inline void clear_has_fittedvol();
  inline void set_has_prevsettlevol();
  inline void clear_has_prevsettlevol();
  inline void set_has_prevclosevol();
  inline void clear_has_prevclosevol();
  inline void set_has_settlevol();
  inline void clear_has_settlevol();
  inline void set_has_closevol();
  inline void clear_has_closevol();
  inline void set_has_avgvol();
  inline void clear_has_avgvol();
  inline void set_has_histvol();
  inline void clear_has_histvol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double impvolbid_;
  double impvolask_;
  double impvolmid_;
  double theovol_;
  double riskvol_;
  double fittedvol_;
  double prevsettlevol_;
  double prevclosevol_;
  double settlevol_;
  double closevol_;
  double avgvol_;
  double histvol_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static VolatilityData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TaqStatData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TaqStatData) */ {
 public:
  TaqStatData();
  virtual ~TaqStatData();

  TaqStatData(const TaqStatData& from);

  inline TaqStatData& operator=(const TaqStatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaqStatData& default_instance();

  void Swap(TaqStatData* other);

  // implements Message ----------------------------------------------

  inline TaqStatData* New() const { return New(NULL); }

  TaqStatData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaqStatData& from);
  void MergeFrom(const TaqStatData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaqStatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 numbookupdates = 1 [default = 0];
  bool has_numbookupdates() const;
  void clear_numbookupdates();
  static const int kNumbookupdatesFieldNumber = 1;
  ::google::protobuf::int32 numbookupdates() const;
  void set_numbookupdates(::google::protobuf::int32 value);

  // optional int64 bestszchged = 2 [default = 0];
  bool has_bestszchged() const;
  void clear_bestszchged();
  static const int kBestszchgedFieldNumber = 2;
  ::google::protobuf::int64 bestszchged() const;
  void set_bestszchged(::google::protobuf::int64 value);

  // optional int64 bestpxtickchged = 3 [default = 0];
  bool has_bestpxtickchged() const;
  void clear_bestpxtickchged();
  static const int kBestpxtickchgedFieldNumber = 3;
  ::google::protobuf::int64 bestpxtickchged() const;
  void set_bestpxtickchged(::google::protobuf::int64 value);

  // optional double midpxchged = 4 [default = 0];
  bool has_midpxchged() const;
  void clear_midpxchged();
  static const int kMidpxchgedFieldNumber = 4;
  double midpxchged() const;
  void set_midpxchged(double value);

  // optional int64 snapvolume = 5 [default = 0];
  bool has_snapvolume() const;
  void clear_snapvolume();
  static const int kSnapvolumeFieldNumber = 5;
  ::google::protobuf::int64 snapvolume() const;
  void set_snapvolume(::google::protobuf::int64 value);

  // optional double snapamount = 6 [default = 0];
  bool has_snapamount() const;
  void clear_snapamount();
  static const int kSnapamountFieldNumber = 6;
  double snapamount() const;
  void set_snapamount(double value);

  // optional int64 snapoichg = 7 [default = 0];
  bool has_snapoichg() const;
  void clear_snapoichg();
  static const int kSnapoichgFieldNumber = 7;
  ::google::protobuf::int64 snapoichg() const;
  void set_snapoichg(::google::protobuf::int64 value);

  // optional double snapavgpx = 8 [default = 0];
  bool has_snapavgpx() const;
  void clear_snapavgpx();
  static const int kSnapavgpxFieldNumber = 8;
  double snapavgpx() const;
  void set_snapavgpx(double value);

  // optional int64 snapbuyvolume = 9 [default = 0];
  bool has_snapbuyvolume() const;
  void clear_snapbuyvolume();
  static const int kSnapbuyvolumeFieldNumber = 9;
  ::google::protobuf::int64 snapbuyvolume() const;
  void set_snapbuyvolume(::google::protobuf::int64 value);

  // optional int64 snapsellvolume = 10 [default = 0];
  bool has_snapsellvolume() const;
  void clear_snapsellvolume();
  static const int kSnapsellvolumeFieldNumber = 10;
  ::google::protobuf::int64 snapsellvolume() const;
  void set_snapsellvolume(::google::protobuf::int64 value);

  // optional double snapbsadiff = 11 [default = 0];
  bool has_snapbsadiff() const;
  void clear_snapbsadiff();
  static const int kSnapbsadiffFieldNumber = 11;
  double snapbsadiff() const;
  void set_snapbsadiff(double value);

  // optional double snapflipups = 12 [default = 0];
  bool has_snapflipups() const;
  void clear_snapflipups();
  static const int kSnapflipupsFieldNumber = 12;
  double snapflipups() const;
  void set_snapflipups(double value);

  // optional double snapflipdns = 13 [default = 0];
  bool has_snapflipdns() const;
  void clear_snapflipdns();
  static const int kSnapflipdnsFieldNumber = 13;
  double snapflipdns() const;
  void set_snapflipdns(double value);

  // @@protoc_insertion_point(class_scope:XT.TaqStatData)
 private:
  inline void set_has_numbookupdates();
  inline void clear_has_numbookupdates();
  inline void set_has_bestszchged();
  inline void clear_has_bestszchged();
  inline void set_has_bestpxtickchged();
  inline void clear_has_bestpxtickchged();
  inline void set_has_midpxchged();
  inline void clear_has_midpxchged();
  inline void set_has_snapvolume();
  inline void clear_has_snapvolume();
  inline void set_has_snapamount();
  inline void clear_has_snapamount();
  inline void set_has_snapoichg();
  inline void clear_has_snapoichg();
  inline void set_has_snapavgpx();
  inline void clear_has_snapavgpx();
  inline void set_has_snapbuyvolume();
  inline void clear_has_snapbuyvolume();
  inline void set_has_snapsellvolume();
  inline void clear_has_snapsellvolume();
  inline void set_has_snapbsadiff();
  inline void clear_has_snapbsadiff();
  inline void set_has_snapflipups();
  inline void clear_has_snapflipups();
  inline void set_has_snapflipdns();
  inline void clear_has_snapflipdns();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 bestszchged_;
  ::google::protobuf::int64 bestpxtickchged_;
  double midpxchged_;
  ::google::protobuf::int64 snapvolume_;
  double snapamount_;
  ::google::protobuf::int64 snapoichg_;
  double snapavgpx_;
  ::google::protobuf::int64 snapbuyvolume_;
  ::google::protobuf::int64 snapsellvolume_;
  double snapbsadiff_;
  double snapflipups_;
  double snapflipdns_;
  ::google::protobuf::int32 numbookupdates_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TaqStatData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API XpStatData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.XpStatData) */ {
 public:
  XpStatData();
  virtual ~XpStatData();

  XpStatData(const XpStatData& from);

  inline XpStatData& operator=(const XpStatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XpStatData& default_instance();

  void Swap(XpStatData* other);

  // implements Message ----------------------------------------------

  inline XpStatData* New() const { return New(NULL); }

  XpStatData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XpStatData& from);
  void MergeFrom(const XpStatData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XpStatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 netpos = 1 [default = 0];
  bool has_netpos() const;
  void clear_netpos();
  static const int kNetposFieldNumber = 1;
  ::google::protobuf::int64 netpos() const;
  void set_netpos(::google::protobuf::int64 value);

  // optional int64 netposprev = 2 [default = 0];
  bool has_netposprev() const;
  void clear_netposprev();
  static const int kNetposprevFieldNumber = 2;
  ::google::protobuf::int64 netposprev() const;
  void set_netposprev(::google::protobuf::int64 value);

  // optional int64 netposnew = 3 [default = 0];
  bool has_netposnew() const;
  void clear_netposnew();
  static const int kNetposnewFieldNumber = 3;
  ::google::protobuf::int64 netposnew() const;
  void set_netposnew(::google::protobuf::int64 value);

  // optional double rpxpnltdy = 4 [default = 0];
  bool has_rpxpnltdy() const;
  void clear_rpxpnltdy();
  static const int kRpxpnltdyFieldNumber = 4;
  double rpxpnltdy() const;
  void set_rpxpnltdy(double value);

  // optional double rpnltdy = 5 [default = 0];
  bool has_rpnltdy() const;
  void clear_rpnltdy();
  static const int kRpnltdyFieldNumber = 5;
  double rpnltdy() const;
  void set_rpnltdy(double value);

  // optional double upxpnltdy = 6 [default = 0];
  bool has_upxpnltdy() const;
  void clear_upxpnltdy();
  static const int kUpxpnltdyFieldNumber = 6;
  double upxpnltdy() const;
  void set_upxpnltdy(double value);

  // optional double upnltdy = 7 [default = 0];
  bool has_upnltdy() const;
  void clear_upnltdy();
  static const int kUpnltdyFieldNumber = 7;
  double upnltdy() const;
  void set_upnltdy(double value);

  // optional double rpxpnlytd = 8 [default = 0];
  bool has_rpxpnlytd() const;
  void clear_rpxpnlytd();
  static const int kRpxpnlytdFieldNumber = 8;
  double rpxpnlytd() const;
  void set_rpxpnlytd(double value);

  // optional double rpnlytd = 9 [default = 0];
  bool has_rpnlytd() const;
  void clear_rpnlytd();
  static const int kRpnlytdFieldNumber = 9;
  double rpnlytd() const;
  void set_rpnlytd(double value);

  // optional double upxpnlytd = 10 [default = 0];
  bool has_upxpnlytd() const;
  void clear_upxpnlytd();
  static const int kUpxpnlytdFieldNumber = 10;
  double upxpnlytd() const;
  void set_upxpnlytd(double value);

  // optional double upnlytd = 11 [default = 0];
  bool has_upnlytd() const;
  void clear_upnlytd();
  static const int kUpnlytdFieldNumber = 11;
  double upnlytd() const;
  void set_upnlytd(double value);

  // optional int32 buyorders = 21 [default = 0];
  bool has_buyorders() const;
  void clear_buyorders();
  static const int kBuyordersFieldNumber = 21;
  ::google::protobuf::int32 buyorders() const;
  void set_buyorders(::google::protobuf::int32 value);

  // optional int64 buysz = 22 [default = 0];
  bool has_buysz() const;
  void clear_buysz();
  static const int kBuyszFieldNumber = 22;
  ::google::protobuf::int64 buysz() const;
  void set_buysz(::google::protobuf::int64 value);

  // optional int32 sellorders = 23 [default = 0];
  bool has_sellorders() const;
  void clear_sellorders();
  static const int kSellordersFieldNumber = 23;
  ::google::protobuf::int32 sellorders() const;
  void set_sellorders(::google::protobuf::int32 value);

  // optional int64 sellsz = 24 [default = 0];
  bool has_sellsz() const;
  void clear_sellsz();
  static const int kSellszFieldNumber = 24;
  ::google::protobuf::int64 sellsz() const;
  void set_sellsz(::google::protobuf::int64 value);

  // optional int32 buyordersopenytd = 25 [default = 0];
  bool has_buyordersopenytd() const;
  void clear_buyordersopenytd();
  static const int kBuyordersopenytdFieldNumber = 25;
  ::google::protobuf::int32 buyordersopenytd() const;
  void set_buyordersopenytd(::google::protobuf::int32 value);

  // optional int64 buyszopenytd = 26 [default = 0];
  bool has_buyszopenytd() const;
  void clear_buyszopenytd();
  static const int kBuyszopenytdFieldNumber = 26;
  ::google::protobuf::int64 buyszopenytd() const;
  void set_buyszopenytd(::google::protobuf::int64 value);

  // optional int32 sellordersopenytd = 27 [default = 0];
  bool has_sellordersopenytd() const;
  void clear_sellordersopenytd();
  static const int kSellordersopenytdFieldNumber = 27;
  ::google::protobuf::int32 sellordersopenytd() const;
  void set_sellordersopenytd(::google::protobuf::int32 value);

  // optional int64 sellszopenytd = 28 [default = 0];
  bool has_sellszopenytd() const;
  void clear_sellszopenytd();
  static const int kSellszopenytdFieldNumber = 28;
  ::google::protobuf::int64 sellszopenytd() const;
  void set_sellszopenytd(::google::protobuf::int64 value);

  // optional int32 buyorderscloseytd = 29 [default = 0];
  bool has_buyorderscloseytd() const;
  void clear_buyorderscloseytd();
  static const int kBuyorderscloseytdFieldNumber = 29;
  ::google::protobuf::int32 buyorderscloseytd() const;
  void set_buyorderscloseytd(::google::protobuf::int32 value);

  // optional int64 buyszcloseytd = 30 [default = 0];
  bool has_buyszcloseytd() const;
  void clear_buyszcloseytd();
  static const int kBuyszcloseytdFieldNumber = 30;
  ::google::protobuf::int64 buyszcloseytd() const;
  void set_buyszcloseytd(::google::protobuf::int64 value);

  // optional int32 sellorderscloseytd = 31 [default = 0];
  bool has_sellorderscloseytd() const;
  void clear_sellorderscloseytd();
  static const int kSellorderscloseytdFieldNumber = 31;
  ::google::protobuf::int32 sellorderscloseytd() const;
  void set_sellorderscloseytd(::google::protobuf::int32 value);

  // optional int64 sellszcloseytd = 32 [default = 0];
  bool has_sellszcloseytd() const;
  void clear_sellszcloseytd();
  static const int kSellszcloseytdFieldNumber = 32;
  ::google::protobuf::int64 sellszcloseytd() const;
  void set_sellszcloseytd(::google::protobuf::int64 value);

  // optional int32 buyordersopentdy = 33 [default = 0];
  bool has_buyordersopentdy() const;
  void clear_buyordersopentdy();
  static const int kBuyordersopentdyFieldNumber = 33;
  ::google::protobuf::int32 buyordersopentdy() const;
  void set_buyordersopentdy(::google::protobuf::int32 value);

  // optional int64 buyszopentdy = 34 [default = 0];
  bool has_buyszopentdy() const;
  void clear_buyszopentdy();
  static const int kBuyszopentdyFieldNumber = 34;
  ::google::protobuf::int64 buyszopentdy() const;
  void set_buyszopentdy(::google::protobuf::int64 value);

  // optional int32 sellordersopentdy = 35 [default = 0];
  bool has_sellordersopentdy() const;
  void clear_sellordersopentdy();
  static const int kSellordersopentdyFieldNumber = 35;
  ::google::protobuf::int32 sellordersopentdy() const;
  void set_sellordersopentdy(::google::protobuf::int32 value);

  // optional int64 sellszopentdy = 36 [default = 0];
  bool has_sellszopentdy() const;
  void clear_sellszopentdy();
  static const int kSellszopentdyFieldNumber = 36;
  ::google::protobuf::int64 sellszopentdy() const;
  void set_sellszopentdy(::google::protobuf::int64 value);

  // optional int32 buyordersclosetdy = 37 [default = 0];
  bool has_buyordersclosetdy() const;
  void clear_buyordersclosetdy();
  static const int kBuyordersclosetdyFieldNumber = 37;
  ::google::protobuf::int32 buyordersclosetdy() const;
  void set_buyordersclosetdy(::google::protobuf::int32 value);

  // optional int64 buyszclosetdy = 38 [default = 0];
  bool has_buyszclosetdy() const;
  void clear_buyszclosetdy();
  static const int kBuyszclosetdyFieldNumber = 38;
  ::google::protobuf::int64 buyszclosetdy() const;
  void set_buyszclosetdy(::google::protobuf::int64 value);

  // optional int32 sellordersclosetdy = 39 [default = 0];
  bool has_sellordersclosetdy() const;
  void clear_sellordersclosetdy();
  static const int kSellordersclosetdyFieldNumber = 39;
  ::google::protobuf::int32 sellordersclosetdy() const;
  void set_sellordersclosetdy(::google::protobuf::int32 value);

  // optional int64 sellszclosetdy = 40 [default = 0];
  bool has_sellszclosetdy() const;
  void clear_sellszclosetdy();
  static const int kSellszclosetdyFieldNumber = 40;
  ::google::protobuf::int64 sellszclosetdy() const;
  void set_sellszclosetdy(::google::protobuf::int64 value);

  // optional int32 orderssent = 41 [default = 0];
  bool has_orderssent() const;
  void clear_orderssent();
  static const int kOrderssentFieldNumber = 41;
  ::google::protobuf::int32 orderssent() const;
  void set_orderssent(::google::protobuf::int32 value);

  // optional int32 orderscxled = 42 [default = 0];
  bool has_orderscxled() const;
  void clear_orderscxled();
  static const int kOrderscxledFieldNumber = 42;
  ::google::protobuf::int32 orderscxled() const;
  void set_orderscxled(::google::protobuf::int32 value);

  // optional int32 quotessent = 43 [default = 0];
  bool has_quotessent() const;
  void clear_quotessent();
  static const int kQuotessentFieldNumber = 43;
  ::google::protobuf::int32 quotessent() const;
  void set_quotessent(::google::protobuf::int32 value);

  // optional int32 quotescxled = 44 [default = 0];
  bool has_quotescxled() const;
  void clear_quotescxled();
  static const int kQuotescxledFieldNumber = 44;
  ::google::protobuf::int32 quotescxled() const;
  void set_quotescxled(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.XpStatData)
 private:
  inline void set_has_netpos();
  inline void clear_has_netpos();
  inline void set_has_netposprev();
  inline void clear_has_netposprev();
  inline void set_has_netposnew();
  inline void clear_has_netposnew();
  inline void set_has_rpxpnltdy();
  inline void clear_has_rpxpnltdy();
  inline void set_has_rpnltdy();
  inline void clear_has_rpnltdy();
  inline void set_has_upxpnltdy();
  inline void clear_has_upxpnltdy();
  inline void set_has_upnltdy();
  inline void clear_has_upnltdy();
  inline void set_has_rpxpnlytd();
  inline void clear_has_rpxpnlytd();
  inline void set_has_rpnlytd();
  inline void clear_has_rpnlytd();
  inline void set_has_upxpnlytd();
  inline void clear_has_upxpnlytd();
  inline void set_has_upnlytd();
  inline void clear_has_upnlytd();
  inline void set_has_buyorders();
  inline void clear_has_buyorders();
  inline void set_has_buysz();
  inline void clear_has_buysz();
  inline void set_has_sellorders();
  inline void clear_has_sellorders();
  inline void set_has_sellsz();
  inline void clear_has_sellsz();
  inline void set_has_buyordersopenytd();
  inline void clear_has_buyordersopenytd();
  inline void set_has_buyszopenytd();
  inline void clear_has_buyszopenytd();
  inline void set_has_sellordersopenytd();
  inline void clear_has_sellordersopenytd();
  inline void set_has_sellszopenytd();
  inline void clear_has_sellszopenytd();
  inline void set_has_buyorderscloseytd();
  inline void clear_has_buyorderscloseytd();
  inline void set_has_buyszcloseytd();
  inline void clear_has_buyszcloseytd();
  inline void set_has_sellorderscloseytd();
  inline void clear_has_sellorderscloseytd();
  inline void set_has_sellszcloseytd();
  inline void clear_has_sellszcloseytd();
  inline void set_has_buyordersopentdy();
  inline void clear_has_buyordersopentdy();
  inline void set_has_buyszopentdy();
  inline void clear_has_buyszopentdy();
  inline void set_has_sellordersopentdy();
  inline void clear_has_sellordersopentdy();
  inline void set_has_sellszopentdy();
  inline void clear_has_sellszopentdy();
  inline void set_has_buyordersclosetdy();
  inline void clear_has_buyordersclosetdy();
  inline void set_has_buyszclosetdy();
  inline void clear_has_buyszclosetdy();
  inline void set_has_sellordersclosetdy();
  inline void clear_has_sellordersclosetdy();
  inline void set_has_sellszclosetdy();
  inline void clear_has_sellszclosetdy();
  inline void set_has_orderssent();
  inline void clear_has_orderssent();
  inline void set_has_orderscxled();
  inline void clear_has_orderscxled();
  inline void set_has_quotessent();
  inline void clear_has_quotessent();
  inline void set_has_quotescxled();
  inline void clear_has_quotescxled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int64 netpos_;
  ::google::protobuf::int64 netposprev_;
  ::google::protobuf::int64 netposnew_;
  double rpxpnltdy_;
  double rpnltdy_;
  double upxpnltdy_;
  double upnltdy_;
  double rpxpnlytd_;
  double rpnlytd_;
  double upxpnlytd_;
  double upnlytd_;
  ::google::protobuf::int64 buysz_;
  ::google::protobuf::int32 buyorders_;
  ::google::protobuf::int32 sellorders_;
  ::google::protobuf::int64 sellsz_;
  ::google::protobuf::int64 buyszopenytd_;
  ::google::protobuf::int32 buyordersopenytd_;
  ::google::protobuf::int32 sellordersopenytd_;
  ::google::protobuf::int64 sellszopenytd_;
  ::google::protobuf::int64 buyszcloseytd_;
  ::google::protobuf::int32 buyorderscloseytd_;
  ::google::protobuf::int32 sellorderscloseytd_;
  ::google::protobuf::int64 sellszcloseytd_;
  ::google::protobuf::int64 buyszopentdy_;
  ::google::protobuf::int32 buyordersopentdy_;
  ::google::protobuf::int32 sellordersopentdy_;
  ::google::protobuf::int64 sellszopentdy_;
  ::google::protobuf::int64 buyszclosetdy_;
  ::google::protobuf::int32 buyordersclosetdy_;
  ::google::protobuf::int32 sellordersclosetdy_;
  ::google::protobuf::int64 sellszclosetdy_;
  ::google::protobuf::int32 orderssent_;
  ::google::protobuf::int32 orderscxled_;
  ::google::protobuf::int32 quotessent_;
  ::google::protobuf::int32 quotescxled_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static XpStatData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrdersSzPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrdersSzPair) */ {
 public:
  OrdersSzPair();
  virtual ~OrdersSzPair();

  OrdersSzPair(const OrdersSzPair& from);

  inline OrdersSzPair& operator=(const OrdersSzPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrdersSzPair& default_instance();

  void Swap(OrdersSzPair* other);

  // implements Message ----------------------------------------------

  inline OrdersSzPair* New() const { return New(NULL); }

  OrdersSzPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrdersSzPair& from);
  void MergeFrom(const OrdersSzPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrdersSzPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 orders = 1 [default = 0];
  bool has_orders() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 1;
  ::google::protobuf::int32 orders() const;
  void set_orders(::google::protobuf::int32 value);

  // optional int64 sz = 2 [default = 0];
  bool has_sz() const;
  void clear_sz();
  static const int kSzFieldNumber = 2;
  ::google::protobuf::int64 sz() const;
  void set_sz(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.OrdersSzPair)
 private:
  inline void set_has_orders();
  inline void clear_has_orders();
  inline void set_has_sz();
  inline void clear_has_sz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 sz_;
  ::google::protobuf::int32 orders_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrdersSzPair* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OrderStatData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OrderStatData) */ {
 public:
  OrderStatData();
  virtual ~OrderStatData();

  OrderStatData(const OrderStatData& from);

  inline OrderStatData& operator=(const OrderStatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderStatData& default_instance();

  void Swap(OrderStatData* other);

  // implements Message ----------------------------------------------

  inline OrderStatData* New() const { return New(NULL); }

  OrderStatData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderStatData& from);
  void MergeFrom(const OrderStatData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderStatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 orderssent = 1 [default = 0];
  bool has_orderssent() const;
  void clear_orderssent();
  static const int kOrderssentFieldNumber = 1;
  ::google::protobuf::int32 orderssent() const;
  void set_orderssent(::google::protobuf::int32 value);

  // optional int32 orderscxled = 2 [default = 0];
  bool has_orderscxled() const;
  void clear_orderscxled();
  static const int kOrderscxledFieldNumber = 2;
  ::google::protobuf::int32 orderscxled() const;
  void set_orderscxled(::google::protobuf::int32 value);

  // optional int32 quotessent = 3 [default = 0];
  bool has_quotessent() const;
  void clear_quotessent();
  static const int kQuotessentFieldNumber = 3;
  ::google::protobuf::int32 quotessent() const;
  void set_quotessent(::google::protobuf::int32 value);

  // optional int32 quotescxled = 4 [default = 0];
  bool has_quotescxled() const;
  void clear_quotescxled();
  static const int kQuotescxledFieldNumber = 4;
  ::google::protobuf::int32 quotescxled() const;
  void set_quotescxled(::google::protobuf::int32 value);

  // optional int32 workingbuyorders = 5 [default = 0];
  bool has_workingbuyorders() const;
  void clear_workingbuyorders();
  static const int kWorkingbuyordersFieldNumber = 5;
  ::google::protobuf::int32 workingbuyorders() const;
  void set_workingbuyorders(::google::protobuf::int32 value);

  // optional int32 workingsellorders = 6 [default = 0];
  bool has_workingsellorders() const;
  void clear_workingsellorders();
  static const int kWorkingsellordersFieldNumber = 6;
  ::google::protobuf::int32 workingsellorders() const;
  void set_workingsellorders(::google::protobuf::int32 value);

  // optional int64 workingbuysz = 7 [default = 0];
  bool has_workingbuysz() const;
  void clear_workingbuysz();
  static const int kWorkingbuyszFieldNumber = 7;
  ::google::protobuf::int64 workingbuysz() const;
  void set_workingbuysz(::google::protobuf::int64 value);

  // optional int64 workingsellsz = 8 [default = 0];
  bool has_workingsellsz() const;
  void clear_workingsellsz();
  static const int kWorkingsellszFieldNumber = 8;
  ::google::protobuf::int64 workingsellsz() const;
  void set_workingsellsz(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.OrderStatData)
 private:
  inline void set_has_orderssent();
  inline void clear_has_orderssent();
  inline void set_has_orderscxled();
  inline void clear_has_orderscxled();
  inline void set_has_quotessent();
  inline void clear_has_quotessent();
  inline void set_has_quotescxled();
  inline void clear_has_quotescxled();
  inline void set_has_workingbuyorders();
  inline void clear_has_workingbuyorders();
  inline void set_has_workingsellorders();
  inline void clear_has_workingsellorders();
  inline void set_has_workingbuysz();
  inline void clear_has_workingbuysz();
  inline void set_has_workingsellsz();
  inline void clear_has_workingsellsz();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 orderssent_;
  ::google::protobuf::int32 orderscxled_;
  ::google::protobuf::int32 quotessent_;
  ::google::protobuf::int32 quotescxled_;
  ::google::protobuf::int32 workingbuyorders_;
  ::google::protobuf::int32 workingsellorders_;
  ::google::protobuf::int64 workingbuysz_;
  ::google::protobuf::int64 workingsellsz_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OrderStatData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API LadderPxData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.LadderPxData) */ {
 public:
  LadderPxData();
  virtual ~LadderPxData();

  LadderPxData(const LadderPxData& from);

  inline LadderPxData& operator=(const LadderPxData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LadderPxData& default_instance();

  void Swap(LadderPxData* other);

  // implements Message ----------------------------------------------

  inline LadderPxData* New() const { return New(NULL); }

  LadderPxData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LadderPxData& from);
  void MergeFrom(const LadderPxData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LadderPxData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional double px = 1 [default = 0];
  bool has_px() const;
  void clear_px();
  static const int kPxFieldNumber = 1;
  double px() const;
  void set_px(double value);

  // optional int32 mktbstype = 2 [default = 0];
  bool has_mktbstype() const;
  void clear_mktbstype();
  static const int kMktbstypeFieldNumber = 2;
  ::google::protobuf::int32 mktbstype() const;
  void set_mktbstype(::google::protobuf::int32 value);

  // optional int64 mktsz = 3 [default = 0];
  bool has_mktsz() const;
  void clear_mktsz();
  static const int kMktszFieldNumber = 3;
  ::google::protobuf::int64 mktsz() const;
  void set_mktsz(::google::protobuf::int64 value);

  // optional int64 mktnumorders = 4 [default = 0];
  bool has_mktnumorders() const;
  void clear_mktnumorders();
  static const int kMktnumordersFieldNumber = 4;
  ::google::protobuf::int64 mktnumorders() const;
  void set_mktnumorders(::google::protobuf::int64 value);

  // optional int64 buysz = 5 [default = 0];
  bool has_buysz() const;
  void clear_buysz();
  static const int kBuyszFieldNumber = 5;
  ::google::protobuf::int64 buysz() const;
  void set_buysz(::google::protobuf::int64 value);

  // optional int32 buynumorders = 6 [default = 0];
  bool has_buynumorders() const;
  void clear_buynumorders();
  static const int kBuynumordersFieldNumber = 6;
  ::google::protobuf::int32 buynumorders() const;
  void set_buynumorders(::google::protobuf::int32 value);

  // optional int64 sellsz = 7 [default = 0];
  bool has_sellsz() const;
  void clear_sellsz();
  static const int kSellszFieldNumber = 7;
  ::google::protobuf::int64 sellsz() const;
  void set_sellsz(::google::protobuf::int64 value);

  // optional int32 sellnumorders = 8 [default = 0];
  bool has_sellnumorders() const;
  void clear_sellnumorders();
  static const int kSellnumordersFieldNumber = 8;
  ::google::protobuf::int32 sellnumorders() const;
  void set_sellnumorders(::google::protobuf::int32 value);

  // map<int32, int64> oid2openszmap = 10;
  int oid2openszmap_size() const;
  void clear_oid2openszmap();
  static const int kOid2OpenszmapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      oid2openszmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_oid2openszmap();

  // @@protoc_insertion_point(class_scope:XT.LadderPxData)
 private:
  inline void set_has_px();
  inline void clear_has_px();
  inline void set_has_mktbstype();
  inline void clear_has_mktbstype();
  inline void set_has_mktsz();
  inline void clear_has_mktsz();
  inline void set_has_mktnumorders();
  inline void clear_has_mktnumorders();
  inline void set_has_buysz();
  inline void clear_has_buysz();
  inline void set_has_buynumorders();
  inline void clear_has_buynumorders();
  inline void set_has_sellsz();
  inline void clear_has_sellsz();
  inline void set_has_sellnumorders();
  inline void clear_has_sellnumorders();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double px_;
  ::google::protobuf::int64 mktsz_;
  ::google::protobuf::int64 mktnumorders_;
  ::google::protobuf::int32 mktbstype_;
  ::google::protobuf::int32 buynumorders_;
  ::google::protobuf::int64 buysz_;
  ::google::protobuf::int64 sellsz_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      LadderPxData_Oid2openszmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > oid2openszmap_;
  ::google::protobuf::int32 sellnumorders_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static LadderPxData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API LadderBookData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.LadderBookData) */ {
 public:
  LadderBookData();
  virtual ~LadderBookData();

  LadderBookData(const LadderBookData& from);

  inline LadderBookData& operator=(const LadderBookData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LadderBookData& default_instance();

  void Swap(LadderBookData* other);

  // implements Message ----------------------------------------------

  inline LadderBookData* New() const { return New(NULL); }

  LadderBookData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LadderBookData& from);
  void MergeFrom(const LadderBookData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LadderBookData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string exchid = 2 [default = ""];
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 2;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string source = 3 [default = ""];
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional int64 exchts = 4 [default = 0];
  bool has_exchts() const;
  void clear_exchts();
  static const int kExchtsFieldNumber = 4;
  ::google::protobuf::int64 exchts() const;
  void set_exchts(::google::protobuf::int64 value);

  // optional int64 recvts = 5 [default = 0];
  bool has_recvts() const;
  void clear_recvts();
  static const int kRecvtsFieldNumber = 5;
  ::google::protobuf::int64 recvts() const;
  void set_recvts(::google::protobuf::int64 value);

  // optional double lastpx = 6 [default = 0];
  bool has_lastpx() const;
  void clear_lastpx();
  static const int kLastpxFieldNumber = 6;
  double lastpx() const;
  void set_lastpx(double value);

  // optional int64 lastts = 7 [default = 0];
  bool has_lastts() const;
  void clear_lastts();
  static const int kLasttsFieldNumber = 7;
  ::google::protobuf::int64 lastts() const;
  void set_lastts(::google::protobuf::int64 value);

  // optional int64 totvolume = 8 [default = 0];
  bool has_totvolume() const;
  void clear_totvolume();
  static const int kTotvolumeFieldNumber = 8;
  ::google::protobuf::int64 totvolume() const;
  void set_totvolume(::google::protobuf::int64 value);

  // optional double totamount = 9 [default = 0];
  bool has_totamount() const;
  void clear_totamount();
  static const int kTotamountFieldNumber = 9;
  double totamount() const;
  void set_totamount(double value);

  // optional int64 totoi = 10 [default = 0];
  bool has_totoi() const;
  void clear_totoi();
  static const int kTotoiFieldNumber = 10;
  ::google::protobuf::int64 totoi() const;
  void set_totoi(::google::protobuf::int64 value);

  // optional int64 szmultiplier = 11 [default = 1];
  bool has_szmultiplier() const;
  void clear_szmultiplier();
  static const int kSzmultiplierFieldNumber = 11;
  ::google::protobuf::int64 szmultiplier() const;
  void set_szmultiplier(::google::protobuf::int64 value);

  // optional int64 pxscaletoint64 = 12 [default = 100000000];
  bool has_pxscaletoint64() const;
  void clear_pxscaletoint64();
  static const int kPxscaletoint64FieldNumber = 12;
  ::google::protobuf::int64 pxscaletoint64() const;
  void set_pxscaletoint64(::google::protobuf::int64 value);

  // optional double pxscaletodouble = 13 [default = 1e-08];
  bool has_pxscaletodouble() const;
  void clear_pxscaletodouble();
  static const int kPxscaletodoubleFieldNumber = 13;
  double pxscaletodouble() const;
  void set_pxscaletodouble(double value);

  // optional int64 int64pxtick = 14 [default = 0];
  bool has_int64pxtick() const;
  void clear_int64pxtick();
  static const int kInt64PxtickFieldNumber = 14;
  ::google::protobuf::int64 int64pxtick() const;
  void set_int64pxtick(::google::protobuf::int64 value);

  // optional double pricetick = 15 [default = 0];
  bool has_pricetick() const;
  void clear_pricetick();
  static const int kPricetickFieldNumber = 15;
  double pricetick() const;
  void set_pricetick(double value);

  // optional double contractmultiplier = 16 [default = 1];
  bool has_contractmultiplier() const;
  void clear_contractmultiplier();
  static const int kContractmultiplierFieldNumber = 16;
  double contractmultiplier() const;
  void set_contractmultiplier(double value);

  // map<int64, .XT.LadderPxData> ladderpxmap = 17;
  int ladderpxmap_size() const;
  void clear_ladderpxmap();
  static const int kLadderpxmapFieldNumber = 17;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::LadderPxData >&
      ladderpxmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::XT::LadderPxData >*
      mutable_ladderpxmap();

  // repeated int64 ladderintpxs = 18;
  int ladderintpxs_size() const;
  void clear_ladderintpxs();
  static const int kLadderintpxsFieldNumber = 18;
  ::google::protobuf::int64 ladderintpxs(int index) const;
  void set_ladderintpxs(int index, ::google::protobuf::int64 value);
  void add_ladderintpxs(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ladderintpxs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ladderintpxs();

  // repeated double ladderpxs = 19;
  int ladderpxs_size() const;
  void clear_ladderpxs();
  static const int kLadderpxsFieldNumber = 19;
  double ladderpxs(int index) const;
  void set_ladderpxs(int index, double value);
  void add_ladderpxs(double value);
  const ::google::protobuf::RepeatedField< double >&
      ladderpxs() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_ladderpxs();

  // map<int64, int32> intpx2idxmap = 20;
  int intpx2idxmap_size() const;
  void clear_intpx2idxmap();
  static const int kIntpx2IdxmapFieldNumber = 20;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
      intpx2idxmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
      mutable_intpx2idxmap();

  // optional int32 mktbididx = 21 [default = -1];
  bool has_mktbididx() const;
  void clear_mktbididx();
  static const int kMktbididxFieldNumber = 21;
  ::google::protobuf::int32 mktbididx() const;
  void set_mktbididx(::google::protobuf::int32 value);

  // optional int32 mktaskidx = 22 [default = -1];
  bool has_mktaskidx() const;
  void clear_mktaskidx();
  static const int kMktaskidxFieldNumber = 22;
  ::google::protobuf::int32 mktaskidx() const;
  void set_mktaskidx(::google::protobuf::int32 value);

  // optional double mktbidpx = 23 [default = 0];
  bool has_mktbidpx() const;
  void clear_mktbidpx();
  static const int kMktbidpxFieldNumber = 23;
  double mktbidpx() const;
  void set_mktbidpx(double value);

  // optional double mktaskpx = 24 [default = 0];
  bool has_mktaskpx() const;
  void clear_mktaskpx();
  static const int kMktaskpxFieldNumber = 24;
  double mktaskpx() const;
  void set_mktaskpx(double value);

  // optional int64 mktbidsz = 25 [default = 0];
  bool has_mktbidsz() const;
  void clear_mktbidsz();
  static const int kMktbidszFieldNumber = 25;
  ::google::protobuf::int64 mktbidsz() const;
  void set_mktbidsz(::google::protobuf::int64 value);

  // optional int64 mktasksz = 26 [default = 0];
  bool has_mktasksz() const;
  void clear_mktasksz();
  static const int kMktaskszFieldNumber = 26;
  ::google::protobuf::int64 mktasksz() const;
  void set_mktasksz(::google::protobuf::int64 value);

  // optional double mktbidpxprev = 27 [default = 0];
  bool has_mktbidpxprev() const;
  void clear_mktbidpxprev();
  static const int kMktbidpxprevFieldNumber = 27;
  double mktbidpxprev() const;
  void set_mktbidpxprev(double value);

  // optional double mktaskpxprev = 28 [default = 0];
  bool has_mktaskpxprev() const;
  void clear_mktaskpxprev();
  static const int kMktaskpxprevFieldNumber = 28;
  double mktaskpxprev() const;
  void set_mktaskpxprev(double value);

  // optional int64 mktbidszprev = 29 [default = 0];
  bool has_mktbidszprev() const;
  void clear_mktbidszprev();
  static const int kMktbidszprevFieldNumber = 29;
  ::google::protobuf::int64 mktbidszprev() const;
  void set_mktbidszprev(::google::protobuf::int64 value);

  // optional int64 mktaskszprev = 30 [default = 0];
  bool has_mktaskszprev() const;
  void clear_mktaskszprev();
  static const int kMktaskszprevFieldNumber = 30;
  ::google::protobuf::int64 mktaskszprev() const;
  void set_mktaskszprev(::google::protobuf::int64 value);

  // optional int32 numbookupdates = 31 [default = 0];
  bool has_numbookupdates() const;
  void clear_numbookupdates();
  static const int kNumbookupdatesFieldNumber = 31;
  ::google::protobuf::int32 numbookupdates() const;
  void set_numbookupdates(::google::protobuf::int32 value);

  // optional int64 bestszchged = 32 [default = 0];
  bool has_bestszchged() const;
  void clear_bestszchged();
  static const int kBestszchgedFieldNumber = 32;
  ::google::protobuf::int64 bestszchged() const;
  void set_bestszchged(::google::protobuf::int64 value);

  // optional int64 bestpxtickchged = 33 [default = 0];
  bool has_bestpxtickchged() const;
  void clear_bestpxtickchged();
  static const int kBestpxtickchgedFieldNumber = 33;
  ::google::protobuf::int64 bestpxtickchged() const;
  void set_bestpxtickchged(::google::protobuf::int64 value);

  // optional double midpxchged = 34 [default = 0];
  bool has_midpxchged() const;
  void clear_midpxchged();
  static const int kMidpxchgedFieldNumber = 34;
  double midpxchged() const;
  void set_midpxchged(double value);

  // optional int64 snapvolume = 35 [default = 0];
  bool has_snapvolume() const;
  void clear_snapvolume();
  static const int kSnapvolumeFieldNumber = 35;
  ::google::protobuf::int64 snapvolume() const;
  void set_snapvolume(::google::protobuf::int64 value);

  // optional double snapamount = 36 [default = 0];
  bool has_snapamount() const;
  void clear_snapamount();
  static const int kSnapamountFieldNumber = 36;
  double snapamount() const;
  void set_snapamount(double value);

  // optional int64 snapoichg = 37 [default = 0];
  bool has_snapoichg() const;
  void clear_snapoichg();
  static const int kSnapoichgFieldNumber = 37;
  ::google::protobuf::int64 snapoichg() const;
  void set_snapoichg(::google::protobuf::int64 value);

  // optional double snapavgpx = 38 [default = 0];
  bool has_snapavgpx() const;
  void clear_snapavgpx();
  static const int kSnapavgpxFieldNumber = 38;
  double snapavgpx() const;
  void set_snapavgpx(double value);

  // optional int64 snapbuyvolume = 39 [default = 0];
  bool has_snapbuyvolume() const;
  void clear_snapbuyvolume();
  static const int kSnapbuyvolumeFieldNumber = 39;
  ::google::protobuf::int64 snapbuyvolume() const;
  void set_snapbuyvolume(::google::protobuf::int64 value);

  // optional int64 snapsellvolume = 40 [default = 0];
  bool has_snapsellvolume() const;
  void clear_snapsellvolume();
  static const int kSnapsellvolumeFieldNumber = 40;
  ::google::protobuf::int64 snapsellvolume() const;
  void set_snapsellvolume(::google::protobuf::int64 value);

  // optional double snapbsadiff = 41 [default = 0];
  bool has_snapbsadiff() const;
  void clear_snapbsadiff();
  static const int kSnapbsadiffFieldNumber = 41;
  double snapbsadiff() const;
  void set_snapbsadiff(double value);

  // optional double snapflipups = 42 [default = 0];
  bool has_snapflipups() const;
  void clear_snapflipups();
  static const int kSnapflipupsFieldNumber = 42;
  double snapflipups() const;
  void set_snapflipups(double value);

  // optional double snapflipdns = 43 [default = 0];
  bool has_snapflipdns() const;
  void clear_snapflipdns();
  static const int kSnapflipdnsFieldNumber = 43;
  double snapflipdns() const;
  void set_snapflipdns(double value);

  // optional .XT.OrdersSzPair buyorderssz = 51;
  bool has_buyorderssz() const;
  void clear_buyorderssz();
  static const int kBuyordersszFieldNumber = 51;
  const ::XT::OrdersSzPair& buyorderssz() const;
  ::XT::OrdersSzPair* mutable_buyorderssz();
  ::XT::OrdersSzPair* release_buyorderssz();
  void set_allocated_buyorderssz(::XT::OrdersSzPair* buyorderssz);

  // optional .XT.OrdersSzPair sellorderssz = 52;
  bool has_sellorderssz() const;
  void clear_sellorderssz();
  static const int kSellordersszFieldNumber = 52;
  const ::XT::OrdersSzPair& sellorderssz() const;
  ::XT::OrdersSzPair* mutable_sellorderssz();
  ::XT::OrdersSzPair* release_sellorderssz();
  void set_allocated_sellorderssz(::XT::OrdersSzPair* sellorderssz);

  // optional .XT.OrdersSzPair buyordersszotdy = 53;
  bool has_buyordersszotdy() const;
  void clear_buyordersszotdy();
  static const int kBuyordersszotdyFieldNumber = 53;
  const ::XT::OrdersSzPair& buyordersszotdy() const;
  ::XT::OrdersSzPair* mutable_buyordersszotdy();
  ::XT::OrdersSzPair* release_buyordersszotdy();
  void set_allocated_buyordersszotdy(::XT::OrdersSzPair* buyordersszotdy);

  // optional .XT.OrdersSzPair sellordersszotdy = 54;
  bool has_sellordersszotdy() const;
  void clear_sellordersszotdy();
  static const int kSellordersszotdyFieldNumber = 54;
  const ::XT::OrdersSzPair& sellordersszotdy() const;
  ::XT::OrdersSzPair* mutable_sellordersszotdy();
  ::XT::OrdersSzPair* release_sellordersszotdy();
  void set_allocated_sellordersszotdy(::XT::OrdersSzPair* sellordersszotdy);

  // optional .XT.OrdersSzPair buyordersszctdy = 55;
  bool has_buyordersszctdy() const;
  void clear_buyordersszctdy();
  static const int kBuyordersszctdyFieldNumber = 55;
  const ::XT::OrdersSzPair& buyordersszctdy() const;
  ::XT::OrdersSzPair* mutable_buyordersszctdy();
  ::XT::OrdersSzPair* release_buyordersszctdy();
  void set_allocated_buyordersszctdy(::XT::OrdersSzPair* buyordersszctdy);

  // optional .XT.OrdersSzPair sellordersszctdy = 56;
  bool has_sellordersszctdy() const;
  void clear_sellordersszctdy();
  static const int kSellordersszctdyFieldNumber = 56;
  const ::XT::OrdersSzPair& sellordersszctdy() const;
  ::XT::OrdersSzPair* mutable_sellordersszctdy();
  ::XT::OrdersSzPair* release_sellordersszctdy();
  void set_allocated_sellordersszctdy(::XT::OrdersSzPair* sellordersszctdy);

  // optional .XT.OrdersSzPair buyordersszoytd = 57;
  bool has_buyordersszoytd() const;
  void clear_buyordersszoytd();
  static const int kBuyordersszoytdFieldNumber = 57;
  const ::XT::OrdersSzPair& buyordersszoytd() const;
  ::XT::OrdersSzPair* mutable_buyordersszoytd();
  ::XT::OrdersSzPair* release_buyordersszoytd();
  void set_allocated_buyordersszoytd(::XT::OrdersSzPair* buyordersszoytd);

  // optional .XT.OrdersSzPair sellordersszoytd = 58;
  bool has_sellordersszoytd() const;
  void clear_sellordersszoytd();
  static const int kSellordersszoytdFieldNumber = 58;
  const ::XT::OrdersSzPair& sellordersszoytd() const;
  ::XT::OrdersSzPair* mutable_sellordersszoytd();
  ::XT::OrdersSzPair* release_sellordersszoytd();
  void set_allocated_sellordersszoytd(::XT::OrdersSzPair* sellordersszoytd);

  // optional .XT.OrdersSzPair buyordersszcytd = 59;
  bool has_buyordersszcytd() const;
  void clear_buyordersszcytd();
  static const int kBuyordersszcytdFieldNumber = 59;
  const ::XT::OrdersSzPair& buyordersszcytd() const;
  ::XT::OrdersSzPair* mutable_buyordersszcytd();
  ::XT::OrdersSzPair* release_buyordersszcytd();
  void set_allocated_buyordersszcytd(::XT::OrdersSzPair* buyordersszcytd);

  // optional .XT.OrdersSzPair sellordersszcytd = 60;
  bool has_sellordersszcytd() const;
  void clear_sellordersszcytd();
  static const int kSellordersszcytdFieldNumber = 60;
  const ::XT::OrdersSzPair& sellordersszcytd() const;
  ::XT::OrdersSzPair* mutable_sellordersszcytd();
  ::XT::OrdersSzPair* release_sellordersszcytd();
  void set_allocated_sellordersszcytd(::XT::OrdersSzPair* sellordersszcytd);

  // map<int32, int64> oid2openszmap = 61;
  int oid2openszmap_size() const;
  void clear_oid2openszmap();
  static const int kOid2OpenszmapFieldNumber = 61;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      oid2openszmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_oid2openszmap();

  // map<int32, int64> qid2bidopenszmap = 66;
  int qid2bidopenszmap_size() const;
  void clear_qid2bidopenszmap();
  static const int kQid2BidopenszmapFieldNumber = 66;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      qid2bidopenszmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_qid2bidopenszmap();

  // map<int32, int64> qid2askopenszmap = 67;
  int qid2askopenszmap_size() const;
  void clear_qid2askopenszmap();
  static const int kQid2AskopenszmapFieldNumber = 67;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      qid2askopenszmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_qid2askopenszmap();

  // @@protoc_insertion_point(class_scope:XT.LadderBookData)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_exchts();
  inline void clear_has_exchts();
  inline void set_has_recvts();
  inline void clear_has_recvts();
  inline void set_has_lastpx();
  inline void clear_has_lastpx();
  inline void set_has_lastts();
  inline void clear_has_lastts();
  inline void set_has_totvolume();
  inline void clear_has_totvolume();
  inline void set_has_totamount();
  inline void clear_has_totamount();
  inline void set_has_totoi();
  inline void clear_has_totoi();
  inline void set_has_szmultiplier();
  inline void clear_has_szmultiplier();
  inline void set_has_pxscaletoint64();
  inline void clear_has_pxscaletoint64();
  inline void set_has_pxscaletodouble();
  inline void clear_has_pxscaletodouble();
  inline void set_has_int64pxtick();
  inline void clear_has_int64pxtick();
  inline void set_has_pricetick();
  inline void clear_has_pricetick();
  inline void set_has_contractmultiplier();
  inline void clear_has_contractmultiplier();
  inline void set_has_mktbididx();
  inline void clear_has_mktbididx();
  inline void set_has_mktaskidx();
  inline void clear_has_mktaskidx();
  inline void set_has_mktbidpx();
  inline void clear_has_mktbidpx();
  inline void set_has_mktaskpx();
  inline void clear_has_mktaskpx();
  inline void set_has_mktbidsz();
  inline void clear_has_mktbidsz();
  inline void set_has_mktasksz();
  inline void clear_has_mktasksz();
  inline void set_has_mktbidpxprev();
  inline void clear_has_mktbidpxprev();
  inline void set_has_mktaskpxprev();
  inline void clear_has_mktaskpxprev();
  inline void set_has_mktbidszprev();
  inline void clear_has_mktbidszprev();
  inline void set_has_mktaskszprev();
  inline void clear_has_mktaskszprev();
  inline void set_has_numbookupdates();
  inline void clear_has_numbookupdates();
  inline void set_has_bestszchged();
  inline void clear_has_bestszchged();
  inline void set_has_bestpxtickchged();
  inline void clear_has_bestpxtickchged();
  inline void set_has_midpxchged();
  inline void clear_has_midpxchged();
  inline void set_has_snapvolume();
  inline void clear_has_snapvolume();
  inline void set_has_snapamount();
  inline void clear_has_snapamount();
  inline void set_has_snapoichg();
  inline void clear_has_snapoichg();
  inline void set_has_snapavgpx();
  inline void clear_has_snapavgpx();
  inline void set_has_snapbuyvolume();
  inline void clear_has_snapbuyvolume();
  inline void set_has_snapsellvolume();
  inline void clear_has_snapsellvolume();
  inline void set_has_snapbsadiff();
  inline void clear_has_snapbsadiff();
  inline void set_has_snapflipups();
  inline void clear_has_snapflipups();
  inline void set_has_snapflipdns();
  inline void clear_has_snapflipdns();
  inline void set_has_buyorderssz();
  inline void clear_has_buyorderssz();
  inline void set_has_sellorderssz();
  inline void clear_has_sellorderssz();
  inline void set_has_buyordersszotdy();
  inline void clear_has_buyordersszotdy();
  inline void set_has_sellordersszotdy();
  inline void clear_has_sellordersszotdy();
  inline void set_has_buyordersszctdy();
  inline void clear_has_buyordersszctdy();
  inline void set_has_sellordersszctdy();
  inline void clear_has_sellordersszctdy();
  inline void set_has_buyordersszoytd();
  inline void clear_has_buyordersszoytd();
  inline void set_has_sellordersszoytd();
  inline void clear_has_sellordersszoytd();
  inline void set_has_buyordersszcytd();
  inline void clear_has_buyordersszcytd();
  inline void set_has_sellordersszcytd();
  inline void clear_has_sellordersszcytd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::int64 exchts_;
  ::google::protobuf::int64 recvts_;
  double lastpx_;
  ::google::protobuf::int64 lastts_;
  ::google::protobuf::int64 totvolume_;
  double totamount_;
  ::google::protobuf::int64 totoi_;
  ::google::protobuf::int64 szmultiplier_;
  ::google::protobuf::int64 pxscaletoint64_;
  double pxscaletodouble_;
  ::google::protobuf::int64 int64pxtick_;
  double pricetick_;
  double contractmultiplier_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::XT::LadderPxData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      LadderBookData_LadderpxmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::XT::LadderPxData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ladderpxmap_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ladderintpxs_;
  ::google::protobuf::RepeatedField< double > ladderpxs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      LadderBookData_Intpx2idxmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > intpx2idxmap_;
  ::google::protobuf::int32 mktbididx_;
  ::google::protobuf::int32 mktaskidx_;
  double mktbidpx_;
  double mktaskpx_;
  ::google::protobuf::int64 mktbidsz_;
  ::google::protobuf::int64 mktasksz_;
  double mktbidpxprev_;
  double mktaskpxprev_;
  ::google::protobuf::int64 mktbidszprev_;
  ::google::protobuf::int64 mktaskszprev_;
  ::google::protobuf::int64 bestszchged_;
  ::google::protobuf::int64 bestpxtickchged_;
  double midpxchged_;
  ::google::protobuf::int64 snapvolume_;
  double snapamount_;
  ::google::protobuf::int64 snapoichg_;
  double snapavgpx_;
  ::google::protobuf::int64 snapbuyvolume_;
  ::google::protobuf::int64 snapsellvolume_;
  double snapbsadiff_;
  double snapflipups_;
  double snapflipdns_;
  ::XT::OrdersSzPair* buyorderssz_;
  ::XT::OrdersSzPair* sellorderssz_;
  ::XT::OrdersSzPair* buyordersszotdy_;
  ::XT::OrdersSzPair* sellordersszotdy_;
  ::XT::OrdersSzPair* buyordersszctdy_;
  ::XT::OrdersSzPair* sellordersszctdy_;
  ::XT::OrdersSzPair* buyordersszoytd_;
  ::XT::OrdersSzPair* sellordersszoytd_;
  ::XT::OrdersSzPair* buyordersszcytd_;
  ::XT::OrdersSzPair* sellordersszcytd_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      LadderBookData_Oid2openszmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > oid2openszmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      LadderBookData_Qid2bidopenszmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > qid2bidopenszmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      LadderBookData_Qid2askopenszmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > qid2askopenszmap_;
  ::google::protobuf::int32 numbookupdates_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static LadderBookData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DayData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DayData) */ {
 public:
  DayData();
  virtual ~DayData();

  DayData(const DayData& from);

  inline DayData& operator=(const DayData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayData& default_instance();

  void Swap(DayData* other);

  // implements Message ----------------------------------------------

  inline DayData* New() const { return New(NULL); }

  DayData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayData& from);
  void MergeFrom(const DayData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DayData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tradingday = 1 [default = 0];
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingdayFieldNumber = 1;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // optional int32 prevtradingday = 2 [default = 0];
  bool has_prevtradingday() const;
  void clear_prevtradingday();
  static const int kPrevtradingdayFieldNumber = 2;
  ::google::protobuf::int32 prevtradingday() const;
  void set_prevtradingday(::google::protobuf::int32 value);

  // optional int32 hasprevsettle = 3 [default = 0];
  bool has_hasprevsettle() const;
  void clear_hasprevsettle();
  static const int kHasprevsettleFieldNumber = 3;
  ::google::protobuf::int32 hasprevsettle() const;
  void set_hasprevsettle(::google::protobuf::int32 value);

  // optional double prevsettlepx = 4 [default = 0];
  bool has_prevsettlepx() const;
  void clear_prevsettlepx();
  static const int kPrevsettlepxFieldNumber = 4;
  double prevsettlepx() const;
  void set_prevsettlepx(double value);

  // optional int32 hasprevclose = 5 [default = 0];
  bool has_hasprevclose() const;
  void clear_hasprevclose();
  static const int kHasprevcloseFieldNumber = 5;
  ::google::protobuf::int32 hasprevclose() const;
  void set_hasprevclose(::google::protobuf::int32 value);

  // optional double prevclosepx = 6 [default = 0];
  bool has_prevclosepx() const;
  void clear_prevclosepx();
  static const int kPrevclosepxFieldNumber = 6;
  double prevclosepx() const;
  void set_prevclosepx(double value);

  // optional int32 hasprevtot = 7 [default = 0];
  bool has_hasprevtot() const;
  void clear_hasprevtot();
  static const int kHasprevtotFieldNumber = 7;
  ::google::protobuf::int32 hasprevtot() const;
  void set_hasprevtot(::google::protobuf::int32 value);

  // optional int64 prevtotvolume = 8 [default = 0];
  bool has_prevtotvolume() const;
  void clear_prevtotvolume();
  static const int kPrevtotvolumeFieldNumber = 8;
  ::google::protobuf::int64 prevtotvolume() const;
  void set_prevtotvolume(::google::protobuf::int64 value);

  // optional double prevtotamount = 9 [default = 0];
  bool has_prevtotamount() const;
  void clear_prevtotamount();
  static const int kPrevtotamountFieldNumber = 9;
  double prevtotamount() const;
  void set_prevtotamount(double value);

  // optional int64 prevtotoi = 10 [default = 0];
  bool has_prevtotoi() const;
  void clear_prevtotoi();
  static const int kPrevtotoiFieldNumber = 10;
  ::google::protobuf::int64 prevtotoi() const;
  void set_prevtotoi(::google::protobuf::int64 value);

  // optional int32 haslimitpx = 11 [default = 0];
  bool has_haslimitpx() const;
  void clear_haslimitpx();
  static const int kHaslimitpxFieldNumber = 11;
  ::google::protobuf::int32 haslimitpx() const;
  void set_haslimitpx(::google::protobuf::int32 value);

  // optional double lowerlimitpx = 12 [default = 0];
  bool has_lowerlimitpx() const;
  void clear_lowerlimitpx();
  static const int kLowerlimitpxFieldNumber = 12;
  double lowerlimitpx() const;
  void set_lowerlimitpx(double value);

  // optional double upperlimitpx = 13 [default = 0];
  bool has_upperlimitpx() const;
  void clear_upperlimitpx();
  static const int kUpperlimitpxFieldNumber = 13;
  double upperlimitpx() const;
  void set_upperlimitpx(double value);

  // optional double openprice = 14 [default = 0];
  bool has_openprice() const;
  void clear_openprice();
  static const int kOpenpriceFieldNumber = 14;
  double openprice() const;
  void set_openprice(double value);

  // optional double highpx = 15 [default = 0];
  bool has_highpx() const;
  void clear_highpx();
  static const int kHighpxFieldNumber = 15;
  double highpx() const;
  void set_highpx(double value);

  // optional double lowpx = 16 [default = 0];
  bool has_lowpx() const;
  void clear_lowpx();
  static const int kLowpxFieldNumber = 16;
  double lowpx() const;
  void set_lowpx(double value);

  // optional double closeprice = 17 [default = 0];
  bool has_closeprice() const;
  void clear_closeprice();
  static const int kClosepriceFieldNumber = 17;
  double closeprice() const;
  void set_closeprice(double value);

  // optional int64 totvolume = 18 [default = 0];
  bool has_totvolume() const;
  void clear_totvolume();
  static const int kTotvolumeFieldNumber = 18;
  ::google::protobuf::int64 totvolume() const;
  void set_totvolume(::google::protobuf::int64 value);

  // optional double totamount = 19 [default = 0];
  bool has_totamount() const;
  void clear_totamount();
  static const int kTotamountFieldNumber = 19;
  double totamount() const;
  void set_totamount(double value);

  // optional int64 totoi = 20 [default = 0];
  bool has_totoi() const;
  void clear_totoi();
  static const int kTotoiFieldNumber = 20;
  ::google::protobuf::int64 totoi() const;
  void set_totoi(::google::protobuf::int64 value);

  // optional double settlepx = 21 [default = 0];
  bool has_settlepx() const;
  void clear_settlepx();
  static const int kSettlepxFieldNumber = 21;
  double settlepx() const;
  void set_settlepx(double value);

  // @@protoc_insertion_point(class_scope:XT.DayData)
 private:
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_prevtradingday();
  inline void clear_has_prevtradingday();
  inline void set_has_hasprevsettle();
  inline void clear_has_hasprevsettle();
  inline void set_has_prevsettlepx();
  inline void clear_has_prevsettlepx();
  inline void set_has_hasprevclose();
  inline void clear_has_hasprevclose();
  inline void set_has_prevclosepx();
  inline void clear_has_prevclosepx();
  inline void set_has_hasprevtot();
  inline void clear_has_hasprevtot();
  inline void set_has_prevtotvolume();
  inline void clear_has_prevtotvolume();
  inline void set_has_prevtotamount();
  inline void clear_has_prevtotamount();
  inline void set_has_prevtotoi();
  inline void clear_has_prevtotoi();
  inline void set_has_haslimitpx();
  inline void clear_has_haslimitpx();
  inline void set_has_lowerlimitpx();
  inline void clear_has_lowerlimitpx();
  inline void set_has_upperlimitpx();
  inline void clear_has_upperlimitpx();
  inline void set_has_openprice();
  inline void clear_has_openprice();
  inline void set_has_highpx();
  inline void clear_has_highpx();
  inline void set_has_lowpx();
  inline void clear_has_lowpx();
  inline void set_has_closeprice();
  inline void clear_has_closeprice();
  inline void set_has_totvolume();
  inline void clear_has_totvolume();
  inline void set_has_totamount();
  inline void clear_has_totamount();
  inline void set_has_totoi();
  inline void clear_has_totoi();
  inline void set_has_settlepx();
  inline void clear_has_settlepx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 prevtradingday_;
  double prevsettlepx_;
  ::google::protobuf::int32 hasprevsettle_;
  ::google::protobuf::int32 hasprevclose_;
  double prevclosepx_;
  ::google::protobuf::int64 prevtotvolume_;
  double prevtotamount_;
  ::google::protobuf::int32 hasprevtot_;
  ::google::protobuf::int32 haslimitpx_;
  ::google::protobuf::int64 prevtotoi_;
  double lowerlimitpx_;
  double upperlimitpx_;
  double openprice_;
  double highpx_;
  double lowpx_;
  double closeprice_;
  ::google::protobuf::int64 totvolume_;
  double totamount_;
  ::google::protobuf::int64 totoi_;
  double settlepx_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DayData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API BarData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.BarData) */ {
 public:
  BarData();
  virtual ~BarData();

  BarData(const BarData& from);

  inline BarData& operator=(const BarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BarData& default_instance();

  void Swap(BarData* other);

  // implements Message ----------------------------------------------

  inline BarData* New() const { return New(NULL); }

  BarData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BarData& from);
  void MergeFrom(const BarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BarData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instrid = 1 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 1;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional int64 begindt = 2 [default = 0];
  bool has_begindt() const;
  void clear_begindt();
  static const int kBegindtFieldNumber = 2;
  ::google::protobuf::int64 begindt() const;
  void set_begindt(::google::protobuf::int64 value);

  // optional string begindtstr = 3 [default = ""];
  bool has_begindtstr() const;
  void clear_begindtstr();
  static const int kBegindtstrFieldNumber = 3;
  const ::std::string& begindtstr() const;
  void set_begindtstr(const ::std::string& value);
  void set_begindtstr(const char* value);
  void set_begindtstr(const char* value, size_t size);
  ::std::string* mutable_begindtstr();
  ::std::string* release_begindtstr();
  void set_allocated_begindtstr(::std::string* begindtstr);

  // optional int64 enddt = 4;
  bool has_enddt() const;
  void clear_enddt();
  static const int kEnddtFieldNumber = 4;
  ::google::protobuf::int64 enddt() const;
  void set_enddt(::google::protobuf::int64 value);

  // optional double openprice = 5;
  bool has_openprice() const;
  void clear_openprice();
  static const int kOpenpriceFieldNumber = 5;
  double openprice() const;
  void set_openprice(double value);

  // optional double highpx = 6;
  bool has_highpx() const;
  void clear_highpx();
  static const int kHighpxFieldNumber = 6;
  double highpx() const;
  void set_highpx(double value);

  // optional double lowpx = 7;
  bool has_lowpx() const;
  void clear_lowpx();
  static const int kLowpxFieldNumber = 7;
  double lowpx() const;
  void set_lowpx(double value);

  // optional double closeprice = 8;
  bool has_closeprice() const;
  void clear_closeprice();
  static const int kClosepriceFieldNumber = 8;
  double closeprice() const;
  void set_closeprice(double value);

  // optional int64 volume = 9;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 9;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // optional int64 oichg = 10;
  bool has_oichg() const;
  void clear_oichg();
  static const int kOichgFieldNumber = 10;
  ::google::protobuf::int64 oichg() const;
  void set_oichg(::google::protobuf::int64 value);

  // optional int64 bsvoldiff = 11;
  bool has_bsvoldiff() const;
  void clear_bsvoldiff();
  static const int kBsvoldiffFieldNumber = 11;
  ::google::protobuf::int64 bsvoldiff() const;
  void set_bsvoldiff(::google::protobuf::int64 value);

  // optional double amount = 12;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 12;
  double amount() const;
  void set_amount(double value);

  // optional double bsadiff = 13;
  bool has_bsadiff() const;
  void clear_bsadiff();
  static const int kBsadiffFieldNumber = 13;
  double bsadiff() const;
  void set_bsadiff(double value);

  // optional double flipups = 14;
  bool has_flipups() const;
  void clear_flipups();
  static const int kFlipupsFieldNumber = 14;
  double flipups() const;
  void set_flipups(double value);

  // optional double flipdns = 15;
  bool has_flipdns() const;
  void clear_flipdns();
  static const int kFlipdnsFieldNumber = 15;
  double flipdns() const;
  void set_flipdns(double value);

  // optional int32 flag = 16;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 16;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional string tagdata = 17;
  bool has_tagdata() const;
  void clear_tagdata();
  static const int kTagdataFieldNumber = 17;
  const ::std::string& tagdata() const;
  void set_tagdata(const ::std::string& value);
  void set_tagdata(const char* value);
  void set_tagdata(const char* value, size_t size);
  ::std::string* mutable_tagdata();
  ::std::string* release_tagdata();
  void set_allocated_tagdata(::std::string* tagdata);

  // @@protoc_insertion_point(class_scope:XT.BarData)
 private:
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_begindt();
  inline void clear_has_begindt();
  inline void set_has_begindtstr();
  inline void clear_has_begindtstr();
  inline void set_has_enddt();
  inline void clear_has_enddt();
  inline void set_has_openprice();
  inline void clear_has_openprice();
  inline void set_has_highpx();
  inline void clear_has_highpx();
  inline void set_has_lowpx();
  inline void clear_has_lowpx();
  inline void set_has_closeprice();
  inline void clear_has_closeprice();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_oichg();
  inline void clear_has_oichg();
  inline void set_has_bsvoldiff();
  inline void clear_has_bsvoldiff();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_bsadiff();
  inline void clear_has_bsadiff();
  inline void set_has_flipups();
  inline void clear_has_flipups();
  inline void set_has_flipdns();
  inline void clear_has_flipdns();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_tagdata();
  inline void clear_has_tagdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int64 begindt_;
  ::google::protobuf::internal::ArenaStringPtr begindtstr_;
  ::google::protobuf::int64 enddt_;
  double openprice_;
  double highpx_;
  double lowpx_;
  double closeprice_;
  ::google::protobuf::int64 volume_;
  ::google::protobuf::int64 oichg_;
  ::google::protobuf::int64 bsvoldiff_;
  double amount_;
  double bsadiff_;
  double flipups_;
  double flipdns_;
  ::google::protobuf::internal::ArenaStringPtr tagdata_;
  ::google::protobuf::int32 flag_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static BarData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API BarDataMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.BarDataMap) */ {
 public:
  BarDataMap();
  virtual ~BarDataMap();

  BarDataMap(const BarDataMap& from);

  inline BarDataMap& operator=(const BarDataMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BarDataMap& default_instance();

  void Swap(BarDataMap* other);

  // implements Message ----------------------------------------------

  inline BarDataMap* New() const { return New(NULL); }

  BarDataMap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BarDataMap& from);
  void MergeFrom(const BarDataMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BarDataMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 span = 1;
  bool has_span() const;
  void clear_span();
  static const int kSpanFieldNumber = 1;
  ::google::protobuf::int32 span() const;
  void set_span(::google::protobuf::int32 value);

  // optional int64 spandt = 2;
  bool has_spandt() const;
  void clear_spandt();
  static const int kSpandtFieldNumber = 2;
  ::google::protobuf::int64 spandt() const;
  void set_spandt(::google::protobuf::int64 value);

  // optional int32 rollingtype = 3;
  bool has_rollingtype() const;
  void clear_rollingtype();
  static const int kRollingtypeFieldNumber = 3;
  ::google::protobuf::int32 rollingtype() const;
  void set_rollingtype(::google::protobuf::int32 value);

  // optional int32 dttype = 4;
  bool has_dttype() const;
  void clear_dttype();
  static const int kDttypeFieldNumber = 4;
  ::google::protobuf::int32 dttype() const;
  void set_dttype(::google::protobuf::int32 value);

  // optional int64 lastts = 5;
  bool has_lastts() const;
  void clear_lastts();
  static const int kLasttsFieldNumber = 5;
  ::google::protobuf::int64 lastts() const;
  void set_lastts(::google::protobuf::int64 value);

  // map<int64, .XT.BarData> tstobardatamap = 10;
  int tstobardatamap_size() const;
  void clear_tstobardatamap();
  static const int kTstobardatamapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::BarData >&
      tstobardatamap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::XT::BarData >*
      mutable_tstobardatamap();

  // map<int32, int64> idxtotsmap = 11;
  int idxtotsmap_size() const;
  void clear_idxtotsmap();
  static const int kIdxtotsmapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      idxtotsmap() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_idxtotsmap();

  // map<int64, int32> tstoidxmap = 12;
  int tstoidxmap_size() const;
  void clear_tstoidxmap();
  static const int kTstoidxmapFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
      tstoidxmap() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
      mutable_tstoidxmap();

  // @@protoc_insertion_point(class_scope:XT.BarDataMap)
 private:
  inline void set_has_span();
  inline void clear_has_span();
  inline void set_has_spandt();
  inline void clear_has_spandt();
  inline void set_has_rollingtype();
  inline void clear_has_rollingtype();
  inline void set_has_dttype();
  inline void clear_has_dttype();
  inline void set_has_lastts();
  inline void clear_has_lastts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 spandt_;
  ::google::protobuf::int32 span_;
  ::google::protobuf::int32 rollingtype_;
  ::google::protobuf::int64 lastts_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::XT::BarData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      BarDataMap_TstobardatamapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::XT::BarData,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > tstobardatamap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      BarDataMap_IdxtotsmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > idxtotsmap_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      BarDataMap_TstoidxmapEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > tstoidxmap_;
  ::google::protobuf::int32 dttype_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static BarDataMap* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API ProductInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.ProductInfo) */ {
 public:
  ProductInfo();
  virtual ~ProductInfo();

  ProductInfo(const ProductInfo& from);

  inline ProductInfo& operator=(const ProductInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductInfo& default_instance();

  void Swap(ProductInfo* other);

  // implements Message ----------------------------------------------

  inline ProductInfo* New() const { return New(NULL); }

  ProductInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductInfo& from);
  void MergeFrom(const ProductInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exchid = 1;
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 1;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string securitytype = 2;
  bool has_securitytype() const;
  void clear_securitytype();
  static const int kSecuritytypeFieldNumber = 2;
  const ::std::string& securitytype() const;
  void set_securitytype(const ::std::string& value);
  void set_securitytype(const char* value);
  void set_securitytype(const char* value, size_t size);
  ::std::string* mutable_securitytype();
  ::std::string* release_securitytype();
  void set_allocated_securitytype(::std::string* securitytype);

  // optional string productid = 3;
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 3;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string underlyingsymbol = 4;
  bool has_underlyingsymbol() const;
  void clear_underlyingsymbol();
  static const int kUnderlyingsymbolFieldNumber = 4;
  const ::std::string& underlyingsymbol() const;
  void set_underlyingsymbol(const ::std::string& value);
  void set_underlyingsymbol(const char* value);
  void set_underlyingsymbol(const char* value, size_t size);
  ::std::string* mutable_underlyingsymbol();
  ::std::string* release_underlyingsymbol();
  void set_allocated_underlyingsymbol(::std::string* underlyingsymbol);

  // optional double pricetick = 5;
  bool has_pricetick() const;
  void clear_pricetick();
  static const int kPricetickFieldNumber = 5;
  double pricetick() const;
  void set_pricetick(double value);

  // optional double contractmultiplier = 6;
  bool has_contractmultiplier() const;
  void clear_contractmultiplier();
  static const int kContractmultiplierFieldNumber = 6;
  double contractmultiplier() const;
  void set_contractmultiplier(double value);

  // optional string tagdata = 7;
  bool has_tagdata() const;
  void clear_tagdata();
  static const int kTagdataFieldNumber = 7;
  const ::std::string& tagdata() const;
  void set_tagdata(const ::std::string& value);
  void set_tagdata(const char* value);
  void set_tagdata(const char* value, size_t size);
  ::std::string* mutable_tagdata();
  ::std::string* release_tagdata();
  void set_allocated_tagdata(::std::string* tagdata);

  // @@protoc_insertion_point(class_scope:XT.ProductInfo)
 private:
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_securitytype();
  inline void clear_has_securitytype();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_underlyingsymbol();
  inline void clear_has_underlyingsymbol();
  inline void set_has_pricetick();
  inline void clear_has_pricetick();
  inline void set_has_contractmultiplier();
  inline void clear_has_contractmultiplier();
  inline void set_has_tagdata();
  inline void clear_has_tagdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr securitytype_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr underlyingsymbol_;
  double pricetick_;
  double contractmultiplier_;
  ::google::protobuf::internal::ArenaStringPtr tagdata_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static ProductInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrumentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrumentInfo) */ {
 public:
  InstrumentInfo();
  virtual ~InstrumentInfo();

  InstrumentInfo(const InstrumentInfo& from);

  inline InstrumentInfo& operator=(const InstrumentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrumentInfo& default_instance();

  void Swap(InstrumentInfo* other);

  // implements Message ----------------------------------------------

  inline InstrumentInfo* New() const { return New(NULL); }

  InstrumentInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrumentInfo& from);
  void MergeFrom(const InstrumentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrumentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exchid = 1;
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 1;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string instrid = 2;
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 2;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string securitytype = 3;
  bool has_securitytype() const;
  void clear_securitytype();
  static const int kSecuritytypeFieldNumber = 3;
  const ::std::string& securitytype() const;
  void set_securitytype(const ::std::string& value);
  void set_securitytype(const char* value);
  void set_securitytype(const char* value, size_t size);
  ::std::string* mutable_securitytype();
  ::std::string* release_securitytype();
  void set_allocated_securitytype(::std::string* securitytype);

  // optional string productid = 4;
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 4;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional int32 expireintdate = 5;
  bool has_expireintdate() const;
  void clear_expireintdate();
  static const int kExpireintdateFieldNumber = 5;
  ::google::protobuf::int32 expireintdate() const;
  void set_expireintdate(::google::protobuf::int32 value);

  // optional int32 callputtype = 6;
  bool has_callputtype() const;
  void clear_callputtype();
  static const int kCallputtypeFieldNumber = 6;
  ::google::protobuf::int32 callputtype() const;
  void set_callputtype(::google::protobuf::int32 value);

  // optional double strikeprice = 7;
  bool has_strikeprice() const;
  void clear_strikeprice();
  static const int kStrikepriceFieldNumber = 7;
  double strikeprice() const;
  void set_strikeprice(double value);

  // optional double pricetick = 8;
  bool has_pricetick() const;
  void clear_pricetick();
  static const int kPricetickFieldNumber = 8;
  double pricetick() const;
  void set_pricetick(double value);

  // optional double contractmultiplier = 9;
  bool has_contractmultiplier() const;
  void clear_contractmultiplier();
  static const int kContractmultiplierFieldNumber = 9;
  double contractmultiplier() const;
  void set_contractmultiplier(double value);

  // optional string tagdata = 10;
  bool has_tagdata() const;
  void clear_tagdata();
  static const int kTagdataFieldNumber = 10;
  const ::std::string& tagdata() const;
  void set_tagdata(const ::std::string& value);
  void set_tagdata(const char* value);
  void set_tagdata(const char* value, size_t size);
  ::std::string* mutable_tagdata();
  ::std::string* release_tagdata();
  void set_allocated_tagdata(::std::string* tagdata);

  // @@protoc_insertion_point(class_scope:XT.InstrumentInfo)
 private:
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_securitytype();
  inline void clear_has_securitytype();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_expireintdate();
  inline void clear_has_expireintdate();
  inline void set_has_callputtype();
  inline void clear_has_callputtype();
  inline void set_has_strikeprice();
  inline void clear_has_strikeprice();
  inline void set_has_pricetick();
  inline void clear_has_pricetick();
  inline void set_has_contractmultiplier();
  inline void clear_has_contractmultiplier();
  inline void set_has_tagdata();
  inline void clear_has_tagdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::internal::ArenaStringPtr securitytype_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::int32 expireintdate_;
  ::google::protobuf::int32 callputtype_;
  double strikeprice_;
  double pricetick_;
  double contractmultiplier_;
  ::google::protobuf::internal::ArenaStringPtr tagdata_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrumentInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API InstrumentEventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.InstrumentEventInfo) */ {
 public:
  InstrumentEventInfo();
  virtual ~InstrumentEventInfo();

  InstrumentEventInfo(const InstrumentEventInfo& from);

  inline InstrumentEventInfo& operator=(const InstrumentEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstrumentEventInfo& default_instance();

  void Swap(InstrumentEventInfo* other);

  // implements Message ----------------------------------------------

  inline InstrumentEventInfo* New() const { return New(NULL); }

  InstrumentEventInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstrumentEventInfo& from);
  void MergeFrom(const InstrumentEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstrumentEventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // optional int32 iid = 2;
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 2;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // optional int32 orderid = 3;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int32 orderid() const;
  void set_orderid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.InstrumentEventInfo)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_orderid();
  inline void clear_has_orderid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tag_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 orderid_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static InstrumentEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TAParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TAParams) */ {
 public:
  TAParams();
  virtual ~TAParams();

  TAParams(const TAParams& from);

  inline TAParams& operator=(const TAParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAParams& default_instance();

  void Swap(TAParams* other);

  // implements Message ----------------------------------------------

  inline TAParams* New() const { return New(NULL); }

  TAParams* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAParams& from);
  void MergeFrom(const TAParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TAParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 smaPeriod = 1 [default = 12];
  bool has_smaperiod() const;
  void clear_smaperiod();
  static const int kSmaPeriodFieldNumber = 1;
  ::google::protobuf::int32 smaperiod() const;
  void set_smaperiod(::google::protobuf::int32 value);

  // optional int32 smaMidPeriod = 2 [default = 12];
  bool has_smamidperiod() const;
  void clear_smamidperiod();
  static const int kSmaMidPeriodFieldNumber = 2;
  ::google::protobuf::int32 smamidperiod() const;
  void set_smamidperiod(::google::protobuf::int32 value);

  // optional int32 smaFastPeriod = 3 [default = 12];
  bool has_smafastperiod() const;
  void clear_smafastperiod();
  static const int kSmaFastPeriodFieldNumber = 3;
  ::google::protobuf::int32 smafastperiod() const;
  void set_smafastperiod(::google::protobuf::int32 value);

  // optional int32 smaSlowPeriod = 4 [default = 26];
  bool has_smaslowperiod() const;
  void clear_smaslowperiod();
  static const int kSmaSlowPeriodFieldNumber = 4;
  ::google::protobuf::int32 smaslowperiod() const;
  void set_smaslowperiod(::google::protobuf::int32 value);

  // optional int32 emaPeriod = 5 [default = 12];
  bool has_emaperiod() const;
  void clear_emaperiod();
  static const int kEmaPeriodFieldNumber = 5;
  ::google::protobuf::int32 emaperiod() const;
  void set_emaperiod(::google::protobuf::int32 value);

  // optional int32 emaMidPeriod = 6 [default = 12];
  bool has_emamidperiod() const;
  void clear_emamidperiod();
  static const int kEmaMidPeriodFieldNumber = 6;
  ::google::protobuf::int32 emamidperiod() const;
  void set_emamidperiod(::google::protobuf::int32 value);

  // optional int32 emaFastPeriod = 7 [default = 12];
  bool has_emafastperiod() const;
  void clear_emafastperiod();
  static const int kEmaFastPeriodFieldNumber = 7;
  ::google::protobuf::int32 emafastperiod() const;
  void set_emafastperiod(::google::protobuf::int32 value);

  // optional int32 emaSlowPeriod = 8 [default = 26];
  bool has_emaslowperiod() const;
  void clear_emaslowperiod();
  static const int kEmaSlowPeriodFieldNumber = 8;
  ::google::protobuf::int32 emaslowperiod() const;
  void set_emaslowperiod(::google::protobuf::int32 value);

  // optional int32 atrPeriod = 9 [default = 14];
  bool has_atrperiod() const;
  void clear_atrperiod();
  static const int kAtrPeriodFieldNumber = 9;
  ::google::protobuf::int32 atrperiod() const;
  void set_atrperiod(::google::protobuf::int32 value);

  // optional int32 rsiPeriod = 10 [default = 14];
  bool has_rsiperiod() const;
  void clear_rsiperiod();
  static const int kRsiPeriodFieldNumber = 10;
  ::google::protobuf::int32 rsiperiod() const;
  void set_rsiperiod(::google::protobuf::int32 value);

  // optional double rsiOverbought = 11 [default = 70];
  bool has_rsioverbought() const;
  void clear_rsioverbought();
  static const int kRsiOverboughtFieldNumber = 11;
  double rsioverbought() const;
  void set_rsioverbought(double value);

  // optional double rsiOversold = 12 [default = 30];
  bool has_rsioversold() const;
  void clear_rsioversold();
  static const int kRsiOversoldFieldNumber = 12;
  double rsioversold() const;
  void set_rsioversold(double value);

  // optional int32 mfiPeriod = 13 [default = 14];
  bool has_mfiperiod() const;
  void clear_mfiperiod();
  static const int kMfiPeriodFieldNumber = 13;
  ::google::protobuf::int32 mfiperiod() const;
  void set_mfiperiod(::google::protobuf::int32 value);

  // optional int32 cciPeriod = 14 [default = 20];
  bool has_cciperiod() const;
  void clear_cciperiod();
  static const int kCciPeriodFieldNumber = 14;
  ::google::protobuf::int32 cciperiod() const;
  void set_cciperiod(::google::protobuf::int32 value);

  // optional double cciOverbought = 15 [default = 1.5];
  bool has_ccioverbought() const;
  void clear_ccioverbought();
  static const int kCciOverboughtFieldNumber = 15;
  double ccioverbought() const;
  void set_ccioverbought(double value);

  // optional double cciOversold = 16 [default = 1.5];
  bool has_ccioversold() const;
  void clear_ccioversold();
  static const int kCciOversoldFieldNumber = 16;
  double ccioversold() const;
  void set_ccioversold(double value);

  // optional int32 cciMaPeriod = 17 [default = 5];
  bool has_ccimaperiod() const;
  void clear_ccimaperiod();
  static const int kCciMaPeriodFieldNumber = 17;
  ::google::protobuf::int32 ccimaperiod() const;
  void set_ccimaperiod(::google::protobuf::int32 value);

  // optional int32 adxPeriod = 18 [default = 14];
  bool has_adxperiod() const;
  void clear_adxperiod();
  static const int kAdxPeriodFieldNumber = 18;
  ::google::protobuf::int32 adxperiod() const;
  void set_adxperiod(::google::protobuf::int32 value);

  // optional int32 macdMAType = 19 [default = 0];
  bool has_macdmatype() const;
  void clear_macdmatype();
  static const int kMacdMATypeFieldNumber = 19;
  ::google::protobuf::int32 macdmatype() const;
  void set_macdmatype(::google::protobuf::int32 value);

  // optional int32 macdFastPeriod = 20 [default = 12];
  bool has_macdfastperiod() const;
  void clear_macdfastperiod();
  static const int kMacdFastPeriodFieldNumber = 20;
  ::google::protobuf::int32 macdfastperiod() const;
  void set_macdfastperiod(::google::protobuf::int32 value);

  // optional int32 macdSlowPeriod = 21 [default = 26];
  bool has_macdslowperiod() const;
  void clear_macdslowperiod();
  static const int kMacdSlowPeriodFieldNumber = 21;
  ::google::protobuf::int32 macdslowperiod() const;
  void set_macdslowperiod(::google::protobuf::int32 value);

  // optional int32 macdSignalPeriod = 22 [default = 9];
  bool has_macdsignalperiod() const;
  void clear_macdsignalperiod();
  static const int kMacdSignalPeriodFieldNumber = 22;
  ::google::protobuf::int32 macdsignalperiod() const;
  void set_macdsignalperiod(::google::protobuf::int32 value);

  // optional int32 macdHistMaPeriod = 23 [default = 5];
  bool has_macdhistmaperiod() const;
  void clear_macdhistmaperiod();
  static const int kMacdHistMaPeriodFieldNumber = 23;
  ::google::protobuf::int32 macdhistmaperiod() const;
  void set_macdhistmaperiod(::google::protobuf::int32 value);

  // optional int32 bbPeriod = 24 [default = 20];
  bool has_bbperiod() const;
  void clear_bbperiod();
  static const int kBbPeriodFieldNumber = 24;
  ::google::protobuf::int32 bbperiod() const;
  void set_bbperiod(::google::protobuf::int32 value);

  // optional int32 volbbPeriod = 25 [default = 20];
  bool has_volbbperiod() const;
  void clear_volbbperiod();
  static const int kVolbbPeriodFieldNumber = 25;
  ::google::protobuf::int32 volbbperiod() const;
  void set_volbbperiod(::google::protobuf::int32 value);

  // optional int32 bsvdBBPeriod = 26 [default = 20];
  bool has_bsvdbbperiod() const;
  void clear_bsvdbbperiod();
  static const int kBsvdBBPeriodFieldNumber = 26;
  ::google::protobuf::int32 bsvdbbperiod() const;
  void set_bsvdbbperiod(::google::protobuf::int32 value);

  // optional int32 oichgBBPeriod = 27 [default = 20];
  bool has_oichgbbperiod() const;
  void clear_oichgbbperiod();
  static const int kOichgBBPeriodFieldNumber = 27;
  ::google::protobuf::int32 oichgbbperiod() const;
  void set_oichgbbperiod(::google::protobuf::int32 value);

  // optional int32 bbMaPeriod = 28 [default = 20];
  bool has_bbmaperiod() const;
  void clear_bbmaperiod();
  static const int kBbMaPeriodFieldNumber = 28;
  ::google::protobuf::int32 bbmaperiod() const;
  void set_bbmaperiod(::google::protobuf::int32 value);

  // optional int32 volbbMaPeriod = 29 [default = 20];
  bool has_volbbmaperiod() const;
  void clear_volbbmaperiod();
  static const int kVolbbMaPeriodFieldNumber = 29;
  ::google::protobuf::int32 volbbmaperiod() const;
  void set_volbbmaperiod(::google::protobuf::int32 value);

  // optional int32 bsvdBBMaPeriod = 30 [default = 20];
  bool has_bsvdbbmaperiod() const;
  void clear_bsvdbbmaperiod();
  static const int kBsvdBBMaPeriodFieldNumber = 30;
  ::google::protobuf::int32 bsvdbbmaperiod() const;
  void set_bsvdbbmaperiod(::google::protobuf::int32 value);

  // optional int32 oichgBBMaPeriod = 31 [default = 20];
  bool has_oichgbbmaperiod() const;
  void clear_oichgbbmaperiod();
  static const int kOichgBBMaPeriodFieldNumber = 31;
  ::google::protobuf::int32 oichgbbmaperiod() const;
  void set_oichgbbmaperiod(::google::protobuf::int32 value);

  // optional double sarFastAccInit = 32 [default = 0.03];
  bool has_sarfastaccinit() const;
  void clear_sarfastaccinit();
  static const int kSarFastAccInitFieldNumber = 32;
  double sarfastaccinit() const;
  void set_sarfastaccinit(double value);

  // optional double sarFastAccStep = 33 [default = 0.03];
  bool has_sarfastaccstep() const;
  void clear_sarfastaccstep();
  static const int kSarFastAccStepFieldNumber = 33;
  double sarfastaccstep() const;
  void set_sarfastaccstep(double value);

  // optional double sarFastAccMax = 34 [default = 0.3];
  bool has_sarfastaccmax() const;
  void clear_sarfastaccmax();
  static const int kSarFastAccMaxFieldNumber = 34;
  double sarfastaccmax() const;
  void set_sarfastaccmax(double value);

  // optional double sarMidAccInit = 35 [default = 0.02];
  bool has_sarmidaccinit() const;
  void clear_sarmidaccinit();
  static const int kSarMidAccInitFieldNumber = 35;
  double sarmidaccinit() const;
  void set_sarmidaccinit(double value);

  // optional double sarMidAccStep = 36 [default = 0.02];
  bool has_sarmidaccstep() const;
  void clear_sarmidaccstep();
  static const int kSarMidAccStepFieldNumber = 36;
  double sarmidaccstep() const;
  void set_sarmidaccstep(double value);

  // optional double sarMidAccMax = 37 [default = 0.2];
  bool has_sarmidaccmax() const;
  void clear_sarmidaccmax();
  static const int kSarMidAccMaxFieldNumber = 37;
  double sarmidaccmax() const;
  void set_sarmidaccmax(double value);

  // optional double sarSlowAccInit = 38 [default = 0.01];
  bool has_sarslowaccinit() const;
  void clear_sarslowaccinit();
  static const int kSarSlowAccInitFieldNumber = 38;
  double sarslowaccinit() const;
  void set_sarslowaccinit(double value);

  // optional double sarSlowAccStep = 39 [default = 0.01];
  bool has_sarslowaccstep() const;
  void clear_sarslowaccstep();
  static const int kSarSlowAccStepFieldNumber = 39;
  double sarslowaccstep() const;
  void set_sarslowaccstep(double value);

  // optional double sarSlowAccMax = 40 [default = 0.01];
  bool has_sarslowaccmax() const;
  void clear_sarslowaccmax();
  static const int kSarSlowAccMaxFieldNumber = 40;
  double sarslowaccmax() const;
  void set_sarslowaccmax(double value);

  // optional double bbsarDist = 41 [default = 1.5];
  bool has_bbsardist() const;
  void clear_bbsardist();
  static const int kBbsarDistFieldNumber = 41;
  double bbsardist() const;
  void set_bbsardist(double value);

  // optional double atrsarDist = 42 [default = 1.5];
  bool has_atrsardist() const;
  void clear_atrsardist();
  static const int kAtrsarDistFieldNumber = 42;
  double atrsardist() const;
  void set_atrsardist(double value);

  // optional int32 bbmidSlopePeriod = 43 [default = 10];
  bool has_bbmidslopeperiod() const;
  void clear_bbmidslopeperiod();
  static const int kBbmidSlopePeriodFieldNumber = 43;
  ::google::protobuf::int32 bbmidslopeperiod() const;
  void set_bbmidslopeperiod(::google::protobuf::int32 value);

  // optional int32 kbPeriod = 44 [default = 20];
  bool has_kbperiod() const;
  void clear_kbperiod();
  static const int kKbPeriodFieldNumber = 44;
  ::google::protobuf::int32 kbperiod() const;
  void set_kbperiod(::google::protobuf::int32 value);

  // optional int32 slowKPeriod = 45 [default = 14];
  bool has_slowkperiod() const;
  void clear_slowkperiod();
  static const int kSlowKPeriodFieldNumber = 45;
  ::google::protobuf::int32 slowkperiod() const;
  void set_slowkperiod(::google::protobuf::int32 value);

  // optional int32 slowDPeriod = 46 [default = 3];
  bool has_slowdperiod() const;
  void clear_slowdperiod();
  static const int kSlowDPeriodFieldNumber = 46;
  ::google::protobuf::int32 slowdperiod() const;
  void set_slowdperiod(::google::protobuf::int32 value);

  // optional int32 fastKPeriod = 47 [default = 14];
  bool has_fastkperiod() const;
  void clear_fastkperiod();
  static const int kFastKPeriodFieldNumber = 47;
  ::google::protobuf::int32 fastkperiod() const;
  void set_fastkperiod(::google::protobuf::int32 value);

  // optional int32 fastDPeriod = 48 [default = 3];
  bool has_fastdperiod() const;
  void clear_fastdperiod();
  static const int kFastDPeriodFieldNumber = 48;
  ::google::protobuf::int32 fastdperiod() const;
  void set_fastdperiod(::google::protobuf::int32 value);

  // optional int32 dmiatrPeriod = 49 [default = 14];
  bool has_dmiatrperiod() const;
  void clear_dmiatrperiod();
  static const int kDmiatrPeriodFieldNumber = 49;
  ::google::protobuf::int32 dmiatrperiod() const;
  void set_dmiatrperiod(::google::protobuf::int32 value);

  // optional int32 dmiadxPeriod = 50 [default = 6];
  bool has_dmiadxperiod() const;
  void clear_dmiadxperiod();
  static const int kDmiadxPeriodFieldNumber = 50;
  ::google::protobuf::int32 dmiadxperiod() const;
  void set_dmiadxperiod(::google::protobuf::int32 value);

  // optional int32 matype = 51 [default = 0];
  bool has_matype() const;
  void clear_matype();
  static const int kMatypeFieldNumber = 51;
  ::google::protobuf::int32 matype() const;
  void set_matype(::google::protobuf::int32 value);

  // optional int32 maPeriod1 = 52 [default = 5];
  bool has_maperiod1() const;
  void clear_maperiod1();
  static const int kMaPeriod1FieldNumber = 52;
  ::google::protobuf::int32 maperiod1() const;
  void set_maperiod1(::google::protobuf::int32 value);

  // optional int32 maPeriod2 = 53 [default = 10];
  bool has_maperiod2() const;
  void clear_maperiod2();
  static const int kMaPeriod2FieldNumber = 53;
  ::google::protobuf::int32 maperiod2() const;
  void set_maperiod2(::google::protobuf::int32 value);

  // optional int32 maPeriod3 = 54 [default = 20];
  bool has_maperiod3() const;
  void clear_maperiod3();
  static const int kMaPeriod3FieldNumber = 54;
  ::google::protobuf::int32 maperiod3() const;
  void set_maperiod3(::google::protobuf::int32 value);

  // optional int32 maPeriod4 = 55 [default = 40];
  bool has_maperiod4() const;
  void clear_maperiod4();
  static const int kMaPeriod4FieldNumber = 55;
  ::google::protobuf::int32 maperiod4() const;
  void set_maperiod4(::google::protobuf::int32 value);

  // optional int32 maPeriod5 = 56 [default = 60];
  bool has_maperiod5() const;
  void clear_maperiod5();
  static const int kMaPeriod5FieldNumber = 56;
  ::google::protobuf::int32 maperiod5() const;
  void set_maperiod5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.TAParams)
 private:
  inline void set_has_smaperiod();
  inline void clear_has_smaperiod();
  inline void set_has_smamidperiod();
  inline void clear_has_smamidperiod();
  inline void set_has_smafastperiod();
  inline void clear_has_smafastperiod();
  inline void set_has_smaslowperiod();
  inline void clear_has_smaslowperiod();
  inline void set_has_emaperiod();
  inline void clear_has_emaperiod();
  inline void set_has_emamidperiod();
  inline void clear_has_emamidperiod();
  inline void set_has_emafastperiod();
  inline void clear_has_emafastperiod();
  inline void set_has_emaslowperiod();
  inline void clear_has_emaslowperiod();
  inline void set_has_atrperiod();
  inline void clear_has_atrperiod();
  inline void set_has_rsiperiod();
  inline void clear_has_rsiperiod();
  inline void set_has_rsioverbought();
  inline void clear_has_rsioverbought();
  inline void set_has_rsioversold();
  inline void clear_has_rsioversold();
  inline void set_has_mfiperiod();
  inline void clear_has_mfiperiod();
  inline void set_has_cciperiod();
  inline void clear_has_cciperiod();
  inline void set_has_ccioverbought();
  inline void clear_has_ccioverbought();
  inline void set_has_ccioversold();
  inline void clear_has_ccioversold();
  inline void set_has_ccimaperiod();
  inline void clear_has_ccimaperiod();
  inline void set_has_adxperiod();
  inline void clear_has_adxperiod();
  inline void set_has_macdmatype();
  inline void clear_has_macdmatype();
  inline void set_has_macdfastperiod();
  inline void clear_has_macdfastperiod();
  inline void set_has_macdslowperiod();
  inline void clear_has_macdslowperiod();
  inline void set_has_macdsignalperiod();
  inline void clear_has_macdsignalperiod();
  inline void set_has_macdhistmaperiod();
  inline void clear_has_macdhistmaperiod();
  inline void set_has_bbperiod();
  inline void clear_has_bbperiod();
  inline void set_has_volbbperiod();
  inline void clear_has_volbbperiod();
  inline void set_has_bsvdbbperiod();
  inline void clear_has_bsvdbbperiod();
  inline void set_has_oichgbbperiod();
  inline void clear_has_oichgbbperiod();
  inline void set_has_bbmaperiod();
  inline void clear_has_bbmaperiod();
  inline void set_has_volbbmaperiod();
  inline void clear_has_volbbmaperiod();
  inline void set_has_bsvdbbmaperiod();
  inline void clear_has_bsvdbbmaperiod();
  inline void set_has_oichgbbmaperiod();
  inline void clear_has_oichgbbmaperiod();
  inline void set_has_sarfastaccinit();
  inline void clear_has_sarfastaccinit();
  inline void set_has_sarfastaccstep();
  inline void clear_has_sarfastaccstep();
  inline void set_has_sarfastaccmax();
  inline void clear_has_sarfastaccmax();
  inline void set_has_sarmidaccinit();
  inline void clear_has_sarmidaccinit();
  inline void set_has_sarmidaccstep();
  inline void clear_has_sarmidaccstep();
  inline void set_has_sarmidaccmax();
  inline void clear_has_sarmidaccmax();
  inline void set_has_sarslowaccinit();
  inline void clear_has_sarslowaccinit();
  inline void set_has_sarslowaccstep();
  inline void clear_has_sarslowaccstep();
  inline void set_has_sarslowaccmax();
  inline void clear_has_sarslowaccmax();
  inline void set_has_bbsardist();
  inline void clear_has_bbsardist();
  inline void set_has_atrsardist();
  inline void clear_has_atrsardist();
  inline void set_has_bbmidslopeperiod();
  inline void clear_has_bbmidslopeperiod();
  inline void set_has_kbperiod();
  inline void clear_has_kbperiod();
  inline void set_has_slowkperiod();
  inline void clear_has_slowkperiod();
  inline void set_has_slowdperiod();
  inline void clear_has_slowdperiod();
  inline void set_has_fastkperiod();
  inline void clear_has_fastkperiod();
  inline void set_has_fastdperiod();
  inline void clear_has_fastdperiod();
  inline void set_has_dmiatrperiod();
  inline void clear_has_dmiatrperiod();
  inline void set_has_dmiadxperiod();
  inline void clear_has_dmiadxperiod();
  inline void set_has_matype();
  inline void clear_has_matype();
  inline void set_has_maperiod1();
  inline void clear_has_maperiod1();
  inline void set_has_maperiod2();
  inline void clear_has_maperiod2();
  inline void set_has_maperiod3();
  inline void clear_has_maperiod3();
  inline void set_has_maperiod4();
  inline void clear_has_maperiod4();
  inline void set_has_maperiod5();
  inline void clear_has_maperiod5();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 smaperiod_;
  ::google::protobuf::int32 smamidperiod_;
  ::google::protobuf::int32 smafastperiod_;
  ::google::protobuf::int32 smaslowperiod_;
  ::google::protobuf::int32 emaperiod_;
  ::google::protobuf::int32 emamidperiod_;
  ::google::protobuf::int32 emafastperiod_;
  ::google::protobuf::int32 emaslowperiod_;
  ::google::protobuf::int32 atrperiod_;
  ::google::protobuf::int32 rsiperiod_;
  double rsioverbought_;
  double rsioversold_;
  ::google::protobuf::int32 mfiperiod_;
  ::google::protobuf::int32 cciperiod_;
  double ccioverbought_;
  double ccioversold_;
  ::google::protobuf::int32 ccimaperiod_;
  ::google::protobuf::int32 adxperiod_;
  ::google::protobuf::int32 macdmatype_;
  ::google::protobuf::int32 macdfastperiod_;
  ::google::protobuf::int32 macdslowperiod_;
  ::google::protobuf::int32 macdsignalperiod_;
  ::google::protobuf::int32 macdhistmaperiod_;
  ::google::protobuf::int32 bbperiod_;
  ::google::protobuf::int32 volbbperiod_;
  ::google::protobuf::int32 bsvdbbperiod_;
  ::google::protobuf::int32 oichgbbperiod_;
  ::google::protobuf::int32 bbmaperiod_;
  ::google::protobuf::int32 volbbmaperiod_;
  ::google::protobuf::int32 bsvdbbmaperiod_;
  double sarfastaccinit_;
  double sarfastaccstep_;
  double sarfastaccmax_;
  double sarmidaccinit_;
  double sarmidaccstep_;
  double sarmidaccmax_;
  ::google::protobuf::int32 oichgbbmaperiod_;
  ::google::protobuf::int32 bbmidslopeperiod_;
  double sarslowaccinit_;
  double sarslowaccstep_;
  double sarslowaccmax_;
  double bbsardist_;
  double atrsardist_;
  ::google::protobuf::int32 kbperiod_;
  ::google::protobuf::int32 slowkperiod_;
  ::google::protobuf::int32 slowdperiod_;
  ::google::protobuf::int32 fastkperiod_;
  ::google::protobuf::int32 fastdperiod_;
  ::google::protobuf::int32 dmiatrperiod_;
  ::google::protobuf::int32 dmiadxperiod_;
  ::google::protobuf::int32 matype_;
  ::google::protobuf::int32 maperiod1_;
  ::google::protobuf::int32 maperiod2_;
  ::google::protobuf::int32 maperiod3_;
  ::google::protobuf::int32 maperiod4_;
  ::google::protobuf::int32 maperiod5_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TAParams* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API OHLCVData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.OHLCVData) */ {
 public:
  OHLCVData();
  virtual ~OHLCVData();

  OHLCVData(const OHLCVData& from);

  inline OHLCVData& operator=(const OHLCVData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OHLCVData& default_instance();

  void Swap(OHLCVData* other);

  // implements Message ----------------------------------------------

  inline OHLCVData* New() const { return New(NULL); }

  OHLCVData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OHLCVData& from);
  void MergeFrom(const OHLCVData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OHLCVData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double open = 1;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 1;
  double open() const;
  void set_open(double value);

  // optional double high = 2;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 2;
  double high() const;
  void set_high(double value);

  // optional double low = 3;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 3;
  double low() const;
  void set_low(double value);

  // optional double close = 4;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 4;
  double close() const;
  void set_close(double value);

  // optional int64 volume = 5;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 5;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.OHLCVData)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_high();
  inline void clear_has_high();
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_close();
  inline void clear_has_close();
  inline void set_has_volume();
  inline void clear_has_volume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double open_;
  double high_;
  double low_;
  double close_;
  ::google::protobuf::int64 volume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static OHLCVData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DateOHLCV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DateOHLCV) */ {
 public:
  DateOHLCV();
  virtual ~DateOHLCV();

  DateOHLCV(const DateOHLCV& from);

  inline DateOHLCV& operator=(const DateOHLCV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DateOHLCV& default_instance();

  void Swap(DateOHLCV* other);

  // implements Message ----------------------------------------------

  inline DateOHLCV* New() const { return New(NULL); }

  DateOHLCV* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DateOHLCV& from);
  void MergeFrom(const DateOHLCV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DateOHLCV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // optional float open = 2;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 2;
  float open() const;
  void set_open(float value);

  // optional float high = 3;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 3;
  float high() const;
  void set_high(float value);

  // optional float low = 4;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 4;
  float low() const;
  void set_low(float value);

  // optional float close = 5;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 5;
  float close() const;
  void set_close(float value);

  // optional float amount = 6;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 6;
  float amount() const;
  void set_amount(float value);

  // optional int64 volume = 7;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 7;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.DateOHLCV)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_high();
  inline void clear_has_high();
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_close();
  inline void clear_has_close();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_volume();
  inline void clear_has_volume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 date_;
  float open_;
  float high_;
  float low_;
  float close_;
  float amount_;
  ::google::protobuf::int64 volume_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DateOHLCV* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API DateTimeOHLCV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.DateTimeOHLCV) */ {
 public:
  DateTimeOHLCV();
  virtual ~DateTimeOHLCV();

  DateTimeOHLCV(const DateTimeOHLCV& from);

  inline DateTimeOHLCV& operator=(const DateTimeOHLCV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DateTimeOHLCV& default_instance();

  void Swap(DateTimeOHLCV* other);

  // implements Message ----------------------------------------------

  inline DateTimeOHLCV* New() const { return New(NULL); }

  DateTimeOHLCV* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DateTimeOHLCV& from);
  void MergeFrom(const DateTimeOHLCV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DateTimeOHLCV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional float open = 3;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 3;
  float open() const;
  void set_open(float value);

  // optional float high = 4;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 4;
  float high() const;
  void set_high(float value);

  // optional float low = 5;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 5;
  float low() const;
  void set_low(float value);

  // optional float close = 6;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 6;
  float close() const;
  void set_close(float value);

  // optional float amount = 7;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 7;
  float amount() const;
  void set_amount(float value);

  // optional int64 volume = 8;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 8;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:XT.DateTimeOHLCV)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_high();
  inline void clear_has_high();
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_close();
  inline void clear_has_close();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_volume();
  inline void clear_has_volume();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 time_;
  float open_;
  float high_;
  float low_;
  float close_;
  ::google::protobuf::int64 volume_;
  float amount_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static DateTimeOHLCV* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TDXDayData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TDXDayData) */ {
 public:
  TDXDayData();
  virtual ~TDXDayData();

  TDXDayData(const TDXDayData& from);

  inline TDXDayData& operator=(const TDXDayData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDXDayData& default_instance();

  void Swap(TDXDayData* other);

  // implements Message ----------------------------------------------

  inline TDXDayData* New() const { return New(NULL); }

  TDXDayData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDXDayData& from);
  void MergeFrom(const TDXDayData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TDXDayData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // optional int32 open = 2;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 2;
  ::google::protobuf::int32 open() const;
  void set_open(::google::protobuf::int32 value);

  // optional int32 high = 3;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 3;
  ::google::protobuf::int32 high() const;
  void set_high(::google::protobuf::int32 value);

  // optional int32 low = 4;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 4;
  ::google::protobuf::int32 low() const;
  void set_low(::google::protobuf::int32 value);

  // optional int32 close = 5;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 5;
  ::google::protobuf::int32 close() const;
  void set_close(::google::protobuf::int32 value);

  // optional float amount = 6;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 6;
  float amount() const;
  void set_amount(float value);

  // optional int32 volume = 7;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 7;
  ::google::protobuf::int32 volume() const;
  void set_volume(::google::protobuf::int32 value);

  // optional int32 reserve = 8;
  bool has_reserve() const;
  void clear_reserve();
  static const int kReserveFieldNumber = 8;
  ::google::protobuf::int32 reserve() const;
  void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.TDXDayData)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_high();
  inline void clear_has_high();
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_close();
  inline void clear_has_close();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 open_;
  ::google::protobuf::int32 high_;
  ::google::protobuf::int32 low_;
  ::google::protobuf::int32 close_;
  float amount_;
  ::google::protobuf::int32 volume_;
  ::google::protobuf::int32 reserve_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TDXDayData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API TDXMinData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.TDXMinData) */ {
 public:
  TDXMinData();
  virtual ~TDXMinData();

  TDXMinData(const TDXMinData& from);

  inline TDXMinData& operator=(const TDXMinData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDXMinData& default_instance();

  void Swap(TDXMinData* other);

  // implements Message ----------------------------------------------

  inline TDXMinData* New() const { return New(NULL); }

  TDXMinData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDXMinData& from);
  void MergeFrom(const TDXMinData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TDXMinData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // optional int32 minutes = 2;
  bool has_minutes() const;
  void clear_minutes();
  static const int kMinutesFieldNumber = 2;
  ::google::protobuf::int32 minutes() const;
  void set_minutes(::google::protobuf::int32 value);

  // optional float open = 3;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 3;
  float open() const;
  void set_open(float value);

  // optional float high = 4;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 4;
  float high() const;
  void set_high(float value);

  // optional float low = 5;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 5;
  float low() const;
  void set_low(float value);

  // optional float close = 6;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 6;
  float close() const;
  void set_close(float value);

  // optional float amount = 7;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 7;
  float amount() const;
  void set_amount(float value);

  // optional int32 volume = 8;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 8;
  ::google::protobuf::int32 volume() const;
  void set_volume(::google::protobuf::int32 value);

  // optional int32 reserve = 9;
  bool has_reserve() const;
  void clear_reserve();
  static const int kReserveFieldNumber = 9;
  ::google::protobuf::int32 reserve() const;
  void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.TDXMinData)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_minutes();
  inline void clear_has_minutes();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_high();
  inline void clear_has_high();
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_close();
  inline void clear_has_close();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 minutes_;
  float open_;
  float high_;
  float low_;
  float close_;
  float amount_;
  ::google::protobuf::int32 volume_;
  ::google::protobuf::int32 reserve_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static TDXMinData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API KCBPTagQuoteInfo10 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.KCBPTagQuoteInfo10) */ {
 public:
  KCBPTagQuoteInfo10();
  virtual ~KCBPTagQuoteInfo10();

  KCBPTagQuoteInfo10(const KCBPTagQuoteInfo10& from);

  inline KCBPTagQuoteInfo10& operator=(const KCBPTagQuoteInfo10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KCBPTagQuoteInfo10& default_instance();

  void Swap(KCBPTagQuoteInfo10* other);

  // implements Message ----------------------------------------------

  inline KCBPTagQuoteInfo10* New() const { return New(NULL); }

  KCBPTagQuoteInfo10* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KCBPTagQuoteInfo10& from);
  void MergeFrom(const KCBPTagQuoteInfo10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KCBPTagQuoteInfo10* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cMarket = 1;
  bool has_cmarket() const;
  void clear_cmarket();
  static const int kCMarketFieldNumber = 1;
  ::google::protobuf::int32 cmarket() const;
  void set_cmarket(::google::protobuf::int32 value);

  // optional string szStkcode = 2;
  bool has_szstkcode() const;
  void clear_szstkcode();
  static const int kSzStkcodeFieldNumber = 2;
  const ::std::string& szstkcode() const;
  void set_szstkcode(const ::std::string& value);
  void set_szstkcode(const char* value);
  void set_szstkcode(const char* value, size_t size);
  ::std::string* mutable_szstkcode();
  ::std::string* release_szstkcode();
  void set_allocated_szstkcode(::std::string* szstkcode);

  // optional string szStkname = 3;
  bool has_szstkname() const;
  void clear_szstkname();
  static const int kSzStknameFieldNumber = 3;
  const ::std::string& szstkname() const;
  void set_szstkname(const ::std::string& value);
  void set_szstkname(const char* value);
  void set_szstkname(const char* value, size_t size);
  ::std::string* mutable_szstkname();
  ::std::string* release_szstkname();
  void set_allocated_szstkname(::std::string* szstkname);

  // optional double dbClosePrice = 4;
  bool has_dbcloseprice() const;
  void clear_dbcloseprice();
  static const int kDbClosePriceFieldNumber = 4;
  double dbcloseprice() const;
  void set_dbcloseprice(double value);

  // optional double dbOpenPrice = 5;
  bool has_dbopenprice() const;
  void clear_dbopenprice();
  static const int kDbOpenPriceFieldNumber = 5;
  double dbopenprice() const;
  void set_dbopenprice(double value);

  // optional double dbLastPrice = 6;
  bool has_dblastprice() const;
  void clear_dblastprice();
  static const int kDbLastPriceFieldNumber = 6;
  double dblastprice() const;
  void set_dblastprice(double value);

  // optional double dbHighPrice = 7;
  bool has_dbhighprice() const;
  void clear_dbhighprice();
  static const int kDbHighPriceFieldNumber = 7;
  double dbhighprice() const;
  void set_dbhighprice(double value);

  // optional double dbLowPrice = 8;
  bool has_dblowprice() const;
  void clear_dblowprice();
  static const int kDbLowPriceFieldNumber = 8;
  double dblowprice() const;
  void set_dblowprice(double value);

  // optional double dbMatchQty = 9;
  bool has_dbmatchqty() const;
  void clear_dbmatchqty();
  static const int kDbMatchQtyFieldNumber = 9;
  double dbmatchqty() const;
  void set_dbmatchqty(double value);

  // optional double dbMatchAmt = 10;
  bool has_dbmatchamt() const;
  void clear_dbmatchamt();
  static const int kDbMatchAmtFieldNumber = 10;
  double dbmatchamt() const;
  void set_dbmatchamt(double value);

  // optional double dbMaxRiseValue = 11;
  bool has_dbmaxrisevalue() const;
  void clear_dbmaxrisevalue();
  static const int kDbMaxRiseValueFieldNumber = 11;
  double dbmaxrisevalue() const;
  void set_dbmaxrisevalue(double value);

  // optional double dbMaxDownValue = 12;
  bool has_dbmaxdownvalue() const;
  void clear_dbmaxdownvalue();
  static const int kDbMaxDownValueFieldNumber = 12;
  double dbmaxdownvalue() const;
  void set_dbmaxdownvalue(double value);

  // optional double dbAvgPrice = 13;
  bool has_dbavgprice() const;
  void clear_dbavgprice();
  static const int kDbAvgPriceFieldNumber = 13;
  double dbavgprice() const;
  void set_dbavgprice(double value);

  // optional double dbBuyPrice1 = 14;
  bool has_dbbuyprice1() const;
  void clear_dbbuyprice1();
  static const int kDbBuyPrice1FieldNumber = 14;
  double dbbuyprice1() const;
  void set_dbbuyprice1(double value);

  // optional int32 nBuyVolume1 = 15;
  bool has_nbuyvolume1() const;
  void clear_nbuyvolume1();
  static const int kNBuyVolume1FieldNumber = 15;
  ::google::protobuf::int32 nbuyvolume1() const;
  void set_nbuyvolume1(::google::protobuf::int32 value);

  // optional double dbBuyPrice2 = 16;
  bool has_dbbuyprice2() const;
  void clear_dbbuyprice2();
  static const int kDbBuyPrice2FieldNumber = 16;
  double dbbuyprice2() const;
  void set_dbbuyprice2(double value);

  // optional int32 nBuyVolume2 = 17;
  bool has_nbuyvolume2() const;
  void clear_nbuyvolume2();
  static const int kNBuyVolume2FieldNumber = 17;
  ::google::protobuf::int32 nbuyvolume2() const;
  void set_nbuyvolume2(::google::protobuf::int32 value);

  // optional double dbBuyPrice3 = 18;
  bool has_dbbuyprice3() const;
  void clear_dbbuyprice3();
  static const int kDbBuyPrice3FieldNumber = 18;
  double dbbuyprice3() const;
  void set_dbbuyprice3(double value);

  // optional int32 nBuyVolume3 = 19;
  bool has_nbuyvolume3() const;
  void clear_nbuyvolume3();
  static const int kNBuyVolume3FieldNumber = 19;
  ::google::protobuf::int32 nbuyvolume3() const;
  void set_nbuyvolume3(::google::protobuf::int32 value);

  // optional double dbBuyPrice4 = 20;
  bool has_dbbuyprice4() const;
  void clear_dbbuyprice4();
  static const int kDbBuyPrice4FieldNumber = 20;
  double dbbuyprice4() const;
  void set_dbbuyprice4(double value);

  // optional int32 nBuyVolume4 = 21;
  bool has_nbuyvolume4() const;
  void clear_nbuyvolume4();
  static const int kNBuyVolume4FieldNumber = 21;
  ::google::protobuf::int32 nbuyvolume4() const;
  void set_nbuyvolume4(::google::protobuf::int32 value);

  // optional double dbBuyPrice5 = 22;
  bool has_dbbuyprice5() const;
  void clear_dbbuyprice5();
  static const int kDbBuyPrice5FieldNumber = 22;
  double dbbuyprice5() const;
  void set_dbbuyprice5(double value);

  // optional int32 nBuyVolume5 = 23;
  bool has_nbuyvolume5() const;
  void clear_nbuyvolume5();
  static const int kNBuyVolume5FieldNumber = 23;
  ::google::protobuf::int32 nbuyvolume5() const;
  void set_nbuyvolume5(::google::protobuf::int32 value);

  // optional double dbBuyPrice6 = 24;
  bool has_dbbuyprice6() const;
  void clear_dbbuyprice6();
  static const int kDbBuyPrice6FieldNumber = 24;
  double dbbuyprice6() const;
  void set_dbbuyprice6(double value);

  // optional int32 nBuyVolume6 = 25;
  bool has_nbuyvolume6() const;
  void clear_nbuyvolume6();
  static const int kNBuyVolume6FieldNumber = 25;
  ::google::protobuf::int32 nbuyvolume6() const;
  void set_nbuyvolume6(::google::protobuf::int32 value);

  // optional double dbBuyPrice7 = 26;
  bool has_dbbuyprice7() const;
  void clear_dbbuyprice7();
  static const int kDbBuyPrice7FieldNumber = 26;
  double dbbuyprice7() const;
  void set_dbbuyprice7(double value);

  // optional int32 nBuyVolume7 = 27;
  bool has_nbuyvolume7() const;
  void clear_nbuyvolume7();
  static const int kNBuyVolume7FieldNumber = 27;
  ::google::protobuf::int32 nbuyvolume7() const;
  void set_nbuyvolume7(::google::protobuf::int32 value);

  // optional double dbBuyPrice8 = 28;
  bool has_dbbuyprice8() const;
  void clear_dbbuyprice8();
  static const int kDbBuyPrice8FieldNumber = 28;
  double dbbuyprice8() const;
  void set_dbbuyprice8(double value);

  // optional int32 nBuyVolume8 = 29;
  bool has_nbuyvolume8() const;
  void clear_nbuyvolume8();
  static const int kNBuyVolume8FieldNumber = 29;
  ::google::protobuf::int32 nbuyvolume8() const;
  void set_nbuyvolume8(::google::protobuf::int32 value);

  // optional double dbBuyPrice9 = 30;
  bool has_dbbuyprice9() const;
  void clear_dbbuyprice9();
  static const int kDbBuyPrice9FieldNumber = 30;
  double dbbuyprice9() const;
  void set_dbbuyprice9(double value);

  // optional int32 nBuyVolume9 = 31;
  bool has_nbuyvolume9() const;
  void clear_nbuyvolume9();
  static const int kNBuyVolume9FieldNumber = 31;
  ::google::protobuf::int32 nbuyvolume9() const;
  void set_nbuyvolume9(::google::protobuf::int32 value);

  // optional double dbBuyPrice10 = 32;
  bool has_dbbuyprice10() const;
  void clear_dbbuyprice10();
  static const int kDbBuyPrice10FieldNumber = 32;
  double dbbuyprice10() const;
  void set_dbbuyprice10(double value);

  // optional int32 nBuyVolume10 = 33;
  bool has_nbuyvolume10() const;
  void clear_nbuyvolume10();
  static const int kNBuyVolume10FieldNumber = 33;
  ::google::protobuf::int32 nbuyvolume10() const;
  void set_nbuyvolume10(::google::protobuf::int32 value);

  // optional double dbSalePrice1 = 34;
  bool has_dbsaleprice1() const;
  void clear_dbsaleprice1();
  static const int kDbSalePrice1FieldNumber = 34;
  double dbsaleprice1() const;
  void set_dbsaleprice1(double value);

  // optional int32 nSaleVolume1 = 35;
  bool has_nsalevolume1() const;
  void clear_nsalevolume1();
  static const int kNSaleVolume1FieldNumber = 35;
  ::google::protobuf::int32 nsalevolume1() const;
  void set_nsalevolume1(::google::protobuf::int32 value);

  // optional double dbSalePrice2 = 36;
  bool has_dbsaleprice2() const;
  void clear_dbsaleprice2();
  static const int kDbSalePrice2FieldNumber = 36;
  double dbsaleprice2() const;
  void set_dbsaleprice2(double value);

  // optional int32 nSaleVolume2 = 37;
  bool has_nsalevolume2() const;
  void clear_nsalevolume2();
  static const int kNSaleVolume2FieldNumber = 37;
  ::google::protobuf::int32 nsalevolume2() const;
  void set_nsalevolume2(::google::protobuf::int32 value);

  // optional double dbSalePrice3 = 38;
  bool has_dbsaleprice3() const;
  void clear_dbsaleprice3();
  static const int kDbSalePrice3FieldNumber = 38;
  double dbsaleprice3() const;
  void set_dbsaleprice3(double value);

  // optional int32 nSaleVolume3 = 39;
  bool has_nsalevolume3() const;
  void clear_nsalevolume3();
  static const int kNSaleVolume3FieldNumber = 39;
  ::google::protobuf::int32 nsalevolume3() const;
  void set_nsalevolume3(::google::protobuf::int32 value);

  // optional double dbSalePrice4 = 40;
  bool has_dbsaleprice4() const;
  void clear_dbsaleprice4();
  static const int kDbSalePrice4FieldNumber = 40;
  double dbsaleprice4() const;
  void set_dbsaleprice4(double value);

  // optional int32 nSaleVolume4 = 41;
  bool has_nsalevolume4() const;
  void clear_nsalevolume4();
  static const int kNSaleVolume4FieldNumber = 41;
  ::google::protobuf::int32 nsalevolume4() const;
  void set_nsalevolume4(::google::protobuf::int32 value);

  // optional double dbSalePrice5 = 42;
  bool has_dbsaleprice5() const;
  void clear_dbsaleprice5();
  static const int kDbSalePrice5FieldNumber = 42;
  double dbsaleprice5() const;
  void set_dbsaleprice5(double value);

  // optional int32 nSaleVolume5 = 43;
  bool has_nsalevolume5() const;
  void clear_nsalevolume5();
  static const int kNSaleVolume5FieldNumber = 43;
  ::google::protobuf::int32 nsalevolume5() const;
  void set_nsalevolume5(::google::protobuf::int32 value);

  // optional double dbSalePrice6 = 44;
  bool has_dbsaleprice6() const;
  void clear_dbsaleprice6();
  static const int kDbSalePrice6FieldNumber = 44;
  double dbsaleprice6() const;
  void set_dbsaleprice6(double value);

  // optional int32 nSaleVolume6 = 45;
  bool has_nsalevolume6() const;
  void clear_nsalevolume6();
  static const int kNSaleVolume6FieldNumber = 45;
  ::google::protobuf::int32 nsalevolume6() const;
  void set_nsalevolume6(::google::protobuf::int32 value);

  // optional double dbSalePrice7 = 46;
  bool has_dbsaleprice7() const;
  void clear_dbsaleprice7();
  static const int kDbSalePrice7FieldNumber = 46;
  double dbsaleprice7() const;
  void set_dbsaleprice7(double value);

  // optional int32 nSaleVolume7 = 47;
  bool has_nsalevolume7() const;
  void clear_nsalevolume7();
  static const int kNSaleVolume7FieldNumber = 47;
  ::google::protobuf::int32 nsalevolume7() const;
  void set_nsalevolume7(::google::protobuf::int32 value);

  // optional double dbSalePrice8 = 48;
  bool has_dbsaleprice8() const;
  void clear_dbsaleprice8();
  static const int kDbSalePrice8FieldNumber = 48;
  double dbsaleprice8() const;
  void set_dbsaleprice8(double value);

  // optional int32 nSaleVolume8 = 49;
  bool has_nsalevolume8() const;
  void clear_nsalevolume8();
  static const int kNSaleVolume8FieldNumber = 49;
  ::google::protobuf::int32 nsalevolume8() const;
  void set_nsalevolume8(::google::protobuf::int32 value);

  // optional double dbSalePrice9 = 50;
  bool has_dbsaleprice9() const;
  void clear_dbsaleprice9();
  static const int kDbSalePrice9FieldNumber = 50;
  double dbsaleprice9() const;
  void set_dbsaleprice9(double value);

  // optional int32 nSaleVolume9 = 51;
  bool has_nsalevolume9() const;
  void clear_nsalevolume9();
  static const int kNSaleVolume9FieldNumber = 51;
  ::google::protobuf::int32 nsalevolume9() const;
  void set_nsalevolume9(::google::protobuf::int32 value);

  // optional double dbSalePrice10 = 52;
  bool has_dbsaleprice10() const;
  void clear_dbsaleprice10();
  static const int kDbSalePrice10FieldNumber = 52;
  double dbsaleprice10() const;
  void set_dbsaleprice10(double value);

  // optional int32 nSaleVolume10 = 53;
  bool has_nsalevolume10() const;
  void clear_nsalevolume10();
  static const int kNSaleVolume10FieldNumber = 53;
  ::google::protobuf::int32 nsalevolume10() const;
  void set_nsalevolume10(::google::protobuf::int32 value);

  // optional int32 cProductClass = 54;
  bool has_cproductclass() const;
  void clear_cproductclass();
  static const int kCProductClassFieldNumber = 54;
  ::google::protobuf::int32 cproductclass() const;
  void set_cproductclass(::google::protobuf::int32 value);

  // optional int32 nPreOpenInterest = 55;
  bool has_npreopeninterest() const;
  void clear_npreopeninterest();
  static const int kNPreOpenInterestFieldNumber = 55;
  ::google::protobuf::int32 npreopeninterest() const;
  void set_npreopeninterest(::google::protobuf::int32 value);

  // optional int32 nOpenInterest = 56;
  bool has_nopeninterest() const;
  void clear_nopeninterest();
  static const int kNOpenInterestFieldNumber = 56;
  ::google::protobuf::int32 nopeninterest() const;
  void set_nopeninterest(::google::protobuf::int32 value);

  // optional double dbSettPrice = 57;
  bool has_dbsettprice() const;
  void clear_dbsettprice();
  static const int kDbSettPriceFieldNumber = 57;
  double dbsettprice() const;
  void set_dbsettprice(double value);

  // optional double dbPreSettPrice = 58;
  bool has_dbpresettprice() const;
  void clear_dbpresettprice();
  static const int kDbPreSettPriceFieldNumber = 58;
  double dbpresettprice() const;
  void set_dbpresettprice(double value);

  // optional double dbFtClosePrice = 59;
  bool has_dbftcloseprice() const;
  void clear_dbftcloseprice();
  static const int kDbFtClosePriceFieldNumber = 59;
  double dbftcloseprice() const;
  void set_dbftcloseprice(double value);

  // optional int32 cStopFlag = 60;
  bool has_cstopflag() const;
  void clear_cstopflag();
  static const int kCStopFlagFieldNumber = 60;
  ::google::protobuf::int32 cstopflag() const;
  void set_cstopflag(::google::protobuf::int32 value);

  // optional int32 nBusidate = 61;
  bool has_nbusidate() const;
  void clear_nbusidate();
  static const int kNBusidateFieldNumber = 61;
  ::google::protobuf::int32 nbusidate() const;
  void set_nbusidate(::google::protobuf::int32 value);

  // optional int32 nUpdateTime = 62;
  bool has_nupdatetime() const;
  void clear_nupdatetime();
  static const int kNUpdateTimeFieldNumber = 62;
  ::google::protobuf::int32 nupdatetime() const;
  void set_nupdatetime(::google::protobuf::int32 value);

  // optional int32 nUpdateMillisec = 63;
  bool has_nupdatemillisec() const;
  void clear_nupdatemillisec();
  static const int kNUpdateMillisecFieldNumber = 63;
  ::google::protobuf::int32 nupdatemillisec() const;
  void set_nupdatemillisec(::google::protobuf::int32 value);

  // optional string szReserved = 64;
  bool has_szreserved() const;
  void clear_szreserved();
  static const int kSzReservedFieldNumber = 64;
  const ::std::string& szreserved() const;
  void set_szreserved(const ::std::string& value);
  void set_szreserved(const char* value);
  void set_szreserved(const char* value, size_t size);
  ::std::string* mutable_szreserved();
  ::std::string* release_szreserved();
  void set_allocated_szreserved(::std::string* szreserved);

  // @@protoc_insertion_point(class_scope:XT.KCBPTagQuoteInfo10)
 private:
  inline void set_has_cmarket();
  inline void clear_has_cmarket();
  inline void set_has_szstkcode();
  inline void clear_has_szstkcode();
  inline void set_has_szstkname();
  inline void clear_has_szstkname();
  inline void set_has_dbcloseprice();
  inline void clear_has_dbcloseprice();
  inline void set_has_dbopenprice();
  inline void clear_has_dbopenprice();
  inline void set_has_dblastprice();
  inline void clear_has_dblastprice();
  inline void set_has_dbhighprice();
  inline void clear_has_dbhighprice();
  inline void set_has_dblowprice();
  inline void clear_has_dblowprice();
  inline void set_has_dbmatchqty();
  inline void clear_has_dbmatchqty();
  inline void set_has_dbmatchamt();
  inline void clear_has_dbmatchamt();
  inline void set_has_dbmaxrisevalue();
  inline void clear_has_dbmaxrisevalue();
  inline void set_has_dbmaxdownvalue();
  inline void clear_has_dbmaxdownvalue();
  inline void set_has_dbavgprice();
  inline void clear_has_dbavgprice();
  inline void set_has_dbbuyprice1();
  inline void clear_has_dbbuyprice1();
  inline void set_has_nbuyvolume1();
  inline void clear_has_nbuyvolume1();
  inline void set_has_dbbuyprice2();
  inline void clear_has_dbbuyprice2();
  inline void set_has_nbuyvolume2();
  inline void clear_has_nbuyvolume2();
  inline void set_has_dbbuyprice3();
  inline void clear_has_dbbuyprice3();
  inline void set_has_nbuyvolume3();
  inline void clear_has_nbuyvolume3();
  inline void set_has_dbbuyprice4();
  inline void clear_has_dbbuyprice4();
  inline void set_has_nbuyvolume4();
  inline void clear_has_nbuyvolume4();
  inline void set_has_dbbuyprice5();
  inline void clear_has_dbbuyprice5();
  inline void set_has_nbuyvolume5();
  inline void clear_has_nbuyvolume5();
  inline void set_has_dbbuyprice6();
  inline void clear_has_dbbuyprice6();
  inline void set_has_nbuyvolume6();
  inline void clear_has_nbuyvolume6();
  inline void set_has_dbbuyprice7();
  inline void clear_has_dbbuyprice7();
  inline void set_has_nbuyvolume7();
  inline void clear_has_nbuyvolume7();
  inline void set_has_dbbuyprice8();
  inline void clear_has_dbbuyprice8();
  inline void set_has_nbuyvolume8();
  inline void clear_has_nbuyvolume8();
  inline void set_has_dbbuyprice9();
  inline void clear_has_dbbuyprice9();
  inline void set_has_nbuyvolume9();
  inline void clear_has_nbuyvolume9();
  inline void set_has_dbbuyprice10();
  inline void clear_has_dbbuyprice10();
  inline void set_has_nbuyvolume10();
  inline void clear_has_nbuyvolume10();
  inline void set_has_dbsaleprice1();
  inline void clear_has_dbsaleprice1();
  inline void set_has_nsalevolume1();
  inline void clear_has_nsalevolume1();
  inline void set_has_dbsaleprice2();
  inline void clear_has_dbsaleprice2();
  inline void set_has_nsalevolume2();
  inline void clear_has_nsalevolume2();
  inline void set_has_dbsaleprice3();
  inline void clear_has_dbsaleprice3();
  inline void set_has_nsalevolume3();
  inline void clear_has_nsalevolume3();
  inline void set_has_dbsaleprice4();
  inline void clear_has_dbsaleprice4();
  inline void set_has_nsalevolume4();
  inline void clear_has_nsalevolume4();
  inline void set_has_dbsaleprice5();
  inline void clear_has_dbsaleprice5();
  inline void set_has_nsalevolume5();
  inline void clear_has_nsalevolume5();
  inline void set_has_dbsaleprice6();
  inline void clear_has_dbsaleprice6();
  inline void set_has_nsalevolume6();
  inline void clear_has_nsalevolume6();
  inline void set_has_dbsaleprice7();
  inline void clear_has_dbsaleprice7();
  inline void set_has_nsalevolume7();
  inline void clear_has_nsalevolume7();
  inline void set_has_dbsaleprice8();
  inline void clear_has_dbsaleprice8();
  inline void set_has_nsalevolume8();
  inline void clear_has_nsalevolume8();
  inline void set_has_dbsaleprice9();
  inline void clear_has_dbsaleprice9();
  inline void set_has_nsalevolume9();
  inline void clear_has_nsalevolume9();
  inline void set_has_dbsaleprice10();
  inline void clear_has_dbsaleprice10();
  inline void set_has_nsalevolume10();
  inline void clear_has_nsalevolume10();
  inline void set_has_cproductclass();
  inline void clear_has_cproductclass();
  inline void set_has_npreopeninterest();
  inline void clear_has_npreopeninterest();
  inline void set_has_nopeninterest();
  inline void clear_has_nopeninterest();
  inline void set_has_dbsettprice();
  inline void clear_has_dbsettprice();
  inline void set_has_dbpresettprice();
  inline void clear_has_dbpresettprice();
  inline void set_has_dbftcloseprice();
  inline void clear_has_dbftcloseprice();
  inline void set_has_cstopflag();
  inline void clear_has_cstopflag();
  inline void set_has_nbusidate();
  inline void clear_has_nbusidate();
  inline void set_has_nupdatetime();
  inline void clear_has_nupdatetime();
  inline void set_has_nupdatemillisec();
  inline void clear_has_nupdatemillisec();
  inline void set_has_szreserved();
  inline void clear_has_szreserved();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr szstkcode_;
  ::google::protobuf::internal::ArenaStringPtr szstkname_;
  double dbcloseprice_;
  double dbopenprice_;
  double dblastprice_;
  double dbhighprice_;
  double dblowprice_;
  ::google::protobuf::int32 cmarket_;
  ::google::protobuf::int32 nbuyvolume1_;
  double dbmatchqty_;
  double dbmatchamt_;
  double dbmaxrisevalue_;
  double dbmaxdownvalue_;
  double dbavgprice_;
  double dbbuyprice1_;
  double dbbuyprice2_;
  double dbbuyprice3_;
  ::google::protobuf::int32 nbuyvolume2_;
  ::google::protobuf::int32 nbuyvolume3_;
  double dbbuyprice4_;
  double dbbuyprice5_;
  ::google::protobuf::int32 nbuyvolume4_;
  ::google::protobuf::int32 nbuyvolume5_;
  double dbbuyprice6_;
  double dbbuyprice7_;
  ::google::protobuf::int32 nbuyvolume6_;
  ::google::protobuf::int32 nbuyvolume7_;
  double dbbuyprice8_;
  double dbbuyprice9_;
  ::google::protobuf::int32 nbuyvolume8_;
  ::google::protobuf::int32 nbuyvolume9_;
  double dbbuyprice10_;
  double dbsaleprice1_;
  ::google::protobuf::int32 nbuyvolume10_;
  ::google::protobuf::int32 nsalevolume1_;
  double dbsaleprice2_;
  double dbsaleprice3_;
  ::google::protobuf::int32 nsalevolume2_;
  ::google::protobuf::int32 nsalevolume3_;
  double dbsaleprice4_;
  double dbsaleprice5_;
  ::google::protobuf::int32 nsalevolume4_;
  ::google::protobuf::int32 nsalevolume5_;
  double dbsaleprice6_;
  double dbsaleprice7_;
  ::google::protobuf::int32 nsalevolume6_;
  ::google::protobuf::int32 nsalevolume7_;
  double dbsaleprice8_;
  double dbsaleprice9_;
  ::google::protobuf::int32 nsalevolume8_;
  ::google::protobuf::int32 nsalevolume9_;
  double dbsaleprice10_;
  ::google::protobuf::int32 nsalevolume10_;
  ::google::protobuf::int32 cproductclass_;
  ::google::protobuf::int32 npreopeninterest_;
  ::google::protobuf::int32 nopeninterest_;
  double dbsettprice_;
  double dbpresettprice_;
  double dbftcloseprice_;
  ::google::protobuf::int32 cstopflag_;
  ::google::protobuf::int32 nbusidate_;
  ::google::protobuf::int32 nupdatetime_;
  ::google::protobuf::int32 nupdatemillisec_;
  ::google::protobuf::internal::ArenaStringPtr szreserved_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static KCBPTagQuoteInfo10* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API KCBPTagQuoteInfo5 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.KCBPTagQuoteInfo5) */ {
 public:
  KCBPTagQuoteInfo5();
  virtual ~KCBPTagQuoteInfo5();

  KCBPTagQuoteInfo5(const KCBPTagQuoteInfo5& from);

  inline KCBPTagQuoteInfo5& operator=(const KCBPTagQuoteInfo5& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KCBPTagQuoteInfo5& default_instance();

  void Swap(KCBPTagQuoteInfo5* other);

  // implements Message ----------------------------------------------

  inline KCBPTagQuoteInfo5* New() const { return New(NULL); }

  KCBPTagQuoteInfo5* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KCBPTagQuoteInfo5& from);
  void MergeFrom(const KCBPTagQuoteInfo5& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KCBPTagQuoteInfo5* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cMarket = 1;
  bool has_cmarket() const;
  void clear_cmarket();
  static const int kCMarketFieldNumber = 1;
  ::google::protobuf::int32 cmarket() const;
  void set_cmarket(::google::protobuf::int32 value);

  // optional string szStkcode = 2;
  bool has_szstkcode() const;
  void clear_szstkcode();
  static const int kSzStkcodeFieldNumber = 2;
  const ::std::string& szstkcode() const;
  void set_szstkcode(const ::std::string& value);
  void set_szstkcode(const char* value);
  void set_szstkcode(const char* value, size_t size);
  ::std::string* mutable_szstkcode();
  ::std::string* release_szstkcode();
  void set_allocated_szstkcode(::std::string* szstkcode);

  // optional string szStkname = 3;
  bool has_szstkname() const;
  void clear_szstkname();
  static const int kSzStknameFieldNumber = 3;
  const ::std::string& szstkname() const;
  void set_szstkname(const ::std::string& value);
  void set_szstkname(const char* value);
  void set_szstkname(const char* value, size_t size);
  ::std::string* mutable_szstkname();
  ::std::string* release_szstkname();
  void set_allocated_szstkname(::std::string* szstkname);

  // optional int32 cProductClass = 4;
  bool has_cproductclass() const;
  void clear_cproductclass();
  static const int kCProductClassFieldNumber = 4;
  ::google::protobuf::int32 cproductclass() const;
  void set_cproductclass(::google::protobuf::int32 value);

  // optional int32 nTradingDay = 5;
  bool has_ntradingday() const;
  void clear_ntradingday();
  static const int kNTradingDayFieldNumber = 5;
  ::google::protobuf::int32 ntradingday() const;
  void set_ntradingday(::google::protobuf::int32 value);

  // optional int32 nPreOpenInterest = 6;
  bool has_npreopeninterest() const;
  void clear_npreopeninterest();
  static const int kNPreOpenInterestFieldNumber = 6;
  ::google::protobuf::int32 npreopeninterest() const;
  void set_npreopeninterest(::google::protobuf::int32 value);

  // optional double dbPreSettPrice = 7;
  bool has_dbpresettprice() const;
  void clear_dbpresettprice();
  static const int kDbPreSettPriceFieldNumber = 7;
  double dbpresettprice() const;
  void set_dbpresettprice(double value);

  // optional double dbOpenPrice = 8;
  bool has_dbopenprice() const;
  void clear_dbopenprice();
  static const int kDbOpenPriceFieldNumber = 8;
  double dbopenprice() const;
  void set_dbopenprice(double value);

  // optional double dbUpperLimitPrice = 9;
  bool has_dbupperlimitprice() const;
  void clear_dbupperlimitprice();
  static const int kDbUpperLimitPriceFieldNumber = 9;
  double dbupperlimitprice() const;
  void set_dbupperlimitprice(double value);

  // optional double dbLowerLimitPrice = 10;
  bool has_dblowerlimitprice() const;
  void clear_dblowerlimitprice();
  static const int kDbLowerLimitPriceFieldNumber = 10;
  double dblowerlimitprice() const;
  void set_dblowerlimitprice(double value);

  // optional double dbSettPrice = 11;
  bool has_dbsettprice() const;
  void clear_dbsettprice();
  static const int kDbSettPriceFieldNumber = 11;
  double dbsettprice() const;
  void set_dbsettprice(double value);

  // optional double dbClosePrice = 12;
  bool has_dbcloseprice() const;
  void clear_dbcloseprice();
  static const int kDbClosePriceFieldNumber = 12;
  double dbcloseprice() const;
  void set_dbcloseprice(double value);

  // optional int32 cTpbz = 13;
  bool has_ctpbz() const;
  void clear_ctpbz();
  static const int kCTpbzFieldNumber = 13;
  ::google::protobuf::int32 ctpbz() const;
  void set_ctpbz(::google::protobuf::int32 value);

  // optional int32 nUpdateMillisec = 14;
  bool has_nupdatemillisec() const;
  void clear_nupdatemillisec();
  static const int kNUpdateMillisecFieldNumber = 14;
  ::google::protobuf::int32 nupdatemillisec() const;
  void set_nupdatemillisec(::google::protobuf::int32 value);

  // optional int32 nUpdateTime = 15;
  bool has_nupdatetime() const;
  void clear_nupdatetime();
  static const int kNUpdateTimeFieldNumber = 15;
  ::google::protobuf::int32 nupdatetime() const;
  void set_nupdatetime(::google::protobuf::int32 value);

  // optional int32 nOpenInterest = 16;
  bool has_nopeninterest() const;
  void clear_nopeninterest();
  static const int kNOpenInterestFieldNumber = 16;
  ::google::protobuf::int32 nopeninterest() const;
  void set_nopeninterest(::google::protobuf::int32 value);

  // optional double dbMatchQty = 17;
  bool has_dbmatchqty() const;
  void clear_dbmatchqty();
  static const int kDbMatchQtyFieldNumber = 17;
  double dbmatchqty() const;
  void set_dbmatchqty(double value);

  // optional double dbMatchAmt = 18;
  bool has_dbmatchamt() const;
  void clear_dbmatchamt();
  static const int kDbMatchAmtFieldNumber = 18;
  double dbmatchamt() const;
  void set_dbmatchamt(double value);

  // optional double dbLastPrice = 19;
  bool has_dblastprice() const;
  void clear_dblastprice();
  static const int kDbLastPriceFieldNumber = 19;
  double dblastprice() const;
  void set_dblastprice(double value);

  // optional double dbAvgPrice = 20;
  bool has_dbavgprice() const;
  void clear_dbavgprice();
  static const int kDbAvgPriceFieldNumber = 20;
  double dbavgprice() const;
  void set_dbavgprice(double value);

  // optional double dbHighPrice = 21;
  bool has_dbhighprice() const;
  void clear_dbhighprice();
  static const int kDbHighPriceFieldNumber = 21;
  double dbhighprice() const;
  void set_dbhighprice(double value);

  // optional double dbLowPrice = 22;
  bool has_dblowprice() const;
  void clear_dblowprice();
  static const int kDbLowPriceFieldNumber = 22;
  double dblowprice() const;
  void set_dblowprice(double value);

  // optional double dbSalePrice0 = 23;
  bool has_dbsaleprice0() const;
  void clear_dbsaleprice0();
  static const int kDbSalePrice0FieldNumber = 23;
  double dbsaleprice0() const;
  void set_dbsaleprice0(double value);

  // optional int32 nSaleVolume0 = 24;
  bool has_nsalevolume0() const;
  void clear_nsalevolume0();
  static const int kNSaleVolume0FieldNumber = 24;
  ::google::protobuf::int32 nsalevolume0() const;
  void set_nsalevolume0(::google::protobuf::int32 value);

  // optional double dbBuyPrice0 = 25;
  bool has_dbbuyprice0() const;
  void clear_dbbuyprice0();
  static const int kDbBuyPrice0FieldNumber = 25;
  double dbbuyprice0() const;
  void set_dbbuyprice0(double value);

  // optional int32 nBuyVolume0 = 26;
  bool has_nbuyvolume0() const;
  void clear_nbuyvolume0();
  static const int kNBuyVolume0FieldNumber = 26;
  ::google::protobuf::int32 nbuyvolume0() const;
  void set_nbuyvolume0(::google::protobuf::int32 value);

  // optional double dbSalePrice1 = 27;
  bool has_dbsaleprice1() const;
  void clear_dbsaleprice1();
  static const int kDbSalePrice1FieldNumber = 27;
  double dbsaleprice1() const;
  void set_dbsaleprice1(double value);

  // optional int32 nSaleVolume1 = 28;
  bool has_nsalevolume1() const;
  void clear_nsalevolume1();
  static const int kNSaleVolume1FieldNumber = 28;
  ::google::protobuf::int32 nsalevolume1() const;
  void set_nsalevolume1(::google::protobuf::int32 value);

  // optional double dbBuyPrice1 = 29;
  bool has_dbbuyprice1() const;
  void clear_dbbuyprice1();
  static const int kDbBuyPrice1FieldNumber = 29;
  double dbbuyprice1() const;
  void set_dbbuyprice1(double value);

  // optional int32 nBuyVolume1 = 30;
  bool has_nbuyvolume1() const;
  void clear_nbuyvolume1();
  static const int kNBuyVolume1FieldNumber = 30;
  ::google::protobuf::int32 nbuyvolume1() const;
  void set_nbuyvolume1(::google::protobuf::int32 value);

  // optional double dbSalePrice2 = 31;
  bool has_dbsaleprice2() const;
  void clear_dbsaleprice2();
  static const int kDbSalePrice2FieldNumber = 31;
  double dbsaleprice2() const;
  void set_dbsaleprice2(double value);

  // optional int32 nSaleVolume2 = 32;
  bool has_nsalevolume2() const;
  void clear_nsalevolume2();
  static const int kNSaleVolume2FieldNumber = 32;
  ::google::protobuf::int32 nsalevolume2() const;
  void set_nsalevolume2(::google::protobuf::int32 value);

  // optional double dbBuyPrice2 = 33;
  bool has_dbbuyprice2() const;
  void clear_dbbuyprice2();
  static const int kDbBuyPrice2FieldNumber = 33;
  double dbbuyprice2() const;
  void set_dbbuyprice2(double value);

  // optional int32 nBuyVolume2 = 34;
  bool has_nbuyvolume2() const;
  void clear_nbuyvolume2();
  static const int kNBuyVolume2FieldNumber = 34;
  ::google::protobuf::int32 nbuyvolume2() const;
  void set_nbuyvolume2(::google::protobuf::int32 value);

  // optional double dbSalePrice3 = 35;
  bool has_dbsaleprice3() const;
  void clear_dbsaleprice3();
  static const int kDbSalePrice3FieldNumber = 35;
  double dbsaleprice3() const;
  void set_dbsaleprice3(double value);

  // optional int32 nSaleVolume3 = 36;
  bool has_nsalevolume3() const;
  void clear_nsalevolume3();
  static const int kNSaleVolume3FieldNumber = 36;
  ::google::protobuf::int32 nsalevolume3() const;
  void set_nsalevolume3(::google::protobuf::int32 value);

  // optional double dbBuyPrice3 = 37;
  bool has_dbbuyprice3() const;
  void clear_dbbuyprice3();
  static const int kDbBuyPrice3FieldNumber = 37;
  double dbbuyprice3() const;
  void set_dbbuyprice3(double value);

  // optional int32 nBuyVolume3 = 38;
  bool has_nbuyvolume3() const;
  void clear_nbuyvolume3();
  static const int kNBuyVolume3FieldNumber = 38;
  ::google::protobuf::int32 nbuyvolume3() const;
  void set_nbuyvolume3(::google::protobuf::int32 value);

  // optional double dbSalePrice4 = 39;
  bool has_dbsaleprice4() const;
  void clear_dbsaleprice4();
  static const int kDbSalePrice4FieldNumber = 39;
  double dbsaleprice4() const;
  void set_dbsaleprice4(double value);

  // optional int32 nSaleVolume4 = 40;
  bool has_nsalevolume4() const;
  void clear_nsalevolume4();
  static const int kNSaleVolume4FieldNumber = 40;
  ::google::protobuf::int32 nsalevolume4() const;
  void set_nsalevolume4(::google::protobuf::int32 value);

  // optional double dbBuyPrice4 = 41;
  bool has_dbbuyprice4() const;
  void clear_dbbuyprice4();
  static const int kDbBuyPrice4FieldNumber = 41;
  double dbbuyprice4() const;
  void set_dbbuyprice4(double value);

  // optional int32 nBuyVolume4 = 42;
  bool has_nbuyvolume4() const;
  void clear_nbuyvolume4();
  static const int kNBuyVolume4FieldNumber = 42;
  ::google::protobuf::int32 nbuyvolume4() const;
  void set_nbuyvolume4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.KCBPTagQuoteInfo5)
 private:
  inline void set_has_cmarket();
  inline void clear_has_cmarket();
  inline void set_has_szstkcode();
  inline void clear_has_szstkcode();
  inline void set_has_szstkname();
  inline void clear_has_szstkname();
  inline void set_has_cproductclass();
  inline void clear_has_cproductclass();
  inline void set_has_ntradingday();
  inline void clear_has_ntradingday();
  inline void set_has_npreopeninterest();
  inline void clear_has_npreopeninterest();
  inline void set_has_dbpresettprice();
  inline void clear_has_dbpresettprice();
  inline void set_has_dbopenprice();
  inline void clear_has_dbopenprice();
  inline void set_has_dbupperlimitprice();
  inline void clear_has_dbupperlimitprice();
  inline void set_has_dblowerlimitprice();
  inline void clear_has_dblowerlimitprice();
  inline void set_has_dbsettprice();
  inline void clear_has_dbsettprice();
  inline void set_has_dbcloseprice();
  inline void clear_has_dbcloseprice();
  inline void set_has_ctpbz();
  inline void clear_has_ctpbz();
  inline void set_has_nupdatemillisec();
  inline void clear_has_nupdatemillisec();
  inline void set_has_nupdatetime();
  inline void clear_has_nupdatetime();
  inline void set_has_nopeninterest();
  inline void clear_has_nopeninterest();
  inline void set_has_dbmatchqty();
  inline void clear_has_dbmatchqty();
  inline void set_has_dbmatchamt();
  inline void clear_has_dbmatchamt();
  inline void set_has_dblastprice();
  inline void clear_has_dblastprice();
  inline void set_has_dbavgprice();
  inline void clear_has_dbavgprice();
  inline void set_has_dbhighprice();
  inline void clear_has_dbhighprice();
  inline void set_has_dblowprice();
  inline void clear_has_dblowprice();
  inline void set_has_dbsaleprice0();
  inline void clear_has_dbsaleprice0();
  inline void set_has_nsalevolume0();
  inline void clear_has_nsalevolume0();
  inline void set_has_dbbuyprice0();
  inline void clear_has_dbbuyprice0();
  inline void set_has_nbuyvolume0();
  inline void clear_has_nbuyvolume0();
  inline void set_has_dbsaleprice1();
  inline void clear_has_dbsaleprice1();
  inline void set_has_nsalevolume1();
  inline void clear_has_nsalevolume1();
  inline void set_has_dbbuyprice1();
  inline void clear_has_dbbuyprice1();
  inline void set_has_nbuyvolume1();
  inline void clear_has_nbuyvolume1();
  inline void set_has_dbsaleprice2();
  inline void clear_has_dbsaleprice2();
  inline void set_has_nsalevolume2();
  inline void clear_has_nsalevolume2();
  inline void set_has_dbbuyprice2();
  inline void clear_has_dbbuyprice2();
  inline void set_has_nbuyvolume2();
  inline void clear_has_nbuyvolume2();
  inline void set_has_dbsaleprice3();
  inline void clear_has_dbsaleprice3();
  inline void set_has_nsalevolume3();
  inline void clear_has_nsalevolume3();
  inline void set_has_dbbuyprice3();
  inline void clear_has_dbbuyprice3();
  inline void set_has_nbuyvolume3();
  inline void clear_has_nbuyvolume3();
  inline void set_has_dbsaleprice4();
  inline void clear_has_dbsaleprice4();
  inline void set_has_nsalevolume4();
  inline void clear_has_nsalevolume4();
  inline void set_has_dbbuyprice4();
  inline void clear_has_dbbuyprice4();
  inline void set_has_nbuyvolume4();
  inline void clear_has_nbuyvolume4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr szstkcode_;
  ::google::protobuf::int32 cmarket_;
  ::google::protobuf::int32 cproductclass_;
  ::google::protobuf::internal::ArenaStringPtr szstkname_;
  ::google::protobuf::int32 ntradingday_;
  ::google::protobuf::int32 npreopeninterest_;
  double dbpresettprice_;
  double dbopenprice_;
  double dbupperlimitprice_;
  double dblowerlimitprice_;
  double dbsettprice_;
  double dbcloseprice_;
  ::google::protobuf::int32 ctpbz_;
  ::google::protobuf::int32 nupdatemillisec_;
  ::google::protobuf::int32 nupdatetime_;
  ::google::protobuf::int32 nopeninterest_;
  double dbmatchqty_;
  double dbmatchamt_;
  double dblastprice_;
  double dbavgprice_;
  double dbhighprice_;
  double dblowprice_;
  double dbsaleprice0_;
  double dbbuyprice0_;
  ::google::protobuf::int32 nsalevolume0_;
  ::google::protobuf::int32 nbuyvolume0_;
  double dbsaleprice1_;
  double dbbuyprice1_;
  ::google::protobuf::int32 nsalevolume1_;
  ::google::protobuf::int32 nbuyvolume1_;
  double dbsaleprice2_;
  double dbbuyprice2_;
  ::google::protobuf::int32 nsalevolume2_;
  ::google::protobuf::int32 nbuyvolume2_;
  double dbsaleprice3_;
  double dbbuyprice3_;
  ::google::protobuf::int32 nsalevolume3_;
  ::google::protobuf::int32 nbuyvolume3_;
  double dbsaleprice4_;
  double dbbuyprice4_;
  ::google::protobuf::int32 nsalevolume4_;
  ::google::protobuf::int32 nbuyvolume4_;
  mutable int _cached_size_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static KCBPTagQuoteInfo5* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API SinaQuoteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.SinaQuoteData) */ {
 public:
  SinaQuoteData();
  virtual ~SinaQuoteData();

  SinaQuoteData(const SinaQuoteData& from);

  inline SinaQuoteData& operator=(const SinaQuoteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SinaQuoteData& default_instance();

  void Swap(SinaQuoteData* other);

  // implements Message ----------------------------------------------

  inline SinaQuoteData* New() const { return New(NULL); }

  SinaQuoteData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SinaQuoteData& from);
  void MergeFrom(const SinaQuoteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SinaQuoteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exchid = 1;
  bool has_exchid() const;
  void clear_exchid();
  static const int kExchidFieldNumber = 1;
  const ::std::string& exchid() const;
  void set_exchid(const ::std::string& value);
  void set_exchid(const char* value);
  void set_exchid(const char* value, size_t size);
  ::std::string* mutable_exchid();
  ::std::string* release_exchid();
  void set_allocated_exchid(::std::string* exchid);

  // optional string instrid = 2;
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 2;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional string instrumentName = 3;
  bool has_instrumentname() const;
  void clear_instrumentname();
  static const int kInstrumentNameFieldNumber = 3;
  const ::std::string& instrumentname() const;
  void set_instrumentname(const ::std::string& value);
  void set_instrumentname(const char* value);
  void set_instrumentname(const char* value, size_t size);
  ::std::string* mutable_instrumentname();
  ::std::string* release_instrumentname();
  void set_allocated_instrumentname(::std::string* instrumentname);

  // optional string dateStr = 4;
  bool has_datestr() const;
  void clear_datestr();
  static const int kDateStrFieldNumber = 4;
  const ::std::string& datestr() const;
  void set_datestr(const ::std::string& value);
  void set_datestr(const char* value);
  void set_datestr(const char* value, size_t size);
  ::std::string* mutable_datestr();
  ::std::string* release_datestr();
  void set_allocated_datestr(::std::string* datestr);

  // optional string timeStr = 5;
  bool has_timestr() const;
  void clear_timestr();
  static const int kTimeStrFieldNumber = 5;
  const ::std::string& timestr() const;
  void set_timestr(const ::std::string& value);
  void set_timestr(const char* value);
  void set_timestr(const char* value, size_t size);
  ::std::string* mutable_timestr();
  ::std::string* release_timestr();
  void set_allocated_timestr(::std::string* timestr);

  // optional double dTotVolume = 6;
  bool has_dtotvolume() const;
  void clear_dtotvolume();
  static const int kDTotVolumeFieldNumber = 6;
  double dtotvolume() const;
  void set_dtotvolume(double value);

  // optional double turnover = 7;
  bool has_turnover() const;
  void clear_turnover();
  static const int kTurnoverFieldNumber = 7;
  double turnover() const;
  void set_turnover(double value);

  // optional double lastPx = 8;
  bool has_lastpx() const;
  void clear_lastpx();
  static const int kLastPxFieldNumber = 8;
  double lastpx() const;
  void set_lastpx(double value);

  // optional double openPrice = 9;
  bool has_openprice() const;
  void clear_openprice();
  static const int kOpenPriceFieldNumber = 9;
  double openprice() const;
  void set_openprice(double value);

  // optional double highPx = 10;
  bool has_highpx() const;
  void clear_highpx();
  static const int kHighPxFieldNumber = 10;
  double highpx() const;
  void set_highpx(double value);

  // optional double lowPx = 11;
  bool has_lowpx() const;
  void clear_lowpx();
  static const int kLowPxFieldNumber = 11;
  double lowpx() const;
  void set_lowpx(double value);

  // optional double closePrice = 12;
  bool has_closeprice() const;
  void clear_closeprice();
  static const int kClosePriceFieldNumber = 12;
  double closeprice() const;
  void set_closeprice(double value);

  // optional double bidPrice1 = 13;
  bool has_bidprice1() const;
  void clear_bidprice1();
  static const int kBidPrice1FieldNumber = 13;
  double bidprice1() const;
  void set_bidprice1(double value);

  // optional int32 bidVolume1 = 14;
  bool has_bidvolume1() const;
  void clear_bidvolume1();
  static const int kBidVolume1FieldNumber = 14;
  ::google::protobuf::int32 bidvolume1() const;
  void set_bidvolume1(::google::protobuf::int32 value);

  // optional double askPrice1 = 15;
  bool has_askprice1() const;
  void clear_askprice1();
  static const int kAskPrice1FieldNumber = 15;
  double askprice1() const;
  void set_askprice1(double value);

  // optional int32 askVolume1 = 16;
  bool has_askvolume1() const;
  void clear_askvolume1();
  static const int kAskVolume1FieldNumber = 16;
  ::google::protobuf::int32 askvolume1() const;
  void set_askvolume1(::google::protobuf::int32 value);

  // optional double bidPrice2 = 17;
  bool has_bidprice2() const;
  void clear_bidprice2();
  static const int kBidPrice2FieldNumber = 17;
  double bidprice2() const;
  void set_bidprice2(double value);

  // optional int32 bidVolume2 = 18;
  bool has_bidvolume2() const;
  void clear_bidvolume2();
  static const int kBidVolume2FieldNumber = 18;
  ::google::protobuf::int32 bidvolume2() const;
  void set_bidvolume2(::google::protobuf::int32 value);

  // optional double askPrice2 = 19;
  bool has_askprice2() const;
  void clear_askprice2();
  static const int kAskPrice2FieldNumber = 19;
  double askprice2() const;
  void set_askprice2(double value);

  // optional int32 askVolume2 = 20;
  bool has_askvolume2() const;
  void clear_askvolume2();
  static const int kAskVolume2FieldNumber = 20;
  ::google::protobuf::int32 askvolume2() const;
  void set_askvolume2(::google::protobuf::int32 value);

  // optional double bidPrice3 = 21;
  bool has_bidprice3() const;
  void clear_bidprice3();
  static const int kBidPrice3FieldNumber = 21;
  double bidprice3() const;
  void set_bidprice3(double value);

  // optional int32 bidVolume3 = 22;
  bool has_bidvolume3() const;
  void clear_bidvolume3();
  static const int kBidVolume3FieldNumber = 22;
  ::google::protobuf::int32 bidvolume3() const;
  void set_bidvolume3(::google::protobuf::int32 value);

  // optional double askPrice3 = 23;
  bool has_askprice3() const;
  void clear_askprice3();
  static const int kAskPrice3FieldNumber = 23;
  double askprice3() const;
  void set_askprice3(double value);

  // optional int32 askVolume3 = 24;
  bool has_askvolume3() const;
  void clear_askvolume3();
  static const int kAskVolume3FieldNumber = 24;
  ::google::protobuf::int32 askvolume3() const;
  void set_askvolume3(::google::protobuf::int32 value);

  // optional double bidPrice4 = 25;
  bool has_bidprice4() const;
  void clear_bidprice4();
  static const int kBidPrice4FieldNumber = 25;
  double bidprice4() const;
  void set_bidprice4(double value);

  // optional int32 bidVolume4 = 26;
  bool has_bidvolume4() const;
  void clear_bidvolume4();
  static const int kBidVolume4FieldNumber = 26;
  ::google::protobuf::int32 bidvolume4() const;
  void set_bidvolume4(::google::protobuf::int32 value);

  // optional double askPrice4 = 27;
  bool has_askprice4() const;
  void clear_askprice4();
  static const int kAskPrice4FieldNumber = 27;
  double askprice4() const;
  void set_askprice4(double value);

  // optional int32 askVolume4 = 28;
  bool has_askvolume4() const;
  void clear_askvolume4();
  static const int kAskVolume4FieldNumber = 28;
  ::google::protobuf::int32 askvolume4() const;
  void set_askvolume4(::google::protobuf::int32 value);

  // optional double bidPrice5 = 29;
  bool has_bidprice5() const;
  void clear_bidprice5();
  static const int kBidPrice5FieldNumber = 29;
  double bidprice5() const;
  void set_bidprice5(double value);

  // optional int32 bidVolume5 = 30;
  bool has_bidvolume5() const;
  void clear_bidvolume5();
  static const int kBidVolume5FieldNumber = 30;
  ::google::protobuf::int32 bidvolume5() const;
  void set_bidvolume5(::google::protobuf::int32 value);

  // optional double askPrice5 = 31;
  bool has_askprice5() const;
  void clear_askprice5();
  static const int kAskPrice5FieldNumber = 31;
  double askprice5() const;
  void set_askprice5(double value);

  // optional int32 askVolume5 = 32;
  bool has_askvolume5() const;
  void clear_askvolume5();
  static const int kAskVolume5FieldNumber = 32;
  ::google::protobuf::int32 askvolume5() const;
  void set_askvolume5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.SinaQuoteData)
 private:
  inline void set_has_exchid();
  inline void clear_has_exchid();
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_instrumentname();
  inline void clear_has_instrumentname();
  inline void set_has_datestr();
  inline void clear_has_datestr();
  inline void set_has_timestr();
  inline void clear_has_timestr();
  inline void set_has_dtotvolume();
  inline void clear_has_dtotvolume();
  inline void set_has_turnover();
  inline void clear_has_turnover();
  inline void set_has_lastpx();
  inline void clear_has_lastpx();
  inline void set_has_openprice();
  inline void clear_has_openprice();
  inline void set_has_highpx();
  inline void clear_has_highpx();
  inline void set_has_lowpx();
  inline void clear_has_lowpx();
  inline void set_has_closeprice();
  inline void clear_has_closeprice();
  inline void set_has_bidprice1();
  inline void clear_has_bidprice1();
  inline void set_has_bidvolume1();
  inline void clear_has_bidvolume1();
  inline void set_has_askprice1();
  inline void clear_has_askprice1();
  inline void set_has_askvolume1();
  inline void clear_has_askvolume1();
  inline void set_has_bidprice2();
  inline void clear_has_bidprice2();
  inline void set_has_bidvolume2();
  inline void clear_has_bidvolume2();
  inline void set_has_askprice2();
  inline void clear_has_askprice2();
  inline void set_has_askvolume2();
  inline void clear_has_askvolume2();
  inline void set_has_bidprice3();
  inline void clear_has_bidprice3();
  inline void set_has_bidvolume3();
  inline void clear_has_bidvolume3();
  inline void set_has_askprice3();
  inline void clear_has_askprice3();
  inline void set_has_askvolume3();
  inline void clear_has_askvolume3();
  inline void set_has_bidprice4();
  inline void clear_has_bidprice4();
  inline void set_has_bidvolume4();
  inline void clear_has_bidvolume4();
  inline void set_has_askprice4();
  inline void clear_has_askprice4();
  inline void set_has_askvolume4();
  inline void clear_has_askvolume4();
  inline void set_has_bidprice5();
  inline void clear_has_bidprice5();
  inline void set_has_bidvolume5();
  inline void clear_has_bidvolume5();
  inline void set_has_askprice5();
  inline void clear_has_askprice5();
  inline void set_has_askvolume5();
  inline void clear_has_askvolume5();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr exchid_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::internal::ArenaStringPtr instrumentname_;
  ::google::protobuf::internal::ArenaStringPtr datestr_;
  ::google::protobuf::internal::ArenaStringPtr timestr_;
  double dtotvolume_;
  double turnover_;
  double lastpx_;
  double openprice_;
  double highpx_;
  double lowpx_;
  double closeprice_;
  double bidprice1_;
  double askprice1_;
  ::google::protobuf::int32 bidvolume1_;
  ::google::protobuf::int32 askvolume1_;
  double bidprice2_;
  double askprice2_;
  ::google::protobuf::int32 bidvolume2_;
  ::google::protobuf::int32 askvolume2_;
  double bidprice3_;
  double askprice3_;
  ::google::protobuf::int32 bidvolume3_;
  ::google::protobuf::int32 askvolume3_;
  double bidprice4_;
  double askprice4_;
  ::google::protobuf::int32 bidvolume4_;
  ::google::protobuf::int32 askvolume4_;
  double bidprice5_;
  double askprice5_;
  ::google::protobuf::int32 bidvolume5_;
  ::google::protobuf::int32 askvolume5_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static SinaQuoteData* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PyAT_OrderExecutionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PyAT_OrderExecutionInfo) */ {
 public:
  PyAT_OrderExecutionInfo();
  virtual ~PyAT_OrderExecutionInfo();

  PyAT_OrderExecutionInfo(const PyAT_OrderExecutionInfo& from);

  inline PyAT_OrderExecutionInfo& operator=(const PyAT_OrderExecutionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyAT_OrderExecutionInfo& default_instance();

  void Swap(PyAT_OrderExecutionInfo* other);

  // implements Message ----------------------------------------------

  inline PyAT_OrderExecutionInfo* New() const { return New(NULL); }

  PyAT_OrderExecutionInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyAT_OrderExecutionInfo& from);
  void MergeFrom(const PyAT_OrderExecutionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PyAT_OrderExecutionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double price = 1 [default = 0];
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  double price() const;
  void set_price(double value);

  // optional int32 quantity = 2 [default = 0];
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // optional double commission = 3 [default = 0];
  bool has_commission() const;
  void clear_commission();
  static const int kCommissionFieldNumber = 3;
  double commission() const;
  void set_commission(double value);

  // optional string filldatetime = 4 [default = ""];
  bool has_filldatetime() const;
  void clear_filldatetime();
  static const int kFilldatetimeFieldNumber = 4;
  const ::std::string& filldatetime() const;
  void set_filldatetime(const ::std::string& value);
  void set_filldatetime(const char* value);
  void set_filldatetime(const char* value, size_t size);
  ::std::string* mutable_filldatetime();
  ::std::string* release_filldatetime();
  void set_allocated_filldatetime(::std::string* filldatetime);

  // @@protoc_insertion_point(class_scope:XT.PyAT_OrderExecutionInfo)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_commission();
  inline void clear_has_commission();
  inline void set_has_filldatetime();
  inline void clear_has_filldatetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double price_;
  double commission_;
  ::google::protobuf::internal::ArenaStringPtr filldatetime_;
  ::google::protobuf::int32 quantity_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PyAT_OrderExecutionInfo* default_instance_;
};
// -------------------------------------------------------------------

class XT_COMMON_API PyAT_OrderData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XT.PyAT_OrderData) */ {
 public:
  PyAT_OrderData();
  virtual ~PyAT_OrderData();

  PyAT_OrderData(const PyAT_OrderData& from);

  inline PyAT_OrderData& operator=(const PyAT_OrderData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyAT_OrderData& default_instance();

  void Swap(PyAT_OrderData* other);

  // implements Message ----------------------------------------------

  inline PyAT_OrderData* New() const { return New(NULL); }

  PyAT_OrderData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyAT_OrderData& from);
  void MergeFrom(const PyAT_OrderData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PyAT_OrderData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 ordertype = 2 [default = 0];
  bool has_ordertype() const;
  void clear_ordertype();
  static const int kOrdertypeFieldNumber = 2;
  ::google::protobuf::int32 ordertype() const;
  void set_ordertype(::google::protobuf::int32 value);

  // optional int32 orderaction = 3 [default = 0];
  bool has_orderaction() const;
  void clear_orderaction();
  static const int kOrderactionFieldNumber = 3;
  ::google::protobuf::int32 orderaction() const;
  void set_orderaction(::google::protobuf::int32 value);

  // optional string instrid = 4 [default = ""];
  bool has_instrid() const;
  void clear_instrid();
  static const int kInstridFieldNumber = 4;
  const ::std::string& instrid() const;
  void set_instrid(const ::std::string& value);
  void set_instrid(const char* value);
  void set_instrid(const char* value, size_t size);
  ::std::string* mutable_instrid();
  ::std::string* release_instrid();
  void set_allocated_instrid(::std::string* instrid);

  // optional int32 quantity = 5 [default = 0];
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 5;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // optional int32 filledsz = 6 [default = 0];
  bool has_filledsz() const;
  void clear_filledsz();
  static const int kFilledszFieldNumber = 6;
  ::google::protobuf::int32 filledsz() const;
  void set_filledsz(::google::protobuf::int32 value);

  // optional double avgfillprice = 7 [default = 0];
  bool has_avgfillprice() const;
  void clear_avgfillprice();
  static const int kAvgfillpriceFieldNumber = 7;
  double avgfillprice() const;
  void set_avgfillprice(double value);

  // optional bool goodtillcanceled = 8 [default = true];
  bool has_goodtillcanceled() const;
  void clear_goodtillcanceled();
  static const int kGoodtillcanceledFieldNumber = 8;
  bool goodtillcanceled() const;
  void set_goodtillcanceled(bool value);

  // optional double commissions = 9 [default = 0];
  bool has_commissions() const;
  void clear_commissions();
  static const int kCommissionsFieldNumber = 9;
  double commissions() const;
  void set_commissions(double value);

  // optional bool allornone = 10 [default = false];
  bool has_allornone() const;
  void clear_allornone();
  static const int kAllornoneFieldNumber = 10;
  bool allornone() const;
  void set_allornone(bool value);

  // optional int32 orderstate = 11 [default = 0];
  bool has_orderstate() const;
  void clear_orderstate();
  static const int kOrderstateFieldNumber = 11;
  ::google::protobuf::int32 orderstate() const;
  void set_orderstate(::google::protobuf::int32 value);

  // optional string submitdatetime = 12 [default = ""];
  bool has_submitdatetime() const;
  void clear_submitdatetime();
  static const int kSubmitdatetimeFieldNumber = 12;
  const ::std::string& submitdatetime() const;
  void set_submitdatetime(const ::std::string& value);
  void set_submitdatetime(const char* value);
  void set_submitdatetime(const char* value, size_t size);
  ::std::string* mutable_submitdatetime();
  ::std::string* release_submitdatetime();
  void set_allocated_submitdatetime(::std::string* submitdatetime);

  // optional double executionprice = 20 [default = 0];
  bool has_executionprice() const;
  void clear_executionprice();
  static const int kExecutionpriceFieldNumber = 20;
  double executionprice() const;
  void set_executionprice(double value);

  // optional int32 executionquantity = 21 [default = 0];
  bool has_executionquantity() const;
  void clear_executionquantity();
  static const int kExecutionquantityFieldNumber = 21;
  ::google::protobuf::int32 executionquantity() const;
  void set_executionquantity(::google::protobuf::int32 value);

  // optional double executioncommission = 22 [default = 0];
  bool has_executioncommission() const;
  void clear_executioncommission();
  static const int kExecutioncommissionFieldNumber = 22;
  double executioncommission() const;
  void set_executioncommission(double value);

  // optional string executiondatetime = 23 [default = ""];
  bool has_executiondatetime() const;
  void clear_executiondatetime();
  static const int kExecutiondatetimeFieldNumber = 23;
  const ::std::string& executiondatetime() const;
  void set_executiondatetime(const ::std::string& value);
  void set_executiondatetime(const char* value);
  void set_executiondatetime(const char* value, size_t size);
  ::std::string* mutable_executiondatetime();
  ::std::string* release_executiondatetime();
  void set_allocated_executiondatetime(::std::string* executiondatetime);

  // optional int32 xtoid = 30 [default = 0];
  bool has_xtoid() const;
  void clear_xtoid();
  static const int kXtoidFieldNumber = 30;
  ::google::protobuf::int32 xtoid() const;
  void set_xtoid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XT.PyAT_OrderData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ordertype();
  inline void clear_has_ordertype();
  inline void set_has_orderaction();
  inline void clear_has_orderaction();
  inline void set_has_instrid();
  inline void clear_has_instrid();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_filledsz();
  inline void clear_has_filledsz();
  inline void set_has_avgfillprice();
  inline void clear_has_avgfillprice();
  inline void set_has_goodtillcanceled();
  inline void clear_has_goodtillcanceled();
  inline void set_has_commissions();
  inline void clear_has_commissions();
  inline void set_has_allornone();
  inline void clear_has_allornone();
  inline void set_has_orderstate();
  inline void clear_has_orderstate();
  inline void set_has_submitdatetime();
  inline void clear_has_submitdatetime();
  inline void set_has_executionprice();
  inline void clear_has_executionprice();
  inline void set_has_executionquantity();
  inline void clear_has_executionquantity();
  inline void set_has_executioncommission();
  inline void clear_has_executioncommission();
  inline void set_has_executiondatetime();
  inline void clear_has_executiondatetime();
  inline void set_has_xtoid();
  inline void clear_has_xtoid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 ordertype_;
  ::google::protobuf::internal::ArenaStringPtr instrid_;
  ::google::protobuf::int32 orderaction_;
  ::google::protobuf::int32 quantity_;
  double avgfillprice_;
  ::google::protobuf::int32 filledsz_;
  bool goodtillcanceled_;
  bool allornone_;
  double commissions_;
  ::google::protobuf::internal::ArenaStringPtr submitdatetime_;
  ::google::protobuf::int32 orderstate_;
  ::google::protobuf::int32 executionquantity_;
  double executionprice_;
  double executioncommission_;
  ::google::protobuf::internal::ArenaStringPtr executiondatetime_;
  ::google::protobuf::int32 xtoid_;
  friend void XT_COMMON_API protobuf_AddDesc_XTData_2eproto();
  friend void protobuf_AssignDesc_XTData_2eproto();
  friend void protobuf_ShutdownFile_XTData_2eproto();

  void InitAsDefaultInstance();
  static PyAT_OrderData* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IntIntData

// optional int32 i1 = 1 [default = 0];
inline bool IntIntData::has_i1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntIntData::set_has_i1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntIntData::clear_has_i1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntIntData::clear_i1() {
  i1_ = 0;
  clear_has_i1();
}
inline ::google::protobuf::int32 IntIntData::i1() const {
  // @@protoc_insertion_point(field_get:XT.IntIntData.i1)
  return i1_;
}
inline void IntIntData::set_i1(::google::protobuf::int32 value) {
  set_has_i1();
  i1_ = value;
  // @@protoc_insertion_point(field_set:XT.IntIntData.i1)
}

// optional int32 i2 = 2 [default = 0];
inline bool IntIntData::has_i2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntIntData::set_has_i2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntIntData::clear_has_i2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntIntData::clear_i2() {
  i2_ = 0;
  clear_has_i2();
}
inline ::google::protobuf::int32 IntIntData::i2() const {
  // @@protoc_insertion_point(field_get:XT.IntIntData.i2)
  return i2_;
}
inline void IntIntData::set_i2(::google::protobuf::int32 value) {
  set_has_i2();
  i2_ = value;
  // @@protoc_insertion_point(field_set:XT.IntIntData.i2)
}

// -------------------------------------------------------------------

// IntStringData

// optional int32 i = 1 [default = 0];
inline bool IntStringData::has_i() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntStringData::set_has_i() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntStringData::clear_has_i() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntStringData::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 IntStringData::i() const {
  // @@protoc_insertion_point(field_get:XT.IntStringData.i)
  return i_;
}
inline void IntStringData::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:XT.IntStringData.i)
}

// optional string s = 2 [default = ""];
inline bool IntStringData::has_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntStringData::set_has_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntStringData::clear_has_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntStringData::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
inline const ::std::string& IntStringData::s() const {
  // @@protoc_insertion_point(field_get:XT.IntStringData.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntStringData::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.IntStringData.s)
}
inline void IntStringData::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.IntStringData.s)
}
inline void IntStringData::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.IntStringData.s)
}
inline ::std::string* IntStringData::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:XT.IntStringData.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntStringData::release_s() {
  // @@protoc_insertion_point(field_release:XT.IntStringData.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntStringData::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:XT.IntStringData.s)
}

// -------------------------------------------------------------------

// IntDoubleData

// optional int32 i = 1 [default = 0];
inline bool IntDoubleData::has_i() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntDoubleData::set_has_i() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntDoubleData::clear_has_i() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntDoubleData::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 IntDoubleData::i() const {
  // @@protoc_insertion_point(field_get:XT.IntDoubleData.i)
  return i_;
}
inline void IntDoubleData::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:XT.IntDoubleData.i)
}

// optional double d = 2 [default = 0];
inline bool IntDoubleData::has_d() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntDoubleData::set_has_d() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntDoubleData::clear_has_d() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntDoubleData::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double IntDoubleData::d() const {
  // @@protoc_insertion_point(field_get:XT.IntDoubleData.d)
  return d_;
}
inline void IntDoubleData::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:XT.IntDoubleData.d)
}

// -------------------------------------------------------------------

// IntInt64Data

// optional int32 i = 1 [default = 0];
inline bool IntInt64Data::has_i() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntInt64Data::set_has_i() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntInt64Data::clear_has_i() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntInt64Data::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 IntInt64Data::i() const {
  // @@protoc_insertion_point(field_get:XT.IntInt64Data.i)
  return i_;
}
inline void IntInt64Data::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:XT.IntInt64Data.i)
}

// optional int64 l = 2 [default = 0];
inline bool IntInt64Data::has_l() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntInt64Data::set_has_l() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntInt64Data::clear_has_l() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntInt64Data::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
inline ::google::protobuf::int64 IntInt64Data::l() const {
  // @@protoc_insertion_point(field_get:XT.IntInt64Data.l)
  return l_;
}
inline void IntInt64Data::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:XT.IntInt64Data.l)
}

// -------------------------------------------------------------------

// StringStringData

// optional string s1 = 1 [default = ""];
inline bool StringStringData::has_s1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringStringData::set_has_s1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringStringData::clear_has_s1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringStringData::clear_s1() {
  s1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s1();
}
inline const ::std::string& StringStringData::s1() const {
  // @@protoc_insertion_point(field_get:XT.StringStringData.s1)
  return s1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringStringData::set_s1(const ::std::string& value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StringStringData.s1)
}
inline void StringStringData::set_s1(const char* value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StringStringData.s1)
}
inline void StringStringData::set_s1(const char* value, size_t size) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StringStringData.s1)
}
inline ::std::string* StringStringData::mutable_s1() {
  set_has_s1();
  // @@protoc_insertion_point(field_mutable:XT.StringStringData.s1)
  return s1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringStringData::release_s1() {
  // @@protoc_insertion_point(field_release:XT.StringStringData.s1)
  clear_has_s1();
  return s1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringStringData::set_allocated_s1(::std::string* s1) {
  if (s1 != NULL) {
    set_has_s1();
  } else {
    clear_has_s1();
  }
  s1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s1);
  // @@protoc_insertion_point(field_set_allocated:XT.StringStringData.s1)
}

// optional string s2 = 2 [default = ""];
inline bool StringStringData::has_s2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringStringData::set_has_s2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringStringData::clear_has_s2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringStringData::clear_s2() {
  s2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s2();
}
inline const ::std::string& StringStringData::s2() const {
  // @@protoc_insertion_point(field_get:XT.StringStringData.s2)
  return s2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringStringData::set_s2(const ::std::string& value) {
  set_has_s2();
  s2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StringStringData.s2)
}
inline void StringStringData::set_s2(const char* value) {
  set_has_s2();
  s2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StringStringData.s2)
}
inline void StringStringData::set_s2(const char* value, size_t size) {
  set_has_s2();
  s2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StringStringData.s2)
}
inline ::std::string* StringStringData::mutable_s2() {
  set_has_s2();
  // @@protoc_insertion_point(field_mutable:XT.StringStringData.s2)
  return s2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringStringData::release_s2() {
  // @@protoc_insertion_point(field_release:XT.StringStringData.s2)
  clear_has_s2();
  return s2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringStringData::set_allocated_s2(::std::string* s2) {
  if (s2 != NULL) {
    set_has_s2();
  } else {
    clear_has_s2();
  }
  s2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s2);
  // @@protoc_insertion_point(field_set_allocated:XT.StringStringData.s2)
}

// -------------------------------------------------------------------

// StringDoubleData

// optional string s = 1 [default = ""];
inline bool StringDoubleData::has_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringDoubleData::set_has_s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringDoubleData::clear_has_s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringDoubleData::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
inline const ::std::string& StringDoubleData::s() const {
  // @@protoc_insertion_point(field_get:XT.StringDoubleData.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringDoubleData::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StringDoubleData.s)
}
inline void StringDoubleData::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StringDoubleData.s)
}
inline void StringDoubleData::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StringDoubleData.s)
}
inline ::std::string* StringDoubleData::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:XT.StringDoubleData.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringDoubleData::release_s() {
  // @@protoc_insertion_point(field_release:XT.StringDoubleData.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringDoubleData::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:XT.StringDoubleData.s)
}

// optional double d = 2 [default = 0];
inline bool StringDoubleData::has_d() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringDoubleData::set_has_d() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringDoubleData::clear_has_d() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringDoubleData::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double StringDoubleData::d() const {
  // @@protoc_insertion_point(field_get:XT.StringDoubleData.d)
  return d_;
}
inline void StringDoubleData::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:XT.StringDoubleData.d)
}

// -------------------------------------------------------------------

// StringInt64Data

// optional string s = 1 [default = ""];
inline bool StringInt64Data::has_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringInt64Data::set_has_s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringInt64Data::clear_has_s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringInt64Data::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
inline const ::std::string& StringInt64Data::s() const {
  // @@protoc_insertion_point(field_get:XT.StringInt64Data.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringInt64Data::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StringInt64Data.s)
}
inline void StringInt64Data::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StringInt64Data.s)
}
inline void StringInt64Data::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StringInt64Data.s)
}
inline ::std::string* StringInt64Data::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:XT.StringInt64Data.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringInt64Data::release_s() {
  // @@protoc_insertion_point(field_release:XT.StringInt64Data.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringInt64Data::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:XT.StringInt64Data.s)
}

// optional int64 l = 2 [default = 0];
inline bool StringInt64Data::has_l() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringInt64Data::set_has_l() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringInt64Data::clear_has_l() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringInt64Data::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
inline ::google::protobuf::int64 StringInt64Data::l() const {
  // @@protoc_insertion_point(field_get:XT.StringInt64Data.l)
  return l_;
}
inline void StringInt64Data::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:XT.StringInt64Data.l)
}

// -------------------------------------------------------------------

// DoubleDoubleData

// optional double d1 = 1 [default = 0];
inline bool DoubleDoubleData::has_d1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleDoubleData::set_has_d1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleDoubleData::clear_has_d1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleDoubleData::clear_d1() {
  d1_ = 0;
  clear_has_d1();
}
inline double DoubleDoubleData::d1() const {
  // @@protoc_insertion_point(field_get:XT.DoubleDoubleData.d1)
  return d1_;
}
inline void DoubleDoubleData::set_d1(double value) {
  set_has_d1();
  d1_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleDoubleData.d1)
}

// optional double d2 = 2 [default = 0];
inline bool DoubleDoubleData::has_d2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DoubleDoubleData::set_has_d2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DoubleDoubleData::clear_has_d2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DoubleDoubleData::clear_d2() {
  d2_ = 0;
  clear_has_d2();
}
inline double DoubleDoubleData::d2() const {
  // @@protoc_insertion_point(field_get:XT.DoubleDoubleData.d2)
  return d2_;
}
inline void DoubleDoubleData::set_d2(double value) {
  set_has_d2();
  d2_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleDoubleData.d2)
}

// -------------------------------------------------------------------

// DoubleInt64Data

// optional double d = 1 [default = 0];
inline bool DoubleInt64Data::has_d() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleInt64Data::set_has_d() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleInt64Data::clear_has_d() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleInt64Data::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double DoubleInt64Data::d() const {
  // @@protoc_insertion_point(field_get:XT.DoubleInt64Data.d)
  return d_;
}
inline void DoubleInt64Data::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleInt64Data.d)
}

// optional int64 l = 2 [default = 0];
inline bool DoubleInt64Data::has_l() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DoubleInt64Data::set_has_l() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DoubleInt64Data::clear_has_l() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DoubleInt64Data::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
inline ::google::protobuf::int64 DoubleInt64Data::l() const {
  // @@protoc_insertion_point(field_get:XT.DoubleInt64Data.l)
  return l_;
}
inline void DoubleInt64Data::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleInt64Data.l)
}

// -------------------------------------------------------------------

// Int64Int64Data

// optional int64 l1 = 1 [default = 0];
inline bool Int64Int64Data::has_l1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Int64Int64Data::set_has_l1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Int64Int64Data::clear_has_l1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Int64Int64Data::clear_l1() {
  l1_ = GOOGLE_LONGLONG(0);
  clear_has_l1();
}
inline ::google::protobuf::int64 Int64Int64Data::l1() const {
  // @@protoc_insertion_point(field_get:XT.Int64Int64Data.l1)
  return l1_;
}
inline void Int64Int64Data::set_l1(::google::protobuf::int64 value) {
  set_has_l1();
  l1_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Int64Data.l1)
}

// optional int64 l2 = 2 [default = 0];
inline bool Int64Int64Data::has_l2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Int64Int64Data::set_has_l2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Int64Int64Data::clear_has_l2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Int64Int64Data::clear_l2() {
  l2_ = GOOGLE_LONGLONG(0);
  clear_has_l2();
}
inline ::google::protobuf::int64 Int64Int64Data::l2() const {
  // @@protoc_insertion_point(field_get:XT.Int64Int64Data.l2)
  return l2_;
}
inline void Int64Int64Data::set_l2(::google::protobuf::int64 value) {
  set_has_l2();
  l2_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Int64Data.l2)
}

// -------------------------------------------------------------------

// IntVectorData

// repeated int32 ivec = 1;
inline int IntVectorData::ivec_size() const {
  return ivec_.size();
}
inline void IntVectorData::clear_ivec() {
  ivec_.Clear();
}
inline ::google::protobuf::int32 IntVectorData::ivec(int index) const {
  // @@protoc_insertion_point(field_get:XT.IntVectorData.ivec)
  return ivec_.Get(index);
}
inline void IntVectorData::set_ivec(int index, ::google::protobuf::int32 value) {
  ivec_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.IntVectorData.ivec)
}
inline void IntVectorData::add_ivec(::google::protobuf::int32 value) {
  ivec_.Add(value);
  // @@protoc_insertion_point(field_add:XT.IntVectorData.ivec)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntVectorData::ivec() const {
  // @@protoc_insertion_point(field_list:XT.IntVectorData.ivec)
  return ivec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntVectorData::mutable_ivec() {
  // @@protoc_insertion_point(field_mutable_list:XT.IntVectorData.ivec)
  return &ivec_;
}

// -------------------------------------------------------------------

// StringVectorData

// repeated string svec = 1;
inline int StringVectorData::svec_size() const {
  return svec_.size();
}
inline void StringVectorData::clear_svec() {
  svec_.Clear();
}
inline const ::std::string& StringVectorData::svec(int index) const {
  // @@protoc_insertion_point(field_get:XT.StringVectorData.svec)
  return svec_.Get(index);
}
inline ::std::string* StringVectorData::mutable_svec(int index) {
  // @@protoc_insertion_point(field_mutable:XT.StringVectorData.svec)
  return svec_.Mutable(index);
}
inline void StringVectorData::set_svec(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XT.StringVectorData.svec)
  svec_.Mutable(index)->assign(value);
}
inline void StringVectorData::set_svec(int index, const char* value) {
  svec_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XT.StringVectorData.svec)
}
inline void StringVectorData::set_svec(int index, const char* value, size_t size) {
  svec_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XT.StringVectorData.svec)
}
inline ::std::string* StringVectorData::add_svec() {
  // @@protoc_insertion_point(field_add_mutable:XT.StringVectorData.svec)
  return svec_.Add();
}
inline void StringVectorData::add_svec(const ::std::string& value) {
  svec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XT.StringVectorData.svec)
}
inline void StringVectorData::add_svec(const char* value) {
  svec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XT.StringVectorData.svec)
}
inline void StringVectorData::add_svec(const char* value, size_t size) {
  svec_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XT.StringVectorData.svec)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringVectorData::svec() const {
  // @@protoc_insertion_point(field_list:XT.StringVectorData.svec)
  return svec_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringVectorData::mutable_svec() {
  // @@protoc_insertion_point(field_mutable_list:XT.StringVectorData.svec)
  return &svec_;
}

// -------------------------------------------------------------------

// DoubleVectorData

// repeated double dvec = 1;
inline int DoubleVectorData::dvec_size() const {
  return dvec_.size();
}
inline void DoubleVectorData::clear_dvec() {
  dvec_.Clear();
}
inline double DoubleVectorData::dvec(int index) const {
  // @@protoc_insertion_point(field_get:XT.DoubleVectorData.dvec)
  return dvec_.Get(index);
}
inline void DoubleVectorData::set_dvec(int index, double value) {
  dvec_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.DoubleVectorData.dvec)
}
inline void DoubleVectorData::add_dvec(double value) {
  dvec_.Add(value);
  // @@protoc_insertion_point(field_add:XT.DoubleVectorData.dvec)
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleVectorData::dvec() const {
  // @@protoc_insertion_point(field_list:XT.DoubleVectorData.dvec)
  return dvec_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleVectorData::mutable_dvec() {
  // @@protoc_insertion_point(field_mutable_list:XT.DoubleVectorData.dvec)
  return &dvec_;
}

// -------------------------------------------------------------------

// Int64VectorData

// repeated int64 lvec = 1;
inline int Int64VectorData::lvec_size() const {
  return lvec_.size();
}
inline void Int64VectorData::clear_lvec() {
  lvec_.Clear();
}
inline ::google::protobuf::int64 Int64VectorData::lvec(int index) const {
  // @@protoc_insertion_point(field_get:XT.Int64VectorData.lvec)
  return lvec_.Get(index);
}
inline void Int64VectorData::set_lvec(int index, ::google::protobuf::int64 value) {
  lvec_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.Int64VectorData.lvec)
}
inline void Int64VectorData::add_lvec(::google::protobuf::int64 value) {
  lvec_.Add(value);
  // @@protoc_insertion_point(field_add:XT.Int64VectorData.lvec)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64VectorData::lvec() const {
  // @@protoc_insertion_point(field_list:XT.Int64VectorData.lvec)
  return lvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64VectorData::mutable_lvec() {
  // @@protoc_insertion_point(field_mutable_list:XT.Int64VectorData.lvec)
  return &lvec_;
}

// -------------------------------------------------------------------

// IntIntMapData

// map<int32, int32> intintmap = 1;
inline int IntIntMapData::intintmap_size() const {
  return intintmap_.size();
}
inline void IntIntMapData::clear_intintmap() {
  intintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
IntIntMapData::intintmap() const {
  // @@protoc_insertion_point(field_map:XT.IntIntMapData.intintmap)
  return intintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
IntIntMapData::mutable_intintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.IntIntMapData.intintmap)
  return intintmap_.MutableMap();
}

// -------------------------------------------------------------------

// IntStringMapData

// map<int32, string> intstrmap = 1;
inline int IntStringMapData::intstrmap_size() const {
  return intstrmap_.size();
}
inline void IntStringMapData::clear_intstrmap() {
  intstrmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
IntStringMapData::intstrmap() const {
  // @@protoc_insertion_point(field_map:XT.IntStringMapData.intstrmap)
  return intstrmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
IntStringMapData::mutable_intstrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.IntStringMapData.intstrmap)
  return intstrmap_.MutableMap();
}

// -------------------------------------------------------------------

// IntInt64MapData

// map<int32, int64> intint64map = 1;
inline int IntInt64MapData::intint64map_size() const {
  return intint64map_.size();
}
inline void IntInt64MapData::clear_intint64map() {
  intint64map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
IntInt64MapData::intint64map() const {
  // @@protoc_insertion_point(field_map:XT.IntInt64MapData.intint64map)
  return intint64map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
IntInt64MapData::mutable_intint64map() {
  // @@protoc_insertion_point(field_mutable_map:XT.IntInt64MapData.intint64map)
  return intint64map_.MutableMap();
}

// -------------------------------------------------------------------

// IntDoubleMapData

// map<int32, double> intdoublemap = 1;
inline int IntDoubleMapData::intdoublemap_size() const {
  return intdoublemap_.size();
}
inline void IntDoubleMapData::clear_intdoublemap() {
  intdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
IntDoubleMapData::intdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.IntDoubleMapData.intdoublemap)
  return intdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
IntDoubleMapData::mutable_intdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.IntDoubleMapData.intdoublemap)
  return intdoublemap_.MutableMap();
}

// -------------------------------------------------------------------

// StringIntMapData

// map<string, int32> strintmap = 1;
inline int StringIntMapData::strintmap_size() const {
  return strintmap_.size();
}
inline void StringIntMapData::clear_strintmap() {
  strintmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
StringIntMapData::strintmap() const {
  // @@protoc_insertion_point(field_map:XT.StringIntMapData.strintmap)
  return strintmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
StringIntMapData::mutable_strintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.StringIntMapData.strintmap)
  return strintmap_.MutableMap();
}

// -------------------------------------------------------------------

// StringStringMapData

// map<string, string> strstrmap = 1;
inline int StringStringMapData::strstrmap_size() const {
  return strstrmap_.size();
}
inline void StringStringMapData::clear_strstrmap() {
  strstrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StringStringMapData::strstrmap() const {
  // @@protoc_insertion_point(field_map:XT.StringStringMapData.strstrmap)
  return strstrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StringStringMapData::mutable_strstrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.StringStringMapData.strstrmap)
  return strstrmap_.MutableMap();
}

// -------------------------------------------------------------------

// StringDoubleMapData

// map<string, double> strdoublemap = 1;
inline int StringDoubleMapData::strdoublemap_size() const {
  return strdoublemap_.size();
}
inline void StringDoubleMapData::clear_strdoublemap() {
  strdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
StringDoubleMapData::strdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.StringDoubleMapData.strdoublemap)
  return strdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
StringDoubleMapData::mutable_strdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.StringDoubleMapData.strdoublemap)
  return strdoublemap_.MutableMap();
}

// -------------------------------------------------------------------

// StringInt64MapData

// map<string, int64> strint64map = 1;
inline int StringInt64MapData::strint64map_size() const {
  return strint64map_.size();
}
inline void StringInt64MapData::clear_strint64map() {
  strint64map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
StringInt64MapData::strint64map() const {
  // @@protoc_insertion_point(field_map:XT.StringInt64MapData.strint64map)
  return strint64map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
StringInt64MapData::mutable_strint64map() {
  // @@protoc_insertion_point(field_mutable_map:XT.StringInt64MapData.strint64map)
  return strint64map_.MutableMap();
}

// -------------------------------------------------------------------

// Int64IntMapData

// map<int64, int32> int64intmap = 1;
inline int Int64IntMapData::int64intmap_size() const {
  return int64intmap_.size();
}
inline void Int64IntMapData::clear_int64intmap() {
  int64intmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
Int64IntMapData::int64intmap() const {
  // @@protoc_insertion_point(field_map:XT.Int64IntMapData.int64intmap)
  return int64intmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
Int64IntMapData::mutable_int64intmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.Int64IntMapData.int64intmap)
  return int64intmap_.MutableMap();
}

// -------------------------------------------------------------------

// Int64StringMapData

// map<int64, string> int64strmap = 1;
inline int Int64StringMapData::int64strmap_size() const {
  return int64strmap_.size();
}
inline void Int64StringMapData::clear_int64strmap() {
  int64strmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
Int64StringMapData::int64strmap() const {
  // @@protoc_insertion_point(field_map:XT.Int64StringMapData.int64strmap)
  return int64strmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
Int64StringMapData::mutable_int64strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.Int64StringMapData.int64strmap)
  return int64strmap_.MutableMap();
}

// -------------------------------------------------------------------

// Int64DoubleMapData

// map<int64, double> int64doublemap = 1;
inline int Int64DoubleMapData::int64doublemap_size() const {
  return int64doublemap_.size();
}
inline void Int64DoubleMapData::clear_int64doublemap() {
  int64doublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, double >&
Int64DoubleMapData::int64doublemap() const {
  // @@protoc_insertion_point(field_map:XT.Int64DoubleMapData.int64doublemap)
  return int64doublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, double >*
Int64DoubleMapData::mutable_int64doublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.Int64DoubleMapData.int64doublemap)
  return int64doublemap_.MutableMap();
}

// -------------------------------------------------------------------

// Int64Int64MapData

// map<int64, int64> int64int64map = 1;
inline int Int64Int64MapData::int64int64map_size() const {
  return int64int64map_.size();
}
inline void Int64Int64MapData::clear_int64int64map() {
  int64int64map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
Int64Int64MapData::int64int64map() const {
  // @@protoc_insertion_point(field_map:XT.Int64Int64MapData.int64int64map)
  return int64int64map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
Int64Int64MapData::mutable_int64int64map() {
  // @@protoc_insertion_point(field_mutable_map:XT.Int64Int64MapData.int64int64map)
  return int64int64map_.MutableMap();
}

// -------------------------------------------------------------------

// XTMsgData

// optional string name = 1 [default = ""];
inline bool XTMsgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XTMsgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XTMsgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XTMsgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& XTMsgData::name() const {
  // @@protoc_insertion_point(field_get:XT.XTMsgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XTMsgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.XTMsgData.name)
}
inline void XTMsgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.XTMsgData.name)
}
inline void XTMsgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.XTMsgData.name)
}
inline ::std::string* XTMsgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.XTMsgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XTMsgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.XTMsgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XTMsgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.XTMsgData.name)
}

// optional double d = 2 [default = 0];
inline bool XTMsgData::has_d() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XTMsgData::set_has_d() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XTMsgData::clear_has_d() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XTMsgData::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double XTMsgData::d() const {
  // @@protoc_insertion_point(field_get:XT.XTMsgData.d)
  return d_;
}
inline void XTMsgData::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:XT.XTMsgData.d)
}

// optional int32 i = 3 [default = 0];
inline bool XTMsgData::has_i() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XTMsgData::set_has_i() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XTMsgData::clear_has_i() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XTMsgData::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 XTMsgData::i() const {
  // @@protoc_insertion_point(field_get:XT.XTMsgData.i)
  return i_;
}
inline void XTMsgData::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:XT.XTMsgData.i)
}

// optional int64 l = 4 [default = 0];
inline bool XTMsgData::has_l() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XTMsgData::set_has_l() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XTMsgData::clear_has_l() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XTMsgData::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
inline ::google::protobuf::int64 XTMsgData::l() const {
  // @@protoc_insertion_point(field_get:XT.XTMsgData.l)
  return l_;
}
inline void XTMsgData::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:XT.XTMsgData.l)
}

// optional string s = 5 [default = ""];
inline bool XTMsgData::has_s() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void XTMsgData::set_has_s() {
  _has_bits_[0] |= 0x00000010u;
}
inline void XTMsgData::clear_has_s() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void XTMsgData::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
inline const ::std::string& XTMsgData::s() const {
  // @@protoc_insertion_point(field_get:XT.XTMsgData.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XTMsgData::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.XTMsgData.s)
}
inline void XTMsgData::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.XTMsgData.s)
}
inline void XTMsgData::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.XTMsgData.s)
}
inline ::std::string* XTMsgData::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:XT.XTMsgData.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XTMsgData::release_s() {
  // @@protoc_insertion_point(field_release:XT.XTMsgData.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XTMsgData::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:XT.XTMsgData.s)
}

// map<string, string> strmap = 6;
inline int XTMsgData::strmap_size() const {
  return strmap_.size();
}
inline void XTMsgData::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XTMsgData::strmap() const {
  // @@protoc_insertion_point(field_map:XT.XTMsgData.strmap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XTMsgData::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.XTMsgData.strmap)
  return strmap_.MutableMap();
}

// -------------------------------------------------------------------

// PBTagMsg

// optional int32 tag = 1;
inline bool PBTagMsg::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTagMsg::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTagMsg::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTagMsg::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 PBTagMsg::tag() const {
  // @@protoc_insertion_point(field_get:XT.PBTagMsg.tag)
  return tag_;
}
inline void PBTagMsg::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:XT.PBTagMsg.tag)
}

// optional string msg = 2;
inline bool PBTagMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTagMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTagMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTagMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& PBTagMsg::msg() const {
  // @@protoc_insertion_point(field_get:XT.PBTagMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTagMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PBTagMsg.msg)
}
inline void PBTagMsg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PBTagMsg.msg)
}
inline void PBTagMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PBTagMsg.msg)
}
inline ::std::string* PBTagMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:XT.PBTagMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBTagMsg::release_msg() {
  // @@protoc_insertion_point(field_release:XT.PBTagMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTagMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XT.PBTagMsg.msg)
}

// -------------------------------------------------------------------

// PBMsg

// optional string name = 1 [default = ""];
inline bool PBMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PBMsg::name() const {
  // @@protoc_insertion_point(field_get:XT.PBMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PBMsg.name)
}
inline void PBMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PBMsg.name)
}
inline void PBMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PBMsg.name)
}
inline ::std::string* PBMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.PBMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMsg::release_name() {
  // @@protoc_insertion_point(field_release:XT.PBMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.PBMsg.name)
}

// optional bool isjson = 2 [default = false];
inline bool PBMsg::has_isjson() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMsg::set_has_isjson() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMsg::clear_has_isjson() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMsg::clear_isjson() {
  isjson_ = false;
  clear_has_isjson();
}
inline bool PBMsg::isjson() const {
  // @@protoc_insertion_point(field_get:XT.PBMsg.isjson)
  return isjson_;
}
inline void PBMsg::set_isjson(bool value) {
  set_has_isjson();
  isjson_ = value;
  // @@protoc_insertion_point(field_set:XT.PBMsg.isjson)
}

// map<string, string> strmap = 3;
inline int PBMsg::strmap_size() const {
  return strmap_.size();
}
inline void PBMsg::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBMsg::strmap() const {
  // @@protoc_insertion_point(field_map:XT.PBMsg.strmap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBMsg::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PBMsg.strmap)
  return strmap_.MutableMap();
}

// -------------------------------------------------------------------

// PBMsgMap

// optional string name = 1 [default = ""];
inline bool PBMsgMap::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMsgMap::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMsgMap::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMsgMap::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PBMsgMap::name() const {
  // @@protoc_insertion_point(field_get:XT.PBMsgMap.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMsgMap::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PBMsgMap.name)
}
inline void PBMsgMap::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PBMsgMap.name)
}
inline void PBMsgMap::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PBMsgMap.name)
}
inline ::std::string* PBMsgMap::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.PBMsgMap.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMsgMap::release_name() {
  // @@protoc_insertion_point(field_release:XT.PBMsgMap.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMsgMap::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.PBMsgMap.name)
}

// map<string, string> strmap = 2;
inline int PBMsgMap::strmap_size() const {
  return strmap_.size();
}
inline void PBMsgMap::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBMsgMap::strmap() const {
  // @@protoc_insertion_point(field_map:XT.PBMsgMap.strmap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBMsgMap::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PBMsgMap.strmap)
  return strmap_.MutableMap();
}

// -------------------------------------------------------------------

// PBTagMsgMap

// optional int32 tag = 1 [default = 0];
inline bool PBTagMsgMap::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTagMsgMap::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTagMsgMap::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTagMsgMap::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 PBTagMsgMap::tag() const {
  // @@protoc_insertion_point(field_get:XT.PBTagMsgMap.tag)
  return tag_;
}
inline void PBTagMsgMap::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:XT.PBTagMsgMap.tag)
}

// map<int32, string> strmap = 2;
inline int PBTagMsgMap::strmap_size() const {
  return strmap_.size();
}
inline void PBTagMsgMap::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
PBTagMsgMap::strmap() const {
  // @@protoc_insertion_point(field_map:XT.PBTagMsgMap.strmap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
PBTagMsgMap::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PBTagMsgMap.strmap)
  return strmap_.MutableMap();
}

// -------------------------------------------------------------------

// ApiPBTagMsg

// optional string apiname = 1 [default = ""];
inline bool ApiPBTagMsg::has_apiname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApiPBTagMsg::set_has_apiname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApiPBTagMsg::clear_has_apiname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApiPBTagMsg::clear_apiname() {
  apiname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apiname();
}
inline const ::std::string& ApiPBTagMsg::apiname() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.apiname)
  return apiname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_apiname(const ::std::string& value) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.apiname)
}
inline void ApiPBTagMsg::set_apiname(const char* value) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiPBTagMsg.apiname)
}
inline void ApiPBTagMsg::set_apiname(const char* value, size_t size) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiPBTagMsg.apiname)
}
inline ::std::string* ApiPBTagMsg::mutable_apiname() {
  set_has_apiname();
  // @@protoc_insertion_point(field_mutable:XT.ApiPBTagMsg.apiname)
  return apiname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiPBTagMsg::release_apiname() {
  // @@protoc_insertion_point(field_release:XT.ApiPBTagMsg.apiname)
  clear_has_apiname();
  return apiname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_allocated_apiname(::std::string* apiname) {
  if (apiname != NULL) {
    set_has_apiname();
  } else {
    clear_has_apiname();
  }
  apiname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apiname);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiPBTagMsg.apiname)
}

// optional int32 tag = 2;
inline bool ApiPBTagMsg::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApiPBTagMsg::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApiPBTagMsg::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApiPBTagMsg::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 ApiPBTagMsg::tag() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.tag)
  return tag_;
}
inline void ApiPBTagMsg::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.tag)
}

// optional string data = 3;
inline bool ApiPBTagMsg::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApiPBTagMsg::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApiPBTagMsg::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApiPBTagMsg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ApiPBTagMsg::data() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.data)
}
inline void ApiPBTagMsg::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiPBTagMsg.data)
}
inline void ApiPBTagMsg::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiPBTagMsg.data)
}
inline ::std::string* ApiPBTagMsg::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:XT.ApiPBTagMsg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiPBTagMsg::release_data() {
  // @@protoc_insertion_point(field_release:XT.ApiPBTagMsg.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiPBTagMsg.data)
}

// optional string info = 4;
inline bool ApiPBTagMsg::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApiPBTagMsg::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ApiPBTagMsg::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ApiPBTagMsg::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
inline const ::std::string& ApiPBTagMsg::info() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.info)
}
inline void ApiPBTagMsg::set_info(const char* value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiPBTagMsg.info)
}
inline void ApiPBTagMsg::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiPBTagMsg.info)
}
inline ::std::string* ApiPBTagMsg::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:XT.ApiPBTagMsg.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiPBTagMsg::release_info() {
  // @@protoc_insertion_point(field_release:XT.ApiPBTagMsg.info)
  clear_has_info();
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiPBTagMsg::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiPBTagMsg.info)
}

// optional int32 id = 5;
inline bool ApiPBTagMsg::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApiPBTagMsg::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ApiPBTagMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ApiPBTagMsg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ApiPBTagMsg::id() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.id)
  return id_;
}
inline void ApiPBTagMsg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.id)
}

// optional uint32 uid = 6;
inline bool ApiPBTagMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ApiPBTagMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ApiPBTagMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ApiPBTagMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ApiPBTagMsg::uid() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.uid)
  return uid_;
}
inline void ApiPBTagMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.uid)
}

// optional bool last = 7;
inline bool ApiPBTagMsg::has_last() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ApiPBTagMsg::set_has_last() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ApiPBTagMsg::clear_has_last() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ApiPBTagMsg::clear_last() {
  last_ = false;
  clear_has_last();
}
inline bool ApiPBTagMsg::last() const {
  // @@protoc_insertion_point(field_get:XT.ApiPBTagMsg.last)
  return last_;
}
inline void ApiPBTagMsg::set_last(bool value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiPBTagMsg.last)
}

// -------------------------------------------------------------------

// ApiData

// optional int32 apitype = 1 [default = 0];
inline bool ApiData::has_apitype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApiData::set_has_apitype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApiData::clear_has_apitype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApiData::clear_apitype() {
  apitype_ = 0;
  clear_has_apitype();
}
inline ::google::protobuf::int32 ApiData::apitype() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.apitype)
  return apitype_;
}
inline void ApiData::set_apitype(::google::protobuf::int32 value) {
  set_has_apitype();
  apitype_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiData.apitype)
}

// optional string name = 2 [default = ""];
inline bool ApiData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApiData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApiData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApiData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ApiData::name() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiData.name)
}
inline void ApiData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiData.name)
}
inline void ApiData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiData.name)
}
inline ::std::string* ApiData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.ApiData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiData::release_name() {
  // @@protoc_insertion_point(field_release:XT.ApiData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiData.name)
}

// optional string version = 3 [default = ""];
inline bool ApiData::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApiData::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApiData::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApiData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& ApiData::version() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiData.version)
}
inline void ApiData::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiData.version)
}
inline void ApiData::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiData.version)
}
inline ::std::string* ApiData::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:XT.ApiData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiData::release_version() {
  // @@protoc_insertion_point(field_release:XT.ApiData.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiData.version)
}

// optional int32 initflag = 4 [default = 0];
inline bool ApiData::has_initflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApiData::set_has_initflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ApiData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ApiData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 ApiData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.initflag)
  return initflag_;
}
inline void ApiData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiData.initflag)
}

// optional int32 instrfilterflag = 5 [default = 0];
inline bool ApiData::has_instrfilterflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApiData::set_has_instrfilterflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ApiData::clear_has_instrfilterflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ApiData::clear_instrfilterflag() {
  instrfilterflag_ = 0;
  clear_has_instrfilterflag();
}
inline ::google::protobuf::int32 ApiData::instrfilterflag() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.instrfilterflag)
  return instrfilterflag_;
}
inline void ApiData::set_instrfilterflag(::google::protobuf::int32 value) {
  set_has_instrfilterflag();
  instrfilterflag_ = value;
  // @@protoc_insertion_point(field_set:XT.ApiData.instrfilterflag)
}

// optional string instrprefixes = 6 [default = ""];
inline bool ApiData::has_instrprefixes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ApiData::set_has_instrprefixes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ApiData::clear_has_instrprefixes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ApiData::clear_instrprefixes() {
  instrprefixes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrprefixes();
}
inline const ::std::string& ApiData::instrprefixes() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.instrprefixes)
  return instrprefixes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_instrprefixes(const ::std::string& value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiData.instrprefixes)
}
inline void ApiData::set_instrprefixes(const char* value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiData.instrprefixes)
}
inline void ApiData::set_instrprefixes(const char* value, size_t size) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiData.instrprefixes)
}
inline ::std::string* ApiData::mutable_instrprefixes() {
  set_has_instrprefixes();
  // @@protoc_insertion_point(field_mutable:XT.ApiData.instrprefixes)
  return instrprefixes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiData::release_instrprefixes() {
  // @@protoc_insertion_point(field_release:XT.ApiData.instrprefixes)
  clear_has_instrprefixes();
  return instrprefixes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_allocated_instrprefixes(::std::string* instrprefixes) {
  if (instrprefixes != NULL) {
    set_has_instrprefixes();
  } else {
    clear_has_instrprefixes();
  }
  instrprefixes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrprefixes);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiData.instrprefixes)
}

// optional string productids = 7 [default = ""];
inline bool ApiData::has_productids() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ApiData::set_has_productids() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ApiData::clear_has_productids() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ApiData::clear_productids() {
  productids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productids();
}
inline const ::std::string& ApiData::productids() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.productids)
  return productids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_productids(const ::std::string& value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiData.productids)
}
inline void ApiData::set_productids(const char* value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiData.productids)
}
inline void ApiData::set_productids(const char* value, size_t size) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiData.productids)
}
inline ::std::string* ApiData::mutable_productids() {
  set_has_productids();
  // @@protoc_insertion_point(field_mutable:XT.ApiData.productids)
  return productids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiData::release_productids() {
  // @@protoc_insertion_point(field_release:XT.ApiData.productids)
  clear_has_productids();
  return productids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_allocated_productids(::std::string* productids) {
  if (productids != NULL) {
    set_has_productids();
  } else {
    clear_has_productids();
  }
  productids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productids);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiData.productids)
}

// optional string exchids = 8 [default = ""];
inline bool ApiData::has_exchids() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ApiData::set_has_exchids() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ApiData::clear_has_exchids() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ApiData::clear_exchids() {
  exchids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchids();
}
inline const ::std::string& ApiData::exchids() const {
  // @@protoc_insertion_point(field_get:XT.ApiData.exchids)
  return exchids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_exchids(const ::std::string& value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ApiData.exchids)
}
inline void ApiData::set_exchids(const char* value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ApiData.exchids)
}
inline void ApiData::set_exchids(const char* value, size_t size) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ApiData.exchids)
}
inline ::std::string* ApiData::mutable_exchids() {
  set_has_exchids();
  // @@protoc_insertion_point(field_mutable:XT.ApiData.exchids)
  return exchids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiData::release_exchids() {
  // @@protoc_insertion_point(field_release:XT.ApiData.exchids)
  clear_has_exchids();
  return exchids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiData::set_allocated_exchids(::std::string* exchids) {
  if (exchids != NULL) {
    set_has_exchids();
  } else {
    clear_has_exchids();
  }
  exchids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchids);
  // @@protoc_insertion_point(field_set_allocated:XT.ApiData.exchids)
}

// -------------------------------------------------------------------

// TagMsg

// optional int32 tag = 1;
inline bool TagMsg::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagMsg::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagMsg::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagMsg::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 TagMsg::tag() const {
  // @@protoc_insertion_point(field_get:XT.TagMsg.tag)
  return tag_;
}
inline void TagMsg::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:XT.TagMsg.tag)
}

// optional string msg = 2;
inline bool TagMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& TagMsg::msg() const {
  // @@protoc_insertion_point(field_get:XT.TagMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TagMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.TagMsg.msg)
}
inline void TagMsg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.TagMsg.msg)
}
inline void TagMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.TagMsg.msg)
}
inline ::std::string* TagMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:XT.TagMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TagMsg::release_msg() {
  // @@protoc_insertion_point(field_release:XT.TagMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TagMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XT.TagMsg.msg)
}

// -------------------------------------------------------------------

// TagData

// optional int32 id = 1;
inline bool TagData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TagData::id() const {
  // @@protoc_insertion_point(field_get:XT.TagData.id)
  return id_;
}
inline void TagData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:XT.TagData.id)
}

// map<int32, int32> intMap = 2;
inline int TagData::intmap_size() const {
  return intmap_.size();
}
inline void TagData::clear_intmap() {
  intmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
TagData::intmap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.intMap)
  return intmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
TagData::mutable_intmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.intMap)
  return intmap_.MutableMap();
}

// map<int32, double> doubleMap = 3;
inline int TagData::doublemap_size() const {
  return doublemap_.size();
}
inline void TagData::clear_doublemap() {
  doublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
TagData::doublemap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.doubleMap)
  return doublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
TagData::mutable_doublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.doubleMap)
  return doublemap_.MutableMap();
}

// map<int32, int64> longMap = 4;
inline int TagData::longmap_size() const {
  return longmap_.size();
}
inline void TagData::clear_longmap() {
  longmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
TagData::longmap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.longMap)
  return longmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
TagData::mutable_longmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.longMap)
  return longmap_.MutableMap();
}

// map<int32, string> strMap = 5;
inline int TagData::strmap_size() const {
  return strmap_.size();
}
inline void TagData::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
TagData::strmap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.strMap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
TagData::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.strMap)
  return strmap_.MutableMap();
}

// map<string, string> strToStrMap = 6;
inline int TagData::strtostrmap_size() const {
  return strtostrmap_.size();
}
inline void TagData::clear_strtostrmap() {
  strtostrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
TagData::strtostrmap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.strToStrMap)
  return strtostrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
TagData::mutable_strtostrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.strToStrMap)
  return strtostrmap_.MutableMap();
}

// map<string, .XT.TagData> nestedMap = 7;
inline int TagData::nestedmap_size() const {
  return nestedmap_.size();
}
inline void TagData::clear_nestedmap() {
  nestedmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::TagData >&
TagData::nestedmap() const {
  // @@protoc_insertion_point(field_map:XT.TagData.nestedMap)
  return nestedmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::TagData >*
TagData::mutable_nestedmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.TagData.nestedMap)
  return nestedmap_.MutableMap();
}

// -------------------------------------------------------------------

// StringMapData

// map<string, string> strToStrMap = 1;
inline int StringMapData::strtostrmap_size() const {
  return strtostrmap_.size();
}
inline void StringMapData::clear_strtostrmap() {
  strtostrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StringMapData::strtostrmap() const {
  // @@protoc_insertion_point(field_map:XT.StringMapData.strToStrMap)
  return strtostrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StringMapData::mutable_strtostrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.StringMapData.strToStrMap)
  return strtostrmap_.MutableMap();
}

// -------------------------------------------------------------------

// TsRange

// optional int64 begints = 1 [default = 0];
inline bool TsRange::has_begints() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TsRange::set_has_begints() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TsRange::clear_has_begints() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TsRange::clear_begints() {
  begints_ = GOOGLE_LONGLONG(0);
  clear_has_begints();
}
inline ::google::protobuf::int64 TsRange::begints() const {
  // @@protoc_insertion_point(field_get:XT.TsRange.begints)
  return begints_;
}
inline void TsRange::set_begints(::google::protobuf::int64 value) {
  set_has_begints();
  begints_ = value;
  // @@protoc_insertion_point(field_set:XT.TsRange.begints)
}

// optional int64 endts = 2 [default = 0];
inline bool TsRange::has_endts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TsRange::set_has_endts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TsRange::clear_has_endts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TsRange::clear_endts() {
  endts_ = GOOGLE_LONGLONG(0);
  clear_has_endts();
}
inline ::google::protobuf::int64 TsRange::endts() const {
  // @@protoc_insertion_point(field_get:XT.TsRange.endts)
  return endts_;
}
inline void TsRange::set_endts(::google::protobuf::int64 value) {
  set_has_endts();
  endts_ = value;
  // @@protoc_insertion_point(field_set:XT.TsRange.endts)
}

// -------------------------------------------------------------------

// SessionData

// optional string name = 1 [default = ""];
inline bool SessionData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SessionData::name() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SessionData.name)
}
inline void SessionData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SessionData.name)
}
inline void SessionData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SessionData.name)
}
inline ::std::string* SessionData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.SessionData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionData::release_name() {
  // @@protoc_insertion_point(field_release:XT.SessionData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.SessionData.name)
}

// optional int32 flag = 2 [default = 0];
inline bool SessionData::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionData::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionData::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionData::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 SessionData::flag() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.flag)
  return flag_;
}
inline void SessionData::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.flag)
}

// optional int32 tradingday = 3 [default = 0];
inline bool SessionData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SessionData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SessionData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SessionData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 SessionData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.tradingday)
  return tradingday_;
}
inline void SessionData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.tradingday)
}

// optional int32 prevtradingday = 4 [default = 0];
inline bool SessionData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SessionData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SessionData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SessionData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 SessionData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.prevtradingday)
  return prevtradingday_;
}
inline void SessionData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.prevtradingday)
}

// optional int64 begints = 5 [default = 0];
inline bool SessionData::has_begints() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SessionData::set_has_begints() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SessionData::clear_has_begints() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SessionData::clear_begints() {
  begints_ = GOOGLE_LONGLONG(0);
  clear_has_begints();
}
inline ::google::protobuf::int64 SessionData::begints() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.begints)
  return begints_;
}
inline void SessionData::set_begints(::google::protobuf::int64 value) {
  set_has_begints();
  begints_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.begints)
}

// optional int64 endts = 6 [default = 0];
inline bool SessionData::has_endts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SessionData::set_has_endts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SessionData::clear_has_endts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SessionData::clear_endts() {
  endts_ = GOOGLE_LONGLONG(0);
  clear_has_endts();
}
inline ::google::protobuf::int64 SessionData::endts() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.endts)
  return endts_;
}
inline void SessionData::set_endts(::google::protobuf::int64 value) {
  set_has_endts();
  endts_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.endts)
}

// optional string begindt = 7 [default = ""];
inline bool SessionData::has_begindt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SessionData::set_has_begindt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SessionData::clear_has_begindt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SessionData::clear_begindt() {
  begindt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_begindt();
}
inline const ::std::string& SessionData::begindt() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.begindt)
  return begindt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_begindt(const ::std::string& value) {
  set_has_begindt();
  begindt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SessionData.begindt)
}
inline void SessionData::set_begindt(const char* value) {
  set_has_begindt();
  begindt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SessionData.begindt)
}
inline void SessionData::set_begindt(const char* value, size_t size) {
  set_has_begindt();
  begindt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SessionData.begindt)
}
inline ::std::string* SessionData::mutable_begindt() {
  set_has_begindt();
  // @@protoc_insertion_point(field_mutable:XT.SessionData.begindt)
  return begindt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionData::release_begindt() {
  // @@protoc_insertion_point(field_release:XT.SessionData.begindt)
  clear_has_begindt();
  return begindt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_allocated_begindt(::std::string* begindt) {
  if (begindt != NULL) {
    set_has_begindt();
  } else {
    clear_has_begindt();
  }
  begindt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begindt);
  // @@protoc_insertion_point(field_set_allocated:XT.SessionData.begindt)
}

// optional string enddt = 8 [default = ""];
inline bool SessionData::has_enddt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SessionData::set_has_enddt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SessionData::clear_has_enddt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SessionData::clear_enddt() {
  enddt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enddt();
}
inline const ::std::string& SessionData::enddt() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.enddt)
  return enddt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_enddt(const ::std::string& value) {
  set_has_enddt();
  enddt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SessionData.enddt)
}
inline void SessionData::set_enddt(const char* value) {
  set_has_enddt();
  enddt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SessionData.enddt)
}
inline void SessionData::set_enddt(const char* value, size_t size) {
  set_has_enddt();
  enddt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SessionData.enddt)
}
inline ::std::string* SessionData::mutable_enddt() {
  set_has_enddt();
  // @@protoc_insertion_point(field_mutable:XT.SessionData.enddt)
  return enddt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionData::release_enddt() {
  // @@protoc_insertion_point(field_release:XT.SessionData.enddt)
  clear_has_enddt();
  return enddt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_allocated_enddt(::std::string* enddt) {
  if (enddt != NULL) {
    set_has_enddt();
  } else {
    clear_has_enddt();
  }
  enddt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enddt);
  // @@protoc_insertion_point(field_set_allocated:XT.SessionData.enddt)
}

// optional int64 mktts = 9 [default = 0];
inline bool SessionData::has_mktts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SessionData::set_has_mktts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SessionData::clear_has_mktts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SessionData::clear_mktts() {
  mktts_ = GOOGLE_LONGLONG(0);
  clear_has_mktts();
}
inline ::google::protobuf::int64 SessionData::mktts() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.mktts)
  return mktts_;
}
inline void SessionData::set_mktts(::google::protobuf::int64 value) {
  set_has_mktts();
  mktts_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.mktts)
}

// optional int32 secselapsed = 10 [default = 0];
inline bool SessionData::has_secselapsed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SessionData::set_has_secselapsed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SessionData::clear_has_secselapsed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SessionData::clear_secselapsed() {
  secselapsed_ = 0;
  clear_has_secselapsed();
}
inline ::google::protobuf::int32 SessionData::secselapsed() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.secselapsed)
  return secselapsed_;
}
inline void SessionData::set_secselapsed(::google::protobuf::int32 value) {
  set_has_secselapsed();
  secselapsed_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.secselapsed)
}

// optional int32 secsleft = 11 [default = 0];
inline bool SessionData::has_secsleft() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SessionData::set_has_secsleft() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SessionData::clear_has_secsleft() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SessionData::clear_secsleft() {
  secsleft_ = 0;
  clear_has_secsleft();
}
inline ::google::protobuf::int32 SessionData::secsleft() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.secsleft)
  return secsleft_;
}
inline void SessionData::set_secsleft(::google::protobuf::int32 value) {
  set_has_secsleft();
  secsleft_ = value;
  // @@protoc_insertion_point(field_set:XT.SessionData.secsleft)
}

// optional string cfgstr = 12 [default = ""];
inline bool SessionData::has_cfgstr() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SessionData::set_has_cfgstr() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SessionData::clear_has_cfgstr() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SessionData::clear_cfgstr() {
  cfgstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfgstr();
}
inline const ::std::string& SessionData::cfgstr() const {
  // @@protoc_insertion_point(field_get:XT.SessionData.cfgstr)
  return cfgstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_cfgstr(const ::std::string& value) {
  set_has_cfgstr();
  cfgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SessionData.cfgstr)
}
inline void SessionData::set_cfgstr(const char* value) {
  set_has_cfgstr();
  cfgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SessionData.cfgstr)
}
inline void SessionData::set_cfgstr(const char* value, size_t size) {
  set_has_cfgstr();
  cfgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SessionData.cfgstr)
}
inline ::std::string* SessionData::mutable_cfgstr() {
  set_has_cfgstr();
  // @@protoc_insertion_point(field_mutable:XT.SessionData.cfgstr)
  return cfgstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionData::release_cfgstr() {
  // @@protoc_insertion_point(field_release:XT.SessionData.cfgstr)
  clear_has_cfgstr();
  return cfgstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionData::set_allocated_cfgstr(::std::string* cfgstr) {
  if (cfgstr != NULL) {
    set_has_cfgstr();
  } else {
    clear_has_cfgstr();
  }
  cfgstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfgstr);
  // @@protoc_insertion_point(field_set_allocated:XT.SessionData.cfgstr)
}

// -------------------------------------------------------------------

// DoubleParam

// optional double curr = 1 [default = 0];
inline bool DoubleParam::has_curr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleParam::set_has_curr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleParam::clear_has_curr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleParam::clear_curr() {
  curr_ = 0;
  clear_has_curr();
}
inline double DoubleParam::curr() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.curr)
  return curr_;
}
inline void DoubleParam::set_curr(double value) {
  set_has_curr();
  curr_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.curr)
}

// optional double prev = 2 [default = 0];
inline bool DoubleParam::has_prev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DoubleParam::set_has_prev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DoubleParam::clear_has_prev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DoubleParam::clear_prev() {
  prev_ = 0;
  clear_has_prev();
}
inline double DoubleParam::prev() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.prev)
  return prev_;
}
inline void DoubleParam::set_prev(double value) {
  set_has_prev();
  prev_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.prev)
}

// optional double temp = 3 [default = 0];
inline bool DoubleParam::has_temp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DoubleParam::set_has_temp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DoubleParam::clear_has_temp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DoubleParam::clear_temp() {
  temp_ = 0;
  clear_has_temp();
}
inline double DoubleParam::temp() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.temp)
  return temp_;
}
inline void DoubleParam::set_temp(double value) {
  set_has_temp();
  temp_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.temp)
}

// optional double min = 4 [default = -999999999];
inline bool DoubleParam::has_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DoubleParam::set_has_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DoubleParam::clear_has_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DoubleParam::clear_min() {
  min_ = -999999999;
  clear_has_min();
}
inline double DoubleParam::min() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.min)
  return min_;
}
inline void DoubleParam::set_min(double value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.min)
}

// optional double max = 5 [default = 999999999];
inline bool DoubleParam::has_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DoubleParam::set_has_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DoubleParam::clear_has_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DoubleParam::clear_max() {
  max_ = 999999999;
  clear_has_max();
}
inline double DoubleParam::max() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.max)
  return max_;
}
inline void DoubleParam::set_max(double value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.max)
}

// optional double step = 6 [default = 0.001];
inline bool DoubleParam::has_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DoubleParam::set_has_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DoubleParam::clear_has_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DoubleParam::clear_step() {
  step_ = 0.001;
  clear_has_step();
}
inline double DoubleParam::step() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.step)
  return step_;
}
inline void DoubleParam::set_step(double value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.step)
}

// optional int32 idx = 7 [default = 0];
inline bool DoubleParam::has_idx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DoubleParam::set_has_idx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DoubleParam::clear_has_idx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DoubleParam::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 DoubleParam::idx() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.idx)
  return idx_;
}
inline void DoubleParam::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleParam.idx)
}

// optional string name = 8 [default = ""];
inline bool DoubleParam::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DoubleParam::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DoubleParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DoubleParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DoubleParam::name() const {
  // @@protoc_insertion_point(field_get:XT.DoubleParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.DoubleParam.name)
}
inline void DoubleParam::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.DoubleParam.name)
}
inline void DoubleParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.DoubleParam.name)
}
inline ::std::string* DoubleParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.DoubleParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DoubleParam::release_name() {
  // @@protoc_insertion_point(field_release:XT.DoubleParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.DoubleParam.name)
}

// -------------------------------------------------------------------

// IntParam

// optional int32 curr = 1 [default = 0];
inline bool IntParam::has_curr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntParam::set_has_curr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntParam::clear_has_curr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntParam::clear_curr() {
  curr_ = 0;
  clear_has_curr();
}
inline ::google::protobuf::int32 IntParam::curr() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.curr)
  return curr_;
}
inline void IntParam::set_curr(::google::protobuf::int32 value) {
  set_has_curr();
  curr_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.curr)
}

// optional int32 prev = 2 [default = 0];
inline bool IntParam::has_prev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntParam::set_has_prev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntParam::clear_has_prev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntParam::clear_prev() {
  prev_ = 0;
  clear_has_prev();
}
inline ::google::protobuf::int32 IntParam::prev() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.prev)
  return prev_;
}
inline void IntParam::set_prev(::google::protobuf::int32 value) {
  set_has_prev();
  prev_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.prev)
}

// optional int32 temp = 3 [default = 0];
inline bool IntParam::has_temp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntParam::set_has_temp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntParam::clear_has_temp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntParam::clear_temp() {
  temp_ = 0;
  clear_has_temp();
}
inline ::google::protobuf::int32 IntParam::temp() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.temp)
  return temp_;
}
inline void IntParam::set_temp(::google::protobuf::int32 value) {
  set_has_temp();
  temp_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.temp)
}

// optional int32 min = 4 [default = -999999999];
inline bool IntParam::has_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IntParam::set_has_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IntParam::clear_has_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IntParam::clear_min() {
  min_ = -999999999;
  clear_has_min();
}
inline ::google::protobuf::int32 IntParam::min() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.min)
  return min_;
}
inline void IntParam::set_min(::google::protobuf::int32 value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.min)
}

// optional int32 max = 5 [default = 999999999];
inline bool IntParam::has_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IntParam::set_has_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IntParam::clear_has_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IntParam::clear_max() {
  max_ = 999999999;
  clear_has_max();
}
inline ::google::protobuf::int32 IntParam::max() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.max)
  return max_;
}
inline void IntParam::set_max(::google::protobuf::int32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.max)
}

// optional int32 step = 6 [default = 1];
inline bool IntParam::has_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IntParam::set_has_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IntParam::clear_has_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IntParam::clear_step() {
  step_ = 1;
  clear_has_step();
}
inline ::google::protobuf::int32 IntParam::step() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.step)
  return step_;
}
inline void IntParam::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.step)
}

// optional int32 idx = 7 [default = 0];
inline bool IntParam::has_idx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IntParam::set_has_idx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IntParam::clear_has_idx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IntParam::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 IntParam::idx() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.idx)
  return idx_;
}
inline void IntParam::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:XT.IntParam.idx)
}

// optional string name = 8 [default = ""];
inline bool IntParam::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IntParam::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IntParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IntParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& IntParam::name() const {
  // @@protoc_insertion_point(field_get:XT.IntParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.IntParam.name)
}
inline void IntParam::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.IntParam.name)
}
inline void IntParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.IntParam.name)
}
inline ::std::string* IntParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.IntParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntParam::release_name() {
  // @@protoc_insertion_point(field_release:XT.IntParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.IntParam.name)
}

// -------------------------------------------------------------------

// Int64Param

// optional int64 curr = 1 [default = 0];
inline bool Int64Param::has_curr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Int64Param::set_has_curr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Int64Param::clear_has_curr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Int64Param::clear_curr() {
  curr_ = GOOGLE_LONGLONG(0);
  clear_has_curr();
}
inline ::google::protobuf::int64 Int64Param::curr() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.curr)
  return curr_;
}
inline void Int64Param::set_curr(::google::protobuf::int64 value) {
  set_has_curr();
  curr_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.curr)
}

// optional int64 prev = 2 [default = 0];
inline bool Int64Param::has_prev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Int64Param::set_has_prev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Int64Param::clear_has_prev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Int64Param::clear_prev() {
  prev_ = GOOGLE_LONGLONG(0);
  clear_has_prev();
}
inline ::google::protobuf::int64 Int64Param::prev() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.prev)
  return prev_;
}
inline void Int64Param::set_prev(::google::protobuf::int64 value) {
  set_has_prev();
  prev_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.prev)
}

// optional int64 temp = 3 [default = 0];
inline bool Int64Param::has_temp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Int64Param::set_has_temp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Int64Param::clear_has_temp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Int64Param::clear_temp() {
  temp_ = GOOGLE_LONGLONG(0);
  clear_has_temp();
}
inline ::google::protobuf::int64 Int64Param::temp() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.temp)
  return temp_;
}
inline void Int64Param::set_temp(::google::protobuf::int64 value) {
  set_has_temp();
  temp_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.temp)
}

// optional int64 min = 4 [default = -999999999];
inline bool Int64Param::has_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Int64Param::set_has_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Int64Param::clear_has_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Int64Param::clear_min() {
  min_ = GOOGLE_LONGLONG(-999999999);
  clear_has_min();
}
inline ::google::protobuf::int64 Int64Param::min() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.min)
  return min_;
}
inline void Int64Param::set_min(::google::protobuf::int64 value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.min)
}

// optional int64 max = 5 [default = 999999999];
inline bool Int64Param::has_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Int64Param::set_has_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Int64Param::clear_has_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Int64Param::clear_max() {
  max_ = GOOGLE_LONGLONG(999999999);
  clear_has_max();
}
inline ::google::protobuf::int64 Int64Param::max() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.max)
  return max_;
}
inline void Int64Param::set_max(::google::protobuf::int64 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.max)
}

// optional int64 step = 6 [default = 1];
inline bool Int64Param::has_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Int64Param::set_has_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Int64Param::clear_has_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Int64Param::clear_step() {
  step_ = GOOGLE_LONGLONG(1);
  clear_has_step();
}
inline ::google::protobuf::int64 Int64Param::step() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.step)
  return step_;
}
inline void Int64Param::set_step(::google::protobuf::int64 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.step)
}

// optional int64 idx = 7 [default = 0];
inline bool Int64Param::has_idx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Int64Param::set_has_idx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Int64Param::clear_has_idx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Int64Param::clear_idx() {
  idx_ = GOOGLE_LONGLONG(0);
  clear_has_idx();
}
inline ::google::protobuf::int64 Int64Param::idx() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.idx)
  return idx_;
}
inline void Int64Param::set_idx(::google::protobuf::int64 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:XT.Int64Param.idx)
}

// optional string name = 8 [default = ""];
inline bool Int64Param::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Int64Param::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Int64Param::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Int64Param::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Int64Param::name() const {
  // @@protoc_insertion_point(field_get:XT.Int64Param.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Int64Param::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.Int64Param.name)
}
inline void Int64Param::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.Int64Param.name)
}
inline void Int64Param::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.Int64Param.name)
}
inline ::std::string* Int64Param::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.Int64Param.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Int64Param::release_name() {
  // @@protoc_insertion_point(field_release:XT.Int64Param.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Int64Param::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.Int64Param.name)
}

// -------------------------------------------------------------------

// DoubleIntParams

// repeated .XT.DoubleParam doubleparams = 1;
inline int DoubleIntParams::doubleparams_size() const {
  return doubleparams_.size();
}
inline void DoubleIntParams::clear_doubleparams() {
  doubleparams_.Clear();
}
inline const ::XT::DoubleParam& DoubleIntParams::doubleparams(int index) const {
  // @@protoc_insertion_point(field_get:XT.DoubleIntParams.doubleparams)
  return doubleparams_.Get(index);
}
inline ::XT::DoubleParam* DoubleIntParams::mutable_doubleparams(int index) {
  // @@protoc_insertion_point(field_mutable:XT.DoubleIntParams.doubleparams)
  return doubleparams_.Mutable(index);
}
inline ::XT::DoubleParam* DoubleIntParams::add_doubleparams() {
  // @@protoc_insertion_point(field_add:XT.DoubleIntParams.doubleparams)
  return doubleparams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >*
DoubleIntParams::mutable_doubleparams() {
  // @@protoc_insertion_point(field_mutable_list:XT.DoubleIntParams.doubleparams)
  return &doubleparams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >&
DoubleIntParams::doubleparams() const {
  // @@protoc_insertion_point(field_list:XT.DoubleIntParams.doubleparams)
  return doubleparams_;
}

// repeated .XT.IntParam intparams = 2;
inline int DoubleIntParams::intparams_size() const {
  return intparams_.size();
}
inline void DoubleIntParams::clear_intparams() {
  intparams_.Clear();
}
inline const ::XT::IntParam& DoubleIntParams::intparams(int index) const {
  // @@protoc_insertion_point(field_get:XT.DoubleIntParams.intparams)
  return intparams_.Get(index);
}
inline ::XT::IntParam* DoubleIntParams::mutable_intparams(int index) {
  // @@protoc_insertion_point(field_mutable:XT.DoubleIntParams.intparams)
  return intparams_.Mutable(index);
}
inline ::XT::IntParam* DoubleIntParams::add_intparams() {
  // @@protoc_insertion_point(field_add:XT.DoubleIntParams.intparams)
  return intparams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XT::IntParam >*
DoubleIntParams::mutable_intparams() {
  // @@protoc_insertion_point(field_mutable_list:XT.DoubleIntParams.intparams)
  return &intparams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XT::IntParam >&
DoubleIntParams::intparams() const {
  // @@protoc_insertion_point(field_list:XT.DoubleIntParams.intparams)
  return intparams_;
}

// optional string name = 3 [default = ""];
inline bool DoubleIntParams::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DoubleIntParams::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DoubleIntParams::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DoubleIntParams::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DoubleIntParams::name() const {
  // @@protoc_insertion_point(field_get:XT.DoubleIntParams.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleIntParams::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.DoubleIntParams.name)
}
inline void DoubleIntParams::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.DoubleIntParams.name)
}
inline void DoubleIntParams::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.DoubleIntParams.name)
}
inline ::std::string* DoubleIntParams::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.DoubleIntParams.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DoubleIntParams::release_name() {
  // @@protoc_insertion_point(field_release:XT.DoubleIntParams.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleIntParams::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.DoubleIntParams.name)
}

// -------------------------------------------------------------------

// DoubleFunctionParams

// optional string name = 1 [default = ""];
inline bool DoubleFunctionParams::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleFunctionParams::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleFunctionParams::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleFunctionParams::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DoubleFunctionParams::name() const {
  // @@protoc_insertion_point(field_get:XT.DoubleFunctionParams.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleFunctionParams::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.DoubleFunctionParams.name)
}
inline void DoubleFunctionParams::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.DoubleFunctionParams.name)
}
inline void DoubleFunctionParams::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.DoubleFunctionParams.name)
}
inline ::std::string* DoubleFunctionParams::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.DoubleFunctionParams.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DoubleFunctionParams::release_name() {
  // @@protoc_insertion_point(field_release:XT.DoubleFunctionParams.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoubleFunctionParams::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.DoubleFunctionParams.name)
}

// repeated .XT.DoubleParam doubleparams = 2;
inline int DoubleFunctionParams::doubleparams_size() const {
  return doubleparams_.size();
}
inline void DoubleFunctionParams::clear_doubleparams() {
  doubleparams_.Clear();
}
inline const ::XT::DoubleParam& DoubleFunctionParams::doubleparams(int index) const {
  // @@protoc_insertion_point(field_get:XT.DoubleFunctionParams.doubleparams)
  return doubleparams_.Get(index);
}
inline ::XT::DoubleParam* DoubleFunctionParams::mutable_doubleparams(int index) {
  // @@protoc_insertion_point(field_mutable:XT.DoubleFunctionParams.doubleparams)
  return doubleparams_.Mutable(index);
}
inline ::XT::DoubleParam* DoubleFunctionParams::add_doubleparams() {
  // @@protoc_insertion_point(field_add:XT.DoubleFunctionParams.doubleparams)
  return doubleparams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >*
DoubleFunctionParams::mutable_doubleparams() {
  // @@protoc_insertion_point(field_mutable_list:XT.DoubleFunctionParams.doubleparams)
  return &doubleparams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XT::DoubleParam >&
DoubleFunctionParams::doubleparams() const {
  // @@protoc_insertion_point(field_list:XT.DoubleFunctionParams.doubleparams)
  return doubleparams_;
}

// repeated .XT.IntParam intparams = 3;
inline int DoubleFunctionParams::intparams_size() const {
  return intparams_.size();
}
inline void DoubleFunctionParams::clear_intparams() {
  intparams_.Clear();
}
inline const ::XT::IntParam& DoubleFunctionParams::intparams(int index) const {
  // @@protoc_insertion_point(field_get:XT.DoubleFunctionParams.intparams)
  return intparams_.Get(index);
}
inline ::XT::IntParam* DoubleFunctionParams::mutable_intparams(int index) {
  // @@protoc_insertion_point(field_mutable:XT.DoubleFunctionParams.intparams)
  return intparams_.Mutable(index);
}
inline ::XT::IntParam* DoubleFunctionParams::add_intparams() {
  // @@protoc_insertion_point(field_add:XT.DoubleFunctionParams.intparams)
  return intparams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XT::IntParam >*
DoubleFunctionParams::mutable_intparams() {
  // @@protoc_insertion_point(field_mutable_list:XT.DoubleFunctionParams.intparams)
  return &intparams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XT::IntParam >&
DoubleFunctionParams::intparams() const {
  // @@protoc_insertion_point(field_list:XT.DoubleFunctionParams.intparams)
  return intparams_;
}

// optional double epsilon = 4 [default = 1e-06];
inline bool DoubleFunctionParams::has_epsilon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DoubleFunctionParams::set_has_epsilon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DoubleFunctionParams::clear_has_epsilon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DoubleFunctionParams::clear_epsilon() {
  epsilon_ = 1e-06;
  clear_has_epsilon();
}
inline double DoubleFunctionParams::epsilon() const {
  // @@protoc_insertion_point(field_get:XT.DoubleFunctionParams.epsilon)
  return epsilon_;
}
inline void DoubleFunctionParams::set_epsilon(double value) {
  set_has_epsilon();
  epsilon_ = value;
  // @@protoc_insertion_point(field_set:XT.DoubleFunctionParams.epsilon)
}

// -------------------------------------------------------------------

// PointData

// optional double x = 1 [default = 0];
inline bool PointData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointData::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double PointData::x() const {
  // @@protoc_insertion_point(field_get:XT.PointData.x)
  return x_;
}
inline void PointData::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.x)
}

// optional double y = 2 [default = 0];
inline bool PointData::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointData::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointData::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointData::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double PointData::y() const {
  // @@protoc_insertion_point(field_get:XT.PointData.y)
  return y_;
}
inline void PointData::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.y)
}

// optional double z = 3 [default = 0];
inline bool PointData::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointData::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointData::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointData::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double PointData::z() const {
  // @@protoc_insertion_point(field_get:XT.PointData.z)
  return z_;
}
inline void PointData::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.z)
}

// optional double v = 4 [default = 0];
inline bool PointData::has_v() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PointData::set_has_v() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PointData::clear_has_v() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PointData::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline double PointData::v() const {
  // @@protoc_insertion_point(field_get:XT.PointData.v)
  return v_;
}
inline void PointData::set_v(double value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.v)
}

// optional double w = 5 [default = 1];
inline bool PointData::has_w() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PointData::set_has_w() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PointData::clear_has_w() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PointData::clear_w() {
  w_ = 1;
  clear_has_w();
}
inline double PointData::w() const {
  // @@protoc_insertion_point(field_get:XT.PointData.w)
  return w_;
}
inline void PointData::set_w(double value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.w)
}

// optional int32 flag = 6 [default = 0];
inline bool PointData::has_flag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PointData::set_has_flag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PointData::clear_has_flag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PointData::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 PointData::flag() const {
  // @@protoc_insertion_point(field_get:XT.PointData.flag)
  return flag_;
}
inline void PointData::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.flag)
}

// optional int64 ts = 7 [default = 0];
inline bool PointData::has_ts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PointData::set_has_ts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PointData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PointData::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 PointData::ts() const {
  // @@protoc_insertion_point(field_get:XT.PointData.ts)
  return ts_;
}
inline void PointData::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:XT.PointData.ts)
}

// -------------------------------------------------------------------

// PointDataMap

// map<int64, .XT.PointData> pointsmap = 1;
inline int PointDataMap::pointsmap_size() const {
  return pointsmap_.size();
}
inline void PointDataMap::clear_pointsmap() {
  pointsmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::PointData >&
PointDataMap::pointsmap() const {
  // @@protoc_insertion_point(field_map:XT.PointDataMap.pointsmap)
  return pointsmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::XT::PointData >*
PointDataMap::mutable_pointsmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PointDataMap.pointsmap)
  return pointsmap_.MutableMap();
}

// optional int64 ts = 2 [default = 0];
inline bool PointDataMap::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointDataMap::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointDataMap::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointDataMap::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 PointDataMap::ts() const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.ts)
  return ts_;
}
inline void PointDataMap::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:XT.PointDataMap.ts)
}

// map<int32, double> tagdoublemap = 3;
inline int PointDataMap::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void PointDataMap::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
PointDataMap::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.PointDataMap.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
PointDataMap::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PointDataMap.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<int64, int32> tagtoidxmap = 10;
inline int PointDataMap::tagtoidxmap_size() const {
  return tagtoidxmap_.size();
}
inline void PointDataMap::clear_tagtoidxmap() {
  tagtoidxmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
PointDataMap::tagtoidxmap() const {
  // @@protoc_insertion_point(field_map:XT.PointDataMap.tagtoidxmap)
  return tagtoidxmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
PointDataMap::mutable_tagtoidxmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PointDataMap.tagtoidxmap)
  return tagtoidxmap_.MutableMap();
}

// repeated int64 tags = 11;
inline int PointDataMap::tags_size() const {
  return tags_.size();
}
inline void PointDataMap::clear_tags() {
  tags_.Clear();
}
inline ::google::protobuf::int64 PointDataMap::tags(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.tags)
  return tags_.Get(index);
}
inline void PointDataMap::set_tags(int index, ::google::protobuf::int64 value) {
  tags_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.tags)
}
inline void PointDataMap::add_tags(::google::protobuf::int64 value) {
  tags_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.tags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PointDataMap::tags() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PointDataMap::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.tags)
  return &tags_;
}

// repeated double xs = 12;
inline int PointDataMap::xs_size() const {
  return xs_.size();
}
inline void PointDataMap::clear_xs() {
  xs_.Clear();
}
inline double PointDataMap::xs(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.xs)
  return xs_.Get(index);
}
inline void PointDataMap::set_xs(int index, double value) {
  xs_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.xs)
}
inline void PointDataMap::add_xs(double value) {
  xs_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.xs)
}
inline const ::google::protobuf::RepeatedField< double >&
PointDataMap::xs() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.xs)
  return xs_;
}
inline ::google::protobuf::RepeatedField< double >*
PointDataMap::mutable_xs() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.xs)
  return &xs_;
}

// repeated double ys = 13;
inline int PointDataMap::ys_size() const {
  return ys_.size();
}
inline void PointDataMap::clear_ys() {
  ys_.Clear();
}
inline double PointDataMap::ys(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.ys)
  return ys_.Get(index);
}
inline void PointDataMap::set_ys(int index, double value) {
  ys_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.ys)
}
inline void PointDataMap::add_ys(double value) {
  ys_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.ys)
}
inline const ::google::protobuf::RepeatedField< double >&
PointDataMap::ys() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.ys)
  return ys_;
}
inline ::google::protobuf::RepeatedField< double >*
PointDataMap::mutable_ys() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.ys)
  return &ys_;
}

// repeated double zs = 14;
inline int PointDataMap::zs_size() const {
  return zs_.size();
}
inline void PointDataMap::clear_zs() {
  zs_.Clear();
}
inline double PointDataMap::zs(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.zs)
  return zs_.Get(index);
}
inline void PointDataMap::set_zs(int index, double value) {
  zs_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.zs)
}
inline void PointDataMap::add_zs(double value) {
  zs_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.zs)
}
inline const ::google::protobuf::RepeatedField< double >&
PointDataMap::zs() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.zs)
  return zs_;
}
inline ::google::protobuf::RepeatedField< double >*
PointDataMap::mutable_zs() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.zs)
  return &zs_;
}

// repeated double vs = 15;
inline int PointDataMap::vs_size() const {
  return vs_.size();
}
inline void PointDataMap::clear_vs() {
  vs_.Clear();
}
inline double PointDataMap::vs(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.vs)
  return vs_.Get(index);
}
inline void PointDataMap::set_vs(int index, double value) {
  vs_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.vs)
}
inline void PointDataMap::add_vs(double value) {
  vs_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.vs)
}
inline const ::google::protobuf::RepeatedField< double >&
PointDataMap::vs() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.vs)
  return vs_;
}
inline ::google::protobuf::RepeatedField< double >*
PointDataMap::mutable_vs() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.vs)
  return &vs_;
}

// repeated double ws = 16;
inline int PointDataMap::ws_size() const {
  return ws_.size();
}
inline void PointDataMap::clear_ws() {
  ws_.Clear();
}
inline double PointDataMap::ws(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.ws)
  return ws_.Get(index);
}
inline void PointDataMap::set_ws(int index, double value) {
  ws_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.ws)
}
inline void PointDataMap::add_ws(double value) {
  ws_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.ws)
}
inline const ::google::protobuf::RepeatedField< double >&
PointDataMap::ws() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.ws)
  return ws_;
}
inline ::google::protobuf::RepeatedField< double >*
PointDataMap::mutable_ws() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.ws)
  return &ws_;
}

// repeated int32 flags = 17;
inline int PointDataMap::flags_size() const {
  return flags_.size();
}
inline void PointDataMap::clear_flags() {
  flags_.Clear();
}
inline ::google::protobuf::int32 PointDataMap::flags(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataMap.flags)
  return flags_.Get(index);
}
inline void PointDataMap::set_flags(int index, ::google::protobuf::int32 value) {
  flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.PointDataMap.flags)
}
inline void PointDataMap::add_flags(::google::protobuf::int32 value) {
  flags_.Add(value);
  // @@protoc_insertion_point(field_add:XT.PointDataMap.flags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PointDataMap::flags() const {
  // @@protoc_insertion_point(field_list:XT.PointDataMap.flags)
  return flags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PointDataMap::mutable_flags() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataMap.flags)
  return &flags_;
}

// -------------------------------------------------------------------

// PointDataList

// repeated .XT.PointData pointslist = 1;
inline int PointDataList::pointslist_size() const {
  return pointslist_.size();
}
inline void PointDataList::clear_pointslist() {
  pointslist_.Clear();
}
inline const ::XT::PointData& PointDataList::pointslist(int index) const {
  // @@protoc_insertion_point(field_get:XT.PointDataList.pointslist)
  return pointslist_.Get(index);
}
inline ::XT::PointData* PointDataList::mutable_pointslist(int index) {
  // @@protoc_insertion_point(field_mutable:XT.PointDataList.pointslist)
  return pointslist_.Mutable(index);
}
inline ::XT::PointData* PointDataList::add_pointslist() {
  // @@protoc_insertion_point(field_add:XT.PointDataList.pointslist)
  return pointslist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XT::PointData >*
PointDataList::mutable_pointslist() {
  // @@protoc_insertion_point(field_mutable_list:XT.PointDataList.pointslist)
  return &pointslist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XT::PointData >&
PointDataList::pointslist() const {
  // @@protoc_insertion_point(field_list:XT.PointDataList.pointslist)
  return pointslist_;
}

// -------------------------------------------------------------------

// CurveCfgData

// optional string name = 1 [default = ""];
inline bool CurveCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurveCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurveCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurveCfgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CurveCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CurveCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.name)
}
inline void CurveCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.CurveCfgData.name)
}
inline void CurveCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.CurveCfgData.name)
}
inline ::std::string* CurveCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.CurveCfgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CurveCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.CurveCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CurveCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.CurveCfgData.name)
}

// optional int32 maxnoi = 2 [default = 1000];
inline bool CurveCfgData::has_maxnoi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurveCfgData::set_has_maxnoi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurveCfgData::clear_has_maxnoi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurveCfgData::clear_maxnoi() {
  maxnoi_ = 1000;
  clear_has_maxnoi();
}
inline ::google::protobuf::int32 CurveCfgData::maxnoi() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.maxnoi)
  return maxnoi_;
}
inline void CurveCfgData::set_maxnoi(::google::protobuf::int32 value) {
  set_has_maxnoi();
  maxnoi_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.maxnoi)
}

// optional int32 minstartnoi = 3 [default = 5];
inline bool CurveCfgData::has_minstartnoi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CurveCfgData::set_has_minstartnoi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CurveCfgData::clear_has_minstartnoi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CurveCfgData::clear_minstartnoi() {
  minstartnoi_ = 5;
  clear_has_minstartnoi();
}
inline ::google::protobuf::int32 CurveCfgData::minstartnoi() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.minstartnoi)
  return minstartnoi_;
}
inline void CurveCfgData::set_minstartnoi(::google::protobuf::int32 value) {
  set_has_minstartnoi();
  minstartnoi_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.minstartnoi)
}

// optional double roote = 4 [default = 0.0001];
inline bool CurveCfgData::has_roote() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CurveCfgData::set_has_roote() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CurveCfgData::clear_has_roote() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CurveCfgData::clear_roote() {
  roote_ = 0.0001;
  clear_has_roote();
}
inline double CurveCfgData::roote() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.roote)
  return roote_;
}
inline void CurveCfgData::set_roote(double value) {
  set_has_roote();
  roote_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.roote)
}

// optional double funce = 5 [default = 0.0001];
inline bool CurveCfgData::has_funce() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CurveCfgData::set_has_funce() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CurveCfgData::clear_has_funce() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CurveCfgData::clear_funce() {
  funce_ = 0.0001;
  clear_has_funce();
}
inline double CurveCfgData::funce() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.funce)
  return funce_;
}
inline void CurveCfgData::set_funce(double value) {
  set_has_funce();
  funce_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.funce)
}

// optional double gradnorme = 6 [default = 0.0001];
inline bool CurveCfgData::has_gradnorme() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CurveCfgData::set_has_gradnorme() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CurveCfgData::clear_has_gradnorme() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CurveCfgData::clear_gradnorme() {
  gradnorme_ = 0.0001;
  clear_has_gradnorme();
}
inline double CurveCfgData::gradnorme() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.gradnorme)
  return gradnorme_;
}
inline void CurveCfgData::set_gradnorme(double value) {
  set_has_gradnorme();
  gradnorme_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.gradnorme)
}

// optional int32 fitmethod = 7 [default = 0];
inline bool CurveCfgData::has_fitmethod() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CurveCfgData::set_has_fitmethod() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CurveCfgData::clear_has_fitmethod() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CurveCfgData::clear_fitmethod() {
  fitmethod_ = 0;
  clear_has_fitmethod();
}
inline ::google::protobuf::int32 CurveCfgData::fitmethod() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.fitmethod)
  return fitmethod_;
}
inline void CurveCfgData::set_fitmethod(::google::protobuf::int32 value) {
  set_has_fitmethod();
  fitmethod_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.fitmethod)
}

// optional int32 weightmethod = 8 [default = 0];
inline bool CurveCfgData::has_weightmethod() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CurveCfgData::set_has_weightmethod() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CurveCfgData::clear_has_weightmethod() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CurveCfgData::clear_weightmethod() {
  weightmethod_ = 0;
  clear_has_weightmethod();
}
inline ::google::protobuf::int32 CurveCfgData::weightmethod() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.weightmethod)
  return weightmethod_;
}
inline void CurveCfgData::set_weightmethod(::google::protobuf::int32 value) {
  set_has_weightmethod();
  weightmethod_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.weightmethod)
}

// optional int32 fitdataflag = 9 [default = 0];
inline bool CurveCfgData::has_fitdataflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CurveCfgData::set_has_fitdataflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CurveCfgData::clear_has_fitdataflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CurveCfgData::clear_fitdataflag() {
  fitdataflag_ = 0;
  clear_has_fitdataflag();
}
inline ::google::protobuf::int32 CurveCfgData::fitdataflag() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.fitdataflag)
  return fitdataflag_;
}
inline void CurveCfgData::set_fitdataflag(::google::protobuf::int32 value) {
  set_has_fitdataflag();
  fitdataflag_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.fitdataflag)
}

// optional double minweight = 10 [default = 0];
inline bool CurveCfgData::has_minweight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CurveCfgData::set_has_minweight() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CurveCfgData::clear_has_minweight() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CurveCfgData::clear_minweight() {
  minweight_ = 0;
  clear_has_minweight();
}
inline double CurveCfgData::minweight() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.minweight)
  return minweight_;
}
inline void CurveCfgData::set_minweight(double value) {
  set_has_minweight();
  minweight_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.minweight)
}

// optional double maxweight = 11 [default = 999999999];
inline bool CurveCfgData::has_maxweight() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CurveCfgData::set_has_maxweight() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CurveCfgData::clear_has_maxweight() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CurveCfgData::clear_maxweight() {
  maxweight_ = 999999999;
  clear_has_maxweight();
}
inline double CurveCfgData::maxweight() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.maxweight)
  return maxweight_;
}
inline void CurveCfgData::set_maxweight(double value) {
  set_has_maxweight();
  maxweight_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.maxweight)
}

// optional double minx = 12 [default = -999999999];
inline bool CurveCfgData::has_minx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CurveCfgData::set_has_minx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CurveCfgData::clear_has_minx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CurveCfgData::clear_minx() {
  minx_ = -999999999;
  clear_has_minx();
}
inline double CurveCfgData::minx() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.minx)
  return minx_;
}
inline void CurveCfgData::set_minx(double value) {
  set_has_minx();
  minx_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.minx)
}

// optional double maxx = 13 [default = 999999999];
inline bool CurveCfgData::has_maxx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CurveCfgData::set_has_maxx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CurveCfgData::clear_has_maxx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CurveCfgData::clear_maxx() {
  maxx_ = 999999999;
  clear_has_maxx();
}
inline double CurveCfgData::maxx() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.maxx)
  return maxx_;
}
inline void CurveCfgData::set_maxx(double value) {
  set_has_maxx();
  maxx_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.maxx)
}

// optional double miny = 14 [default = -999999999];
inline bool CurveCfgData::has_miny() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CurveCfgData::set_has_miny() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CurveCfgData::clear_has_miny() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CurveCfgData::clear_miny() {
  miny_ = -999999999;
  clear_has_miny();
}
inline double CurveCfgData::miny() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.miny)
  return miny_;
}
inline void CurveCfgData::set_miny(double value) {
  set_has_miny();
  miny_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.miny)
}

// optional double maxy = 15 [default = 999999999];
inline bool CurveCfgData::has_maxy() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CurveCfgData::set_has_maxy() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CurveCfgData::clear_has_maxy() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CurveCfgData::clear_maxy() {
  maxy_ = 999999999;
  clear_has_maxy();
}
inline double CurveCfgData::maxy() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.maxy)
  return maxy_;
}
inline void CurveCfgData::set_maxy(double value) {
  set_has_maxy();
  maxy_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.maxy)
}

// optional double epsilonx = 16 [default = 1e-06];
inline bool CurveCfgData::has_epsilonx() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CurveCfgData::set_has_epsilonx() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CurveCfgData::clear_has_epsilonx() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CurveCfgData::clear_epsilonx() {
  epsilonx_ = 1e-06;
  clear_has_epsilonx();
}
inline double CurveCfgData::epsilonx() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.epsilonx)
  return epsilonx_;
}
inline void CurveCfgData::set_epsilonx(double value) {
  set_has_epsilonx();
  epsilonx_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.epsilonx)
}

// optional double epsilony = 17 [default = 1e-06];
inline bool CurveCfgData::has_epsilony() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CurveCfgData::set_has_epsilony() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CurveCfgData::clear_has_epsilony() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CurveCfgData::clear_epsilony() {
  epsilony_ = 1e-06;
  clear_has_epsilony();
}
inline double CurveCfgData::epsilony() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.epsilony)
  return epsilony_;
}
inline void CurveCfgData::set_epsilony(double value) {
  set_has_epsilony();
  epsilony_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.epsilony)
}

// optional int32 pointlistsz = 20 [default = 5];
inline bool CurveCfgData::has_pointlistsz() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CurveCfgData::set_has_pointlistsz() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CurveCfgData::clear_has_pointlistsz() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CurveCfgData::clear_pointlistsz() {
  pointlistsz_ = 5;
  clear_has_pointlistsz();
}
inline ::google::protobuf::int32 CurveCfgData::pointlistsz() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.pointlistsz)
  return pointlistsz_;
}
inline void CurveCfgData::set_pointlistsz(::google::protobuf::int32 value) {
  set_has_pointlistsz();
  pointlistsz_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.pointlistsz)
}

// optional int32 pointlisttype = 21 [default = 0];
inline bool CurveCfgData::has_pointlisttype() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CurveCfgData::set_has_pointlisttype() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CurveCfgData::clear_has_pointlisttype() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CurveCfgData::clear_pointlisttype() {
  pointlisttype_ = 0;
  clear_has_pointlisttype();
}
inline ::google::protobuf::int32 CurveCfgData::pointlisttype() const {
  // @@protoc_insertion_point(field_get:XT.CurveCfgData.pointlisttype)
  return pointlisttype_;
}
inline void CurveCfgData::set_pointlisttype(::google::protobuf::int32 value) {
  set_has_pointlisttype();
  pointlisttype_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveCfgData.pointlisttype)
}

// -------------------------------------------------------------------

// CurveData

// optional int32 fitflag = 1 [default = 0];
inline bool CurveData::has_fitflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurveData::set_has_fitflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurveData::clear_has_fitflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurveData::clear_fitflag() {
  fitflag_ = 0;
  clear_has_fitflag();
}
inline ::google::protobuf::int32 CurveData::fitflag() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.fitflag)
  return fitflag_;
}
inline void CurveData::set_fitflag(::google::protobuf::int32 value) {
  set_has_fitflag();
  fitflag_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.fitflag)
}

// optional int32 fitfunccount = 2 [default = 0];
inline bool CurveData::has_fitfunccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurveData::set_has_fitfunccount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurveData::clear_has_fitfunccount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurveData::clear_fitfunccount() {
  fitfunccount_ = 0;
  clear_has_fitfunccount();
}
inline ::google::protobuf::int32 CurveData::fitfunccount() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.fitfunccount)
  return fitfunccount_;
}
inline void CurveData::set_fitfunccount(::google::protobuf::int32 value) {
  set_has_fitfunccount();
  fitfunccount_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.fitfunccount)
}

// optional double fitfuncvalue = 3 [default = 0];
inline bool CurveData::has_fitfuncvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CurveData::set_has_fitfuncvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CurveData::clear_has_fitfuncvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CurveData::clear_fitfuncvalue() {
  fitfuncvalue_ = 0;
  clear_has_fitfuncvalue();
}
inline double CurveData::fitfuncvalue() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.fitfuncvalue)
  return fitfuncvalue_;
}
inline void CurveData::set_fitfuncvalue(double value) {
  set_has_fitfuncvalue();
  fitfuncvalue_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.fitfuncvalue)
}

// optional int32 endcriteriatype = 4 [default = 0];
inline bool CurveData::has_endcriteriatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CurveData::set_has_endcriteriatype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CurveData::clear_has_endcriteriatype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CurveData::clear_endcriteriatype() {
  endcriteriatype_ = 0;
  clear_has_endcriteriatype();
}
inline ::google::protobuf::int32 CurveData::endcriteriatype() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.endcriteriatype)
  return endcriteriatype_;
}
inline void CurveData::set_endcriteriatype(::google::protobuf::int32 value) {
  set_has_endcriteriatype();
  endcriteriatype_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.endcriteriatype)
}

// optional int32 weightflag = 5 [default = 0];
inline bool CurveData::has_weightflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CurveData::set_has_weightflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CurveData::clear_has_weightflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CurveData::clear_weightflag() {
  weightflag_ = 0;
  clear_has_weightflag();
}
inline ::google::protobuf::int32 CurveData::weightflag() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.weightflag)
  return weightflag_;
}
inline void CurveData::set_weightflag(::google::protobuf::int32 value) {
  set_has_weightflag();
  weightflag_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.weightflag)
}

// optional int64 fitts = 6 [default = 0];
inline bool CurveData::has_fitts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CurveData::set_has_fitts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CurveData::clear_has_fitts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CurveData::clear_fitts() {
  fitts_ = GOOGLE_LONGLONG(0);
  clear_has_fitts();
}
inline ::google::protobuf::int64 CurveData::fitts() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.fitts)
  return fitts_;
}
inline void CurveData::set_fitts(::google::protobuf::int64 value) {
  set_has_fitts();
  fitts_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.fitts)
}

// optional int64 fitus = 7 [default = 0];
inline bool CurveData::has_fitus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CurveData::set_has_fitus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CurveData::clear_has_fitus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CurveData::clear_fitus() {
  fitus_ = GOOGLE_LONGLONG(0);
  clear_has_fitus();
}
inline ::google::protobuf::int64 CurveData::fitus() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.fitus)
  return fitus_;
}
inline void CurveData::set_fitus(::google::protobuf::int64 value) {
  set_has_fitus();
  fitus_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.fitus)
}

// optional double currminw = 8 [default = 0];
inline bool CurveData::has_currminw() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CurveData::set_has_currminw() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CurveData::clear_has_currminw() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CurveData::clear_currminw() {
  currminw_ = 0;
  clear_has_currminw();
}
inline double CurveData::currminw() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.currminw)
  return currminw_;
}
inline void CurveData::set_currminw(double value) {
  set_has_currminw();
  currminw_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.currminw)
}

// optional double currmaxw = 9 [default = 0];
inline bool CurveData::has_currmaxw() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CurveData::set_has_currmaxw() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CurveData::clear_has_currmaxw() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CurveData::clear_currmaxw() {
  currmaxw_ = 0;
  clear_has_currmaxw();
}
inline double CurveData::currmaxw() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.currmaxw)
  return currmaxw_;
}
inline void CurveData::set_currmaxw(double value) {
  set_has_currmaxw();
  currmaxw_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.currmaxw)
}

// optional double diffvalue = 10 [default = 0];
inline bool CurveData::has_diffvalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CurveData::set_has_diffvalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CurveData::clear_has_diffvalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CurveData::clear_diffvalue() {
  diffvalue_ = 0;
  clear_has_diffvalue();
}
inline double CurveData::diffvalue() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.diffvalue)
  return diffvalue_;
}
inline void CurveData::set_diffvalue(double value) {
  set_has_diffvalue();
  diffvalue_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.diffvalue)
}

// optional double diffvalueweighted = 11 [default = 0];
inline bool CurveData::has_diffvalueweighted() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CurveData::set_has_diffvalueweighted() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CurveData::clear_has_diffvalueweighted() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CurveData::clear_diffvalueweighted() {
  diffvalueweighted_ = 0;
  clear_has_diffvalueweighted();
}
inline double CurveData::diffvalueweighted() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.diffvalueweighted)
  return diffvalueweighted_;
}
inline void CurveData::set_diffvalueweighted(double value) {
  set_has_diffvalueweighted();
  diffvalueweighted_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.diffvalueweighted)
}

// optional int32 nvalidxs = 12 [default = 0];
inline bool CurveData::has_nvalidxs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CurveData::set_has_nvalidxs() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CurveData::clear_has_nvalidxs() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CurveData::clear_nvalidxs() {
  nvalidxs_ = 0;
  clear_has_nvalidxs();
}
inline ::google::protobuf::int32 CurveData::nvalidxs() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.nvalidxs)
  return nvalidxs_;
}
inline void CurveData::set_nvalidxs(::google::protobuf::int32 value) {
  set_has_nvalidxs();
  nvalidxs_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.nvalidxs)
}

// optional int32 nvalidys = 13 [default = 0];
inline bool CurveData::has_nvalidys() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CurveData::set_has_nvalidys() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CurveData::clear_has_nvalidys() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CurveData::clear_nvalidys() {
  nvalidys_ = 0;
  clear_has_nvalidys();
}
inline ::google::protobuf::int32 CurveData::nvalidys() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.nvalidys)
  return nvalidys_;
}
inline void CurveData::set_nvalidys(::google::protobuf::int32 value) {
  set_has_nvalidys();
  nvalidys_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.nvalidys)
}

// optional int32 nvalidzs = 14 [default = 0];
inline bool CurveData::has_nvalidzs() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CurveData::set_has_nvalidzs() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CurveData::clear_has_nvalidzs() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CurveData::clear_nvalidzs() {
  nvalidzs_ = 0;
  clear_has_nvalidzs();
}
inline ::google::protobuf::int32 CurveData::nvalidzs() const {
  // @@protoc_insertion_point(field_get:XT.CurveData.nvalidzs)
  return nvalidzs_;
}
inline void CurveData::set_nvalidzs(::google::protobuf::int32 value) {
  set_has_nvalidzs();
  nvalidzs_ = value;
  // @@protoc_insertion_point(field_set:XT.CurveData.nvalidzs)
}

// map<int32, int32> tagintmap = 15;
inline int CurveData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void CurveData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
CurveData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.CurveData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
CurveData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CurveData.tagintmap)
  return tagintmap_.MutableMap();
}

// map<int32, double> tagdoublemap = 16;
inline int CurveData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void CurveData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
CurveData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.CurveData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
CurveData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CurveData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<string, int32> strintmap = 17;
inline int CurveData::strintmap_size() const {
  return strintmap_.size();
}
inline void CurveData::clear_strintmap() {
  strintmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
CurveData::strintmap() const {
  // @@protoc_insertion_point(field_map:XT.CurveData.strintmap)
  return strintmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
CurveData::mutable_strintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CurveData.strintmap)
  return strintmap_.MutableMap();
}

// map<string, double> strdoublemap = 18;
inline int CurveData::strdoublemap_size() const {
  return strdoublemap_.size();
}
inline void CurveData::clear_strdoublemap() {
  strdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
CurveData::strdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.CurveData.strdoublemap)
  return strdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
CurveData::mutable_strdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CurveData.strdoublemap)
  return strdoublemap_.MutableMap();
}

// -------------------------------------------------------------------

// GatewayCfgData

// optional string name = 1 [default = ""];
inline bool GatewayCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GatewayCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GatewayCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GatewayCfgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GatewayCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.name)
}
inline void GatewayCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.name)
}
inline void GatewayCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.name)
}
inline ::std::string* GatewayCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.name)
}

// optional string typestr = 2 [default = ""];
inline bool GatewayCfgData::has_typestr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GatewayCfgData::set_has_typestr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GatewayCfgData::clear_has_typestr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GatewayCfgData::clear_typestr() {
  typestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_typestr();
}
inline const ::std::string& GatewayCfgData::typestr() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.typestr)
  return typestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_typestr(const ::std::string& value) {
  set_has_typestr();
  typestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.typestr)
}
inline void GatewayCfgData::set_typestr(const char* value) {
  set_has_typestr();
  typestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.typestr)
}
inline void GatewayCfgData::set_typestr(const char* value, size_t size) {
  set_has_typestr();
  typestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.typestr)
}
inline ::std::string* GatewayCfgData::mutable_typestr() {
  set_has_typestr();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.typestr)
  return typestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_typestr() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.typestr)
  clear_has_typestr();
  return typestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_typestr(::std::string* typestr) {
  if (typestr != NULL) {
    set_has_typestr();
  } else {
    clear_has_typestr();
  }
  typestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typestr);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.typestr)
}

// optional string version = 3 [default = ""];
inline bool GatewayCfgData::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GatewayCfgData::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GatewayCfgData::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GatewayCfgData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& GatewayCfgData::version() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.version)
}
inline void GatewayCfgData::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.version)
}
inline void GatewayCfgData::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.version)
}
inline ::std::string* GatewayCfgData::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_version() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.version)
}

// optional string frontid = 4 [default = ""];
inline bool GatewayCfgData::has_frontid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GatewayCfgData::set_has_frontid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GatewayCfgData::clear_has_frontid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GatewayCfgData::clear_frontid() {
  frontid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frontid();
}
inline const ::std::string& GatewayCfgData::frontid() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.frontid)
  return frontid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_frontid(const ::std::string& value) {
  set_has_frontid();
  frontid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.frontid)
}
inline void GatewayCfgData::set_frontid(const char* value) {
  set_has_frontid();
  frontid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.frontid)
}
inline void GatewayCfgData::set_frontid(const char* value, size_t size) {
  set_has_frontid();
  frontid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.frontid)
}
inline ::std::string* GatewayCfgData::mutable_frontid() {
  set_has_frontid();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.frontid)
  return frontid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_frontid() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.frontid)
  clear_has_frontid();
  return frontid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_frontid(::std::string* frontid) {
  if (frontid != NULL) {
    set_has_frontid();
  } else {
    clear_has_frontid();
  }
  frontid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frontid);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.frontid)
}

// optional string accountid = 5 [default = ""];
inline bool GatewayCfgData::has_accountid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GatewayCfgData::set_has_accountid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GatewayCfgData::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GatewayCfgData::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountid();
}
inline const ::std::string& GatewayCfgData::accountid() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.accountid)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_accountid(const ::std::string& value) {
  set_has_accountid();
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.accountid)
}
inline void GatewayCfgData::set_accountid(const char* value) {
  set_has_accountid();
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.accountid)
}
inline void GatewayCfgData::set_accountid(const char* value, size_t size) {
  set_has_accountid();
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.accountid)
}
inline ::std::string* GatewayCfgData::mutable_accountid() {
  set_has_accountid();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.accountid)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_accountid() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.accountid)
  clear_has_accountid();
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    set_has_accountid();
  } else {
    clear_has_accountid();
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.accountid)
}

// optional string passwd = 6 [default = ""];
inline bool GatewayCfgData::has_passwd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GatewayCfgData::set_has_passwd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GatewayCfgData::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GatewayCfgData::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
inline const ::std::string& GatewayCfgData::passwd() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.passwd)
}
inline void GatewayCfgData::set_passwd(const char* value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.passwd)
}
inline void GatewayCfgData::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.passwd)
}
inline ::std::string* GatewayCfgData::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_passwd() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.passwd)
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.passwd)
}

// optional string brokerid = 7 [default = ""];
inline bool GatewayCfgData::has_brokerid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GatewayCfgData::set_has_brokerid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GatewayCfgData::clear_has_brokerid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GatewayCfgData::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brokerid();
}
inline const ::std::string& GatewayCfgData::brokerid() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.brokerid)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_brokerid(const ::std::string& value) {
  set_has_brokerid();
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.brokerid)
}
inline void GatewayCfgData::set_brokerid(const char* value) {
  set_has_brokerid();
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.brokerid)
}
inline void GatewayCfgData::set_brokerid(const char* value, size_t size) {
  set_has_brokerid();
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.brokerid)
}
inline ::std::string* GatewayCfgData::mutable_brokerid() {
  set_has_brokerid();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.brokerid)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_brokerid() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.brokerid)
  clear_has_brokerid();
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    set_has_brokerid();
  } else {
    clear_has_brokerid();
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.brokerid)
}

// optional int32 logdataflag = 8 [default = 0];
inline bool GatewayCfgData::has_logdataflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GatewayCfgData::set_has_logdataflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GatewayCfgData::clear_has_logdataflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GatewayCfgData::clear_logdataflag() {
  logdataflag_ = 0;
  clear_has_logdataflag();
}
inline ::google::protobuf::int32 GatewayCfgData::logdataflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.logdataflag)
  return logdataflag_;
}
inline void GatewayCfgData::set_logdataflag(::google::protobuf::int32 value) {
  set_has_logdataflag();
  logdataflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.logdataflag)
}

// optional int32 logdatacountmax = 9 [default = 10000];
inline bool GatewayCfgData::has_logdatacountmax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GatewayCfgData::set_has_logdatacountmax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GatewayCfgData::clear_has_logdatacountmax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GatewayCfgData::clear_logdatacountmax() {
  logdatacountmax_ = 10000;
  clear_has_logdatacountmax();
}
inline ::google::protobuf::int32 GatewayCfgData::logdatacountmax() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.logdatacountmax)
  return logdatacountmax_;
}
inline void GatewayCfgData::set_logdatacountmax(::google::protobuf::int32 value) {
  set_has_logdatacountmax();
  logdatacountmax_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.logdatacountmax)
}

// optional int32 updateflag = 10 [default = 0];
inline bool GatewayCfgData::has_updateflag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GatewayCfgData::set_has_updateflag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GatewayCfgData::clear_has_updateflag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GatewayCfgData::clear_updateflag() {
  updateflag_ = 0;
  clear_has_updateflag();
}
inline ::google::protobuf::int32 GatewayCfgData::updateflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.updateflag)
  return updateflag_;
}
inline void GatewayCfgData::set_updateflag(::google::protobuf::int32 value) {
  set_has_updateflag();
  updateflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.updateflag)
}

// optional int32 subscribeflag = 11 [default = 0];
inline bool GatewayCfgData::has_subscribeflag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GatewayCfgData::set_has_subscribeflag() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GatewayCfgData::clear_has_subscribeflag() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GatewayCfgData::clear_subscribeflag() {
  subscribeflag_ = 0;
  clear_has_subscribeflag();
}
inline ::google::protobuf::int32 GatewayCfgData::subscribeflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.subscribeflag)
  return subscribeflag_;
}
inline void GatewayCfgData::set_subscribeflag(::google::protobuf::int32 value) {
  set_has_subscribeflag();
  subscribeflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.subscribeflag)
}

// optional int32 requestflag = 12 [default = 0];
inline bool GatewayCfgData::has_requestflag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GatewayCfgData::set_has_requestflag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GatewayCfgData::clear_has_requestflag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GatewayCfgData::clear_requestflag() {
  requestflag_ = 0;
  clear_has_requestflag();
}
inline ::google::protobuf::int32 GatewayCfgData::requestflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.requestflag)
  return requestflag_;
}
inline void GatewayCfgData::set_requestflag(::google::protobuf::int32 value) {
  set_has_requestflag();
  requestflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.requestflag)
}

// optional int32 requestdelayus = 13 [default = 0];
inline bool GatewayCfgData::has_requestdelayus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GatewayCfgData::set_has_requestdelayus() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GatewayCfgData::clear_has_requestdelayus() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GatewayCfgData::clear_requestdelayus() {
  requestdelayus_ = 0;
  clear_has_requestdelayus();
}
inline ::google::protobuf::int32 GatewayCfgData::requestdelayus() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.requestdelayus)
  return requestdelayus_;
}
inline void GatewayCfgData::set_requestdelayus(::google::protobuf::int32 value) {
  set_has_requestdelayus();
  requestdelayus_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.requestdelayus)
}

// optional int32 comboflag = 14 [default = 0];
inline bool GatewayCfgData::has_comboflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GatewayCfgData::set_has_comboflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GatewayCfgData::clear_has_comboflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GatewayCfgData::clear_comboflag() {
  comboflag_ = 0;
  clear_has_comboflag();
}
inline ::google::protobuf::int32 GatewayCfgData::comboflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.comboflag)
  return comboflag_;
}
inline void GatewayCfgData::set_comboflag(::google::protobuf::int32 value) {
  set_has_comboflag();
  comboflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.comboflag)
}

// optional int32 efpflag = 15 [default = 0];
inline bool GatewayCfgData::has_efpflag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GatewayCfgData::set_has_efpflag() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GatewayCfgData::clear_has_efpflag() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GatewayCfgData::clear_efpflag() {
  efpflag_ = 0;
  clear_has_efpflag();
}
inline ::google::protobuf::int32 GatewayCfgData::efpflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.efpflag)
  return efpflag_;
}
inline void GatewayCfgData::set_efpflag(::google::protobuf::int32 value) {
  set_has_efpflag();
  efpflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.efpflag)
}

// optional int32 resumeflag = 16 [default = 2];
inline bool GatewayCfgData::has_resumeflag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GatewayCfgData::set_has_resumeflag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GatewayCfgData::clear_has_resumeflag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GatewayCfgData::clear_resumeflag() {
  resumeflag_ = 2;
  clear_has_resumeflag();
}
inline ::google::protobuf::int32 GatewayCfgData::resumeflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.resumeflag)
  return resumeflag_;
}
inline void GatewayCfgData::set_resumeflag(::google::protobuf::int32 value) {
  set_has_resumeflag();
  resumeflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.resumeflag)
}

// optional int32 instrfilterflag = 17 [default = 0];
inline bool GatewayCfgData::has_instrfilterflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GatewayCfgData::set_has_instrfilterflag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GatewayCfgData::clear_has_instrfilterflag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GatewayCfgData::clear_instrfilterflag() {
  instrfilterflag_ = 0;
  clear_has_instrfilterflag();
}
inline ::google::protobuf::int32 GatewayCfgData::instrfilterflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.instrfilterflag)
  return instrfilterflag_;
}
inline void GatewayCfgData::set_instrfilterflag(::google::protobuf::int32 value) {
  set_has_instrfilterflag();
  instrfilterflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.instrfilterflag)
}

// optional string instrprefixes = 18 [default = ""];
inline bool GatewayCfgData::has_instrprefixes() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GatewayCfgData::set_has_instrprefixes() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GatewayCfgData::clear_has_instrprefixes() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GatewayCfgData::clear_instrprefixes() {
  instrprefixes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrprefixes();
}
inline const ::std::string& GatewayCfgData::instrprefixes() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.instrprefixes)
  return instrprefixes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_instrprefixes(const ::std::string& value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.instrprefixes)
}
inline void GatewayCfgData::set_instrprefixes(const char* value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.instrprefixes)
}
inline void GatewayCfgData::set_instrprefixes(const char* value, size_t size) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.instrprefixes)
}
inline ::std::string* GatewayCfgData::mutable_instrprefixes() {
  set_has_instrprefixes();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.instrprefixes)
  return instrprefixes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_instrprefixes() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.instrprefixes)
  clear_has_instrprefixes();
  return instrprefixes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_instrprefixes(::std::string* instrprefixes) {
  if (instrprefixes != NULL) {
    set_has_instrprefixes();
  } else {
    clear_has_instrprefixes();
  }
  instrprefixes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrprefixes);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.instrprefixes)
}

// optional string productids = 19 [default = ""];
inline bool GatewayCfgData::has_productids() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GatewayCfgData::set_has_productids() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GatewayCfgData::clear_has_productids() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GatewayCfgData::clear_productids() {
  productids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productids();
}
inline const ::std::string& GatewayCfgData::productids() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.productids)
  return productids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_productids(const ::std::string& value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.productids)
}
inline void GatewayCfgData::set_productids(const char* value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.productids)
}
inline void GatewayCfgData::set_productids(const char* value, size_t size) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.productids)
}
inline ::std::string* GatewayCfgData::mutable_productids() {
  set_has_productids();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.productids)
  return productids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_productids() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.productids)
  clear_has_productids();
  return productids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_productids(::std::string* productids) {
  if (productids != NULL) {
    set_has_productids();
  } else {
    clear_has_productids();
  }
  productids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productids);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.productids)
}

// optional string exchids = 20 [default = ""];
inline bool GatewayCfgData::has_exchids() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GatewayCfgData::set_has_exchids() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GatewayCfgData::clear_has_exchids() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GatewayCfgData::clear_exchids() {
  exchids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchids();
}
inline const ::std::string& GatewayCfgData::exchids() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.exchids)
  return exchids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_exchids(const ::std::string& value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.exchids)
}
inline void GatewayCfgData::set_exchids(const char* value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.exchids)
}
inline void GatewayCfgData::set_exchids(const char* value, size_t size) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.exchids)
}
inline ::std::string* GatewayCfgData::mutable_exchids() {
  set_has_exchids();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.exchids)
  return exchids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_exchids() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.exchids)
  clear_has_exchids();
  return exchids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_exchids(::std::string* exchids) {
  if (exchids != NULL) {
    set_has_exchids();
  } else {
    clear_has_exchids();
  }
  exchids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchids);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.exchids)
}

// optional string appid = 21 [default = ""];
inline bool GatewayCfgData::has_appid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GatewayCfgData::set_has_appid() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GatewayCfgData::clear_has_appid() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GatewayCfgData::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GatewayCfgData::appid() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.appid)
  return appid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.appid)
}
inline void GatewayCfgData::set_appid(const char* value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.appid)
}
inline void GatewayCfgData::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.appid)
}
inline ::std::string* GatewayCfgData::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_appid() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.appid)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.appid)
}

// optional string authcode = 22 [default = ""];
inline bool GatewayCfgData::has_authcode() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GatewayCfgData::set_has_authcode() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GatewayCfgData::clear_has_authcode() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GatewayCfgData::clear_authcode() {
  authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authcode();
}
inline const ::std::string& GatewayCfgData::authcode() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.authcode)
  return authcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_authcode(const ::std::string& value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.authcode)
}
inline void GatewayCfgData::set_authcode(const char* value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.authcode)
}
inline void GatewayCfgData::set_authcode(const char* value, size_t size) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.authcode)
}
inline ::std::string* GatewayCfgData::mutable_authcode() {
  set_has_authcode();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.authcode)
  return authcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_authcode() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.authcode)
  clear_has_authcode();
  return authcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_authcode(::std::string* authcode) {
  if (authcode != NULL) {
    set_has_authcode();
  } else {
    clear_has_authcode();
  }
  authcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authcode);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.authcode)
}

// optional string userproductinfo = 23 [default = ""];
inline bool GatewayCfgData::has_userproductinfo() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GatewayCfgData::set_has_userproductinfo() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GatewayCfgData::clear_has_userproductinfo() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GatewayCfgData::clear_userproductinfo() {
  userproductinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userproductinfo();
}
inline const ::std::string& GatewayCfgData::userproductinfo() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.userproductinfo)
  return userproductinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_userproductinfo(const ::std::string& value) {
  set_has_userproductinfo();
  userproductinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.userproductinfo)
}
inline void GatewayCfgData::set_userproductinfo(const char* value) {
  set_has_userproductinfo();
  userproductinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.userproductinfo)
}
inline void GatewayCfgData::set_userproductinfo(const char* value, size_t size) {
  set_has_userproductinfo();
  userproductinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.userproductinfo)
}
inline ::std::string* GatewayCfgData::mutable_userproductinfo() {
  set_has_userproductinfo();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.userproductinfo)
  return userproductinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_userproductinfo() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.userproductinfo)
  clear_has_userproductinfo();
  return userproductinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_userproductinfo(::std::string* userproductinfo) {
  if (userproductinfo != NULL) {
    set_has_userproductinfo();
  } else {
    clear_has_userproductinfo();
  }
  userproductinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userproductinfo);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.userproductinfo)
}

// optional string mcastip = 25 [default = ""];
inline bool GatewayCfgData::has_mcastip() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GatewayCfgData::set_has_mcastip() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GatewayCfgData::clear_has_mcastip() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GatewayCfgData::clear_mcastip() {
  mcastip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mcastip();
}
inline const ::std::string& GatewayCfgData::mcastip() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.mcastip)
  return mcastip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_mcastip(const ::std::string& value) {
  set_has_mcastip();
  mcastip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.mcastip)
}
inline void GatewayCfgData::set_mcastip(const char* value) {
  set_has_mcastip();
  mcastip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.mcastip)
}
inline void GatewayCfgData::set_mcastip(const char* value, size_t size) {
  set_has_mcastip();
  mcastip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.mcastip)
}
inline ::std::string* GatewayCfgData::mutable_mcastip() {
  set_has_mcastip();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.mcastip)
  return mcastip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_mcastip() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.mcastip)
  clear_has_mcastip();
  return mcastip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_mcastip(::std::string* mcastip) {
  if (mcastip != NULL) {
    set_has_mcastip();
  } else {
    clear_has_mcastip();
  }
  mcastip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mcastip);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.mcastip)
}

// optional int32 mcastport = 26 [default = 0];
inline bool GatewayCfgData::has_mcastport() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void GatewayCfgData::set_has_mcastport() {
  _has_bits_[0] |= 0x01000000u;
}
inline void GatewayCfgData::clear_has_mcastport() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void GatewayCfgData::clear_mcastport() {
  mcastport_ = 0;
  clear_has_mcastport();
}
inline ::google::protobuf::int32 GatewayCfgData::mcastport() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.mcastport)
  return mcastport_;
}
inline void GatewayCfgData::set_mcastport(::google::protobuf::int32 value) {
  set_has_mcastport();
  mcastport_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.mcastport)
}

// optional int32 mcastttl = 27 [default = 1];
inline bool GatewayCfgData::has_mcastttl() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void GatewayCfgData::set_has_mcastttl() {
  _has_bits_[0] |= 0x02000000u;
}
inline void GatewayCfgData::clear_has_mcastttl() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void GatewayCfgData::clear_mcastttl() {
  mcastttl_ = 1;
  clear_has_mcastttl();
}
inline ::google::protobuf::int32 GatewayCfgData::mcastttl() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.mcastttl)
  return mcastttl_;
}
inline void GatewayCfgData::set_mcastttl(::google::protobuf::int32 value) {
  set_has_mcastttl();
  mcastttl_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.mcastttl)
}

// optional string localip = 28 [default = ""];
inline bool GatewayCfgData::has_localip() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void GatewayCfgData::set_has_localip() {
  _has_bits_[0] |= 0x04000000u;
}
inline void GatewayCfgData::clear_has_localip() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void GatewayCfgData::clear_localip() {
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localip();
}
inline const ::std::string& GatewayCfgData::localip() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.localip)
  return localip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_localip(const ::std::string& value) {
  set_has_localip();
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.localip)
}
inline void GatewayCfgData::set_localip(const char* value) {
  set_has_localip();
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GatewayCfgData.localip)
}
inline void GatewayCfgData::set_localip(const char* value, size_t size) {
  set_has_localip();
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GatewayCfgData.localip)
}
inline ::std::string* GatewayCfgData::mutable_localip() {
  set_has_localip();
  // @@protoc_insertion_point(field_mutable:XT.GatewayCfgData.localip)
  return localip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GatewayCfgData::release_localip() {
  // @@protoc_insertion_point(field_release:XT.GatewayCfgData.localip)
  clear_has_localip();
  return localip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GatewayCfgData::set_allocated_localip(::std::string* localip) {
  if (localip != NULL) {
    set_has_localip();
  } else {
    clear_has_localip();
  }
  localip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localip);
  // @@protoc_insertion_point(field_set_allocated:XT.GatewayCfgData.localip)
}

// optional int32 localport = 29 [default = 0];
inline bool GatewayCfgData::has_localport() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void GatewayCfgData::set_has_localport() {
  _has_bits_[0] |= 0x08000000u;
}
inline void GatewayCfgData::clear_has_localport() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void GatewayCfgData::clear_localport() {
  localport_ = 0;
  clear_has_localport();
}
inline ::google::protobuf::int32 GatewayCfgData::localport() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.localport)
  return localport_;
}
inline void GatewayCfgData::set_localport(::google::protobuf::int32 value) {
  set_has_localport();
  localport_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.localport)
}

// optional int32 pubsubflag = 30 [default = 0];
inline bool GatewayCfgData::has_pubsubflag() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void GatewayCfgData::set_has_pubsubflag() {
  _has_bits_[0] |= 0x10000000u;
}
inline void GatewayCfgData::clear_has_pubsubflag() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void GatewayCfgData::clear_pubsubflag() {
  pubsubflag_ = 0;
  clear_has_pubsubflag();
}
inline ::google::protobuf::int32 GatewayCfgData::pubsubflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.pubsubflag)
  return pubsubflag_;
}
inline void GatewayCfgData::set_pubsubflag(::google::protobuf::int32 value) {
  set_has_pubsubflag();
  pubsubflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.pubsubflag)
}

// optional int32 timerseconds = 31 [default = 1];
inline bool GatewayCfgData::has_timerseconds() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void GatewayCfgData::set_has_timerseconds() {
  _has_bits_[0] |= 0x20000000u;
}
inline void GatewayCfgData::clear_has_timerseconds() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void GatewayCfgData::clear_timerseconds() {
  timerseconds_ = 1;
  clear_has_timerseconds();
}
inline ::google::protobuf::int32 GatewayCfgData::timerseconds() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.timerseconds)
  return timerseconds_;
}
inline void GatewayCfgData::set_timerseconds(::google::protobuf::int32 value) {
  set_has_timerseconds();
  timerseconds_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.timerseconds)
}

// optional int32 udpflag = 32 [default = 0];
inline bool GatewayCfgData::has_udpflag() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void GatewayCfgData::set_has_udpflag() {
  _has_bits_[0] |= 0x40000000u;
}
inline void GatewayCfgData::clear_has_udpflag() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void GatewayCfgData::clear_udpflag() {
  udpflag_ = 0;
  clear_has_udpflag();
}
inline ::google::protobuf::int32 GatewayCfgData::udpflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.udpflag)
  return udpflag_;
}
inline void GatewayCfgData::set_udpflag(::google::protobuf::int32 value) {
  set_has_udpflag();
  udpflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.udpflag)
}

// optional int32 mcastflag = 33 [default = 0];
inline bool GatewayCfgData::has_mcastflag() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void GatewayCfgData::set_has_mcastflag() {
  _has_bits_[0] |= 0x80000000u;
}
inline void GatewayCfgData::clear_has_mcastflag() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void GatewayCfgData::clear_mcastflag() {
  mcastflag_ = 0;
  clear_has_mcastflag();
}
inline ::google::protobuf::int32 GatewayCfgData::mcastflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayCfgData.mcastflag)
  return mcastflag_;
}
inline void GatewayCfgData::set_mcastflag(::google::protobuf::int32 value) {
  set_has_mcastflag();
  mcastflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayCfgData.mcastflag)
}

// -------------------------------------------------------------------

// GatewayData

// optional int32 connectionstatus = 1 [default = 0];
inline bool GatewayData::has_connectionstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GatewayData::set_has_connectionstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GatewayData::clear_has_connectionstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GatewayData::clear_connectionstatus() {
  connectionstatus_ = 0;
  clear_has_connectionstatus();
}
inline ::google::protobuf::int32 GatewayData::connectionstatus() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.connectionstatus)
  return connectionstatus_;
}
inline void GatewayData::set_connectionstatus(::google::protobuf::int32 value) {
  set_has_connectionstatus();
  connectionstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.connectionstatus)
}

// optional int32 loginstatus = 2 [default = 0];
inline bool GatewayData::has_loginstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GatewayData::set_has_loginstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GatewayData::clear_has_loginstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GatewayData::clear_loginstatus() {
  loginstatus_ = 0;
  clear_has_loginstatus();
}
inline ::google::protobuf::int32 GatewayData::loginstatus() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.loginstatus)
  return loginstatus_;
}
inline void GatewayData::set_loginstatus(::google::protobuf::int32 value) {
  set_has_loginstatus();
  loginstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.loginstatus)
}

// optional int32 taskstatus = 3 [default = 0];
inline bool GatewayData::has_taskstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GatewayData::set_has_taskstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GatewayData::clear_has_taskstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GatewayData::clear_taskstatus() {
  taskstatus_ = 0;
  clear_has_taskstatus();
}
inline ::google::protobuf::int32 GatewayData::taskstatus() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.taskstatus)
  return taskstatus_;
}
inline void GatewayData::set_taskstatus(::google::protobuf::int32 value) {
  set_has_taskstatus();
  taskstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.taskstatus)
}

// optional int32 aynctaskstatus = 4 [default = 0];
inline bool GatewayData::has_aynctaskstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GatewayData::set_has_aynctaskstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GatewayData::clear_has_aynctaskstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GatewayData::clear_aynctaskstatus() {
  aynctaskstatus_ = 0;
  clear_has_aynctaskstatus();
}
inline ::google::protobuf::int32 GatewayData::aynctaskstatus() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.aynctaskstatus)
  return aynctaskstatus_;
}
inline void GatewayData::set_aynctaskstatus(::google::protobuf::int32 value) {
  set_has_aynctaskstatus();
  aynctaskstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.aynctaskstatus)
}

// optional int32 queryinstrflag = 5 [default = 0];
inline bool GatewayData::has_queryinstrflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GatewayData::set_has_queryinstrflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GatewayData::clear_has_queryinstrflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GatewayData::clear_queryinstrflag() {
  queryinstrflag_ = 0;
  clear_has_queryinstrflag();
}
inline ::google::protobuf::int32 GatewayData::queryinstrflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.queryinstrflag)
  return queryinstrflag_;
}
inline void GatewayData::set_queryinstrflag(::google::protobuf::int32 value) {
  set_has_queryinstrflag();
  queryinstrflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.queryinstrflag)
}

// optional int32 querytradeflag = 6 [default = 0];
inline bool GatewayData::has_querytradeflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GatewayData::set_has_querytradeflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GatewayData::clear_has_querytradeflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GatewayData::clear_querytradeflag() {
  querytradeflag_ = 0;
  clear_has_querytradeflag();
}
inline ::google::protobuf::int32 GatewayData::querytradeflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.querytradeflag)
  return querytradeflag_;
}
inline void GatewayData::set_querytradeflag(::google::protobuf::int32 value) {
  set_has_querytradeflag();
  querytradeflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.querytradeflag)
}

// optional int32 querypositionflag = 7 [default = 0];
inline bool GatewayData::has_querypositionflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GatewayData::set_has_querypositionflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GatewayData::clear_has_querypositionflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GatewayData::clear_querypositionflag() {
  querypositionflag_ = 0;
  clear_has_querypositionflag();
}
inline ::google::protobuf::int32 GatewayData::querypositionflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.querypositionflag)
  return querypositionflag_;
}
inline void GatewayData::set_querypositionflag(::google::protobuf::int32 value) {
  set_has_querypositionflag();
  querypositionflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.querypositionflag)
}

// optional int32 initflag = 8 [default = 0];
inline bool GatewayData::has_initflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GatewayData::set_has_initflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GatewayData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GatewayData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 GatewayData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.initflag)
  return initflag_;
}
inline void GatewayData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.initflag)
}

// optional int32 logdatacount = 9 [default = 0];
inline bool GatewayData::has_logdatacount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GatewayData::set_has_logdatacount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GatewayData::clear_has_logdatacount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GatewayData::clear_logdatacount() {
  logdatacount_ = 0;
  clear_has_logdatacount();
}
inline ::google::protobuf::int32 GatewayData::logdatacount() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.logdatacount)
  return logdatacount_;
}
inline void GatewayData::set_logdatacount(::google::protobuf::int32 value) {
  set_has_logdatacount();
  logdatacount_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.logdatacount)
}

// optional int32 tradingday = 10 [default = 0];
inline bool GatewayData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GatewayData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GatewayData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GatewayData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 GatewayData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.tradingday)
  return tradingday_;
}
inline void GatewayData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.tradingday)
}

// optional int32 intdate = 11 [default = 0];
inline bool GatewayData::has_intdate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GatewayData::set_has_intdate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GatewayData::clear_has_intdate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GatewayData::clear_intdate() {
  intdate_ = 0;
  clear_has_intdate();
}
inline ::google::protobuf::int32 GatewayData::intdate() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.intdate)
  return intdate_;
}
inline void GatewayData::set_intdate(::google::protobuf::int32 value) {
  set_has_intdate();
  intdate_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.intdate)
}

// optional int32 dayinttime = 12 [default = 0];
inline bool GatewayData::has_dayinttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GatewayData::set_has_dayinttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GatewayData::clear_has_dayinttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GatewayData::clear_dayinttime() {
  dayinttime_ = 0;
  clear_has_dayinttime();
}
inline ::google::protobuf::int32 GatewayData::dayinttime() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.dayinttime)
  return dayinttime_;
}
inline void GatewayData::set_dayinttime(::google::protobuf::int32 value) {
  set_has_dayinttime();
  dayinttime_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.dayinttime)
}

// optional int64 ts = 13 [default = 0];
inline bool GatewayData::has_ts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GatewayData::set_has_ts() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GatewayData::clear_has_ts() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GatewayData::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 GatewayData::ts() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.ts)
  return ts_;
}
inline void GatewayData::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.ts)
}

// optional int32 nmsg = 14 [default = 0];
inline bool GatewayData::has_nmsg() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GatewayData::set_has_nmsg() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GatewayData::clear_has_nmsg() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GatewayData::clear_nmsg() {
  nmsg_ = 0;
  clear_has_nmsg();
}
inline ::google::protobuf::int32 GatewayData::nmsg() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.nmsg)
  return nmsg_;
}
inline void GatewayData::set_nmsg(::google::protobuf::int32 value) {
  set_has_nmsg();
  nmsg_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.nmsg)
}

// optional int64 lastts = 15 [default = 0];
inline bool GatewayData::has_lastts() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GatewayData::set_has_lastts() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GatewayData::clear_has_lastts() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GatewayData::clear_lastts() {
  lastts_ = GOOGLE_LONGLONG(0);
  clear_has_lastts();
}
inline ::google::protobuf::int64 GatewayData::lastts() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.lastts)
  return lastts_;
}
inline void GatewayData::set_lastts(::google::protobuf::int64 value) {
  set_has_lastts();
  lastts_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.lastts)
}

// optional int64 lastrequestts = 16 [default = 0];
inline bool GatewayData::has_lastrequestts() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GatewayData::set_has_lastrequestts() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GatewayData::clear_has_lastrequestts() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GatewayData::clear_lastrequestts() {
  lastrequestts_ = GOOGLE_LONGLONG(0);
  clear_has_lastrequestts();
}
inline ::google::protobuf::int64 GatewayData::lastrequestts() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.lastrequestts)
  return lastrequestts_;
}
inline void GatewayData::set_lastrequestts(::google::protobuf::int64 value) {
  set_has_lastrequestts();
  lastrequestts_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.lastrequestts)
}

// optional int64 timerts = 17 [default = 0];
inline bool GatewayData::has_timerts() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GatewayData::set_has_timerts() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GatewayData::clear_has_timerts() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GatewayData::clear_timerts() {
  timerts_ = GOOGLE_LONGLONG(0);
  clear_has_timerts();
}
inline ::google::protobuf::int64 GatewayData::timerts() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.timerts)
  return timerts_;
}
inline void GatewayData::set_timerts(::google::protobuf::int64 value) {
  set_has_timerts();
  timerts_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.timerts)
}

// optional int32 timercount = 18 [default = 0];
inline bool GatewayData::has_timercount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GatewayData::set_has_timercount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GatewayData::clear_has_timercount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GatewayData::clear_timercount() {
  timercount_ = 0;
  clear_has_timercount();
}
inline ::google::protobuf::int32 GatewayData::timercount() const {
  // @@protoc_insertion_point(field_get:XT.GatewayData.timercount)
  return timercount_;
}
inline void GatewayData::set_timercount(::google::protobuf::int32 value) {
  set_has_timercount();
  timercount_ = value;
  // @@protoc_insertion_point(field_set:XT.GatewayData.timercount)
}

// -------------------------------------------------------------------

// VolumeOutlayPair

// optional int64 volume = 1 [default = 0];
inline bool VolumeOutlayPair::has_volume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VolumeOutlayPair::set_has_volume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VolumeOutlayPair::clear_has_volume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VolumeOutlayPair::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 VolumeOutlayPair::volume() const {
  // @@protoc_insertion_point(field_get:XT.VolumeOutlayPair.volume)
  return volume_;
}
inline void VolumeOutlayPair::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeOutlayPair.volume)
}

// optional double pxvolume = 2 [default = 0];
inline bool VolumeOutlayPair::has_pxvolume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VolumeOutlayPair::set_has_pxvolume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VolumeOutlayPair::clear_has_pxvolume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VolumeOutlayPair::clear_pxvolume() {
  pxvolume_ = 0;
  clear_has_pxvolume();
}
inline double VolumeOutlayPair::pxvolume() const {
  // @@protoc_insertion_point(field_get:XT.VolumeOutlayPair.pxvolume)
  return pxvolume_;
}
inline void VolumeOutlayPair::set_pxvolume(double value) {
  set_has_pxvolume();
  pxvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeOutlayPair.pxvolume)
}

// -------------------------------------------------------------------

// VolumeAmountData

// optional int64 buyvolume = 1 [default = 0];
inline bool VolumeAmountData::has_buyvolume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VolumeAmountData::set_has_buyvolume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VolumeAmountData::clear_has_buyvolume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VolumeAmountData::clear_buyvolume() {
  buyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_buyvolume();
}
inline ::google::protobuf::int64 VolumeAmountData::buyvolume() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmountData.buyvolume)
  return buyvolume_;
}
inline void VolumeAmountData::set_buyvolume(::google::protobuf::int64 value) {
  set_has_buyvolume();
  buyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmountData.buyvolume)
}

// optional int64 sellvolume = 2 [default = 0];
inline bool VolumeAmountData::has_sellvolume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VolumeAmountData::set_has_sellvolume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VolumeAmountData::clear_has_sellvolume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VolumeAmountData::clear_sellvolume() {
  sellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_sellvolume();
}
inline ::google::protobuf::int64 VolumeAmountData::sellvolume() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmountData.sellvolume)
  return sellvolume_;
}
inline void VolumeAmountData::set_sellvolume(::google::protobuf::int64 value) {
  set_has_sellvolume();
  sellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmountData.sellvolume)
}

// optional double buyamount = 3 [default = 0];
inline bool VolumeAmountData::has_buyamount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VolumeAmountData::set_has_buyamount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VolumeAmountData::clear_has_buyamount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VolumeAmountData::clear_buyamount() {
  buyamount_ = 0;
  clear_has_buyamount();
}
inline double VolumeAmountData::buyamount() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmountData.buyamount)
  return buyamount_;
}
inline void VolumeAmountData::set_buyamount(double value) {
  set_has_buyamount();
  buyamount_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmountData.buyamount)
}

// optional double sellamount = 4 [default = 0];
inline bool VolumeAmountData::has_sellamount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VolumeAmountData::set_has_sellamount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VolumeAmountData::clear_has_sellamount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VolumeAmountData::clear_sellamount() {
  sellamount_ = 0;
  clear_has_sellamount();
}
inline double VolumeAmountData::sellamount() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmountData.sellamount)
  return sellamount_;
}
inline void VolumeAmountData::set_sellamount(double value) {
  set_has_sellamount();
  sellamount_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmountData.sellamount)
}

// -------------------------------------------------------------------

// TradePxVolumeData

// optional int64 buyvolume = 1 [default = 0];
inline bool TradePxVolumeData::has_buyvolume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TradePxVolumeData::set_has_buyvolume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TradePxVolumeData::clear_has_buyvolume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TradePxVolumeData::clear_buyvolume() {
  buyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_buyvolume();
}
inline ::google::protobuf::int64 TradePxVolumeData::buyvolume() const {
  // @@protoc_insertion_point(field_get:XT.TradePxVolumeData.buyvolume)
  return buyvolume_;
}
inline void TradePxVolumeData::set_buyvolume(::google::protobuf::int64 value) {
  set_has_buyvolume();
  buyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TradePxVolumeData.buyvolume)
}

// optional int64 sellvolume = 2 [default = 0];
inline bool TradePxVolumeData::has_sellvolume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TradePxVolumeData::set_has_sellvolume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TradePxVolumeData::clear_has_sellvolume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TradePxVolumeData::clear_sellvolume() {
  sellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_sellvolume();
}
inline ::google::protobuf::int64 TradePxVolumeData::sellvolume() const {
  // @@protoc_insertion_point(field_get:XT.TradePxVolumeData.sellvolume)
  return sellvolume_;
}
inline void TradePxVolumeData::set_sellvolume(::google::protobuf::int64 value) {
  set_has_sellvolume();
  sellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TradePxVolumeData.sellvolume)
}

// optional double buypxvolume = 3 [default = 0];
inline bool TradePxVolumeData::has_buypxvolume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TradePxVolumeData::set_has_buypxvolume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TradePxVolumeData::clear_has_buypxvolume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TradePxVolumeData::clear_buypxvolume() {
  buypxvolume_ = 0;
  clear_has_buypxvolume();
}
inline double TradePxVolumeData::buypxvolume() const {
  // @@protoc_insertion_point(field_get:XT.TradePxVolumeData.buypxvolume)
  return buypxvolume_;
}
inline void TradePxVolumeData::set_buypxvolume(double value) {
  set_has_buypxvolume();
  buypxvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TradePxVolumeData.buypxvolume)
}

// optional double sellpxvolume = 4 [default = 0];
inline bool TradePxVolumeData::has_sellpxvolume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TradePxVolumeData::set_has_sellpxvolume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TradePxVolumeData::clear_has_sellpxvolume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TradePxVolumeData::clear_sellpxvolume() {
  sellpxvolume_ = 0;
  clear_has_sellpxvolume();
}
inline double TradePxVolumeData::sellpxvolume() const {
  // @@protoc_insertion_point(field_get:XT.TradePxVolumeData.sellpxvolume)
  return sellpxvolume_;
}
inline void TradePxVolumeData::set_sellpxvolume(double value) {
  set_has_sellpxvolume();
  sellpxvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TradePxVolumeData.sellpxvolume)
}

// -------------------------------------------------------------------

// InstrSpecData

// optional string exchid = 1 [default = ""];
inline bool InstrSpecData::has_exchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstrSpecData::set_has_exchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstrSpecData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstrSpecData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& InstrSpecData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.exchid)
}
inline void InstrSpecData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.exchid)
}
inline void InstrSpecData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.exchid)
}
inline ::std::string* InstrSpecData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.exchid)
}

// optional int32 exchtype = 2 [default = 0];
inline bool InstrSpecData::has_exchtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstrSpecData::set_has_exchtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstrSpecData::clear_has_exchtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstrSpecData::clear_exchtype() {
  exchtype_ = 0;
  clear_has_exchtype();
}
inline ::google::protobuf::int32 InstrSpecData::exchtype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.exchtype)
  return exchtype_;
}
inline void InstrSpecData::set_exchtype(::google::protobuf::int32 value) {
  set_has_exchtype();
  exchtype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.exchtype)
}

// optional string instrid = 3 [default = ""];
inline bool InstrSpecData::has_instrid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstrSpecData::set_has_instrid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstrSpecData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstrSpecData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& InstrSpecData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.instrid)
}
inline void InstrSpecData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.instrid)
}
inline void InstrSpecData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.instrid)
}
inline ::std::string* InstrSpecData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.instrid)
}

// optional string securitytypestr = 4 [default = ""];
inline bool InstrSpecData::has_securitytypestr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstrSpecData::set_has_securitytypestr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstrSpecData::clear_has_securitytypestr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstrSpecData::clear_securitytypestr() {
  securitytypestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_securitytypestr();
}
inline const ::std::string& InstrSpecData::securitytypestr() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.securitytypestr)
  return securitytypestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_securitytypestr(const ::std::string& value) {
  set_has_securitytypestr();
  securitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.securitytypestr)
}
inline void InstrSpecData::set_securitytypestr(const char* value) {
  set_has_securitytypestr();
  securitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.securitytypestr)
}
inline void InstrSpecData::set_securitytypestr(const char* value, size_t size) {
  set_has_securitytypestr();
  securitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.securitytypestr)
}
inline ::std::string* InstrSpecData::mutable_securitytypestr() {
  set_has_securitytypestr();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.securitytypestr)
  return securitytypestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_securitytypestr() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.securitytypestr)
  clear_has_securitytypestr();
  return securitytypestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_securitytypestr(::std::string* securitytypestr) {
  if (securitytypestr != NULL) {
    set_has_securitytypestr();
  } else {
    clear_has_securitytypestr();
  }
  securitytypestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytypestr);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.securitytypestr)
}

// optional int32 securitytype = 5 [default = 0];
inline bool InstrSpecData::has_securitytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstrSpecData::set_has_securitytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstrSpecData::clear_has_securitytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstrSpecData::clear_securitytype() {
  securitytype_ = 0;
  clear_has_securitytype();
}
inline ::google::protobuf::int32 InstrSpecData::securitytype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.securitytype)
  return securitytype_;
}
inline void InstrSpecData::set_securitytype(::google::protobuf::int32 value) {
  set_has_securitytype();
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.securitytype)
}

// optional string productid = 6 [default = ""];
inline bool InstrSpecData::has_productid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InstrSpecData::set_has_productid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InstrSpecData::clear_has_productid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InstrSpecData::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& InstrSpecData::productid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.productid)
}
inline void InstrSpecData::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.productid)
}
inline void InstrSpecData::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.productid)
}
inline ::std::string* InstrSpecData::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_productid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.productid)
}

// optional int32 expireintdate = 7 [default = 99990101];
inline bool InstrSpecData::has_expireintdate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InstrSpecData::set_has_expireintdate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InstrSpecData::clear_has_expireintdate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InstrSpecData::clear_expireintdate() {
  expireintdate_ = 99990101;
  clear_has_expireintdate();
}
inline ::google::protobuf::int32 InstrSpecData::expireintdate() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.expireintdate)
  return expireintdate_;
}
inline void InstrSpecData::set_expireintdate(::google::protobuf::int32 value) {
  set_has_expireintdate();
  expireintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.expireintdate)
}

// optional int32 callputtype = 8 [default = 0];
inline bool InstrSpecData::has_callputtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InstrSpecData::set_has_callputtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InstrSpecData::clear_has_callputtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InstrSpecData::clear_callputtype() {
  callputtype_ = 0;
  clear_has_callputtype();
}
inline ::google::protobuf::int32 InstrSpecData::callputtype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.callputtype)
  return callputtype_;
}
inline void InstrSpecData::set_callputtype(::google::protobuf::int32 value) {
  set_has_callputtype();
  callputtype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.callputtype)
}

// optional double strikeprice = 9 [default = 0];
inline bool InstrSpecData::has_strikeprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InstrSpecData::set_has_strikeprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InstrSpecData::clear_has_strikeprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InstrSpecData::clear_strikeprice() {
  strikeprice_ = 0;
  clear_has_strikeprice();
}
inline double InstrSpecData::strikeprice() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.strikeprice)
  return strikeprice_;
}
inline void InstrSpecData::set_strikeprice(double value) {
  set_has_strikeprice();
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.strikeprice)
}

// optional double pricetick = 10 [default = 0];
inline bool InstrSpecData::has_pricetick() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InstrSpecData::set_has_pricetick() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InstrSpecData::clear_has_pricetick() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InstrSpecData::clear_pricetick() {
  pricetick_ = 0;
  clear_has_pricetick();
}
inline double InstrSpecData::pricetick() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.pricetick)
  return pricetick_;
}
inline void InstrSpecData::set_pricetick(double value) {
  set_has_pricetick();
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.pricetick)
}

// optional double contractmultiplier = 11 [default = 1];
inline bool InstrSpecData::has_contractmultiplier() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void InstrSpecData::set_has_contractmultiplier() {
  _has_bits_[0] |= 0x00000400u;
}
inline void InstrSpecData::clear_has_contractmultiplier() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void InstrSpecData::clear_contractmultiplier() {
  contractmultiplier_ = 1;
  clear_has_contractmultiplier();
}
inline double InstrSpecData::contractmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.contractmultiplier)
  return contractmultiplier_;
}
inline void InstrSpecData::set_contractmultiplier(double value) {
  set_has_contractmultiplier();
  contractmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.contractmultiplier)
}

// optional double pxepsilon = 12 [default = 1e-06];
inline bool InstrSpecData::has_pxepsilon() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void InstrSpecData::set_has_pxepsilon() {
  _has_bits_[0] |= 0x00000800u;
}
inline void InstrSpecData::clear_has_pxepsilon() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void InstrSpecData::clear_pxepsilon() {
  pxepsilon_ = 1e-06;
  clear_has_pxepsilon();
}
inline double InstrSpecData::pxepsilon() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.pxepsilon)
  return pxepsilon_;
}
inline void InstrSpecData::set_pxepsilon(double value) {
  set_has_pxepsilon();
  pxepsilon_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.pxepsilon)
}

// optional string tagdata = 13 [default = ""];
inline bool InstrSpecData::has_tagdata() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void InstrSpecData::set_has_tagdata() {
  _has_bits_[0] |= 0x00001000u;
}
inline void InstrSpecData::clear_has_tagdata() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void InstrSpecData::clear_tagdata() {
  tagdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagdata();
}
inline const ::std::string& InstrSpecData::tagdata() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.tagdata)
  return tagdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_tagdata(const ::std::string& value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.tagdata)
}
inline void InstrSpecData::set_tagdata(const char* value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.tagdata)
}
inline void InstrSpecData::set_tagdata(const char* value, size_t size) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.tagdata)
}
inline ::std::string* InstrSpecData::mutable_tagdata() {
  set_has_tagdata();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.tagdata)
  return tagdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_tagdata() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.tagdata)
  clear_has_tagdata();
  return tagdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_tagdata(::std::string* tagdata) {
  if (tagdata != NULL) {
    set_has_tagdata();
  } else {
    clear_has_tagdata();
  }
  tagdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagdata);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.tagdata)
}

// optional string tradecurrencyid = 14 [default = ""];
inline bool InstrSpecData::has_tradecurrencyid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void InstrSpecData::set_has_tradecurrencyid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void InstrSpecData::clear_has_tradecurrencyid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void InstrSpecData::clear_tradecurrencyid() {
  tradecurrencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tradecurrencyid();
}
inline const ::std::string& InstrSpecData::tradecurrencyid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.tradecurrencyid)
  return tradecurrencyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_tradecurrencyid(const ::std::string& value) {
  set_has_tradecurrencyid();
  tradecurrencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.tradecurrencyid)
}
inline void InstrSpecData::set_tradecurrencyid(const char* value) {
  set_has_tradecurrencyid();
  tradecurrencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.tradecurrencyid)
}
inline void InstrSpecData::set_tradecurrencyid(const char* value, size_t size) {
  set_has_tradecurrencyid();
  tradecurrencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.tradecurrencyid)
}
inline ::std::string* InstrSpecData::mutable_tradecurrencyid() {
  set_has_tradecurrencyid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.tradecurrencyid)
  return tradecurrencyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_tradecurrencyid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.tradecurrencyid)
  clear_has_tradecurrencyid();
  return tradecurrencyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_tradecurrencyid(::std::string* tradecurrencyid) {
  if (tradecurrencyid != NULL) {
    set_has_tradecurrencyid();
  } else {
    clear_has_tradecurrencyid();
  }
  tradecurrencyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradecurrencyid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.tradecurrencyid)
}

// optional string localexchid = 15 [default = ""];
inline bool InstrSpecData::has_localexchid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void InstrSpecData::set_has_localexchid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void InstrSpecData::clear_has_localexchid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void InstrSpecData::clear_localexchid() {
  localexchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localexchid();
}
inline const ::std::string& InstrSpecData::localexchid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.localexchid)
  return localexchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_localexchid(const ::std::string& value) {
  set_has_localexchid();
  localexchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.localexchid)
}
inline void InstrSpecData::set_localexchid(const char* value) {
  set_has_localexchid();
  localexchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.localexchid)
}
inline void InstrSpecData::set_localexchid(const char* value, size_t size) {
  set_has_localexchid();
  localexchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.localexchid)
}
inline ::std::string* InstrSpecData::mutable_localexchid() {
  set_has_localexchid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.localexchid)
  return localexchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_localexchid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.localexchid)
  clear_has_localexchid();
  return localexchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_localexchid(::std::string* localexchid) {
  if (localexchid != NULL) {
    set_has_localexchid();
  } else {
    clear_has_localexchid();
  }
  localexchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localexchid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.localexchid)
}

// optional string localinstrid = 16 [default = ""];
inline bool InstrSpecData::has_localinstrid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void InstrSpecData::set_has_localinstrid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void InstrSpecData::clear_has_localinstrid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void InstrSpecData::clear_localinstrid() {
  localinstrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localinstrid();
}
inline const ::std::string& InstrSpecData::localinstrid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.localinstrid)
  return localinstrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_localinstrid(const ::std::string& value) {
  set_has_localinstrid();
  localinstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.localinstrid)
}
inline void InstrSpecData::set_localinstrid(const char* value) {
  set_has_localinstrid();
  localinstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.localinstrid)
}
inline void InstrSpecData::set_localinstrid(const char* value, size_t size) {
  set_has_localinstrid();
  localinstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.localinstrid)
}
inline ::std::string* InstrSpecData::mutable_localinstrid() {
  set_has_localinstrid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.localinstrid)
  return localinstrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_localinstrid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.localinstrid)
  clear_has_localinstrid();
  return localinstrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_localinstrid(::std::string* localinstrid) {
  if (localinstrid != NULL) {
    set_has_localinstrid();
  } else {
    clear_has_localinstrid();
  }
  localinstrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localinstrid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.localinstrid)
}

// optional string localproductid = 17 [default = ""];
inline bool InstrSpecData::has_localproductid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void InstrSpecData::set_has_localproductid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void InstrSpecData::clear_has_localproductid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void InstrSpecData::clear_localproductid() {
  localproductid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localproductid();
}
inline const ::std::string& InstrSpecData::localproductid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.localproductid)
  return localproductid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_localproductid(const ::std::string& value) {
  set_has_localproductid();
  localproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.localproductid)
}
inline void InstrSpecData::set_localproductid(const char* value) {
  set_has_localproductid();
  localproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.localproductid)
}
inline void InstrSpecData::set_localproductid(const char* value, size_t size) {
  set_has_localproductid();
  localproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.localproductid)
}
inline ::std::string* InstrSpecData::mutable_localproductid() {
  set_has_localproductid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.localproductid)
  return localproductid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_localproductid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.localproductid)
  clear_has_localproductid();
  return localproductid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_localproductid(::std::string* localproductid) {
  if (localproductid != NULL) {
    set_has_localproductid();
  } else {
    clear_has_localproductid();
  }
  localproductid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localproductid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.localproductid)
}

// optional double undlymultiple = 18 [default = 1];
inline bool InstrSpecData::has_undlymultiple() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void InstrSpecData::set_has_undlymultiple() {
  _has_bits_[0] |= 0x00020000u;
}
inline void InstrSpecData::clear_has_undlymultiple() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void InstrSpecData::clear_undlymultiple() {
  undlymultiple_ = 1;
  clear_has_undlymultiple();
}
inline double InstrSpecData::undlymultiple() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.undlymultiple)
  return undlymultiple_;
}
inline void InstrSpecData::set_undlymultiple(double value) {
  set_has_undlymultiple();
  undlymultiple_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.undlymultiple)
}

// optional string undlyproduct = 19 [default = ""];
inline bool InstrSpecData::has_undlyproduct() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void InstrSpecData::set_has_undlyproduct() {
  _has_bits_[0] |= 0x00040000u;
}
inline void InstrSpecData::clear_has_undlyproduct() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void InstrSpecData::clear_undlyproduct() {
  undlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyproduct();
}
inline const ::std::string& InstrSpecData::undlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.undlyproduct)
  return undlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_undlyproduct(const ::std::string& value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.undlyproduct)
}
inline void InstrSpecData::set_undlyproduct(const char* value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.undlyproduct)
}
inline void InstrSpecData::set_undlyproduct(const char* value, size_t size) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.undlyproduct)
}
inline ::std::string* InstrSpecData::mutable_undlyproduct() {
  set_has_undlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.undlyproduct)
  return undlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_undlyproduct() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.undlyproduct)
  clear_has_undlyproduct();
  return undlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_undlyproduct(::std::string* undlyproduct) {
  if (undlyproduct != NULL) {
    set_has_undlyproduct();
  } else {
    clear_has_undlyproduct();
  }
  undlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.undlyproduct)
}

// optional string undlyinstr = 20 [default = ""];
inline bool InstrSpecData::has_undlyinstr() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void InstrSpecData::set_has_undlyinstr() {
  _has_bits_[0] |= 0x00080000u;
}
inline void InstrSpecData::clear_has_undlyinstr() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void InstrSpecData::clear_undlyinstr() {
  undlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyinstr();
}
inline const ::std::string& InstrSpecData::undlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.undlyinstr)
  return undlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_undlyinstr(const ::std::string& value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.undlyinstr)
}
inline void InstrSpecData::set_undlyinstr(const char* value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.undlyinstr)
}
inline void InstrSpecData::set_undlyinstr(const char* value, size_t size) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.undlyinstr)
}
inline ::std::string* InstrSpecData::mutable_undlyinstr() {
  set_has_undlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.undlyinstr)
  return undlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_undlyinstr() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.undlyinstr)
  clear_has_undlyinstr();
  return undlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_undlyinstr(::std::string* undlyinstr) {
  if (undlyinstr != NULL) {
    set_has_undlyinstr();
  } else {
    clear_has_undlyinstr();
  }
  undlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.undlyinstr)
}

// optional double tickvalue = 21 [default = 0];
inline bool InstrSpecData::has_tickvalue() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void InstrSpecData::set_has_tickvalue() {
  _has_bits_[0] |= 0x00100000u;
}
inline void InstrSpecData::clear_has_tickvalue() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void InstrSpecData::clear_tickvalue() {
  tickvalue_ = 0;
  clear_has_tickvalue();
}
inline double InstrSpecData::tickvalue() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.tickvalue)
  return tickvalue_;
}
inline void InstrSpecData::set_tickvalue(double value) {
  set_has_tickvalue();
  tickvalue_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.tickvalue)
}

// optional int64 int64pxtick = 22 [default = 0];
inline bool InstrSpecData::has_int64pxtick() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void InstrSpecData::set_has_int64pxtick() {
  _has_bits_[0] |= 0x00200000u;
}
inline void InstrSpecData::clear_has_int64pxtick() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void InstrSpecData::clear_int64pxtick() {
  int64pxtick_ = GOOGLE_LONGLONG(0);
  clear_has_int64pxtick();
}
inline ::google::protobuf::int64 InstrSpecData::int64pxtick() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.int64pxtick)
  return int64pxtick_;
}
inline void InstrSpecData::set_int64pxtick(::google::protobuf::int64 value) {
  set_has_int64pxtick();
  int64pxtick_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.int64pxtick)
}

// optional double int64pxpointvalue = 23 [default = 0];
inline bool InstrSpecData::has_int64pxpointvalue() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void InstrSpecData::set_has_int64pxpointvalue() {
  _has_bits_[0] |= 0x00400000u;
}
inline void InstrSpecData::clear_has_int64pxpointvalue() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void InstrSpecData::clear_int64pxpointvalue() {
  int64pxpointvalue_ = 0;
  clear_has_int64pxpointvalue();
}
inline double InstrSpecData::int64pxpointvalue() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.int64pxpointvalue)
  return int64pxpointvalue_;
}
inline void InstrSpecData::set_int64pxpointvalue(double value) {
  set_has_int64pxpointvalue();
  int64pxpointvalue_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.int64pxpointvalue)
}

// optional int64 szmultiplier = 24 [default = 1];
inline bool InstrSpecData::has_szmultiplier() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void InstrSpecData::set_has_szmultiplier() {
  _has_bits_[0] |= 0x00800000u;
}
inline void InstrSpecData::clear_has_szmultiplier() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void InstrSpecData::clear_szmultiplier() {
  szmultiplier_ = GOOGLE_LONGLONG(1);
  clear_has_szmultiplier();
}
inline ::google::protobuf::int64 InstrSpecData::szmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.szmultiplier)
  return szmultiplier_;
}
inline void InstrSpecData::set_szmultiplier(::google::protobuf::int64 value) {
  set_has_szmultiplier();
  szmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.szmultiplier)
}

// optional int64 pxscaletoint64 = 25 [default = 1];
inline bool InstrSpecData::has_pxscaletoint64() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void InstrSpecData::set_has_pxscaletoint64() {
  _has_bits_[0] |= 0x01000000u;
}
inline void InstrSpecData::clear_has_pxscaletoint64() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void InstrSpecData::clear_pxscaletoint64() {
  pxscaletoint64_ = GOOGLE_LONGLONG(1);
  clear_has_pxscaletoint64();
}
inline ::google::protobuf::int64 InstrSpecData::pxscaletoint64() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.pxscaletoint64)
  return pxscaletoint64_;
}
inline void InstrSpecData::set_pxscaletoint64(::google::protobuf::int64 value) {
  set_has_pxscaletoint64();
  pxscaletoint64_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.pxscaletoint64)
}

// optional double pxscaletodouble = 26 [default = 1];
inline bool InstrSpecData::has_pxscaletodouble() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void InstrSpecData::set_has_pxscaletodouble() {
  _has_bits_[0] |= 0x02000000u;
}
inline void InstrSpecData::clear_has_pxscaletodouble() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void InstrSpecData::clear_pxscaletodouble() {
  pxscaletodouble_ = 1;
  clear_has_pxscaletodouble();
}
inline double InstrSpecData::pxscaletodouble() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.pxscaletodouble)
  return pxscaletodouble_;
}
inline void InstrSpecData::set_pxscaletodouble(double value) {
  set_has_pxscaletodouble();
  pxscaletodouble_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.pxscaletodouble)
}

// optional string expiretime = 27 [default = "15:00:00"];
inline bool InstrSpecData::has_expiretime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void InstrSpecData::set_has_expiretime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void InstrSpecData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void InstrSpecData::clear_expiretime() {
  expiretime_.ClearToDefaultNoArena(_default_expiretime_);
  clear_has_expiretime();
}
inline const ::std::string& InstrSpecData::expiretime() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.expiretime)
  return expiretime_.GetNoArena(_default_expiretime_);
}
inline void InstrSpecData::set_expiretime(const ::std::string& value) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_, value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.expiretime)
}
inline void InstrSpecData::set_expiretime(const char* value) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.expiretime)
}
inline void InstrSpecData::set_expiretime(const char* value, size_t size) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.expiretime)
}
inline ::std::string* InstrSpecData::mutable_expiretime() {
  set_has_expiretime();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.expiretime)
  return expiretime_.MutableNoArena(_default_expiretime_);
}
inline ::std::string* InstrSpecData::release_expiretime() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.expiretime)
  clear_has_expiretime();
  return expiretime_.ReleaseNoArena(_default_expiretime_);
}
inline void InstrSpecData::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    set_has_expiretime();
  } else {
    clear_has_expiretime();
  }
  expiretime_.SetAllocatedNoArena(_default_expiretime_, expiretime);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.expiretime)
}

// optional string expiredt = 28 [default = ""];
inline bool InstrSpecData::has_expiredt() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void InstrSpecData::set_has_expiredt() {
  _has_bits_[0] |= 0x08000000u;
}
inline void InstrSpecData::clear_has_expiredt() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void InstrSpecData::clear_expiredt() {
  expiredt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expiredt();
}
inline const ::std::string& InstrSpecData::expiredt() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.expiredt)
  return expiredt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_expiredt(const ::std::string& value) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.expiredt)
}
inline void InstrSpecData::set_expiredt(const char* value) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.expiredt)
}
inline void InstrSpecData::set_expiredt(const char* value, size_t size) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.expiredt)
}
inline ::std::string* InstrSpecData::mutable_expiredt() {
  set_has_expiredt();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.expiredt)
  return expiredt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_expiredt() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.expiredt)
  clear_has_expiredt();
  return expiredt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_expiredt(::std::string* expiredt) {
  if (expiredt != NULL) {
    set_has_expiredt();
  } else {
    clear_has_expiredt();
  }
  expiredt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiredt);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.expiredt)
}

// optional int64 expirets = 29 [default = 0];
inline bool InstrSpecData::has_expirets() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void InstrSpecData::set_has_expirets() {
  _has_bits_[0] |= 0x10000000u;
}
inline void InstrSpecData::clear_has_expirets() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void InstrSpecData::clear_expirets() {
  expirets_ = GOOGLE_LONGLONG(0);
  clear_has_expirets();
}
inline ::google::protobuf::int64 InstrSpecData::expirets() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.expirets)
  return expirets_;
}
inline void InstrSpecData::set_expirets(::google::protobuf::int64 value) {
  set_has_expirets();
  expirets_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.expirets)
}

// optional string areas = 30 [default = ""];
inline bool InstrSpecData::has_areas() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void InstrSpecData::set_has_areas() {
  _has_bits_[0] |= 0x20000000u;
}
inline void InstrSpecData::clear_has_areas() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void InstrSpecData::clear_areas() {
  areas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_areas();
}
inline const ::std::string& InstrSpecData::areas() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.areas)
  return areas_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_areas(const ::std::string& value) {
  set_has_areas();
  areas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.areas)
}
inline void InstrSpecData::set_areas(const char* value) {
  set_has_areas();
  areas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.areas)
}
inline void InstrSpecData::set_areas(const char* value, size_t size) {
  set_has_areas();
  areas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.areas)
}
inline ::std::string* InstrSpecData::mutable_areas() {
  set_has_areas();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.areas)
  return areas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_areas() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.areas)
  clear_has_areas();
  return areas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_areas(::std::string* areas) {
  if (areas != NULL) {
    set_has_areas();
  } else {
    clear_has_areas();
  }
  areas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), areas);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.areas)
}

// optional string concepts = 31 [default = ""];
inline bool InstrSpecData::has_concepts() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void InstrSpecData::set_has_concepts() {
  _has_bits_[0] |= 0x40000000u;
}
inline void InstrSpecData::clear_has_concepts() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void InstrSpecData::clear_concepts() {
  concepts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_concepts();
}
inline const ::std::string& InstrSpecData::concepts() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.concepts)
  return concepts_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_concepts(const ::std::string& value) {
  set_has_concepts();
  concepts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.concepts)
}
inline void InstrSpecData::set_concepts(const char* value) {
  set_has_concepts();
  concepts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.concepts)
}
inline void InstrSpecData::set_concepts(const char* value, size_t size) {
  set_has_concepts();
  concepts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.concepts)
}
inline ::std::string* InstrSpecData::mutable_concepts() {
  set_has_concepts();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.concepts)
  return concepts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_concepts() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.concepts)
  clear_has_concepts();
  return concepts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_concepts(::std::string* concepts) {
  if (concepts != NULL) {
    set_has_concepts();
  } else {
    clear_has_concepts();
  }
  concepts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concepts);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.concepts)
}

// optional string industries = 32 [default = ""];
inline bool InstrSpecData::has_industries() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void InstrSpecData::set_has_industries() {
  _has_bits_[0] |= 0x80000000u;
}
inline void InstrSpecData::clear_has_industries() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void InstrSpecData::clear_industries() {
  industries_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_industries();
}
inline const ::std::string& InstrSpecData::industries() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.industries)
  return industries_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_industries(const ::std::string& value) {
  set_has_industries();
  industries_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.industries)
}
inline void InstrSpecData::set_industries(const char* value) {
  set_has_industries();
  industries_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.industries)
}
inline void InstrSpecData::set_industries(const char* value, size_t size) {
  set_has_industries();
  industries_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.industries)
}
inline ::std::string* InstrSpecData::mutable_industries() {
  set_has_industries();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.industries)
  return industries_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_industries() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.industries)
  clear_has_industries();
  return industries_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_industries(::std::string* industries) {
  if (industries != NULL) {
    set_has_industries();
  } else {
    clear_has_industries();
  }
  industries_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), industries);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.industries)
}

// optional int32 listintdate = 33 [default = 0];
inline bool InstrSpecData::has_listintdate() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void InstrSpecData::set_has_listintdate() {
  _has_bits_[1] |= 0x00000001u;
}
inline void InstrSpecData::clear_has_listintdate() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void InstrSpecData::clear_listintdate() {
  listintdate_ = 0;
  clear_has_listintdate();
}
inline ::google::protobuf::int32 InstrSpecData::listintdate() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.listintdate)
  return listintdate_;
}
inline void InstrSpecData::set_listintdate(::google::protobuf::int32 value) {
  set_has_listintdate();
  listintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.listintdate)
}

// optional string name = 34 [default = ""];
inline bool InstrSpecData::has_name() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void InstrSpecData::set_has_name() {
  _has_bits_[1] |= 0x00000002u;
}
inline void InstrSpecData::clear_has_name() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void InstrSpecData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& InstrSpecData::name() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.name)
}
inline void InstrSpecData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.name)
}
inline void InstrSpecData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.name)
}
inline ::std::string* InstrSpecData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_name() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.name)
}

// optional string enname = 35 [default = ""];
inline bool InstrSpecData::has_enname() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void InstrSpecData::set_has_enname() {
  _has_bits_[1] |= 0x00000004u;
}
inline void InstrSpecData::clear_has_enname() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void InstrSpecData::clear_enname() {
  enname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enname();
}
inline const ::std::string& InstrSpecData::enname() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.enname)
  return enname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_enname(const ::std::string& value) {
  set_has_enname();
  enname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.enname)
}
inline void InstrSpecData::set_enname(const char* value) {
  set_has_enname();
  enname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.enname)
}
inline void InstrSpecData::set_enname(const char* value, size_t size) {
  set_has_enname();
  enname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.enname)
}
inline ::std::string* InstrSpecData::mutable_enname() {
  set_has_enname();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.enname)
  return enname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_enname() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.enname)
  clear_has_enname();
  return enname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_enname(::std::string* enname) {
  if (enname != NULL) {
    set_has_enname();
  } else {
    clear_has_enname();
  }
  enname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enname);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.enname)
}

// optional int32 optexercisetype = 36 [default = 0];
inline bool InstrSpecData::has_optexercisetype() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void InstrSpecData::set_has_optexercisetype() {
  _has_bits_[1] |= 0x00000008u;
}
inline void InstrSpecData::clear_has_optexercisetype() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void InstrSpecData::clear_optexercisetype() {
  optexercisetype_ = 0;
  clear_has_optexercisetype();
}
inline ::google::protobuf::int32 InstrSpecData::optexercisetype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.optexercisetype)
  return optexercisetype_;
}
inline void InstrSpecData::set_optexercisetype(::google::protobuf::int32 value) {
  set_has_optexercisetype();
  optexercisetype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.optexercisetype)
}

// optional string exchangeinstid = 101 [default = ""];
inline bool InstrSpecData::has_exchangeinstid() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void InstrSpecData::set_has_exchangeinstid() {
  _has_bits_[1] |= 0x00000010u;
}
inline void InstrSpecData::clear_has_exchangeinstid() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void InstrSpecData::clear_exchangeinstid() {
  exchangeinstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchangeinstid();
}
inline const ::std::string& InstrSpecData::exchangeinstid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.exchangeinstid)
  return exchangeinstid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_exchangeinstid(const ::std::string& value) {
  set_has_exchangeinstid();
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.exchangeinstid)
}
inline void InstrSpecData::set_exchangeinstid(const char* value) {
  set_has_exchangeinstid();
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.exchangeinstid)
}
inline void InstrSpecData::set_exchangeinstid(const char* value, size_t size) {
  set_has_exchangeinstid();
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.exchangeinstid)
}
inline ::std::string* InstrSpecData::mutable_exchangeinstid() {
  set_has_exchangeinstid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.exchangeinstid)
  return exchangeinstid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_exchangeinstid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.exchangeinstid)
  clear_has_exchangeinstid();
  return exchangeinstid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_exchangeinstid(::std::string* exchangeinstid) {
  if (exchangeinstid != NULL) {
    set_has_exchangeinstid();
  } else {
    clear_has_exchangeinstid();
  }
  exchangeinstid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangeinstid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.exchangeinstid)
}

// optional int32 productclass = 102 [default = 0];
inline bool InstrSpecData::has_productclass() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void InstrSpecData::set_has_productclass() {
  _has_bits_[1] |= 0x00000020u;
}
inline void InstrSpecData::clear_has_productclass() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void InstrSpecData::clear_productclass() {
  productclass_ = 0;
  clear_has_productclass();
}
inline ::google::protobuf::int32 InstrSpecData::productclass() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.productclass)
  return productclass_;
}
inline void InstrSpecData::set_productclass(::google::protobuf::int32 value) {
  set_has_productclass();
  productclass_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.productclass)
}

// optional int32 deliveryyear = 103 [default = 0];
inline bool InstrSpecData::has_deliveryyear() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void InstrSpecData::set_has_deliveryyear() {
  _has_bits_[1] |= 0x00000040u;
}
inline void InstrSpecData::clear_has_deliveryyear() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void InstrSpecData::clear_deliveryyear() {
  deliveryyear_ = 0;
  clear_has_deliveryyear();
}
inline ::google::protobuf::int32 InstrSpecData::deliveryyear() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.deliveryyear)
  return deliveryyear_;
}
inline void InstrSpecData::set_deliveryyear(::google::protobuf::int32 value) {
  set_has_deliveryyear();
  deliveryyear_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.deliveryyear)
}

// optional int32 deliverymonth = 104 [default = 0];
inline bool InstrSpecData::has_deliverymonth() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void InstrSpecData::set_has_deliverymonth() {
  _has_bits_[1] |= 0x00000080u;
}
inline void InstrSpecData::clear_has_deliverymonth() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void InstrSpecData::clear_deliverymonth() {
  deliverymonth_ = 0;
  clear_has_deliverymonth();
}
inline ::google::protobuf::int32 InstrSpecData::deliverymonth() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.deliverymonth)
  return deliverymonth_;
}
inline void InstrSpecData::set_deliverymonth(::google::protobuf::int32 value) {
  set_has_deliverymonth();
  deliverymonth_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.deliverymonth)
}

// optional int64 maxmarketordervolume = 105 [default = 0];
inline bool InstrSpecData::has_maxmarketordervolume() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void InstrSpecData::set_has_maxmarketordervolume() {
  _has_bits_[1] |= 0x00000100u;
}
inline void InstrSpecData::clear_has_maxmarketordervolume() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void InstrSpecData::clear_maxmarketordervolume() {
  maxmarketordervolume_ = GOOGLE_LONGLONG(0);
  clear_has_maxmarketordervolume();
}
inline ::google::protobuf::int64 InstrSpecData::maxmarketordervolume() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.maxmarketordervolume)
  return maxmarketordervolume_;
}
inline void InstrSpecData::set_maxmarketordervolume(::google::protobuf::int64 value) {
  set_has_maxmarketordervolume();
  maxmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.maxmarketordervolume)
}

// optional int64 minmarketordervolume = 106 [default = 0];
inline bool InstrSpecData::has_minmarketordervolume() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void InstrSpecData::set_has_minmarketordervolume() {
  _has_bits_[1] |= 0x00000200u;
}
inline void InstrSpecData::clear_has_minmarketordervolume() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void InstrSpecData::clear_minmarketordervolume() {
  minmarketordervolume_ = GOOGLE_LONGLONG(0);
  clear_has_minmarketordervolume();
}
inline ::google::protobuf::int64 InstrSpecData::minmarketordervolume() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.minmarketordervolume)
  return minmarketordervolume_;
}
inline void InstrSpecData::set_minmarketordervolume(::google::protobuf::int64 value) {
  set_has_minmarketordervolume();
  minmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.minmarketordervolume)
}

// optional int64 maxlimitordervolume = 107 [default = 0];
inline bool InstrSpecData::has_maxlimitordervolume() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void InstrSpecData::set_has_maxlimitordervolume() {
  _has_bits_[1] |= 0x00000400u;
}
inline void InstrSpecData::clear_has_maxlimitordervolume() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void InstrSpecData::clear_maxlimitordervolume() {
  maxlimitordervolume_ = GOOGLE_LONGLONG(0);
  clear_has_maxlimitordervolume();
}
inline ::google::protobuf::int64 InstrSpecData::maxlimitordervolume() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.maxlimitordervolume)
  return maxlimitordervolume_;
}
inline void InstrSpecData::set_maxlimitordervolume(::google::protobuf::int64 value) {
  set_has_maxlimitordervolume();
  maxlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.maxlimitordervolume)
}

// optional int64 minlimitordervolume = 108 [default = 0];
inline bool InstrSpecData::has_minlimitordervolume() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void InstrSpecData::set_has_minlimitordervolume() {
  _has_bits_[1] |= 0x00000800u;
}
inline void InstrSpecData::clear_has_minlimitordervolume() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void InstrSpecData::clear_minlimitordervolume() {
  minlimitordervolume_ = GOOGLE_LONGLONG(0);
  clear_has_minlimitordervolume();
}
inline ::google::protobuf::int64 InstrSpecData::minlimitordervolume() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.minlimitordervolume)
  return minlimitordervolume_;
}
inline void InstrSpecData::set_minlimitordervolume(::google::protobuf::int64 value) {
  set_has_minlimitordervolume();
  minlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.minlimitordervolume)
}

// optional int32 positiontype = 109 [default = 0];
inline bool InstrSpecData::has_positiontype() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void InstrSpecData::set_has_positiontype() {
  _has_bits_[1] |= 0x00001000u;
}
inline void InstrSpecData::clear_has_positiontype() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void InstrSpecData::clear_positiontype() {
  positiontype_ = 0;
  clear_has_positiontype();
}
inline ::google::protobuf::int32 InstrSpecData::positiontype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.positiontype)
  return positiontype_;
}
inline void InstrSpecData::set_positiontype(::google::protobuf::int32 value) {
  set_has_positiontype();
  positiontype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.positiontype)
}

// optional int32 positiondatetype = 110 [default = 0];
inline bool InstrSpecData::has_positiondatetype() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void InstrSpecData::set_has_positiondatetype() {
  _has_bits_[1] |= 0x00002000u;
}
inline void InstrSpecData::clear_has_positiondatetype() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void InstrSpecData::clear_positiondatetype() {
  positiondatetype_ = 0;
  clear_has_positiondatetype();
}
inline ::google::protobuf::int32 InstrSpecData::positiondatetype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.positiondatetype)
  return positiondatetype_;
}
inline void InstrSpecData::set_positiondatetype(::google::protobuf::int32 value) {
  set_has_positiondatetype();
  positiondatetype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.positiondatetype)
}

// optional int32 closedealtype = 111 [default = 0];
inline bool InstrSpecData::has_closedealtype() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void InstrSpecData::set_has_closedealtype() {
  _has_bits_[1] |= 0x00004000u;
}
inline void InstrSpecData::clear_has_closedealtype() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void InstrSpecData::clear_closedealtype() {
  closedealtype_ = 0;
  clear_has_closedealtype();
}
inline ::google::protobuf::int32 InstrSpecData::closedealtype() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.closedealtype)
  return closedealtype_;
}
inline void InstrSpecData::set_closedealtype(::google::protobuf::int32 value) {
  set_has_closedealtype();
  closedealtype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.closedealtype)
}

// optional int32 mortgagefunduserange = 112 [default = 0];
inline bool InstrSpecData::has_mortgagefunduserange() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void InstrSpecData::set_has_mortgagefunduserange() {
  _has_bits_[1] |= 0x00008000u;
}
inline void InstrSpecData::clear_has_mortgagefunduserange() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void InstrSpecData::clear_mortgagefunduserange() {
  mortgagefunduserange_ = 0;
  clear_has_mortgagefunduserange();
}
inline ::google::protobuf::int32 InstrSpecData::mortgagefunduserange() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.mortgagefunduserange)
  return mortgagefunduserange_;
}
inline void InstrSpecData::set_mortgagefunduserange(::google::protobuf::int32 value) {
  set_has_mortgagefunduserange();
  mortgagefunduserange_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.mortgagefunduserange)
}

// optional string exchangeproductid = 113 [default = ""];
inline bool InstrSpecData::has_exchangeproductid() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void InstrSpecData::set_has_exchangeproductid() {
  _has_bits_[1] |= 0x00010000u;
}
inline void InstrSpecData::clear_has_exchangeproductid() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void InstrSpecData::clear_exchangeproductid() {
  exchangeproductid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchangeproductid();
}
inline const ::std::string& InstrSpecData::exchangeproductid() const {
  // @@protoc_insertion_point(field_get:XT.InstrSpecData.exchangeproductid)
  return exchangeproductid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_exchangeproductid(const ::std::string& value) {
  set_has_exchangeproductid();
  exchangeproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrSpecData.exchangeproductid)
}
inline void InstrSpecData::set_exchangeproductid(const char* value) {
  set_has_exchangeproductid();
  exchangeproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrSpecData.exchangeproductid)
}
inline void InstrSpecData::set_exchangeproductid(const char* value, size_t size) {
  set_has_exchangeproductid();
  exchangeproductid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrSpecData.exchangeproductid)
}
inline ::std::string* InstrSpecData::mutable_exchangeproductid() {
  set_has_exchangeproductid();
  // @@protoc_insertion_point(field_mutable:XT.InstrSpecData.exchangeproductid)
  return exchangeproductid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrSpecData::release_exchangeproductid() {
  // @@protoc_insertion_point(field_release:XT.InstrSpecData.exchangeproductid)
  clear_has_exchangeproductid();
  return exchangeproductid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrSpecData::set_allocated_exchangeproductid(::std::string* exchangeproductid) {
  if (exchangeproductid != NULL) {
    set_has_exchangeproductid();
  } else {
    clear_has_exchangeproductid();
  }
  exchangeproductid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangeproductid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrSpecData.exchangeproductid)
}

// map<string, string> strmap = 200;
inline int InstrSpecData::strmap_size() const {
  return strmap_.size();
}
inline void InstrSpecData::clear_strmap() {
  strmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InstrSpecData::strmap() const {
  // @@protoc_insertion_point(field_map:XT.InstrSpecData.strmap)
  return strmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InstrSpecData::mutable_strmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.InstrSpecData.strmap)
  return strmap_.MutableMap();
}

// -------------------------------------------------------------------

// GlobalCfgData

// optional string basedir = 1 [default = ""];
inline bool GlobalCfgData::has_basedir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalCfgData::set_has_basedir() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalCfgData::clear_has_basedir() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalCfgData::clear_basedir() {
  basedir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_basedir();
}
inline const ::std::string& GlobalCfgData::basedir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.basedir)
  return basedir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_basedir(const ::std::string& value) {
  set_has_basedir();
  basedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.basedir)
}
inline void GlobalCfgData::set_basedir(const char* value) {
  set_has_basedir();
  basedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.basedir)
}
inline void GlobalCfgData::set_basedir(const char* value, size_t size) {
  set_has_basedir();
  basedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.basedir)
}
inline ::std::string* GlobalCfgData::mutable_basedir() {
  set_has_basedir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.basedir)
  return basedir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_basedir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.basedir)
  clear_has_basedir();
  return basedir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_basedir(::std::string* basedir) {
  if (basedir != NULL) {
    set_has_basedir();
  } else {
    clear_has_basedir();
  }
  basedir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), basedir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.basedir)
}

// optional string appdir = 2 [default = ""];
inline bool GlobalCfgData::has_appdir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalCfgData::set_has_appdir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalCfgData::clear_has_appdir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalCfgData::clear_appdir() {
  appdir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdir();
}
inline const ::std::string& GlobalCfgData::appdir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.appdir)
  return appdir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_appdir(const ::std::string& value) {
  set_has_appdir();
  appdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.appdir)
}
inline void GlobalCfgData::set_appdir(const char* value) {
  set_has_appdir();
  appdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.appdir)
}
inline void GlobalCfgData::set_appdir(const char* value, size_t size) {
  set_has_appdir();
  appdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.appdir)
}
inline ::std::string* GlobalCfgData::mutable_appdir() {
  set_has_appdir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.appdir)
  return appdir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_appdir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.appdir)
  clear_has_appdir();
  return appdir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_appdir(::std::string* appdir) {
  if (appdir != NULL) {
    set_has_appdir();
  } else {
    clear_has_appdir();
  }
  appdir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.appdir)
}

// optional string logdir = 3 [default = ""];
inline bool GlobalCfgData::has_logdir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalCfgData::set_has_logdir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalCfgData::clear_has_logdir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalCfgData::clear_logdir() {
  logdir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logdir();
}
inline const ::std::string& GlobalCfgData::logdir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.logdir)
  return logdir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_logdir(const ::std::string& value) {
  set_has_logdir();
  logdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.logdir)
}
inline void GlobalCfgData::set_logdir(const char* value) {
  set_has_logdir();
  logdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.logdir)
}
inline void GlobalCfgData::set_logdir(const char* value, size_t size) {
  set_has_logdir();
  logdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.logdir)
}
inline ::std::string* GlobalCfgData::mutable_logdir() {
  set_has_logdir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.logdir)
  return logdir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_logdir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.logdir)
  clear_has_logdir();
  return logdir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_logdir(::std::string* logdir) {
  if (logdir != NULL) {
    set_has_logdir();
  } else {
    clear_has_logdir();
  }
  logdir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.logdir)
}

// optional string datadir = 4 [default = ""];
inline bool GlobalCfgData::has_datadir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalCfgData::set_has_datadir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalCfgData::clear_has_datadir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalCfgData::clear_datadir() {
  datadir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datadir();
}
inline const ::std::string& GlobalCfgData::datadir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.datadir)
  return datadir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_datadir(const ::std::string& value) {
  set_has_datadir();
  datadir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.datadir)
}
inline void GlobalCfgData::set_datadir(const char* value) {
  set_has_datadir();
  datadir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.datadir)
}
inline void GlobalCfgData::set_datadir(const char* value, size_t size) {
  set_has_datadir();
  datadir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.datadir)
}
inline ::std::string* GlobalCfgData::mutable_datadir() {
  set_has_datadir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.datadir)
  return datadir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_datadir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.datadir)
  clear_has_datadir();
  return datadir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_datadir(::std::string* datadir) {
  if (datadir != NULL) {
    set_has_datadir();
  } else {
    clear_has_datadir();
  }
  datadir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datadir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.datadir)
}

// optional string cfgdir = 5 [default = ""];
inline bool GlobalCfgData::has_cfgdir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GlobalCfgData::set_has_cfgdir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GlobalCfgData::clear_has_cfgdir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GlobalCfgData::clear_cfgdir() {
  cfgdir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfgdir();
}
inline const ::std::string& GlobalCfgData::cfgdir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.cfgdir)
  return cfgdir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_cfgdir(const ::std::string& value) {
  set_has_cfgdir();
  cfgdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.cfgdir)
}
inline void GlobalCfgData::set_cfgdir(const char* value) {
  set_has_cfgdir();
  cfgdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.cfgdir)
}
inline void GlobalCfgData::set_cfgdir(const char* value, size_t size) {
  set_has_cfgdir();
  cfgdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.cfgdir)
}
inline ::std::string* GlobalCfgData::mutable_cfgdir() {
  set_has_cfgdir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.cfgdir)
  return cfgdir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_cfgdir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.cfgdir)
  clear_has_cfgdir();
  return cfgdir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_cfgdir(::std::string* cfgdir) {
  if (cfgdir != NULL) {
    set_has_cfgdir();
  } else {
    clear_has_cfgdir();
  }
  cfgdir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfgdir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.cfgdir)
}

// optional string libdir = 6 [default = ""];
inline bool GlobalCfgData::has_libdir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GlobalCfgData::set_has_libdir() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GlobalCfgData::clear_has_libdir() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GlobalCfgData::clear_libdir() {
  libdir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_libdir();
}
inline const ::std::string& GlobalCfgData::libdir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.libdir)
  return libdir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_libdir(const ::std::string& value) {
  set_has_libdir();
  libdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.libdir)
}
inline void GlobalCfgData::set_libdir(const char* value) {
  set_has_libdir();
  libdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.libdir)
}
inline void GlobalCfgData::set_libdir(const char* value, size_t size) {
  set_has_libdir();
  libdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.libdir)
}
inline ::std::string* GlobalCfgData::mutable_libdir() {
  set_has_libdir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.libdir)
  return libdir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_libdir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.libdir)
  clear_has_libdir();
  return libdir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_libdir(::std::string* libdir) {
  if (libdir != NULL) {
    set_has_libdir();
  } else {
    clear_has_libdir();
  }
  libdir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), libdir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.libdir)
}

// optional string plugindir = 7 [default = ""];
inline bool GlobalCfgData::has_plugindir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GlobalCfgData::set_has_plugindir() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GlobalCfgData::clear_has_plugindir() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GlobalCfgData::clear_plugindir() {
  plugindir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plugindir();
}
inline const ::std::string& GlobalCfgData::plugindir() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.plugindir)
  return plugindir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_plugindir(const ::std::string& value) {
  set_has_plugindir();
  plugindir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.plugindir)
}
inline void GlobalCfgData::set_plugindir(const char* value) {
  set_has_plugindir();
  plugindir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.plugindir)
}
inline void GlobalCfgData::set_plugindir(const char* value, size_t size) {
  set_has_plugindir();
  plugindir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.plugindir)
}
inline ::std::string* GlobalCfgData::mutable_plugindir() {
  set_has_plugindir();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.plugindir)
  return plugindir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_plugindir() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.plugindir)
  clear_has_plugindir();
  return plugindir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_plugindir(::std::string* plugindir) {
  if (plugindir != NULL) {
    set_has_plugindir();
  } else {
    clear_has_plugindir();
  }
  plugindir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plugindir);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.plugindir)
}

// optional string maindbfile = 8 [default = ""];
inline bool GlobalCfgData::has_maindbfile() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GlobalCfgData::set_has_maindbfile() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GlobalCfgData::clear_has_maindbfile() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GlobalCfgData::clear_maindbfile() {
  maindbfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maindbfile();
}
inline const ::std::string& GlobalCfgData::maindbfile() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.maindbfile)
  return maindbfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_maindbfile(const ::std::string& value) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.maindbfile)
}
inline void GlobalCfgData::set_maindbfile(const char* value) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.maindbfile)
}
inline void GlobalCfgData::set_maindbfile(const char* value, size_t size) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.maindbfile)
}
inline ::std::string* GlobalCfgData::mutable_maindbfile() {
  set_has_maindbfile();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.maindbfile)
  return maindbfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_maindbfile() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.maindbfile)
  clear_has_maindbfile();
  return maindbfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_maindbfile(::std::string* maindbfile) {
  if (maindbfile != NULL) {
    set_has_maindbfile();
  } else {
    clear_has_maindbfile();
  }
  maindbfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maindbfile);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.maindbfile)
}

// optional string trddbfile = 9 [default = ""];
inline bool GlobalCfgData::has_trddbfile() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GlobalCfgData::set_has_trddbfile() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GlobalCfgData::clear_has_trddbfile() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GlobalCfgData::clear_trddbfile() {
  trddbfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trddbfile();
}
inline const ::std::string& GlobalCfgData::trddbfile() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.trddbfile)
  return trddbfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_trddbfile(const ::std::string& value) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.trddbfile)
}
inline void GlobalCfgData::set_trddbfile(const char* value) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.trddbfile)
}
inline void GlobalCfgData::set_trddbfile(const char* value, size_t size) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.trddbfile)
}
inline ::std::string* GlobalCfgData::mutable_trddbfile() {
  set_has_trddbfile();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.trddbfile)
  return trddbfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_trddbfile() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.trddbfile)
  clear_has_trddbfile();
  return trddbfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_trddbfile(::std::string* trddbfile) {
  if (trddbfile != NULL) {
    set_has_trddbfile();
  } else {
    clear_has_trddbfile();
  }
  trddbfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trddbfile);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.trddbfile)
}

// optional int32 issim = 10 [default = 0];
inline bool GlobalCfgData::has_issim() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GlobalCfgData::set_has_issim() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GlobalCfgData::clear_has_issim() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GlobalCfgData::clear_issim() {
  issim_ = 0;
  clear_has_issim();
}
inline ::google::protobuf::int32 GlobalCfgData::issim() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.issim)
  return issim_;
}
inline void GlobalCfgData::set_issim(::google::protobuf::int32 value) {
  set_has_issim();
  issim_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.issim)
}

// optional int32 isnone = 11 [default = 0];
inline bool GlobalCfgData::has_isnone() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GlobalCfgData::set_has_isnone() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GlobalCfgData::clear_has_isnone() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GlobalCfgData::clear_isnone() {
  isnone_ = 0;
  clear_has_isnone();
}
inline ::google::protobuf::int32 GlobalCfgData::isnone() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.isnone)
  return isnone_;
}
inline void GlobalCfgData::set_isnone(::google::protobuf::int32 value) {
  set_has_isnone();
  isnone_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.isnone)
}

// optional int32 prevtradingday = 12 [default = 0];
inline bool GlobalCfgData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GlobalCfgData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GlobalCfgData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GlobalCfgData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 GlobalCfgData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.prevtradingday)
  return prevtradingday_;
}
inline void GlobalCfgData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.prevtradingday)
}

// optional int32 tradingday = 15 [default = 0];
inline bool GlobalCfgData::has_tradingday() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GlobalCfgData::set_has_tradingday() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GlobalCfgData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GlobalCfgData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 GlobalCfgData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.tradingday)
  return tradingday_;
}
inline void GlobalCfgData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.tradingday)
}

// optional int32 currintdate = 16 [default = 0];
inline bool GlobalCfgData::has_currintdate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GlobalCfgData::set_has_currintdate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GlobalCfgData::clear_has_currintdate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GlobalCfgData::clear_currintdate() {
  currintdate_ = 0;
  clear_has_currintdate();
}
inline ::google::protobuf::int32 GlobalCfgData::currintdate() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.currintdate)
  return currintdate_;
}
inline void GlobalCfgData::set_currintdate(::google::protobuf::int32 value) {
  set_has_currintdate();
  currintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.currintdate)
}

// optional int32 outsideorderflag = 17 [default = 0];
inline bool GlobalCfgData::has_outsideorderflag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GlobalCfgData::set_has_outsideorderflag() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GlobalCfgData::clear_has_outsideorderflag() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GlobalCfgData::clear_outsideorderflag() {
  outsideorderflag_ = 0;
  clear_has_outsideorderflag();
}
inline ::google::protobuf::int32 GlobalCfgData::outsideorderflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.outsideorderflag)
  return outsideorderflag_;
}
inline void GlobalCfgData::set_outsideorderflag(::google::protobuf::int32 value) {
  set_has_outsideorderflag();
  outsideorderflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.outsideorderflag)
}

// optional int32 outsidetradeflag = 18 [default = 0];
inline bool GlobalCfgData::has_outsidetradeflag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GlobalCfgData::set_has_outsidetradeflag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GlobalCfgData::clear_has_outsidetradeflag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GlobalCfgData::clear_outsidetradeflag() {
  outsidetradeflag_ = 0;
  clear_has_outsidetradeflag();
}
inline ::google::protobuf::int32 GlobalCfgData::outsidetradeflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.outsidetradeflag)
  return outsidetradeflag_;
}
inline void GlobalCfgData::set_outsidetradeflag(::google::protobuf::int32 value) {
  set_has_outsidetradeflag();
  outsidetradeflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.outsidetradeflag)
}

// optional int32 pubflag = 19 [default = 0];
inline bool GlobalCfgData::has_pubflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GlobalCfgData::set_has_pubflag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GlobalCfgData::clear_has_pubflag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GlobalCfgData::clear_pubflag() {
  pubflag_ = 0;
  clear_has_pubflag();
}
inline ::google::protobuf::int32 GlobalCfgData::pubflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.pubflag)
  return pubflag_;
}
inline void GlobalCfgData::set_pubflag(::google::protobuf::int32 value) {
  set_has_pubflag();
  pubflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.pubflag)
}

// optional int32 subflag = 20 [default = 0];
inline bool GlobalCfgData::has_subflag() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GlobalCfgData::set_has_subflag() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GlobalCfgData::clear_has_subflag() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GlobalCfgData::clear_subflag() {
  subflag_ = 0;
  clear_has_subflag();
}
inline ::google::protobuf::int32 GlobalCfgData::subflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.subflag)
  return subflag_;
}
inline void GlobalCfgData::set_subflag(::google::protobuf::int32 value) {
  set_has_subflag();
  subflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.subflag)
}

// optional int32 instrfilterflag = 21 [default = 0];
inline bool GlobalCfgData::has_instrfilterflag() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GlobalCfgData::set_has_instrfilterflag() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GlobalCfgData::clear_has_instrfilterflag() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GlobalCfgData::clear_instrfilterflag() {
  instrfilterflag_ = 0;
  clear_has_instrfilterflag();
}
inline ::google::protobuf::int32 GlobalCfgData::instrfilterflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.instrfilterflag)
  return instrfilterflag_;
}
inline void GlobalCfgData::set_instrfilterflag(::google::protobuf::int32 value) {
  set_has_instrfilterflag();
  instrfilterflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.instrfilterflag)
}

// optional string instrprefixes = 22 [default = ""];
inline bool GlobalCfgData::has_instrprefixes() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GlobalCfgData::set_has_instrprefixes() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GlobalCfgData::clear_has_instrprefixes() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GlobalCfgData::clear_instrprefixes() {
  instrprefixes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrprefixes();
}
inline const ::std::string& GlobalCfgData::instrprefixes() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.instrprefixes)
  return instrprefixes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_instrprefixes(const ::std::string& value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.instrprefixes)
}
inline void GlobalCfgData::set_instrprefixes(const char* value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.instrprefixes)
}
inline void GlobalCfgData::set_instrprefixes(const char* value, size_t size) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.instrprefixes)
}
inline ::std::string* GlobalCfgData::mutable_instrprefixes() {
  set_has_instrprefixes();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.instrprefixes)
  return instrprefixes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_instrprefixes() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.instrprefixes)
  clear_has_instrprefixes();
  return instrprefixes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_instrprefixes(::std::string* instrprefixes) {
  if (instrprefixes != NULL) {
    set_has_instrprefixes();
  } else {
    clear_has_instrprefixes();
  }
  instrprefixes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrprefixes);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.instrprefixes)
}

// optional string productids = 23 [default = ""];
inline bool GlobalCfgData::has_productids() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GlobalCfgData::set_has_productids() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GlobalCfgData::clear_has_productids() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GlobalCfgData::clear_productids() {
  productids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productids();
}
inline const ::std::string& GlobalCfgData::productids() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.productids)
  return productids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_productids(const ::std::string& value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.productids)
}
inline void GlobalCfgData::set_productids(const char* value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.productids)
}
inline void GlobalCfgData::set_productids(const char* value, size_t size) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.productids)
}
inline ::std::string* GlobalCfgData::mutable_productids() {
  set_has_productids();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.productids)
  return productids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_productids() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.productids)
  clear_has_productids();
  return productids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_productids(::std::string* productids) {
  if (productids != NULL) {
    set_has_productids();
  } else {
    clear_has_productids();
  }
  productids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productids);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.productids)
}

// optional string exchids = 24 [default = ""];
inline bool GlobalCfgData::has_exchids() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GlobalCfgData::set_has_exchids() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GlobalCfgData::clear_has_exchids() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GlobalCfgData::clear_exchids() {
  exchids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchids();
}
inline const ::std::string& GlobalCfgData::exchids() const {
  // @@protoc_insertion_point(field_get:XT.GlobalCfgData.exchids)
  return exchids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_exchids(const ::std::string& value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalCfgData.exchids)
}
inline void GlobalCfgData::set_exchids(const char* value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalCfgData.exchids)
}
inline void GlobalCfgData::set_exchids(const char* value, size_t size) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalCfgData.exchids)
}
inline ::std::string* GlobalCfgData::mutable_exchids() {
  set_has_exchids();
  // @@protoc_insertion_point(field_mutable:XT.GlobalCfgData.exchids)
  return exchids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalCfgData::release_exchids() {
  // @@protoc_insertion_point(field_release:XT.GlobalCfgData.exchids)
  clear_has_exchids();
  return exchids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalCfgData::set_allocated_exchids(::std::string* exchids) {
  if (exchids != NULL) {
    set_has_exchids();
  } else {
    clear_has_exchids();
  }
  exchids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchids);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalCfgData.exchids)
}

// map<string, string> namestrmap = 30;
inline int GlobalCfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void GlobalCfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GlobalCfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.GlobalCfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GlobalCfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.GlobalCfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// GlobalData

// optional int32 initflag = 1 [default = 0];
inline bool GlobalData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 GlobalData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.initflag)
  return initflag_;
}
inline void GlobalData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.initflag)
}

// optional int32 idleflag = 2 [default = 0];
inline bool GlobalData::has_idleflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalData::set_has_idleflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalData::clear_has_idleflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalData::clear_idleflag() {
  idleflag_ = 0;
  clear_has_idleflag();
}
inline ::google::protobuf::int32 GlobalData::idleflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.idleflag)
  return idleflag_;
}
inline void GlobalData::set_idleflag(::google::protobuf::int32 value) {
  set_has_idleflag();
  idleflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.idleflag)
}

// optional int32 tradingflag = 3 [default = 0];
inline bool GlobalData::has_tradingflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalData::set_has_tradingflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalData::clear_has_tradingflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalData::clear_tradingflag() {
  tradingflag_ = 0;
  clear_has_tradingflag();
}
inline ::google::protobuf::int32 GlobalData::tradingflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.tradingflag)
  return tradingflag_;
}
inline void GlobalData::set_tradingflag(::google::protobuf::int32 value) {
  set_has_tradingflag();
  tradingflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.tradingflag)
}

// optional int32 tradingflagprev = 4 [default = 0];
inline bool GlobalData::has_tradingflagprev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalData::set_has_tradingflagprev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalData::clear_has_tradingflagprev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalData::clear_tradingflagprev() {
  tradingflagprev_ = 0;
  clear_has_tradingflagprev();
}
inline ::google::protobuf::int32 GlobalData::tradingflagprev() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.tradingflagprev)
  return tradingflagprev_;
}
inline void GlobalData::set_tradingflagprev(::google::protobuf::int32 value) {
  set_has_tradingflagprev();
  tradingflagprev_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.tradingflagprev)
}

// optional int32 exitflag = 5 [default = 0];
inline bool GlobalData::has_exitflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GlobalData::set_has_exitflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GlobalData::clear_has_exitflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GlobalData::clear_exitflag() {
  exitflag_ = 0;
  clear_has_exitflag();
}
inline ::google::protobuf::int32 GlobalData::exitflag() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.exitflag)
  return exitflag_;
}
inline void GlobalData::set_exitflag(::google::protobuf::int32 value) {
  set_has_exitflag();
  exitflag_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.exitflag)
}

// optional int32 lasterrorid = 10 [default = 0];
inline bool GlobalData::has_lasterrorid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GlobalData::set_has_lasterrorid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GlobalData::clear_has_lasterrorid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GlobalData::clear_lasterrorid() {
  lasterrorid_ = 0;
  clear_has_lasterrorid();
}
inline ::google::protobuf::int32 GlobalData::lasterrorid() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lasterrorid)
  return lasterrorid_;
}
inline void GlobalData::set_lasterrorid(::google::protobuf::int32 value) {
  set_has_lasterrorid();
  lasterrorid_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.lasterrorid)
}

// optional string lasterrormsg = 11 [default = ""];
inline bool GlobalData::has_lasterrormsg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GlobalData::set_has_lasterrormsg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GlobalData::clear_has_lasterrormsg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GlobalData::clear_lasterrormsg() {
  lasterrormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lasterrormsg();
}
inline const ::std::string& GlobalData::lasterrormsg() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lasterrormsg)
  return lasterrormsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalData::set_lasterrormsg(const ::std::string& value) {
  set_has_lasterrormsg();
  lasterrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalData.lasterrormsg)
}
inline void GlobalData::set_lasterrormsg(const char* value) {
  set_has_lasterrormsg();
  lasterrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalData.lasterrormsg)
}
inline void GlobalData::set_lasterrormsg(const char* value, size_t size) {
  set_has_lasterrormsg();
  lasterrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalData.lasterrormsg)
}
inline ::std::string* GlobalData::mutable_lasterrormsg() {
  set_has_lasterrormsg();
  // @@protoc_insertion_point(field_mutable:XT.GlobalData.lasterrormsg)
  return lasterrormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalData::release_lasterrormsg() {
  // @@protoc_insertion_point(field_release:XT.GlobalData.lasterrormsg)
  clear_has_lasterrormsg();
  return lasterrormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalData::set_allocated_lasterrormsg(::std::string* lasterrormsg) {
  if (lasterrormsg != NULL) {
    set_has_lasterrormsg();
  } else {
    clear_has_lasterrormsg();
  }
  lasterrormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lasterrormsg);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalData.lasterrormsg)
}

// optional int64 lasterrorts = 12 [default = 0];
inline bool GlobalData::has_lasterrorts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GlobalData::set_has_lasterrorts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GlobalData::clear_has_lasterrorts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GlobalData::clear_lasterrorts() {
  lasterrorts_ = GOOGLE_LONGLONG(0);
  clear_has_lasterrorts();
}
inline ::google::protobuf::int64 GlobalData::lasterrorts() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lasterrorts)
  return lasterrorts_;
}
inline void GlobalData::set_lasterrorts(::google::protobuf::int64 value) {
  set_has_lasterrorts();
  lasterrorts_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.lasterrorts)
}

// optional int32 lastcriticalerrorid = 13 [default = 0];
inline bool GlobalData::has_lastcriticalerrorid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GlobalData::set_has_lastcriticalerrorid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GlobalData::clear_has_lastcriticalerrorid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GlobalData::clear_lastcriticalerrorid() {
  lastcriticalerrorid_ = 0;
  clear_has_lastcriticalerrorid();
}
inline ::google::protobuf::int32 GlobalData::lastcriticalerrorid() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lastcriticalerrorid)
  return lastcriticalerrorid_;
}
inline void GlobalData::set_lastcriticalerrorid(::google::protobuf::int32 value) {
  set_has_lastcriticalerrorid();
  lastcriticalerrorid_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.lastcriticalerrorid)
}

// optional string lastcriticalerrormsg = 14 [default = ""];
inline bool GlobalData::has_lastcriticalerrormsg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GlobalData::set_has_lastcriticalerrormsg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GlobalData::clear_has_lastcriticalerrormsg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GlobalData::clear_lastcriticalerrormsg() {
  lastcriticalerrormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lastcriticalerrormsg();
}
inline const ::std::string& GlobalData::lastcriticalerrormsg() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lastcriticalerrormsg)
  return lastcriticalerrormsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalData::set_lastcriticalerrormsg(const ::std::string& value) {
  set_has_lastcriticalerrormsg();
  lastcriticalerrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.GlobalData.lastcriticalerrormsg)
}
inline void GlobalData::set_lastcriticalerrormsg(const char* value) {
  set_has_lastcriticalerrormsg();
  lastcriticalerrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.GlobalData.lastcriticalerrormsg)
}
inline void GlobalData::set_lastcriticalerrormsg(const char* value, size_t size) {
  set_has_lastcriticalerrormsg();
  lastcriticalerrormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.GlobalData.lastcriticalerrormsg)
}
inline ::std::string* GlobalData::mutable_lastcriticalerrormsg() {
  set_has_lastcriticalerrormsg();
  // @@protoc_insertion_point(field_mutable:XT.GlobalData.lastcriticalerrormsg)
  return lastcriticalerrormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalData::release_lastcriticalerrormsg() {
  // @@protoc_insertion_point(field_release:XT.GlobalData.lastcriticalerrormsg)
  clear_has_lastcriticalerrormsg();
  return lastcriticalerrormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalData::set_allocated_lastcriticalerrormsg(::std::string* lastcriticalerrormsg) {
  if (lastcriticalerrormsg != NULL) {
    set_has_lastcriticalerrormsg();
  } else {
    clear_has_lastcriticalerrormsg();
  }
  lastcriticalerrormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastcriticalerrormsg);
  // @@protoc_insertion_point(field_set_allocated:XT.GlobalData.lastcriticalerrormsg)
}

// optional int64 lastcriticalerrorts = 15 [default = 0];
inline bool GlobalData::has_lastcriticalerrorts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GlobalData::set_has_lastcriticalerrorts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GlobalData::clear_has_lastcriticalerrorts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GlobalData::clear_lastcriticalerrorts() {
  lastcriticalerrorts_ = GOOGLE_LONGLONG(0);
  clear_has_lastcriticalerrorts();
}
inline ::google::protobuf::int64 GlobalData::lastcriticalerrorts() const {
  // @@protoc_insertion_point(field_get:XT.GlobalData.lastcriticalerrorts)
  return lastcriticalerrorts_;
}
inline void GlobalData::set_lastcriticalerrorts(::google::protobuf::int64 value) {
  set_has_lastcriticalerrorts();
  lastcriticalerrorts_ = value;
  // @@protoc_insertion_point(field_set:XT.GlobalData.lastcriticalerrorts)
}

// -------------------------------------------------------------------

// MongoDBCfgData

// optional string host = 1 [default = ""];
inline bool MongoDBCfgData::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MongoDBCfgData::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MongoDBCfgData::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MongoDBCfgData::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& MongoDBCfgData::host() const {
  // @@protoc_insertion_point(field_get:XT.MongoDBCfgData.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MongoDBCfgData.host)
}
inline void MongoDBCfgData::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MongoDBCfgData.host)
}
inline void MongoDBCfgData::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MongoDBCfgData.host)
}
inline ::std::string* MongoDBCfgData::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:XT.MongoDBCfgData.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MongoDBCfgData::release_host() {
  // @@protoc_insertion_point(field_release:XT.MongoDBCfgData.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:XT.MongoDBCfgData.host)
}

// optional int32 port = 2 [default = 0];
inline bool MongoDBCfgData::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MongoDBCfgData::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MongoDBCfgData::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MongoDBCfgData::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 MongoDBCfgData::port() const {
  // @@protoc_insertion_point(field_get:XT.MongoDBCfgData.port)
  return port_;
}
inline void MongoDBCfgData::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:XT.MongoDBCfgData.port)
}

// optional string username = 3 [default = ""];
inline bool MongoDBCfgData::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MongoDBCfgData::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MongoDBCfgData::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MongoDBCfgData::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& MongoDBCfgData::username() const {
  // @@protoc_insertion_point(field_get:XT.MongoDBCfgData.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MongoDBCfgData.username)
}
inline void MongoDBCfgData::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MongoDBCfgData.username)
}
inline void MongoDBCfgData::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MongoDBCfgData.username)
}
inline ::std::string* MongoDBCfgData::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:XT.MongoDBCfgData.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MongoDBCfgData::release_username() {
  // @@protoc_insertion_point(field_release:XT.MongoDBCfgData.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:XT.MongoDBCfgData.username)
}

// optional string passwd = 4 [default = ""];
inline bool MongoDBCfgData::has_passwd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MongoDBCfgData::set_has_passwd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MongoDBCfgData::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MongoDBCfgData::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
inline const ::std::string& MongoDBCfgData::passwd() const {
  // @@protoc_insertion_point(field_get:XT.MongoDBCfgData.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MongoDBCfgData.passwd)
}
inline void MongoDBCfgData::set_passwd(const char* value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MongoDBCfgData.passwd)
}
inline void MongoDBCfgData::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MongoDBCfgData.passwd)
}
inline ::std::string* MongoDBCfgData::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:XT.MongoDBCfgData.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MongoDBCfgData::release_passwd() {
  // @@protoc_insertion_point(field_release:XT.MongoDBCfgData.passwd)
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MongoDBCfgData::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:XT.MongoDBCfgData.passwd)
}

// -------------------------------------------------------------------

// SQLiteCfgData

// optional string maindbfile = 1 [default = ""];
inline bool SQLiteCfgData::has_maindbfile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SQLiteCfgData::set_has_maindbfile() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SQLiteCfgData::clear_has_maindbfile() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SQLiteCfgData::clear_maindbfile() {
  maindbfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maindbfile();
}
inline const ::std::string& SQLiteCfgData::maindbfile() const {
  // @@protoc_insertion_point(field_get:XT.SQLiteCfgData.maindbfile)
  return maindbfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLiteCfgData::set_maindbfile(const ::std::string& value) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SQLiteCfgData.maindbfile)
}
inline void SQLiteCfgData::set_maindbfile(const char* value) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SQLiteCfgData.maindbfile)
}
inline void SQLiteCfgData::set_maindbfile(const char* value, size_t size) {
  set_has_maindbfile();
  maindbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SQLiteCfgData.maindbfile)
}
inline ::std::string* SQLiteCfgData::mutable_maindbfile() {
  set_has_maindbfile();
  // @@protoc_insertion_point(field_mutable:XT.SQLiteCfgData.maindbfile)
  return maindbfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLiteCfgData::release_maindbfile() {
  // @@protoc_insertion_point(field_release:XT.SQLiteCfgData.maindbfile)
  clear_has_maindbfile();
  return maindbfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLiteCfgData::set_allocated_maindbfile(::std::string* maindbfile) {
  if (maindbfile != NULL) {
    set_has_maindbfile();
  } else {
    clear_has_maindbfile();
  }
  maindbfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maindbfile);
  // @@protoc_insertion_point(field_set_allocated:XT.SQLiteCfgData.maindbfile)
}

// optional string trddbfile = 2 [default = ""];
inline bool SQLiteCfgData::has_trddbfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SQLiteCfgData::set_has_trddbfile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SQLiteCfgData::clear_has_trddbfile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SQLiteCfgData::clear_trddbfile() {
  trddbfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trddbfile();
}
inline const ::std::string& SQLiteCfgData::trddbfile() const {
  // @@protoc_insertion_point(field_get:XT.SQLiteCfgData.trddbfile)
  return trddbfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLiteCfgData::set_trddbfile(const ::std::string& value) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SQLiteCfgData.trddbfile)
}
inline void SQLiteCfgData::set_trddbfile(const char* value) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SQLiteCfgData.trddbfile)
}
inline void SQLiteCfgData::set_trddbfile(const char* value, size_t size) {
  set_has_trddbfile();
  trddbfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SQLiteCfgData.trddbfile)
}
inline ::std::string* SQLiteCfgData::mutable_trddbfile() {
  set_has_trddbfile();
  // @@protoc_insertion_point(field_mutable:XT.SQLiteCfgData.trddbfile)
  return trddbfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLiteCfgData::release_trddbfile() {
  // @@protoc_insertion_point(field_release:XT.SQLiteCfgData.trddbfile)
  clear_has_trddbfile();
  return trddbfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLiteCfgData::set_allocated_trddbfile(::std::string* trddbfile) {
  if (trddbfile != NULL) {
    set_has_trddbfile();
  } else {
    clear_has_trddbfile();
  }
  trddbfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trddbfile);
  // @@protoc_insertion_point(field_set_allocated:XT.SQLiteCfgData.trddbfile)
}

// -------------------------------------------------------------------

// ZMQCfgData

// optional string pubaddresses = 1 [default = ""];
inline bool ZMQCfgData::has_pubaddresses() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZMQCfgData::set_has_pubaddresses() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZMQCfgData::clear_has_pubaddresses() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZMQCfgData::clear_pubaddresses() {
  pubaddresses_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubaddresses();
}
inline const ::std::string& ZMQCfgData::pubaddresses() const {
  // @@protoc_insertion_point(field_get:XT.ZMQCfgData.pubaddresses)
  return pubaddresses_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZMQCfgData::set_pubaddresses(const ::std::string& value) {
  set_has_pubaddresses();
  pubaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ZMQCfgData.pubaddresses)
}
inline void ZMQCfgData::set_pubaddresses(const char* value) {
  set_has_pubaddresses();
  pubaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ZMQCfgData.pubaddresses)
}
inline void ZMQCfgData::set_pubaddresses(const char* value, size_t size) {
  set_has_pubaddresses();
  pubaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ZMQCfgData.pubaddresses)
}
inline ::std::string* ZMQCfgData::mutable_pubaddresses() {
  set_has_pubaddresses();
  // @@protoc_insertion_point(field_mutable:XT.ZMQCfgData.pubaddresses)
  return pubaddresses_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZMQCfgData::release_pubaddresses() {
  // @@protoc_insertion_point(field_release:XT.ZMQCfgData.pubaddresses)
  clear_has_pubaddresses();
  return pubaddresses_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZMQCfgData::set_allocated_pubaddresses(::std::string* pubaddresses) {
  if (pubaddresses != NULL) {
    set_has_pubaddresses();
  } else {
    clear_has_pubaddresses();
  }
  pubaddresses_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubaddresses);
  // @@protoc_insertion_point(field_set_allocated:XT.ZMQCfgData.pubaddresses)
}

// optional string subaddresses = 2 [default = ""];
inline bool ZMQCfgData::has_subaddresses() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZMQCfgData::set_has_subaddresses() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZMQCfgData::clear_has_subaddresses() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZMQCfgData::clear_subaddresses() {
  subaddresses_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subaddresses();
}
inline const ::std::string& ZMQCfgData::subaddresses() const {
  // @@protoc_insertion_point(field_get:XT.ZMQCfgData.subaddresses)
  return subaddresses_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZMQCfgData::set_subaddresses(const ::std::string& value) {
  set_has_subaddresses();
  subaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ZMQCfgData.subaddresses)
}
inline void ZMQCfgData::set_subaddresses(const char* value) {
  set_has_subaddresses();
  subaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ZMQCfgData.subaddresses)
}
inline void ZMQCfgData::set_subaddresses(const char* value, size_t size) {
  set_has_subaddresses();
  subaddresses_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ZMQCfgData.subaddresses)
}
inline ::std::string* ZMQCfgData::mutable_subaddresses() {
  set_has_subaddresses();
  // @@protoc_insertion_point(field_mutable:XT.ZMQCfgData.subaddresses)
  return subaddresses_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZMQCfgData::release_subaddresses() {
  // @@protoc_insertion_point(field_release:XT.ZMQCfgData.subaddresses)
  clear_has_subaddresses();
  return subaddresses_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZMQCfgData::set_allocated_subaddresses(::std::string* subaddresses) {
  if (subaddresses != NULL) {
    set_has_subaddresses();
  } else {
    clear_has_subaddresses();
  }
  subaddresses_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subaddresses);
  // @@protoc_insertion_point(field_set_allocated:XT.ZMQCfgData.subaddresses)
}

// -------------------------------------------------------------------

// ZMQData

// optional int32 initflag = 1 [default = 0];
inline bool ZMQData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZMQData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZMQData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZMQData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 ZMQData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.ZMQData.initflag)
  return initflag_;
}
inline void ZMQData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.ZMQData.initflag)
}

// -------------------------------------------------------------------

// StratCfgData

// optional string name = 1 [default = "strategy"];
inline bool StratCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StratCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StratCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StratCfgData::clear_name() {
  name_.ClearToDefaultNoArena(_default_name_);
  clear_has_name();
}
inline const ::std::string& StratCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.name)
  return name_.GetNoArena(_default_name_);
}
inline void StratCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(_default_name_, value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.name)
}
inline void StratCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(_default_name_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.name)
}
inline void StratCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(_default_name_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.name)
}
inline ::std::string* StratCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.name)
  return name_.MutableNoArena(_default_name_);
}
inline ::std::string* StratCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(_default_name_);
}
inline void StratCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(_default_name_, name);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.name)
}

// optional int32 issim = 2 [default = 0];
inline bool StratCfgData::has_issim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StratCfgData::set_has_issim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StratCfgData::clear_has_issim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StratCfgData::clear_issim() {
  issim_ = 0;
  clear_has_issim();
}
inline ::google::protobuf::int32 StratCfgData::issim() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.issim)
  return issim_;
}
inline void StratCfgData::set_issim(::google::protobuf::int32 value) {
  set_has_issim();
  issim_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.issim)
}

// optional int32 isnone = 3 [default = 0];
inline bool StratCfgData::has_isnone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StratCfgData::set_has_isnone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StratCfgData::clear_has_isnone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StratCfgData::clear_isnone() {
  isnone_ = 0;
  clear_has_isnone();
}
inline ::google::protobuf::int32 StratCfgData::isnone() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.isnone)
  return isnone_;
}
inline void StratCfgData::set_isnone(::google::protobuf::int32 value) {
  set_has_isnone();
  isnone_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.isnone)
}

// optional int32 prevtradingday = 4 [default = 0];
inline bool StratCfgData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StratCfgData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StratCfgData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StratCfgData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 StratCfgData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.prevtradingday)
  return prevtradingday_;
}
inline void StratCfgData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.prevtradingday)
}

// optional int32 tradingday = 5 [default = 0];
inline bool StratCfgData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StratCfgData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StratCfgData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StratCfgData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 StratCfgData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.tradingday)
  return tradingday_;
}
inline void StratCfgData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.tradingday)
}

// optional int32 currintdate = 6 [default = 0];
inline bool StratCfgData::has_currintdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StratCfgData::set_has_currintdate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StratCfgData::clear_has_currintdate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StratCfgData::clear_currintdate() {
  currintdate_ = 0;
  clear_has_currintdate();
}
inline ::google::protobuf::int32 StratCfgData::currintdate() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.currintdate)
  return currintdate_;
}
inline void StratCfgData::set_currintdate(::google::protobuf::int32 value) {
  set_has_currintdate();
  currintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.currintdate)
}

// optional string mdapi = 8 [default = ""];
inline bool StratCfgData::has_mdapi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StratCfgData::set_has_mdapi() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StratCfgData::clear_has_mdapi() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StratCfgData::clear_mdapi() {
  mdapi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mdapi();
}
inline const ::std::string& StratCfgData::mdapi() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.mdapi)
  return mdapi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_mdapi(const ::std::string& value) {
  set_has_mdapi();
  mdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.mdapi)
}
inline void StratCfgData::set_mdapi(const char* value) {
  set_has_mdapi();
  mdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.mdapi)
}
inline void StratCfgData::set_mdapi(const char* value, size_t size) {
  set_has_mdapi();
  mdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.mdapi)
}
inline ::std::string* StratCfgData::mutable_mdapi() {
  set_has_mdapi();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.mdapi)
  return mdapi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_mdapi() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.mdapi)
  clear_has_mdapi();
  return mdapi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_mdapi(::std::string* mdapi) {
  if (mdapi != NULL) {
    set_has_mdapi();
  } else {
    clear_has_mdapi();
  }
  mdapi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mdapi);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.mdapi)
}

// optional string trdapi = 9 [default = ""];
inline bool StratCfgData::has_trdapi() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StratCfgData::set_has_trdapi() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StratCfgData::clear_has_trdapi() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StratCfgData::clear_trdapi() {
  trdapi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trdapi();
}
inline const ::std::string& StratCfgData::trdapi() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.trdapi)
  return trdapi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_trdapi(const ::std::string& value) {
  set_has_trdapi();
  trdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.trdapi)
}
inline void StratCfgData::set_trdapi(const char* value) {
  set_has_trdapi();
  trdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.trdapi)
}
inline void StratCfgData::set_trdapi(const char* value, size_t size) {
  set_has_trdapi();
  trdapi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.trdapi)
}
inline ::std::string* StratCfgData::mutable_trdapi() {
  set_has_trdapi();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.trdapi)
  return trdapi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_trdapi() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.trdapi)
  clear_has_trdapi();
  return trdapi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_trdapi(::std::string* trdapi) {
  if (trdapi != NULL) {
    set_has_trdapi();
  } else {
    clear_has_trdapi();
  }
  trdapi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trdapi);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.trdapi)
}

// optional string pubcfg = 10 [default = ""];
inline bool StratCfgData::has_pubcfg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StratCfgData::set_has_pubcfg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StratCfgData::clear_has_pubcfg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StratCfgData::clear_pubcfg() {
  pubcfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubcfg();
}
inline const ::std::string& StratCfgData::pubcfg() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.pubcfg)
  return pubcfg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_pubcfg(const ::std::string& value) {
  set_has_pubcfg();
  pubcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.pubcfg)
}
inline void StratCfgData::set_pubcfg(const char* value) {
  set_has_pubcfg();
  pubcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.pubcfg)
}
inline void StratCfgData::set_pubcfg(const char* value, size_t size) {
  set_has_pubcfg();
  pubcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.pubcfg)
}
inline ::std::string* StratCfgData::mutable_pubcfg() {
  set_has_pubcfg();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.pubcfg)
  return pubcfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_pubcfg() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.pubcfg)
  clear_has_pubcfg();
  return pubcfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_pubcfg(::std::string* pubcfg) {
  if (pubcfg != NULL) {
    set_has_pubcfg();
  } else {
    clear_has_pubcfg();
  }
  pubcfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubcfg);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.pubcfg)
}

// optional string subcfg = 11 [default = ""];
inline bool StratCfgData::has_subcfg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StratCfgData::set_has_subcfg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void StratCfgData::clear_has_subcfg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void StratCfgData::clear_subcfg() {
  subcfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcfg();
}
inline const ::std::string& StratCfgData::subcfg() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.subcfg)
  return subcfg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_subcfg(const ::std::string& value) {
  set_has_subcfg();
  subcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.subcfg)
}
inline void StratCfgData::set_subcfg(const char* value) {
  set_has_subcfg();
  subcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.subcfg)
}
inline void StratCfgData::set_subcfg(const char* value, size_t size) {
  set_has_subcfg();
  subcfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.subcfg)
}
inline ::std::string* StratCfgData::mutable_subcfg() {
  set_has_subcfg();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.subcfg)
  return subcfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_subcfg() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.subcfg)
  clear_has_subcfg();
  return subcfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_subcfg(::std::string* subcfg) {
  if (subcfg != NULL) {
    set_has_subcfg();
  } else {
    clear_has_subcfg();
  }
  subcfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcfg);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.subcfg)
}

// optional int32 outsideorderflag = 12 [default = 0];
inline bool StratCfgData::has_outsideorderflag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StratCfgData::set_has_outsideorderflag() {
  _has_bits_[0] |= 0x00000400u;
}
inline void StratCfgData::clear_has_outsideorderflag() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void StratCfgData::clear_outsideorderflag() {
  outsideorderflag_ = 0;
  clear_has_outsideorderflag();
}
inline ::google::protobuf::int32 StratCfgData::outsideorderflag() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.outsideorderflag)
  return outsideorderflag_;
}
inline void StratCfgData::set_outsideorderflag(::google::protobuf::int32 value) {
  set_has_outsideorderflag();
  outsideorderflag_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.outsideorderflag)
}

// optional int32 outsidetradeflag = 13 [default = 0];
inline bool StratCfgData::has_outsidetradeflag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void StratCfgData::set_has_outsidetradeflag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void StratCfgData::clear_has_outsidetradeflag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void StratCfgData::clear_outsidetradeflag() {
  outsidetradeflag_ = 0;
  clear_has_outsidetradeflag();
}
inline ::google::protobuf::int32 StratCfgData::outsidetradeflag() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.outsidetradeflag)
  return outsidetradeflag_;
}
inline void StratCfgData::set_outsidetradeflag(::google::protobuf::int32 value) {
  set_has_outsidetradeflag();
  outsidetradeflag_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.outsidetradeflag)
}

// optional int32 instrfilterflag = 17 [default = 0];
inline bool StratCfgData::has_instrfilterflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void StratCfgData::set_has_instrfilterflag() {
  _has_bits_[0] |= 0x00001000u;
}
inline void StratCfgData::clear_has_instrfilterflag() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void StratCfgData::clear_instrfilterflag() {
  instrfilterflag_ = 0;
  clear_has_instrfilterflag();
}
inline ::google::protobuf::int32 StratCfgData::instrfilterflag() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.instrfilterflag)
  return instrfilterflag_;
}
inline void StratCfgData::set_instrfilterflag(::google::protobuf::int32 value) {
  set_has_instrfilterflag();
  instrfilterflag_ = value;
  // @@protoc_insertion_point(field_set:XT.StratCfgData.instrfilterflag)
}

// optional string instrprefixes = 18 [default = ""];
inline bool StratCfgData::has_instrprefixes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void StratCfgData::set_has_instrprefixes() {
  _has_bits_[0] |= 0x00002000u;
}
inline void StratCfgData::clear_has_instrprefixes() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void StratCfgData::clear_instrprefixes() {
  instrprefixes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrprefixes();
}
inline const ::std::string& StratCfgData::instrprefixes() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.instrprefixes)
  return instrprefixes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_instrprefixes(const ::std::string& value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.instrprefixes)
}
inline void StratCfgData::set_instrprefixes(const char* value) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.instrprefixes)
}
inline void StratCfgData::set_instrprefixes(const char* value, size_t size) {
  set_has_instrprefixes();
  instrprefixes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.instrprefixes)
}
inline ::std::string* StratCfgData::mutable_instrprefixes() {
  set_has_instrprefixes();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.instrprefixes)
  return instrprefixes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_instrprefixes() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.instrprefixes)
  clear_has_instrprefixes();
  return instrprefixes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_instrprefixes(::std::string* instrprefixes) {
  if (instrprefixes != NULL) {
    set_has_instrprefixes();
  } else {
    clear_has_instrprefixes();
  }
  instrprefixes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrprefixes);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.instrprefixes)
}

// optional string productids = 19 [default = ""];
inline bool StratCfgData::has_productids() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void StratCfgData::set_has_productids() {
  _has_bits_[0] |= 0x00004000u;
}
inline void StratCfgData::clear_has_productids() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void StratCfgData::clear_productids() {
  productids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productids();
}
inline const ::std::string& StratCfgData::productids() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.productids)
  return productids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_productids(const ::std::string& value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.productids)
}
inline void StratCfgData::set_productids(const char* value) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.productids)
}
inline void StratCfgData::set_productids(const char* value, size_t size) {
  set_has_productids();
  productids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.productids)
}
inline ::std::string* StratCfgData::mutable_productids() {
  set_has_productids();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.productids)
  return productids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_productids() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.productids)
  clear_has_productids();
  return productids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_productids(::std::string* productids) {
  if (productids != NULL) {
    set_has_productids();
  } else {
    clear_has_productids();
  }
  productids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productids);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.productids)
}

// optional string exchids = 20 [default = ""];
inline bool StratCfgData::has_exchids() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void StratCfgData::set_has_exchids() {
  _has_bits_[0] |= 0x00008000u;
}
inline void StratCfgData::clear_has_exchids() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void StratCfgData::clear_exchids() {
  exchids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchids();
}
inline const ::std::string& StratCfgData::exchids() const {
  // @@protoc_insertion_point(field_get:XT.StratCfgData.exchids)
  return exchids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_exchids(const ::std::string& value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.StratCfgData.exchids)
}
inline void StratCfgData::set_exchids(const char* value) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.StratCfgData.exchids)
}
inline void StratCfgData::set_exchids(const char* value, size_t size) {
  set_has_exchids();
  exchids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.StratCfgData.exchids)
}
inline ::std::string* StratCfgData::mutable_exchids() {
  set_has_exchids();
  // @@protoc_insertion_point(field_mutable:XT.StratCfgData.exchids)
  return exchids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StratCfgData::release_exchids() {
  // @@protoc_insertion_point(field_release:XT.StratCfgData.exchids)
  clear_has_exchids();
  return exchids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StratCfgData::set_allocated_exchids(::std::string* exchids) {
  if (exchids != NULL) {
    set_has_exchids();
  } else {
    clear_has_exchids();
  }
  exchids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchids);
  // @@protoc_insertion_point(field_set_allocated:XT.StratCfgData.exchids)
}

// map<string, string> namestrmap = 30;
inline int StratCfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void StratCfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StratCfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.StratCfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StratCfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.StratCfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// StratData

// optional int32 initflag = 1 [default = 0];
inline bool StratData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StratData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StratData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StratData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 StratData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.StratData.initflag)
  return initflag_;
}
inline void StratData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.StratData.initflag)
}

// optional int32 mdflag = 2 [default = 0];
inline bool StratData::has_mdflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StratData::set_has_mdflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StratData::clear_has_mdflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StratData::clear_mdflag() {
  mdflag_ = 0;
  clear_has_mdflag();
}
inline ::google::protobuf::int32 StratData::mdflag() const {
  // @@protoc_insertion_point(field_get:XT.StratData.mdflag)
  return mdflag_;
}
inline void StratData::set_mdflag(::google::protobuf::int32 value) {
  set_has_mdflag();
  mdflag_ = value;
  // @@protoc_insertion_point(field_set:XT.StratData.mdflag)
}

// optional int32 trdstatus = 3 [default = 0];
inline bool StratData::has_trdstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StratData::set_has_trdstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StratData::clear_has_trdstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StratData::clear_trdstatus() {
  trdstatus_ = 0;
  clear_has_trdstatus();
}
inline ::google::protobuf::int32 StratData::trdstatus() const {
  // @@protoc_insertion_point(field_get:XT.StratData.trdstatus)
  return trdstatus_;
}
inline void StratData::set_trdstatus(::google::protobuf::int32 value) {
  set_has_trdstatus();
  trdstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.StratData.trdstatus)
}

// optional int32 lastmktinttime = 4 [default = 0];
inline bool StratData::has_lastmktinttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StratData::set_has_lastmktinttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StratData::clear_has_lastmktinttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StratData::clear_lastmktinttime() {
  lastmktinttime_ = 0;
  clear_has_lastmktinttime();
}
inline ::google::protobuf::int32 StratData::lastmktinttime() const {
  // @@protoc_insertion_point(field_get:XT.StratData.lastmktinttime)
  return lastmktinttime_;
}
inline void StratData::set_lastmktinttime(::google::protobuf::int32 value) {
  set_has_lastmktinttime();
  lastmktinttime_ = value;
  // @@protoc_insertion_point(field_set:XT.StratData.lastmktinttime)
}

// optional int64 lastmktts = 5 [default = 0];
inline bool StratData::has_lastmktts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StratData::set_has_lastmktts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StratData::clear_has_lastmktts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StratData::clear_lastmktts() {
  lastmktts_ = GOOGLE_LONGLONG(0);
  clear_has_lastmktts();
}
inline ::google::protobuf::int64 StratData::lastmktts() const {
  // @@protoc_insertion_point(field_get:XT.StratData.lastmktts)
  return lastmktts_;
}
inline void StratData::set_lastmktts(::google::protobuf::int64 value) {
  set_has_lastmktts();
  lastmktts_ = value;
  // @@protoc_insertion_point(field_set:XT.StratData.lastmktts)
}

// -------------------------------------------------------------------

// InstrCfgData

// optional int32 mdapi = 1 [default = 0];
inline bool InstrCfgData::has_mdapi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstrCfgData::set_has_mdapi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstrCfgData::clear_has_mdapi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstrCfgData::clear_mdapi() {
  mdapi_ = 0;
  clear_has_mdapi();
}
inline ::google::protobuf::int32 InstrCfgData::mdapi() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.mdapi)
  return mdapi_;
}
inline void InstrCfgData::set_mdapi(::google::protobuf::int32 value) {
  set_has_mdapi();
  mdapi_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.mdapi)
}

// optional int32 trdapi = 2 [default = 0];
inline bool InstrCfgData::has_trdapi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstrCfgData::set_has_trdapi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstrCfgData::clear_has_trdapi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstrCfgData::clear_trdapi() {
  trdapi_ = 0;
  clear_has_trdapi();
}
inline ::google::protobuf::int32 InstrCfgData::trdapi() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.trdapi)
  return trdapi_;
}
inline void InstrCfgData::set_trdapi(::google::protobuf::int32 value) {
  set_has_trdapi();
  trdapi_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.trdapi)
}

// optional int32 booklevels = 3 [default = 5];
inline bool InstrCfgData::has_booklevels() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstrCfgData::set_has_booklevels() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstrCfgData::clear_has_booklevels() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstrCfgData::clear_booklevels() {
  booklevels_ = 5;
  clear_has_booklevels();
}
inline ::google::protobuf::int32 InstrCfgData::booklevels() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.booklevels)
  return booklevels_;
}
inline void InstrCfgData::set_booklevels(::google::protobuf::int32 value) {
  set_has_booklevels();
  booklevels_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.booklevels)
}

// optional int32 mktrollingwindow = 4 [default = 30];
inline bool InstrCfgData::has_mktrollingwindow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstrCfgData::set_has_mktrollingwindow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstrCfgData::clear_has_mktrollingwindow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstrCfgData::clear_mktrollingwindow() {
  mktrollingwindow_ = 30;
  clear_has_mktrollingwindow();
}
inline ::google::protobuf::int32 InstrCfgData::mktrollingwindow() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.mktrollingwindow)
  return mktrollingwindow_;
}
inline void InstrCfgData::set_mktrollingwindow(::google::protobuf::int32 value) {
  set_has_mktrollingwindow();
  mktrollingwindow_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.mktrollingwindow)
}

// optional int64 maxsz = 10 [default = 0];
inline bool InstrCfgData::has_maxsz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstrCfgData::set_has_maxsz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstrCfgData::clear_has_maxsz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstrCfgData::clear_maxsz() {
  maxsz_ = GOOGLE_LONGLONG(0);
  clear_has_maxsz();
}
inline ::google::protobuf::int64 InstrCfgData::maxsz() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.maxsz)
  return maxsz_;
}
inline void InstrCfgData::set_maxsz(::google::protobuf::int64 value) {
  set_has_maxsz();
  maxsz_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.maxsz)
}

// optional int64 maxpos = 11 [default = 0];
inline bool InstrCfgData::has_maxpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InstrCfgData::set_has_maxpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InstrCfgData::clear_has_maxpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InstrCfgData::clear_maxpos() {
  maxpos_ = GOOGLE_LONGLONG(0);
  clear_has_maxpos();
}
inline ::google::protobuf::int64 InstrCfgData::maxpos() const {
  // @@protoc_insertion_point(field_get:XT.InstrCfgData.maxpos)
  return maxpos_;
}
inline void InstrCfgData::set_maxpos(::google::protobuf::int64 value) {
  set_has_maxpos();
  maxpos_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrCfgData.maxpos)
}

// map<string, string> namestrmap = 30;
inline int InstrCfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void InstrCfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InstrCfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.InstrCfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InstrCfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.InstrCfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// InstrData

// map<int32, double> tagdoublemap = 1;
inline int InstrData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void InstrData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
InstrData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.InstrData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
InstrData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.InstrData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<int32, int32> tagintmap = 2;
inline int InstrData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void InstrData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
InstrData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.InstrData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
InstrData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.InstrData.tagintmap)
  return tagintmap_.MutableMap();
}

// map<string, string> namestrmap = 3;
inline int InstrData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void InstrData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InstrData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.InstrData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InstrData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.InstrData.namestrmap)
  return namestrmap_.MutableMap();
}

// optional int32 initflag = 8 [default = 0];
inline bool InstrData::has_initflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstrData::set_has_initflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstrData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstrData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 InstrData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.InstrData.initflag)
  return initflag_;
}
inline void InstrData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrData.initflag)
}

// optional double T = 10 [default = 0];
inline bool InstrData::has_t() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstrData::set_has_t() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstrData::clear_has_t() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstrData::clear_t() {
  t_ = 0;
  clear_has_t();
}
inline double InstrData::t() const {
  // @@protoc_insertion_point(field_get:XT.InstrData.T)
  return t_;
}
inline void InstrData::set_t(double value) {
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrData.T)
}

// optional double dte = 11 [default = 0];
inline bool InstrData::has_dte() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InstrData::set_has_dte() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InstrData::clear_has_dte() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InstrData::clear_dte() {
  dte_ = 0;
  clear_has_dte();
}
inline double InstrData::dte() const {
  // @@protoc_insertion_point(field_get:XT.InstrData.dte)
  return dte_;
}
inline void InstrData::set_dte(double value) {
  set_has_dte();
  dte_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrData.dte)
}

// optional double tte = 12 [default = 0];
inline bool InstrData::has_tte() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InstrData::set_has_tte() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InstrData::clear_has_tte() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InstrData::clear_tte() {
  tte_ = 0;
  clear_has_tte();
}
inline double InstrData::tte() const {
  // @@protoc_insertion_point(field_get:XT.InstrData.tte)
  return tte_;
}
inline void InstrData::set_tte(double value) {
  set_has_tte();
  tte_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrData.tte)
}

// -------------------------------------------------------------------

// FCCfgData

// optional string name = 1 [default = ""];
inline bool FCCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCCfgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FCCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.name)
}
inline void FCCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.name)
}
inline void FCCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.name)
}
inline ::std::string* FCCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.name)
}

// optional string exchid = 2 [default = ""];
inline bool FCCfgData::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCCfgData::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCCfgData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCCfgData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& FCCfgData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.exchid)
}
inline void FCCfgData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.exchid)
}
inline void FCCfgData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.exchid)
}
inline ::std::string* FCCfgData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.exchid)
}

// optional string productid = 3 [default = ""];
inline bool FCCfgData::has_productid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCCfgData::set_has_productid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCCfgData::clear_has_productid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCCfgData::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& FCCfgData::productid() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.productid)
}
inline void FCCfgData::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.productid)
}
inline void FCCfgData::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.productid)
}
inline ::std::string* FCCfgData::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_productid() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.productid)
}

// optional string undlyproduct = 4 [default = ""];
inline bool FCCfgData::has_undlyproduct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FCCfgData::set_has_undlyproduct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FCCfgData::clear_has_undlyproduct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FCCfgData::clear_undlyproduct() {
  undlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyproduct();
}
inline const ::std::string& FCCfgData::undlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlyproduct)
  return undlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_undlyproduct(const ::std::string& value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlyproduct)
}
inline void FCCfgData::set_undlyproduct(const char* value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.undlyproduct)
}
inline void FCCfgData::set_undlyproduct(const char* value, size_t size) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.undlyproduct)
}
inline ::std::string* FCCfgData::mutable_undlyproduct() {
  set_has_undlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.undlyproduct)
  return undlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_undlyproduct() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.undlyproduct)
  clear_has_undlyproduct();
  return undlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_undlyproduct(::std::string* undlyproduct) {
  if (undlyproduct != NULL) {
    set_has_undlyproduct();
  } else {
    clear_has_undlyproduct();
  }
  undlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.undlyproduct)
}

// optional string hedgingproduct = 5 [default = ""];
inline bool FCCfgData::has_hedgingproduct() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FCCfgData::set_has_hedgingproduct() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FCCfgData::clear_has_hedgingproduct() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FCCfgData::clear_hedgingproduct() {
  hedgingproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedgingproduct();
}
inline const ::std::string& FCCfgData::hedgingproduct() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.hedgingproduct)
  return hedgingproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_hedgingproduct(const ::std::string& value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.hedgingproduct)
}
inline void FCCfgData::set_hedgingproduct(const char* value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.hedgingproduct)
}
inline void FCCfgData::set_hedgingproduct(const char* value, size_t size) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.hedgingproduct)
}
inline ::std::string* FCCfgData::mutable_hedgingproduct() {
  set_has_hedgingproduct();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.hedgingproduct)
  return hedgingproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_hedgingproduct() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.hedgingproduct)
  clear_has_hedgingproduct();
  return hedgingproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_hedgingproduct(::std::string* hedgingproduct) {
  if (hedgingproduct != NULL) {
    set_has_hedgingproduct();
  } else {
    clear_has_hedgingproduct();
  }
  hedgingproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedgingproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.hedgingproduct)
}

// optional string pxundlyproduct = 6 [default = ""];
inline bool FCCfgData::has_pxundlyproduct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FCCfgData::set_has_pxundlyproduct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FCCfgData::clear_has_pxundlyproduct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FCCfgData::clear_pxundlyproduct() {
  pxundlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyproduct();
}
inline const ::std::string& FCCfgData::pxundlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.pxundlyproduct)
  return pxundlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_pxundlyproduct(const ::std::string& value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.pxundlyproduct)
}
inline void FCCfgData::set_pxundlyproduct(const char* value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.pxundlyproduct)
}
inline void FCCfgData::set_pxundlyproduct(const char* value, size_t size) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.pxundlyproduct)
}
inline ::std::string* FCCfgData::mutable_pxundlyproduct() {
  set_has_pxundlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.pxundlyproduct)
  return pxundlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_pxundlyproduct() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.pxundlyproduct)
  clear_has_pxundlyproduct();
  return pxundlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_pxundlyproduct(::std::string* pxundlyproduct) {
  if (pxundlyproduct != NULL) {
    set_has_pxundlyproduct();
  } else {
    clear_has_pxundlyproduct();
  }
  pxundlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.pxundlyproduct)
}

// optional double pxundlyratio = 7 [default = 1];
inline bool FCCfgData::has_pxundlyratio() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FCCfgData::set_has_pxundlyratio() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FCCfgData::clear_has_pxundlyratio() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FCCfgData::clear_pxundlyratio() {
  pxundlyratio_ = 1;
  clear_has_pxundlyratio();
}
inline double FCCfgData::pxundlyratio() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.pxundlyratio)
  return pxundlyratio_;
}
inline void FCCfgData::set_pxundlyratio(double value) {
  set_has_pxundlyratio();
  pxundlyratio_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.pxundlyratio)
}

// optional string undlyinstr = 8 [default = ""];
inline bool FCCfgData::has_undlyinstr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FCCfgData::set_has_undlyinstr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FCCfgData::clear_has_undlyinstr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FCCfgData::clear_undlyinstr() {
  undlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyinstr();
}
inline const ::std::string& FCCfgData::undlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlyinstr)
  return undlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_undlyinstr(const ::std::string& value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlyinstr)
}
inline void FCCfgData::set_undlyinstr(const char* value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.undlyinstr)
}
inline void FCCfgData::set_undlyinstr(const char* value, size_t size) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.undlyinstr)
}
inline ::std::string* FCCfgData::mutable_undlyinstr() {
  set_has_undlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.undlyinstr)
  return undlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_undlyinstr() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.undlyinstr)
  clear_has_undlyinstr();
  return undlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_undlyinstr(::std::string* undlyinstr) {
  if (undlyinstr != NULL) {
    set_has_undlyinstr();
  } else {
    clear_has_undlyinstr();
  }
  undlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.undlyinstr)
}

// optional string hedginginstr = 9 [default = ""];
inline bool FCCfgData::has_hedginginstr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FCCfgData::set_has_hedginginstr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FCCfgData::clear_has_hedginginstr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FCCfgData::clear_hedginginstr() {
  hedginginstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedginginstr();
}
inline const ::std::string& FCCfgData::hedginginstr() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.hedginginstr)
  return hedginginstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_hedginginstr(const ::std::string& value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.hedginginstr)
}
inline void FCCfgData::set_hedginginstr(const char* value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.hedginginstr)
}
inline void FCCfgData::set_hedginginstr(const char* value, size_t size) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.hedginginstr)
}
inline ::std::string* FCCfgData::mutable_hedginginstr() {
  set_has_hedginginstr();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.hedginginstr)
  return hedginginstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_hedginginstr() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.hedginginstr)
  clear_has_hedginginstr();
  return hedginginstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_hedginginstr(::std::string* hedginginstr) {
  if (hedginginstr != NULL) {
    set_has_hedginginstr();
  } else {
    clear_has_hedginginstr();
  }
  hedginginstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedginginstr);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.hedginginstr)
}

// optional string pxundlyinstr = 10 [default = ""];
inline bool FCCfgData::has_pxundlyinstr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FCCfgData::set_has_pxundlyinstr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FCCfgData::clear_has_pxundlyinstr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FCCfgData::clear_pxundlyinstr() {
  pxundlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyinstr();
}
inline const ::std::string& FCCfgData::pxundlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.pxundlyinstr)
  return pxundlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_pxundlyinstr(const ::std::string& value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.pxundlyinstr)
}
inline void FCCfgData::set_pxundlyinstr(const char* value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.pxundlyinstr)
}
inline void FCCfgData::set_pxundlyinstr(const char* value, size_t size) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.pxundlyinstr)
}
inline ::std::string* FCCfgData::mutable_pxundlyinstr() {
  set_has_pxundlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.pxundlyinstr)
  return pxundlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_pxundlyinstr() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.pxundlyinstr)
  clear_has_pxundlyinstr();
  return pxundlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_pxundlyinstr(::std::string* pxundlyinstr) {
  if (pxundlyinstr != NULL) {
    set_has_pxundlyinstr();
  } else {
    clear_has_pxundlyinstr();
  }
  pxundlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.pxundlyinstr)
}

// optional double undlybias = 11 [default = 0];
inline bool FCCfgData::has_undlybias() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FCCfgData::set_has_undlybias() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FCCfgData::clear_has_undlybias() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FCCfgData::clear_undlybias() {
  undlybias_ = 0;
  clear_has_undlybias();
}
inline double FCCfgData::undlybias() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybias)
  return undlybias_;
}
inline void FCCfgData::set_undlybias(double value) {
  set_has_undlybias();
  undlybias_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybias)
}

// optional double undlybiasmin = 12 [default = -100];
inline bool FCCfgData::has_undlybiasmin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FCCfgData::set_has_undlybiasmin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FCCfgData::clear_has_undlybiasmin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FCCfgData::clear_undlybiasmin() {
  undlybiasmin_ = -100;
  clear_has_undlybiasmin();
}
inline double FCCfgData::undlybiasmin() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybiasmin)
  return undlybiasmin_;
}
inline void FCCfgData::set_undlybiasmin(double value) {
  set_has_undlybiasmin();
  undlybiasmin_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybiasmin)
}

// optional double undlybiasmax = 13 [default = 100];
inline bool FCCfgData::has_undlybiasmax() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FCCfgData::set_has_undlybiasmax() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FCCfgData::clear_has_undlybiasmax() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FCCfgData::clear_undlybiasmax() {
  undlybiasmax_ = 100;
  clear_has_undlybiasmax();
}
inline double FCCfgData::undlybiasmax() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybiasmax)
  return undlybiasmax_;
}
inline void FCCfgData::set_undlybiasmax(double value) {
  set_has_undlybiasmax();
  undlybiasmax_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybiasmax)
}

// optional int32 undlybiascountmin = 14 [default = 30];
inline bool FCCfgData::has_undlybiascountmin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FCCfgData::set_has_undlybiascountmin() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FCCfgData::clear_has_undlybiascountmin() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FCCfgData::clear_undlybiascountmin() {
  undlybiascountmin_ = 30;
  clear_has_undlybiascountmin();
}
inline ::google::protobuf::int32 FCCfgData::undlybiascountmin() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybiascountmin)
  return undlybiascountmin_;
}
inline void FCCfgData::set_undlybiascountmin(::google::protobuf::int32 value) {
  set_has_undlybiascountmin();
  undlybiascountmin_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybiascountmin)
}

// optional int32 undlybiasrollingsz = 15 [default = 300];
inline bool FCCfgData::has_undlybiasrollingsz() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FCCfgData::set_has_undlybiasrollingsz() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FCCfgData::clear_has_undlybiasrollingsz() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FCCfgData::clear_undlybiasrollingsz() {
  undlybiasrollingsz_ = 300;
  clear_has_undlybiasrollingsz();
}
inline ::google::protobuf::int32 FCCfgData::undlybiasrollingsz() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybiasrollingsz)
  return undlybiasrollingsz_;
}
inline void FCCfgData::set_undlybiasrollingsz(::google::protobuf::int32 value) {
  set_has_undlybiasrollingsz();
  undlybiasrollingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybiasrollingsz)
}

// optional int32 undlybiasrollingtype = 16 [default = 0];
inline bool FCCfgData::has_undlybiasrollingtype() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FCCfgData::set_has_undlybiasrollingtype() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FCCfgData::clear_has_undlybiasrollingtype() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FCCfgData::clear_undlybiasrollingtype() {
  undlybiasrollingtype_ = 0;
  clear_has_undlybiasrollingtype();
}
inline ::google::protobuf::int32 FCCfgData::undlybiasrollingtype() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.undlybiasrollingtype)
  return undlybiasrollingtype_;
}
inline void FCCfgData::set_undlybiasrollingtype(::google::protobuf::int32 value) {
  set_has_undlybiasrollingtype();
  undlybiasrollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.undlybiasrollingtype)
}

// optional int32 curveflag = 17 [default = 0];
inline bool FCCfgData::has_curveflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FCCfgData::set_has_curveflag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FCCfgData::clear_has_curveflag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FCCfgData::clear_curveflag() {
  curveflag_ = 0;
  clear_has_curveflag();
}
inline ::google::protobuf::int32 FCCfgData::curveflag() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.curveflag)
  return curveflag_;
}
inline void FCCfgData::set_curveflag(::google::protobuf::int32 value) {
  set_has_curveflag();
  curveflag_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.curveflag)
}

// optional string curvetype = 18 [default = ""];
inline bool FCCfgData::has_curvetype() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FCCfgData::set_has_curvetype() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FCCfgData::clear_has_curvetype() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FCCfgData::clear_curvetype() {
  curvetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_curvetype();
}
inline const ::std::string& FCCfgData::curvetype() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.curvetype)
  return curvetype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_curvetype(const ::std::string& value) {
  set_has_curvetype();
  curvetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.curvetype)
}
inline void FCCfgData::set_curvetype(const char* value) {
  set_has_curvetype();
  curvetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.curvetype)
}
inline void FCCfgData::set_curvetype(const char* value, size_t size) {
  set_has_curvetype();
  curvetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.curvetype)
}
inline ::std::string* FCCfgData::mutable_curvetype() {
  set_has_curvetype();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.curvetype)
  return curvetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_curvetype() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.curvetype)
  clear_has_curvetype();
  return curvetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_curvetype(::std::string* curvetype) {
  if (curvetype != NULL) {
    set_has_curvetype();
  } else {
    clear_has_curvetype();
  }
  curvetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), curvetype);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.curvetype)
}

// optional string deltanorminstr = 20 [default = ""];
inline bool FCCfgData::has_deltanorminstr() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FCCfgData::set_has_deltanorminstr() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FCCfgData::clear_has_deltanorminstr() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FCCfgData::clear_deltanorminstr() {
  deltanorminstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deltanorminstr();
}
inline const ::std::string& FCCfgData::deltanorminstr() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.deltanorminstr)
  return deltanorminstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_deltanorminstr(const ::std::string& value) {
  set_has_deltanorminstr();
  deltanorminstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FCCfgData.deltanorminstr)
}
inline void FCCfgData::set_deltanorminstr(const char* value) {
  set_has_deltanorminstr();
  deltanorminstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FCCfgData.deltanorminstr)
}
inline void FCCfgData::set_deltanorminstr(const char* value, size_t size) {
  set_has_deltanorminstr();
  deltanorminstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FCCfgData.deltanorminstr)
}
inline ::std::string* FCCfgData::mutable_deltanorminstr() {
  set_has_deltanorminstr();
  // @@protoc_insertion_point(field_mutable:XT.FCCfgData.deltanorminstr)
  return deltanorminstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FCCfgData::release_deltanorminstr() {
  // @@protoc_insertion_point(field_release:XT.FCCfgData.deltanorminstr)
  clear_has_deltanorminstr();
  return deltanorminstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FCCfgData::set_allocated_deltanorminstr(::std::string* deltanorminstr) {
  if (deltanorminstr != NULL) {
    set_has_deltanorminstr();
  } else {
    clear_has_deltanorminstr();
  }
  deltanorminstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deltanorminstr);
  // @@protoc_insertion_point(field_set_allocated:XT.FCCfgData.deltanorminstr)
}

// optional double deltanormmax = 21 [default = 0];
inline bool FCCfgData::has_deltanormmax() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FCCfgData::set_has_deltanormmax() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FCCfgData::clear_has_deltanormmax() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FCCfgData::clear_deltanormmax() {
  deltanormmax_ = 0;
  clear_has_deltanormmax();
}
inline double FCCfgData::deltanormmax() const {
  // @@protoc_insertion_point(field_get:XT.FCCfgData.deltanormmax)
  return deltanormmax_;
}
inline void FCCfgData::set_deltanormmax(double value) {
  set_has_deltanormmax();
  deltanormmax_ = value;
  // @@protoc_insertion_point(field_set:XT.FCCfgData.deltanormmax)
}

// map<string, string> namestrmap = 30;
inline int FCCfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void FCCfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
FCCfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.FCCfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
FCCfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.FCCfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// FCData

// optional int32 initflag = 1 [default = 0];
inline bool FCData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 FCData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.FCData.initflag)
  return initflag_;
}
inline void FCData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.FCData.initflag)
}

// optional int32 tradingday = 2 [default = 0];
inline bool FCData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 FCData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.FCData.tradingday)
  return tradingday_;
}
inline void FCData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.FCData.tradingday)
}

// optional int32 prevtradingday = 3 [default = 0];
inline bool FCData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 FCData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.FCData.prevtradingday)
  return prevtradingday_;
}
inline void FCData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.FCData.prevtradingday)
}

// map<int32, double> tagdoublemap = 10;
inline int FCData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void FCData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
FCData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.FCData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
FCData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.FCData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<int32, int32> tagintmap = 11;
inline int FCData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void FCData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
FCData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.FCData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
FCData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.FCData.tagintmap)
  return tagintmap_.MutableMap();
}

// -------------------------------------------------------------------

// OCCfgData

// optional string name = 1 [default = ""];
inline bool OCCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCCfgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& OCCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.name)
}
inline void OCCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.name)
}
inline void OCCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.name)
}
inline ::std::string* OCCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.name)
}

// optional string exchid = 2 [default = ""];
inline bool OCCfgData::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCCfgData::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCCfgData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCCfgData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& OCCfgData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.exchid)
}
inline void OCCfgData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.exchid)
}
inline void OCCfgData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.exchid)
}
inline ::std::string* OCCfgData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.exchid)
}

// optional string undlyproduct = 3 [default = ""];
inline bool OCCfgData::has_undlyproduct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCCfgData::set_has_undlyproduct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCCfgData::clear_has_undlyproduct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCCfgData::clear_undlyproduct() {
  undlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyproduct();
}
inline const ::std::string& OCCfgData::undlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlyproduct)
  return undlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_undlyproduct(const ::std::string& value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlyproduct)
}
inline void OCCfgData::set_undlyproduct(const char* value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.undlyproduct)
}
inline void OCCfgData::set_undlyproduct(const char* value, size_t size) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.undlyproduct)
}
inline ::std::string* OCCfgData::mutable_undlyproduct() {
  set_has_undlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.undlyproduct)
  return undlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_undlyproduct() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.undlyproduct)
  clear_has_undlyproduct();
  return undlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_undlyproduct(::std::string* undlyproduct) {
  if (undlyproduct != NULL) {
    set_has_undlyproduct();
  } else {
    clear_has_undlyproduct();
  }
  undlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.undlyproduct)
}

// optional int32 expireintdate = 4 [default = 99990101];
inline bool OCCfgData::has_expireintdate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCCfgData::set_has_expireintdate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCCfgData::clear_has_expireintdate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCCfgData::clear_expireintdate() {
  expireintdate_ = 99990101;
  clear_has_expireintdate();
}
inline ::google::protobuf::int32 OCCfgData::expireintdate() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.expireintdate)
  return expireintdate_;
}
inline void OCCfgData::set_expireintdate(::google::protobuf::int32 value) {
  set_has_expireintdate();
  expireintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.expireintdate)
}

// optional string productid = 5 [default = ""];
inline bool OCCfgData::has_productid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCCfgData::set_has_productid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCCfgData::clear_has_productid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCCfgData::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& OCCfgData::productid() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.productid)
}
inline void OCCfgData::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.productid)
}
inline void OCCfgData::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.productid)
}
inline ::std::string* OCCfgData::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_productid() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.productid)
}

// optional string hedgingproduct = 6 [default = ""];
inline bool OCCfgData::has_hedgingproduct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCCfgData::set_has_hedgingproduct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCCfgData::clear_has_hedgingproduct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCCfgData::clear_hedgingproduct() {
  hedgingproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedgingproduct();
}
inline const ::std::string& OCCfgData::hedgingproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.hedgingproduct)
  return hedgingproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_hedgingproduct(const ::std::string& value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.hedgingproduct)
}
inline void OCCfgData::set_hedgingproduct(const char* value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.hedgingproduct)
}
inline void OCCfgData::set_hedgingproduct(const char* value, size_t size) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.hedgingproduct)
}
inline ::std::string* OCCfgData::mutable_hedgingproduct() {
  set_has_hedgingproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.hedgingproduct)
  return hedgingproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_hedgingproduct() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.hedgingproduct)
  clear_has_hedgingproduct();
  return hedgingproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_hedgingproduct(::std::string* hedgingproduct) {
  if (hedgingproduct != NULL) {
    set_has_hedgingproduct();
  } else {
    clear_has_hedgingproduct();
  }
  hedgingproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedgingproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.hedgingproduct)
}

// optional string pxundlyproduct = 7 [default = ""];
inline bool OCCfgData::has_pxundlyproduct() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCCfgData::set_has_pxundlyproduct() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCCfgData::clear_has_pxundlyproduct() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCCfgData::clear_pxundlyproduct() {
  pxundlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyproduct();
}
inline const ::std::string& OCCfgData::pxundlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxundlyproduct)
  return pxundlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_pxundlyproduct(const ::std::string& value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxundlyproduct)
}
inline void OCCfgData::set_pxundlyproduct(const char* value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.pxundlyproduct)
}
inline void OCCfgData::set_pxundlyproduct(const char* value, size_t size) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.pxundlyproduct)
}
inline ::std::string* OCCfgData::mutable_pxundlyproduct() {
  set_has_pxundlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.pxundlyproduct)
  return pxundlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_pxundlyproduct() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.pxundlyproduct)
  clear_has_pxundlyproduct();
  return pxundlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_pxundlyproduct(::std::string* pxundlyproduct) {
  if (pxundlyproduct != NULL) {
    set_has_pxundlyproduct();
  } else {
    clear_has_pxundlyproduct();
  }
  pxundlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.pxundlyproduct)
}

// optional double pxundlyratio = 8 [default = 1];
inline bool OCCfgData::has_pxundlyratio() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OCCfgData::set_has_pxundlyratio() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OCCfgData::clear_has_pxundlyratio() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OCCfgData::clear_pxundlyratio() {
  pxundlyratio_ = 1;
  clear_has_pxundlyratio();
}
inline double OCCfgData::pxundlyratio() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxundlyratio)
  return pxundlyratio_;
}
inline void OCCfgData::set_pxundlyratio(double value) {
  set_has_pxundlyratio();
  pxundlyratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxundlyratio)
}

// optional string undlyinstr = 9 [default = ""];
inline bool OCCfgData::has_undlyinstr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OCCfgData::set_has_undlyinstr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OCCfgData::clear_has_undlyinstr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OCCfgData::clear_undlyinstr() {
  undlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyinstr();
}
inline const ::std::string& OCCfgData::undlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlyinstr)
  return undlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_undlyinstr(const ::std::string& value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlyinstr)
}
inline void OCCfgData::set_undlyinstr(const char* value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.undlyinstr)
}
inline void OCCfgData::set_undlyinstr(const char* value, size_t size) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.undlyinstr)
}
inline ::std::string* OCCfgData::mutable_undlyinstr() {
  set_has_undlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.undlyinstr)
  return undlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_undlyinstr() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.undlyinstr)
  clear_has_undlyinstr();
  return undlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_undlyinstr(::std::string* undlyinstr) {
  if (undlyinstr != NULL) {
    set_has_undlyinstr();
  } else {
    clear_has_undlyinstr();
  }
  undlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.undlyinstr)
}

// optional string hedginginstr = 10 [default = ""];
inline bool OCCfgData::has_hedginginstr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OCCfgData::set_has_hedginginstr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OCCfgData::clear_has_hedginginstr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OCCfgData::clear_hedginginstr() {
  hedginginstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedginginstr();
}
inline const ::std::string& OCCfgData::hedginginstr() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.hedginginstr)
  return hedginginstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_hedginginstr(const ::std::string& value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.hedginginstr)
}
inline void OCCfgData::set_hedginginstr(const char* value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.hedginginstr)
}
inline void OCCfgData::set_hedginginstr(const char* value, size_t size) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.hedginginstr)
}
inline ::std::string* OCCfgData::mutable_hedginginstr() {
  set_has_hedginginstr();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.hedginginstr)
  return hedginginstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_hedginginstr() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.hedginginstr)
  clear_has_hedginginstr();
  return hedginginstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_hedginginstr(::std::string* hedginginstr) {
  if (hedginginstr != NULL) {
    set_has_hedginginstr();
  } else {
    clear_has_hedginginstr();
  }
  hedginginstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedginginstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.hedginginstr)
}

// optional string pxundlyinstr = 11 [default = ""];
inline bool OCCfgData::has_pxundlyinstr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OCCfgData::set_has_pxundlyinstr() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OCCfgData::clear_has_pxundlyinstr() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OCCfgData::clear_pxundlyinstr() {
  pxundlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyinstr();
}
inline const ::std::string& OCCfgData::pxundlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxundlyinstr)
  return pxundlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_pxundlyinstr(const ::std::string& value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxundlyinstr)
}
inline void OCCfgData::set_pxundlyinstr(const char* value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.pxundlyinstr)
}
inline void OCCfgData::set_pxundlyinstr(const char* value, size_t size) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.pxundlyinstr)
}
inline ::std::string* OCCfgData::mutable_pxundlyinstr() {
  set_has_pxundlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.pxundlyinstr)
  return pxundlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_pxundlyinstr() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.pxundlyinstr)
  clear_has_pxundlyinstr();
  return pxundlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_pxundlyinstr(::std::string* pxundlyinstr) {
  if (pxundlyinstr != NULL) {
    set_has_pxundlyinstr();
  } else {
    clear_has_pxundlyinstr();
  }
  pxundlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.pxundlyinstr)
}

// optional string expiretime = 12 [default = "15:00:00"];
inline bool OCCfgData::has_expiretime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OCCfgData::set_has_expiretime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OCCfgData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OCCfgData::clear_expiretime() {
  expiretime_.ClearToDefaultNoArena(_default_expiretime_);
  clear_has_expiretime();
}
inline const ::std::string& OCCfgData::expiretime() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.expiretime)
  return expiretime_.GetNoArena(_default_expiretime_);
}
inline void OCCfgData::set_expiretime(const ::std::string& value) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_, value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.expiretime)
}
inline void OCCfgData::set_expiretime(const char* value) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.expiretime)
}
inline void OCCfgData::set_expiretime(const char* value, size_t size) {
  set_has_expiretime();
  expiretime_.SetNoArena(_default_expiretime_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.expiretime)
}
inline ::std::string* OCCfgData::mutable_expiretime() {
  set_has_expiretime();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.expiretime)
  return expiretime_.MutableNoArena(_default_expiretime_);
}
inline ::std::string* OCCfgData::release_expiretime() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.expiretime)
  clear_has_expiretime();
  return expiretime_.ReleaseNoArena(_default_expiretime_);
}
inline void OCCfgData::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    set_has_expiretime();
  } else {
    clear_has_expiretime();
  }
  expiretime_.SetAllocatedNoArena(_default_expiretime_, expiretime);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.expiretime)
}

// optional string expiredt = 13 [default = ""];
inline bool OCCfgData::has_expiredt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OCCfgData::set_has_expiredt() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OCCfgData::clear_has_expiredt() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OCCfgData::clear_expiredt() {
  expiredt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expiredt();
}
inline const ::std::string& OCCfgData::expiredt() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.expiredt)
  return expiredt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_expiredt(const ::std::string& value) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCCfgData.expiredt)
}
inline void OCCfgData::set_expiredt(const char* value) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCCfgData.expiredt)
}
inline void OCCfgData::set_expiredt(const char* value, size_t size) {
  set_has_expiredt();
  expiredt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCCfgData.expiredt)
}
inline ::std::string* OCCfgData::mutable_expiredt() {
  set_has_expiredt();
  // @@protoc_insertion_point(field_mutable:XT.OCCfgData.expiredt)
  return expiredt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCCfgData::release_expiredt() {
  // @@protoc_insertion_point(field_release:XT.OCCfgData.expiredt)
  clear_has_expiredt();
  return expiredt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCCfgData::set_allocated_expiredt(::std::string* expiredt) {
  if (expiredt != NULL) {
    set_has_expiredt();
  } else {
    clear_has_expiredt();
  }
  expiredt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiredt);
  // @@protoc_insertion_point(field_set_allocated:XT.OCCfgData.expiredt)
}

// optional int64 expirets = 14 [default = 0];
inline bool OCCfgData::has_expirets() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OCCfgData::set_has_expirets() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OCCfgData::clear_has_expirets() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OCCfgData::clear_expirets() {
  expirets_ = GOOGLE_LONGLONG(0);
  clear_has_expirets();
}
inline ::google::protobuf::int64 OCCfgData::expirets() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.expirets)
  return expirets_;
}
inline void OCCfgData::set_expirets(::google::protobuf::int64 value) {
  set_has_expirets();
  expirets_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.expirets)
}

// optional int32 quotingflag = 15 [default = 0];
inline bool OCCfgData::has_quotingflag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OCCfgData::set_has_quotingflag() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OCCfgData::clear_has_quotingflag() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OCCfgData::clear_quotingflag() {
  quotingflag_ = 0;
  clear_has_quotingflag();
}
inline ::google::protobuf::int32 OCCfgData::quotingflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.quotingflag)
  return quotingflag_;
}
inline void OCCfgData::set_quotingflag(::google::protobuf::int32 value) {
  set_has_quotingflag();
  quotingflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.quotingflag)
}

// optional int32 rspflag = 16 [default = 1];
inline bool OCCfgData::has_rspflag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OCCfgData::set_has_rspflag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OCCfgData::clear_has_rspflag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OCCfgData::clear_rspflag() {
  rspflag_ = 1;
  clear_has_rspflag();
}
inline ::google::protobuf::int32 OCCfgData::rspflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.rspflag)
  return rspflag_;
}
inline void OCCfgData::set_rspflag(::google::protobuf::int32 value) {
  set_has_rspflag();
  rspflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.rspflag)
}

// optional int32 hedgingflag = 17 [default = 0];
inline bool OCCfgData::has_hedgingflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void OCCfgData::set_has_hedgingflag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void OCCfgData::clear_has_hedgingflag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void OCCfgData::clear_hedgingflag() {
  hedgingflag_ = 0;
  clear_has_hedgingflag();
}
inline ::google::protobuf::int32 OCCfgData::hedgingflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.hedgingflag)
  return hedgingflag_;
}
inline void OCCfgData::set_hedgingflag(::google::protobuf::int32 value) {
  set_has_hedgingflag();
  hedgingflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.hedgingflag)
}

// optional int32 fitflag = 18 [default = 0];
inline bool OCCfgData::has_fitflag() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void OCCfgData::set_has_fitflag() {
  _has_bits_[0] |= 0x00020000u;
}
inline void OCCfgData::clear_has_fitflag() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void OCCfgData::clear_fitflag() {
  fitflag_ = 0;
  clear_has_fitflag();
}
inline ::google::protobuf::int32 OCCfgData::fitflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.fitflag)
  return fitflag_;
}
inline void OCCfgData::set_fitflag(::google::protobuf::int32 value) {
  set_has_fitflag();
  fitflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.fitflag)
}

// optional int32 fitmethod = 19 [default = 0];
inline bool OCCfgData::has_fitmethod() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OCCfgData::set_has_fitmethod() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OCCfgData::clear_has_fitmethod() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OCCfgData::clear_fitmethod() {
  fitmethod_ = 0;
  clear_has_fitmethod();
}
inline ::google::protobuf::int32 OCCfgData::fitmethod() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.fitmethod)
  return fitmethod_;
}
inline void OCCfgData::set_fitmethod(::google::protobuf::int32 value) {
  set_has_fitmethod();
  fitmethod_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.fitmethod)
}

// optional double fitthreshticks = 20 [default = 10];
inline bool OCCfgData::has_fitthreshticks() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OCCfgData::set_has_fitthreshticks() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OCCfgData::clear_has_fitthreshticks() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OCCfgData::clear_fitthreshticks() {
  fitthreshticks_ = 10;
  clear_has_fitthreshticks();
}
inline double OCCfgData::fitthreshticks() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.fitthreshticks)
  return fitthreshticks_;
}
inline void OCCfgData::set_fitthreshticks(double value) {
  set_has_fitthreshticks();
  fitthreshticks_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.fitthreshticks)
}

// optional double joinhedgethresh = 21 [default = 1];
inline bool OCCfgData::has_joinhedgethresh() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OCCfgData::set_has_joinhedgethresh() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OCCfgData::clear_has_joinhedgethresh() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OCCfgData::clear_joinhedgethresh() {
  joinhedgethresh_ = 1;
  clear_has_joinhedgethresh();
}
inline double OCCfgData::joinhedgethresh() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.joinhedgethresh)
  return joinhedgethresh_;
}
inline void OCCfgData::set_joinhedgethresh(double value) {
  set_has_joinhedgethresh();
  joinhedgethresh_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.joinhedgethresh)
}

// optional double hithedgethresh = 22 [default = 5];
inline bool OCCfgData::has_hithedgethresh() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void OCCfgData::set_has_hithedgethresh() {
  _has_bits_[0] |= 0x00200000u;
}
inline void OCCfgData::clear_has_hithedgethresh() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void OCCfgData::clear_hithedgethresh() {
  hithedgethresh_ = 5;
  clear_has_hithedgethresh();
}
inline double OCCfgData::hithedgethresh() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.hithedgethresh)
  return hithedgethresh_;
}
inline void OCCfgData::set_hithedgethresh(double value) {
  set_has_hithedgethresh();
  hithedgethresh_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.hithedgethresh)
}

// optional int32 safehedgedistticks = 23 [default = 5];
inline bool OCCfgData::has_safehedgedistticks() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void OCCfgData::set_has_safehedgedistticks() {
  _has_bits_[0] |= 0x00400000u;
}
inline void OCCfgData::clear_has_safehedgedistticks() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void OCCfgData::clear_safehedgedistticks() {
  safehedgedistticks_ = 5;
  clear_has_safehedgedistticks();
}
inline ::google::protobuf::int32 OCCfgData::safehedgedistticks() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.safehedgedistticks)
  return safehedgedistticks_;
}
inline void OCCfgData::set_safehedgedistticks(::google::protobuf::int32 value) {
  set_has_safehedgedistticks();
  safehedgedistticks_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.safehedgedistticks)
}

// optional int32 hedgedistticks = 24 [default = 1];
inline bool OCCfgData::has_hedgedistticks() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void OCCfgData::set_has_hedgedistticks() {
  _has_bits_[0] |= 0x00800000u;
}
inline void OCCfgData::clear_has_hedgedistticks() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void OCCfgData::clear_hedgedistticks() {
  hedgedistticks_ = 1;
  clear_has_hedgedistticks();
}
inline ::google::protobuf::int32 OCCfgData::hedgedistticks() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.hedgedistticks)
  return hedgedistticks_;
}
inline void OCCfgData::set_hedgedistticks(::google::protobuf::int32 value) {
  set_has_hedgedistticks();
  hedgedistticks_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.hedgedistticks)
}

// optional int64 maxpos = 26 [default = 10];
inline bool OCCfgData::has_maxpos() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void OCCfgData::set_has_maxpos() {
  _has_bits_[0] |= 0x01000000u;
}
inline void OCCfgData::clear_has_maxpos() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void OCCfgData::clear_maxpos() {
  maxpos_ = GOOGLE_LONGLONG(10);
  clear_has_maxpos();
}
inline ::google::protobuf::int64 OCCfgData::maxpos() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.maxpos)
  return maxpos_;
}
inline void OCCfgData::set_maxpos(::google::protobuf::int64 value) {
  set_has_maxpos();
  maxpos_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.maxpos)
}

// optional double ocmaxdeltanorm = 27 [default = 10];
inline bool OCCfgData::has_ocmaxdeltanorm() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void OCCfgData::set_has_ocmaxdeltanorm() {
  _has_bits_[0] |= 0x02000000u;
}
inline void OCCfgData::clear_has_ocmaxdeltanorm() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void OCCfgData::clear_ocmaxdeltanorm() {
  ocmaxdeltanorm_ = 10;
  clear_has_ocmaxdeltanorm();
}
inline double OCCfgData::ocmaxdeltanorm() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.ocmaxdeltanorm)
  return ocmaxdeltanorm_;
}
inline void OCCfgData::set_ocmaxdeltanorm(double value) {
  set_has_ocmaxdeltanorm();
  ocmaxdeltanorm_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.ocmaxdeltanorm)
}

// optional double octgtdeltanorm = 28 [default = 0];
inline bool OCCfgData::has_octgtdeltanorm() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void OCCfgData::set_has_octgtdeltanorm() {
  _has_bits_[0] |= 0x04000000u;
}
inline void OCCfgData::clear_has_octgtdeltanorm() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void OCCfgData::clear_octgtdeltanorm() {
  octgtdeltanorm_ = 0;
  clear_has_octgtdeltanorm();
}
inline double OCCfgData::octgtdeltanorm() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.octgtdeltanorm)
  return octgtdeltanorm_;
}
inline void OCCfgData::set_octgtdeltanorm(double value) {
  set_has_octgtdeltanorm();
  octgtdeltanorm_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.octgtdeltanorm)
}

// optional double ocmaxvega = 29 [default = 10000];
inline bool OCCfgData::has_ocmaxvega() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void OCCfgData::set_has_ocmaxvega() {
  _has_bits_[0] |= 0x08000000u;
}
inline void OCCfgData::clear_has_ocmaxvega() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void OCCfgData::clear_ocmaxvega() {
  ocmaxvega_ = 10000;
  clear_has_ocmaxvega();
}
inline double OCCfgData::ocmaxvega() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.ocmaxvega)
  return ocmaxvega_;
}
inline void OCCfgData::set_ocmaxvega(double value) {
  set_has_ocmaxvega();
  ocmaxvega_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.ocmaxvega)
}

// optional double octgtvega = 30 [default = 0];
inline bool OCCfgData::has_octgtvega() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void OCCfgData::set_has_octgtvega() {
  _has_bits_[0] |= 0x10000000u;
}
inline void OCCfgData::clear_has_octgtvega() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void OCCfgData::clear_octgtvega() {
  octgtvega_ = 0;
  clear_has_octgtvega();
}
inline double OCCfgData::octgtvega() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.octgtvega)
  return octgtvega_;
}
inline void OCCfgData::set_octgtvega(double value) {
  set_has_octgtvega();
  octgtvega_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.octgtvega)
}

// optional int32 quotepxmethod = 31 [default = 0];
inline bool OCCfgData::has_quotepxmethod() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void OCCfgData::set_has_quotepxmethod() {
  _has_bits_[0] |= 0x20000000u;
}
inline void OCCfgData::clear_has_quotepxmethod() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void OCCfgData::clear_quotepxmethod() {
  quotepxmethod_ = 0;
  clear_has_quotepxmethod();
}
inline ::google::protobuf::int32 OCCfgData::quotepxmethod() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.quotepxmethod)
  return quotepxmethod_;
}
inline void OCCfgData::set_quotepxmethod(::google::protobuf::int32 value) {
  set_has_quotepxmethod();
  quotepxmethod_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.quotepxmethod)
}

// optional int32 maxhitticks = 32 [default = 0];
inline bool OCCfgData::has_maxhitticks() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void OCCfgData::set_has_maxhitticks() {
  _has_bits_[0] |= 0x40000000u;
}
inline void OCCfgData::clear_has_maxhitticks() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void OCCfgData::clear_maxhitticks() {
  maxhitticks_ = 0;
  clear_has_maxhitticks();
}
inline ::google::protobuf::int32 OCCfgData::maxhitticks() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.maxhitticks)
  return maxhitticks_;
}
inline void OCCfgData::set_maxhitticks(::google::protobuf::int32 value) {
  set_has_maxhitticks();
  maxhitticks_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.maxhitticks)
}

// optional double rcp = 33 [default = 0.5];
inline bool OCCfgData::has_rcp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void OCCfgData::set_has_rcp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void OCCfgData::clear_has_rcp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void OCCfgData::clear_rcp() {
  rcp_ = 0.5;
  clear_has_rcp();
}
inline double OCCfgData::rcp() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.rcp)
  return rcp_;
}
inline void OCCfgData::set_rcp(double value) {
  set_has_rcp();
  rcp_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.rcp)
}

// optional double rrp = 34 [default = 0.8];
inline bool OCCfgData::has_rrp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void OCCfgData::set_has_rrp() {
  _has_bits_[1] |= 0x00000001u;
}
inline void OCCfgData::clear_has_rrp() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void OCCfgData::clear_rrp() {
  rrp_ = 0.8;
  clear_has_rrp();
}
inline double OCCfgData::rrp() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.rrp)
  return rrp_;
}
inline void OCCfgData::set_rrp(double value) {
  set_has_rrp();
  rrp_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.rrp)
}

// optional double minretreatratio = 35 [default = 0.2];
inline bool OCCfgData::has_minretreatratio() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void OCCfgData::set_has_minretreatratio() {
  _has_bits_[1] |= 0x00000002u;
}
inline void OCCfgData::clear_has_minretreatratio() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void OCCfgData::clear_minretreatratio() {
  minretreatratio_ = 0.2;
  clear_has_minretreatratio();
}
inline double OCCfgData::minretreatratio() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.minretreatratio)
  return minretreatratio_;
}
inline void OCCfgData::set_minretreatratio(double value) {
  set_has_minretreatratio();
  minretreatratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.minretreatratio)
}

// optional double maxretreatratio = 36 [default = 2];
inline bool OCCfgData::has_maxretreatratio() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void OCCfgData::set_has_maxretreatratio() {
  _has_bits_[1] |= 0x00000004u;
}
inline void OCCfgData::clear_has_maxretreatratio() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void OCCfgData::clear_maxretreatratio() {
  maxretreatratio_ = 2;
  clear_has_maxretreatratio();
}
inline double OCCfgData::maxretreatratio() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.maxretreatratio)
  return maxretreatratio_;
}
inline void OCCfgData::set_maxretreatratio(double value) {
  set_has_maxretreatratio();
  maxretreatratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.maxretreatratio)
}

// optional double leanonmktratio = 37 [default = 0.75];
inline bool OCCfgData::has_leanonmktratio() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void OCCfgData::set_has_leanonmktratio() {
  _has_bits_[1] |= 0x00000008u;
}
inline void OCCfgData::clear_has_leanonmktratio() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void OCCfgData::clear_leanonmktratio() {
  leanonmktratio_ = 0.75;
  clear_has_leanonmktratio();
}
inline double OCCfgData::leanonmktratio() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.leanonmktratio)
  return leanonmktratio_;
}
inline void OCCfgData::set_leanonmktratio(double value) {
  set_has_leanonmktratio();
  leanonmktratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.leanonmktratio)
}

// optional int32 pxchgthreshticksmin = 38 [default = 1];
inline bool OCCfgData::has_pxchgthreshticksmin() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void OCCfgData::set_has_pxchgthreshticksmin() {
  _has_bits_[1] |= 0x00000010u;
}
inline void OCCfgData::clear_has_pxchgthreshticksmin() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void OCCfgData::clear_pxchgthreshticksmin() {
  pxchgthreshticksmin_ = 1;
  clear_has_pxchgthreshticksmin();
}
inline ::google::protobuf::int32 OCCfgData::pxchgthreshticksmin() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxchgthreshticksmin)
  return pxchgthreshticksmin_;
}
inline void OCCfgData::set_pxchgthreshticksmin(::google::protobuf::int32 value) {
  set_has_pxchgthreshticksmin();
  pxchgthreshticksmin_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxchgthreshticksmin)
}

// optional int32 pxchgthreshticksmax = 39 [default = 10];
inline bool OCCfgData::has_pxchgthreshticksmax() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void OCCfgData::set_has_pxchgthreshticksmax() {
  _has_bits_[1] |= 0x00000020u;
}
inline void OCCfgData::clear_has_pxchgthreshticksmax() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void OCCfgData::clear_pxchgthreshticksmax() {
  pxchgthreshticksmax_ = 10;
  clear_has_pxchgthreshticksmax();
}
inline ::google::protobuf::int32 OCCfgData::pxchgthreshticksmax() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxchgthreshticksmax)
  return pxchgthreshticksmax_;
}
inline void OCCfgData::set_pxchgthreshticksmax(::google::protobuf::int32 value) {
  set_has_pxchgthreshticksmax();
  pxchgthreshticksmax_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxchgthreshticksmax)
}

// optional double pxchgthreshratio = 40 [default = 0.2];
inline bool OCCfgData::has_pxchgthreshratio() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void OCCfgData::set_has_pxchgthreshratio() {
  _has_bits_[1] |= 0x00000040u;
}
inline void OCCfgData::clear_has_pxchgthreshratio() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void OCCfgData::clear_pxchgthreshratio() {
  pxchgthreshratio_ = 0.2;
  clear_has_pxchgthreshratio();
}
inline double OCCfgData::pxchgthreshratio() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxchgthreshratio)
  return pxchgthreshratio_;
}
inline void OCCfgData::set_pxchgthreshratio(double value) {
  set_has_pxchgthreshratio();
  pxchgthreshratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxchgthreshratio)
}

// optional int64 minquotesz = 41 [default = 1];
inline bool OCCfgData::has_minquotesz() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void OCCfgData::set_has_minquotesz() {
  _has_bits_[1] |= 0x00000080u;
}
inline void OCCfgData::clear_has_minquotesz() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void OCCfgData::clear_minquotesz() {
  minquotesz_ = GOOGLE_LONGLONG(1);
  clear_has_minquotesz();
}
inline ::google::protobuf::int64 OCCfgData::minquotesz() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.minquotesz)
  return minquotesz_;
}
inline void OCCfgData::set_minquotesz(::google::protobuf::int64 value) {
  set_has_minquotesz();
  minquotesz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.minquotesz)
}

// optional int64 minrspsz = 42 [default = 1];
inline bool OCCfgData::has_minrspsz() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void OCCfgData::set_has_minrspsz() {
  _has_bits_[1] |= 0x00000100u;
}
inline void OCCfgData::clear_has_minrspsz() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void OCCfgData::clear_minrspsz() {
  minrspsz_ = GOOGLE_LONGLONG(1);
  clear_has_minrspsz();
}
inline ::google::protobuf::int64 OCCfgData::minrspsz() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.minrspsz)
  return minrspsz_;
}
inline void OCCfgData::set_minrspsz(::google::protobuf::int64 value) {
  set_has_minrspsz();
  minrspsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.minrspsz)
}

// optional double minimpvol = 43 [default = 0.0006];
inline bool OCCfgData::has_minimpvol() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void OCCfgData::set_has_minimpvol() {
  _has_bits_[1] |= 0x00000200u;
}
inline void OCCfgData::clear_has_minimpvol() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void OCCfgData::clear_minimpvol() {
  minimpvol_ = 0.0006;
  clear_has_minimpvol();
}
inline double OCCfgData::minimpvol() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.minimpvol)
  return minimpvol_;
}
inline void OCCfgData::set_minimpvol(double value) {
  set_has_minimpvol();
  minimpvol_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.minimpvol)
}

// optional double maximpvol = 44 [default = 3];
inline bool OCCfgData::has_maximpvol() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void OCCfgData::set_has_maximpvol() {
  _has_bits_[1] |= 0x00000400u;
}
inline void OCCfgData::clear_has_maximpvol() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void OCCfgData::clear_maximpvol() {
  maximpvol_ = 3;
  clear_has_maximpvol();
}
inline double OCCfgData::maximpvol() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.maximpvol)
  return maximpvol_;
}
inline void OCCfgData::set_maximpvol(double value) {
  set_has_maximpvol();
  maximpvol_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.maximpvol)
}

// optional double xscale = 45 [default = 1];
inline bool OCCfgData::has_xscale() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void OCCfgData::set_has_xscale() {
  _has_bits_[1] |= 0x00000800u;
}
inline void OCCfgData::clear_has_xscale() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void OCCfgData::clear_xscale() {
  xscale_ = 1;
  clear_has_xscale();
}
inline double OCCfgData::xscale() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.xscale)
  return xscale_;
}
inline void OCCfgData::set_xscale(double value) {
  set_has_xscale();
  xscale_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.xscale)
}

// optional int32 pxprecision = 46 [default = 5];
inline bool OCCfgData::has_pxprecision() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void OCCfgData::set_has_pxprecision() {
  _has_bits_[1] |= 0x00001000u;
}
inline void OCCfgData::clear_has_pxprecision() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void OCCfgData::clear_pxprecision() {
  pxprecision_ = 5;
  clear_has_pxprecision();
}
inline ::google::protobuf::int32 OCCfgData::pxprecision() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxprecision)
  return pxprecision_;
}
inline void OCCfgData::set_pxprecision(::google::protobuf::int32 value) {
  set_has_pxprecision();
  pxprecision_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxprecision)
}

// optional int32 exercisetype = 47 [default = 0];
inline bool OCCfgData::has_exercisetype() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void OCCfgData::set_has_exercisetype() {
  _has_bits_[1] |= 0x00002000u;
}
inline void OCCfgData::clear_has_exercisetype() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void OCCfgData::clear_exercisetype() {
  exercisetype_ = 0;
  clear_has_exercisetype();
}
inline ::google::protobuf::int32 OCCfgData::exercisetype() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.exercisetype)
  return exercisetype_;
}
inline void OCCfgData::set_exercisetype(::google::protobuf::int32 value) {
  set_has_exercisetype();
  exercisetype_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.exercisetype)
}

// optional double minoptionpxtick = 48 [default = 0];
inline bool OCCfgData::has_minoptionpxtick() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void OCCfgData::set_has_minoptionpxtick() {
  _has_bits_[1] |= 0x00004000u;
}
inline void OCCfgData::clear_has_minoptionpxtick() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void OCCfgData::clear_minoptionpxtick() {
  minoptionpxtick_ = 0;
  clear_has_minoptionpxtick();
}
inline double OCCfgData::minoptionpxtick() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.minoptionpxtick)
  return minoptionpxtick_;
}
inline void OCCfgData::set_minoptionpxtick(double value) {
  set_has_minoptionpxtick();
  minoptionpxtick_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.minoptionpxtick)
}

// optional double pxepsilon = 49 [default = 1e-06];
inline bool OCCfgData::has_pxepsilon() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void OCCfgData::set_has_pxepsilon() {
  _has_bits_[1] |= 0x00008000u;
}
inline void OCCfgData::clear_has_pxepsilon() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void OCCfgData::clear_pxepsilon() {
  pxepsilon_ = 1e-06;
  clear_has_pxepsilon();
}
inline double OCCfgData::pxepsilon() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pxepsilon)
  return pxepsilon_;
}
inline void OCCfgData::set_pxepsilon(double value) {
  set_has_pxepsilon();
  pxepsilon_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pxepsilon)
}

// optional int32 undlychgrollingsz = 50 [default = 36];
inline bool OCCfgData::has_undlychgrollingsz() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void OCCfgData::set_has_undlychgrollingsz() {
  _has_bits_[1] |= 0x00010000u;
}
inline void OCCfgData::clear_has_undlychgrollingsz() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void OCCfgData::clear_undlychgrollingsz() {
  undlychgrollingsz_ = 36;
  clear_has_undlychgrollingsz();
}
inline ::google::protobuf::int32 OCCfgData::undlychgrollingsz() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlychgrollingsz)
  return undlychgrollingsz_;
}
inline void OCCfgData::set_undlychgrollingsz(::google::protobuf::int32 value) {
  set_has_undlychgrollingsz();
  undlychgrollingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlychgrollingsz)
}

// optional int32 undlychgrollingtype = 51 [default = 0];
inline bool OCCfgData::has_undlychgrollingtype() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void OCCfgData::set_has_undlychgrollingtype() {
  _has_bits_[1] |= 0x00020000u;
}
inline void OCCfgData::clear_has_undlychgrollingtype() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void OCCfgData::clear_undlychgrollingtype() {
  undlychgrollingtype_ = 0;
  clear_has_undlychgrollingtype();
}
inline ::google::protobuf::int32 OCCfgData::undlychgrollingtype() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlychgrollingtype)
  return undlychgrollingtype_;
}
inline void OCCfgData::set_undlychgrollingtype(::google::protobuf::int32 value) {
  set_has_undlychgrollingtype();
  undlychgrollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlychgrollingtype)
}

// optional double undlybigmovethresh = 52 [default = 0];
inline bool OCCfgData::has_undlybigmovethresh() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void OCCfgData::set_has_undlybigmovethresh() {
  _has_bits_[1] |= 0x00040000u;
}
inline void OCCfgData::clear_has_undlybigmovethresh() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void OCCfgData::clear_undlybigmovethresh() {
  undlybigmovethresh_ = 0;
  clear_has_undlybigmovethresh();
}
inline double OCCfgData::undlybigmovethresh() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybigmovethresh)
  return undlybigmovethresh_;
}
inline void OCCfgData::set_undlybigmovethresh(double value) {
  set_has_undlybigmovethresh();
  undlybigmovethresh_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybigmovethresh)
}

// optional int32 vcrrollingsz = 53 [default = 300];
inline bool OCCfgData::has_vcrrollingsz() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void OCCfgData::set_has_vcrrollingsz() {
  _has_bits_[1] |= 0x00080000u;
}
inline void OCCfgData::clear_has_vcrrollingsz() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void OCCfgData::clear_vcrrollingsz() {
  vcrrollingsz_ = 300;
  clear_has_vcrrollingsz();
}
inline ::google::protobuf::int32 OCCfgData::vcrrollingsz() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.vcrrollingsz)
  return vcrrollingsz_;
}
inline void OCCfgData::set_vcrrollingsz(::google::protobuf::int32 value) {
  set_has_vcrrollingsz();
  vcrrollingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.vcrrollingsz)
}

// optional int32 vcrrollingtype = 54 [default = 0];
inline bool OCCfgData::has_vcrrollingtype() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void OCCfgData::set_has_vcrrollingtype() {
  _has_bits_[1] |= 0x00100000u;
}
inline void OCCfgData::clear_has_vcrrollingtype() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void OCCfgData::clear_vcrrollingtype() {
  vcrrollingtype_ = 0;
  clear_has_vcrrollingtype();
}
inline ::google::protobuf::int32 OCCfgData::vcrrollingtype() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.vcrrollingtype)
  return vcrrollingtype_;
}
inline void OCCfgData::set_vcrrollingtype(::google::protobuf::int32 value) {
  set_has_vcrrollingtype();
  vcrrollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.vcrrollingtype)
}

// optional int32 pnlexitpxflag = 55 [default = 0];
inline bool OCCfgData::has_pnlexitpxflag() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void OCCfgData::set_has_pnlexitpxflag() {
  _has_bits_[1] |= 0x00200000u;
}
inline void OCCfgData::clear_has_pnlexitpxflag() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void OCCfgData::clear_pnlexitpxflag() {
  pnlexitpxflag_ = 0;
  clear_has_pnlexitpxflag();
}
inline ::google::protobuf::int32 OCCfgData::pnlexitpxflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.pnlexitpxflag)
  return pnlexitpxflag_;
}
inline void OCCfgData::set_pnlexitpxflag(::google::protobuf::int32 value) {
  set_has_pnlexitpxflag();
  pnlexitpxflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.pnlexitpxflag)
}

// optional int32 logflag = 56 [default = 0];
inline bool OCCfgData::has_logflag() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void OCCfgData::set_has_logflag() {
  _has_bits_[1] |= 0x00400000u;
}
inline void OCCfgData::clear_has_logflag() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void OCCfgData::clear_logflag() {
  logflag_ = 0;
  clear_has_logflag();
}
inline ::google::protobuf::int32 OCCfgData::logflag() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.logflag)
  return logflag_;
}
inline void OCCfgData::set_logflag(::google::protobuf::int32 value) {
  set_has_logflag();
  logflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.logflag)
}

// optional double r = 57 [default = 0.015];
inline bool OCCfgData::has_r() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void OCCfgData::set_has_r() {
  _has_bits_[1] |= 0x00800000u;
}
inline void OCCfgData::clear_has_r() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void OCCfgData::clear_r() {
  r_ = 0.015;
  clear_has_r();
}
inline double OCCfgData::r() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.r)
  return r_;
}
inline void OCCfgData::set_r(double value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.r)
}

// optional double b = 58 [default = 0];
inline bool OCCfgData::has_b() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void OCCfgData::set_has_b() {
  _has_bits_[1] |= 0x01000000u;
}
inline void OCCfgData::clear_has_b() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void OCCfgData::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline double OCCfgData::b() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.b)
  return b_;
}
inline void OCCfgData::set_b(double value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.b)
}

// optional double undlybias = 60 [default = 0];
inline bool OCCfgData::has_undlybias() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void OCCfgData::set_has_undlybias() {
  _has_bits_[1] |= 0x02000000u;
}
inline void OCCfgData::clear_has_undlybias() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void OCCfgData::clear_undlybias() {
  undlybias_ = 0;
  clear_has_undlybias();
}
inline double OCCfgData::undlybias() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybias)
  return undlybias_;
}
inline void OCCfgData::set_undlybias(double value) {
  set_has_undlybias();
  undlybias_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybias)
}

// optional double undlybiasmin = 61 [default = -100];
inline bool OCCfgData::has_undlybiasmin() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void OCCfgData::set_has_undlybiasmin() {
  _has_bits_[1] |= 0x04000000u;
}
inline void OCCfgData::clear_has_undlybiasmin() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void OCCfgData::clear_undlybiasmin() {
  undlybiasmin_ = -100;
  clear_has_undlybiasmin();
}
inline double OCCfgData::undlybiasmin() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybiasmin)
  return undlybiasmin_;
}
inline void OCCfgData::set_undlybiasmin(double value) {
  set_has_undlybiasmin();
  undlybiasmin_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybiasmin)
}

// optional double undlybiasmax = 62 [default = 100];
inline bool OCCfgData::has_undlybiasmax() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void OCCfgData::set_has_undlybiasmax() {
  _has_bits_[1] |= 0x08000000u;
}
inline void OCCfgData::clear_has_undlybiasmax() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void OCCfgData::clear_undlybiasmax() {
  undlybiasmax_ = 100;
  clear_has_undlybiasmax();
}
inline double OCCfgData::undlybiasmax() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybiasmax)
  return undlybiasmax_;
}
inline void OCCfgData::set_undlybiasmax(double value) {
  set_has_undlybiasmax();
  undlybiasmax_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybiasmax)
}

// optional int32 undlybiascountmin = 63 [default = 30];
inline bool OCCfgData::has_undlybiascountmin() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void OCCfgData::set_has_undlybiascountmin() {
  _has_bits_[1] |= 0x10000000u;
}
inline void OCCfgData::clear_has_undlybiascountmin() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void OCCfgData::clear_undlybiascountmin() {
  undlybiascountmin_ = 30;
  clear_has_undlybiascountmin();
}
inline ::google::protobuf::int32 OCCfgData::undlybiascountmin() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybiascountmin)
  return undlybiascountmin_;
}
inline void OCCfgData::set_undlybiascountmin(::google::protobuf::int32 value) {
  set_has_undlybiascountmin();
  undlybiascountmin_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybiascountmin)
}

// optional int32 undlybiasrollingsz = 64 [default = 300];
inline bool OCCfgData::has_undlybiasrollingsz() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void OCCfgData::set_has_undlybiasrollingsz() {
  _has_bits_[1] |= 0x20000000u;
}
inline void OCCfgData::clear_has_undlybiasrollingsz() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void OCCfgData::clear_undlybiasrollingsz() {
  undlybiasrollingsz_ = 300;
  clear_has_undlybiasrollingsz();
}
inline ::google::protobuf::int32 OCCfgData::undlybiasrollingsz() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybiasrollingsz)
  return undlybiasrollingsz_;
}
inline void OCCfgData::set_undlybiasrollingsz(::google::protobuf::int32 value) {
  set_has_undlybiasrollingsz();
  undlybiasrollingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybiasrollingsz)
}

// optional int32 undlybiasrollingtype = 65 [default = 0];
inline bool OCCfgData::has_undlybiasrollingtype() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void OCCfgData::set_has_undlybiasrollingtype() {
  _has_bits_[1] |= 0x40000000u;
}
inline void OCCfgData::clear_has_undlybiasrollingtype() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void OCCfgData::clear_undlybiasrollingtype() {
  undlybiasrollingtype_ = 0;
  clear_has_undlybiasrollingtype();
}
inline ::google::protobuf::int32 OCCfgData::undlybiasrollingtype() const {
  // @@protoc_insertion_point(field_get:XT.OCCfgData.undlybiasrollingtype)
  return undlybiasrollingtype_;
}
inline void OCCfgData::set_undlybiasrollingtype(::google::protobuf::int32 value) {
  set_has_undlybiasrollingtype();
  undlybiasrollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.OCCfgData.undlybiasrollingtype)
}

// map<string, string> namestrmap = 80;
inline int OCCfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void OCCfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
OCCfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.OCCfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
OCCfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.OCCfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// OCStrikeData

// optional double strike = 1 [default = 0];
inline bool OCStrikeData::has_strike() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCStrikeData::set_has_strike() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCStrikeData::clear_has_strike() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCStrikeData::clear_strike() {
  strike_ = 0;
  clear_has_strike();
}
inline double OCStrikeData::strike() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.strike)
  return strike_;
}
inline void OCStrikeData::set_strike(double value) {
  set_has_strike();
  strike_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.strike)
}

// optional .XT.PosGreeksData posgreeks = 2;
inline bool OCStrikeData::has_posgreeks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCStrikeData::set_has_posgreeks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCStrikeData::clear_has_posgreeks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCStrikeData::clear_posgreeks() {
  if (posgreeks_ != NULL) posgreeks_->::XT::PosGreeksData::Clear();
  clear_has_posgreeks();
}
inline const ::XT::PosGreeksData& OCStrikeData::posgreeks() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.posgreeks)
  return posgreeks_ != NULL ? *posgreeks_ : *default_instance_->posgreeks_;
}
inline ::XT::PosGreeksData* OCStrikeData::mutable_posgreeks() {
  set_has_posgreeks();
  if (posgreeks_ == NULL) {
    posgreeks_ = new ::XT::PosGreeksData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCStrikeData.posgreeks)
  return posgreeks_;
}
inline ::XT::PosGreeksData* OCStrikeData::release_posgreeks() {
  // @@protoc_insertion_point(field_release:XT.OCStrikeData.posgreeks)
  clear_has_posgreeks();
  ::XT::PosGreeksData* temp = posgreeks_;
  posgreeks_ = NULL;
  return temp;
}
inline void OCStrikeData::set_allocated_posgreeks(::XT::PosGreeksData* posgreeks) {
  delete posgreeks_;
  posgreeks_ = posgreeks;
  if (posgreeks) {
    set_has_posgreeks();
  } else {
    clear_has_posgreeks();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCStrikeData.posgreeks)
}

// optional .XT.GreeksData greeks = 3;
inline bool OCStrikeData::has_greeks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCStrikeData::set_has_greeks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCStrikeData::clear_has_greeks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCStrikeData::clear_greeks() {
  if (greeks_ != NULL) greeks_->::XT::GreeksData::Clear();
  clear_has_greeks();
}
inline const ::XT::GreeksData& OCStrikeData::greeks() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.greeks)
  return greeks_ != NULL ? *greeks_ : *default_instance_->greeks_;
}
inline ::XT::GreeksData* OCStrikeData::mutable_greeks() {
  set_has_greeks();
  if (greeks_ == NULL) {
    greeks_ = new ::XT::GreeksData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCStrikeData.greeks)
  return greeks_;
}
inline ::XT::GreeksData* OCStrikeData::release_greeks() {
  // @@protoc_insertion_point(field_release:XT.OCStrikeData.greeks)
  clear_has_greeks();
  ::XT::GreeksData* temp = greeks_;
  greeks_ = NULL;
  return temp;
}
inline void OCStrikeData::set_allocated_greeks(::XT::GreeksData* greeks) {
  delete greeks_;
  greeks_ = greeks;
  if (greeks) {
    set_has_greeks();
  } else {
    clear_has_greeks();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCStrikeData.greeks)
}

// optional .XT.VolatilityData volatility = 4;
inline bool OCStrikeData::has_volatility() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCStrikeData::set_has_volatility() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCStrikeData::clear_has_volatility() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCStrikeData::clear_volatility() {
  if (volatility_ != NULL) volatility_->::XT::VolatilityData::Clear();
  clear_has_volatility();
}
inline const ::XT::VolatilityData& OCStrikeData::volatility() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.volatility)
  return volatility_ != NULL ? *volatility_ : *default_instance_->volatility_;
}
inline ::XT::VolatilityData* OCStrikeData::mutable_volatility() {
  set_has_volatility();
  if (volatility_ == NULL) {
    volatility_ = new ::XT::VolatilityData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCStrikeData.volatility)
  return volatility_;
}
inline ::XT::VolatilityData* OCStrikeData::release_volatility() {
  // @@protoc_insertion_point(field_release:XT.OCStrikeData.volatility)
  clear_has_volatility();
  ::XT::VolatilityData* temp = volatility_;
  volatility_ = NULL;
  return temp;
}
inline void OCStrikeData::set_allocated_volatility(::XT::VolatilityData* volatility) {
  delete volatility_;
  volatility_ = volatility;
  if (volatility) {
    set_has_volatility();
  } else {
    clear_has_volatility();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCStrikeData.volatility)
}

// optional .XT.TradePxVolumeData tradepxvolume = 5;
inline bool OCStrikeData::has_tradepxvolume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCStrikeData::set_has_tradepxvolume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCStrikeData::clear_has_tradepxvolume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCStrikeData::clear_tradepxvolume() {
  if (tradepxvolume_ != NULL) tradepxvolume_->::XT::TradePxVolumeData::Clear();
  clear_has_tradepxvolume();
}
inline const ::XT::TradePxVolumeData& OCStrikeData::tradepxvolume() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.tradepxvolume)
  return tradepxvolume_ != NULL ? *tradepxvolume_ : *default_instance_->tradepxvolume_;
}
inline ::XT::TradePxVolumeData* OCStrikeData::mutable_tradepxvolume() {
  set_has_tradepxvolume();
  if (tradepxvolume_ == NULL) {
    tradepxvolume_ = new ::XT::TradePxVolumeData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCStrikeData.tradepxvolume)
  return tradepxvolume_;
}
inline ::XT::TradePxVolumeData* OCStrikeData::release_tradepxvolume() {
  // @@protoc_insertion_point(field_release:XT.OCStrikeData.tradepxvolume)
  clear_has_tradepxvolume();
  ::XT::TradePxVolumeData* temp = tradepxvolume_;
  tradepxvolume_ = NULL;
  return temp;
}
inline void OCStrikeData::set_allocated_tradepxvolume(::XT::TradePxVolumeData* tradepxvolume) {
  delete tradepxvolume_;
  tradepxvolume_ = tradepxvolume;
  if (tradepxvolume) {
    set_has_tradepxvolume();
  } else {
    clear_has_tradepxvolume();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCStrikeData.tradepxvolume)
}

// optional .XT.PnLData pnls = 6;
inline bool OCStrikeData::has_pnls() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCStrikeData::set_has_pnls() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCStrikeData::clear_has_pnls() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCStrikeData::clear_pnls() {
  if (pnls_ != NULL) pnls_->::XT::PnLData::Clear();
  clear_has_pnls();
}
inline const ::XT::PnLData& OCStrikeData::pnls() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.pnls)
  return pnls_ != NULL ? *pnls_ : *default_instance_->pnls_;
}
inline ::XT::PnLData* OCStrikeData::mutable_pnls() {
  set_has_pnls();
  if (pnls_ == NULL) {
    pnls_ = new ::XT::PnLData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCStrikeData.pnls)
  return pnls_;
}
inline ::XT::PnLData* OCStrikeData::release_pnls() {
  // @@protoc_insertion_point(field_release:XT.OCStrikeData.pnls)
  clear_has_pnls();
  ::XT::PnLData* temp = pnls_;
  pnls_ = NULL;
  return temp;
}
inline void OCStrikeData::set_allocated_pnls(::XT::PnLData* pnls) {
  delete pnls_;
  pnls_ = pnls;
  if (pnls) {
    set_has_pnls();
  } else {
    clear_has_pnls();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCStrikeData.pnls)
}

// optional double volweight = 7 [default = 1];
inline bool OCStrikeData::has_volweight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCStrikeData::set_has_volweight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCStrikeData::clear_has_volweight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCStrikeData::clear_volweight() {
  volweight_ = 1;
  clear_has_volweight();
}
inline double OCStrikeData::volweight() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.volweight)
  return volweight_;
}
inline void OCStrikeData::set_volweight(double value) {
  set_has_volweight();
  volweight_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.volweight)
}

// optional double synfwdbid = 8 [default = 0];
inline bool OCStrikeData::has_synfwdbid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OCStrikeData::set_has_synfwdbid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OCStrikeData::clear_has_synfwdbid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OCStrikeData::clear_synfwdbid() {
  synfwdbid_ = 0;
  clear_has_synfwdbid();
}
inline double OCStrikeData::synfwdbid() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.synfwdbid)
  return synfwdbid_;
}
inline void OCStrikeData::set_synfwdbid(double value) {
  set_has_synfwdbid();
  synfwdbid_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.synfwdbid)
}

// optional double synfwdask = 9 [default = 0];
inline bool OCStrikeData::has_synfwdask() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OCStrikeData::set_has_synfwdask() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OCStrikeData::clear_has_synfwdask() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OCStrikeData::clear_synfwdask() {
  synfwdask_ = 0;
  clear_has_synfwdask();
}
inline double OCStrikeData::synfwdask() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.synfwdask)
  return synfwdask_;
}
inline void OCStrikeData::set_synfwdask(double value) {
  set_has_synfwdask();
  synfwdask_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.synfwdask)
}

// optional double synfwdmid = 10 [default = 0];
inline bool OCStrikeData::has_synfwdmid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OCStrikeData::set_has_synfwdmid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OCStrikeData::clear_has_synfwdmid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OCStrikeData::clear_synfwdmid() {
  synfwdmid_ = 0;
  clear_has_synfwdmid();
}
inline double OCStrikeData::synfwdmid() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.synfwdmid)
  return synfwdmid_;
}
inline void OCStrikeData::set_synfwdmid(double value) {
  set_has_synfwdmid();
  synfwdmid_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.synfwdmid)
}

// optional double synfwdclose = 11 [default = 0];
inline bool OCStrikeData::has_synfwdclose() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OCStrikeData::set_has_synfwdclose() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OCStrikeData::clear_has_synfwdclose() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OCStrikeData::clear_synfwdclose() {
  synfwdclose_ = 0;
  clear_has_synfwdclose();
}
inline double OCStrikeData::synfwdclose() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.synfwdclose)
  return synfwdclose_;
}
inline void OCStrikeData::set_synfwdclose(double value) {
  set_has_synfwdclose();
  synfwdclose_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.synfwdclose)
}

// optional double synfwdsettle = 12 [default = 0];
inline bool OCStrikeData::has_synfwdsettle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OCStrikeData::set_has_synfwdsettle() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OCStrikeData::clear_has_synfwdsettle() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OCStrikeData::clear_synfwdsettle() {
  synfwdsettle_ = 0;
  clear_has_synfwdsettle();
}
inline double OCStrikeData::synfwdsettle() const {
  // @@protoc_insertion_point(field_get:XT.OCStrikeData.synfwdsettle)
  return synfwdsettle_;
}
inline void OCStrikeData::set_synfwdsettle(double value) {
  set_has_synfwdsettle();
  synfwdsettle_ = value;
  // @@protoc_insertion_point(field_set:XT.OCStrikeData.synfwdsettle)
}

// map<int32, int32> tagintmap = 20;
inline int OCStrikeData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void OCStrikeData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
OCStrikeData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.OCStrikeData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
OCStrikeData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.OCStrikeData.tagintmap)
  return tagintmap_.MutableMap();
}

// map<int32, double> tagdoublemap = 21;
inline int OCStrikeData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void OCStrikeData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
OCStrikeData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.OCStrikeData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
OCStrikeData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.OCStrikeData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// -------------------------------------------------------------------

// ATMInfo

// optional int32 atmindex = 1 [default = -1];
inline bool ATMInfo::has_atmindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ATMInfo::set_has_atmindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ATMInfo::clear_has_atmindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ATMInfo::clear_atmindex() {
  atmindex_ = -1;
  clear_has_atmindex();
}
inline ::google::protobuf::int32 ATMInfo::atmindex() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmindex)
  return atmindex_;
}
inline void ATMInfo::set_atmindex(::google::protobuf::int32 value) {
  set_has_atmindex();
  atmindex_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmindex)
}

// optional double atmstrike = 2 [default = 0];
inline bool ATMInfo::has_atmstrike() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ATMInfo::set_has_atmstrike() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ATMInfo::clear_has_atmstrike() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ATMInfo::clear_atmstrike() {
  atmstrike_ = 0;
  clear_has_atmstrike();
}
inline double ATMInfo::atmstrike() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmstrike)
  return atmstrike_;
}
inline void ATMInfo::set_atmstrike(double value) {
  set_has_atmstrike();
  atmstrike_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmstrike)
}

// optional int64 atmintstrike = 3 [default = 0];
inline bool ATMInfo::has_atmintstrike() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ATMInfo::set_has_atmintstrike() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ATMInfo::clear_has_atmintstrike() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ATMInfo::clear_atmintstrike() {
  atmintstrike_ = GOOGLE_LONGLONG(0);
  clear_has_atmintstrike();
}
inline ::google::protobuf::int64 ATMInfo::atmintstrike() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmintstrike)
  return atmintstrike_;
}
inline void ATMInfo::set_atmintstrike(::google::protobuf::int64 value) {
  set_has_atmintstrike();
  atmintstrike_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmintstrike)
}

// optional double atmstraddlevega = 4 [default = 0];
inline bool ATMInfo::has_atmstraddlevega() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ATMInfo::set_has_atmstraddlevega() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ATMInfo::clear_has_atmstraddlevega() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ATMInfo::clear_atmstraddlevega() {
  atmstraddlevega_ = 0;
  clear_has_atmstraddlevega();
}
inline double ATMInfo::atmstraddlevega() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmstraddlevega)
  return atmstraddlevega_;
}
inline void ATMInfo::set_atmstraddlevega(double value) {
  set_has_atmstraddlevega();
  atmstraddlevega_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmstraddlevega)
}

// optional int32 atmindexprev = 5 [default = -1];
inline bool ATMInfo::has_atmindexprev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ATMInfo::set_has_atmindexprev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ATMInfo::clear_has_atmindexprev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ATMInfo::clear_atmindexprev() {
  atmindexprev_ = -1;
  clear_has_atmindexprev();
}
inline ::google::protobuf::int32 ATMInfo::atmindexprev() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmindexprev)
  return atmindexprev_;
}
inline void ATMInfo::set_atmindexprev(::google::protobuf::int32 value) {
  set_has_atmindexprev();
  atmindexprev_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmindexprev)
}

// optional double atmstrikeprev = 6 [default = 0];
inline bool ATMInfo::has_atmstrikeprev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ATMInfo::set_has_atmstrikeprev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ATMInfo::clear_has_atmstrikeprev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ATMInfo::clear_atmstrikeprev() {
  atmstrikeprev_ = 0;
  clear_has_atmstrikeprev();
}
inline double ATMInfo::atmstrikeprev() const {
  // @@protoc_insertion_point(field_get:XT.ATMInfo.atmstrikeprev)
  return atmstrikeprev_;
}
inline void ATMInfo::set_atmstrikeprev(double value) {
  set_has_atmstrikeprev();
  atmstrikeprev_ = value;
  // @@protoc_insertion_point(field_set:XT.ATMInfo.atmstrikeprev)
}

// -------------------------------------------------------------------

// OCData

// optional int32 initflag = 1 [default = 0];
inline bool OCData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 OCData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.OCData.initflag)
  return initflag_;
}
inline void OCData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.initflag)
}

// optional int32 tradingday = 2 [default = 0];
inline bool OCData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 OCData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.OCData.tradingday)
  return tradingday_;
}
inline void OCData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.tradingday)
}

// optional int32 prevtradingday = 3 [default = 0];
inline bool OCData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 OCData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.OCData.prevtradingday)
  return prevtradingday_;
}
inline void OCData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.prevtradingday)
}

// optional .XT.ATMInfo atminfo = 11;
inline bool OCData::has_atminfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCData::set_has_atminfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCData::clear_has_atminfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCData::clear_atminfo() {
  if (atminfo_ != NULL) atminfo_->::XT::ATMInfo::Clear();
  clear_has_atminfo();
}
inline const ::XT::ATMInfo& OCData::atminfo() const {
  // @@protoc_insertion_point(field_get:XT.OCData.atminfo)
  return atminfo_ != NULL ? *atminfo_ : *default_instance_->atminfo_;
}
inline ::XT::ATMInfo* OCData::mutable_atminfo() {
  set_has_atminfo();
  if (atminfo_ == NULL) {
    atminfo_ = new ::XT::ATMInfo;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCData.atminfo)
  return atminfo_;
}
inline ::XT::ATMInfo* OCData::release_atminfo() {
  // @@protoc_insertion_point(field_release:XT.OCData.atminfo)
  clear_has_atminfo();
  ::XT::ATMInfo* temp = atminfo_;
  atminfo_ = NULL;
  return temp;
}
inline void OCData::set_allocated_atminfo(::XT::ATMInfo* atminfo) {
  delete atminfo_;
  atminfo_ = atminfo;
  if (atminfo) {
    set_has_atminfo();
  } else {
    clear_has_atminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCData.atminfo)
}

// optional .XT.PnLData pnls = 12;
inline bool OCData::has_pnls() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCData::set_has_pnls() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCData::clear_has_pnls() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCData::clear_pnls() {
  if (pnls_ != NULL) pnls_->::XT::PnLData::Clear();
  clear_has_pnls();
}
inline const ::XT::PnLData& OCData::pnls() const {
  // @@protoc_insertion_point(field_get:XT.OCData.pnls)
  return pnls_ != NULL ? *pnls_ : *default_instance_->pnls_;
}
inline ::XT::PnLData* OCData::mutable_pnls() {
  set_has_pnls();
  if (pnls_ == NULL) {
    pnls_ = new ::XT::PnLData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCData.pnls)
  return pnls_;
}
inline ::XT::PnLData* OCData::release_pnls() {
  // @@protoc_insertion_point(field_release:XT.OCData.pnls)
  clear_has_pnls();
  ::XT::PnLData* temp = pnls_;
  pnls_ = NULL;
  return temp;
}
inline void OCData::set_allocated_pnls(::XT::PnLData* pnls) {
  delete pnls_;
  pnls_ = pnls;
  if (pnls) {
    set_has_pnls();
  } else {
    clear_has_pnls();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCData.pnls)
}

// optional .XT.TradePxVolumeData tradepxvolume = 13;
inline bool OCData::has_tradepxvolume() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCData::set_has_tradepxvolume() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCData::clear_has_tradepxvolume() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCData::clear_tradepxvolume() {
  if (tradepxvolume_ != NULL) tradepxvolume_->::XT::TradePxVolumeData::Clear();
  clear_has_tradepxvolume();
}
inline const ::XT::TradePxVolumeData& OCData::tradepxvolume() const {
  // @@protoc_insertion_point(field_get:XT.OCData.tradepxvolume)
  return tradepxvolume_ != NULL ? *tradepxvolume_ : *default_instance_->tradepxvolume_;
}
inline ::XT::TradePxVolumeData* OCData::mutable_tradepxvolume() {
  set_has_tradepxvolume();
  if (tradepxvolume_ == NULL) {
    tradepxvolume_ = new ::XT::TradePxVolumeData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCData.tradepxvolume)
  return tradepxvolume_;
}
inline ::XT::TradePxVolumeData* OCData::release_tradepxvolume() {
  // @@protoc_insertion_point(field_release:XT.OCData.tradepxvolume)
  clear_has_tradepxvolume();
  ::XT::TradePxVolumeData* temp = tradepxvolume_;
  tradepxvolume_ = NULL;
  return temp;
}
inline void OCData::set_allocated_tradepxvolume(::XT::TradePxVolumeData* tradepxvolume) {
  delete tradepxvolume_;
  tradepxvolume_ = tradepxvolume;
  if (tradepxvolume) {
    set_has_tradepxvolume();
  } else {
    clear_has_tradepxvolume();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCData.tradepxvolume)
}

// optional .XT.PosGreeksData posgreeks = 14;
inline bool OCData::has_posgreeks() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCData::set_has_posgreeks() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCData::clear_has_posgreeks() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCData::clear_posgreeks() {
  if (posgreeks_ != NULL) posgreeks_->::XT::PosGreeksData::Clear();
  clear_has_posgreeks();
}
inline const ::XT::PosGreeksData& OCData::posgreeks() const {
  // @@protoc_insertion_point(field_get:XT.OCData.posgreeks)
  return posgreeks_ != NULL ? *posgreeks_ : *default_instance_->posgreeks_;
}
inline ::XT::PosGreeksData* OCData::mutable_posgreeks() {
  set_has_posgreeks();
  if (posgreeks_ == NULL) {
    posgreeks_ = new ::XT::PosGreeksData;
  }
  // @@protoc_insertion_point(field_mutable:XT.OCData.posgreeks)
  return posgreeks_;
}
inline ::XT::PosGreeksData* OCData::release_posgreeks() {
  // @@protoc_insertion_point(field_release:XT.OCData.posgreeks)
  clear_has_posgreeks();
  ::XT::PosGreeksData* temp = posgreeks_;
  posgreeks_ = NULL;
  return temp;
}
inline void OCData::set_allocated_posgreeks(::XT::PosGreeksData* posgreeks) {
  delete posgreeks_;
  posgreeks_ = posgreeks;
  if (posgreeks) {
    set_has_posgreeks();
  } else {
    clear_has_posgreeks();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.OCData.posgreeks)
}

// optional int64 lastundlyquotets = 15 [default = 0];
inline bool OCData::has_lastundlyquotets() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OCData::set_has_lastundlyquotets() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OCData::clear_has_lastundlyquotets() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OCData::clear_lastundlyquotets() {
  lastundlyquotets_ = GOOGLE_LONGLONG(0);
  clear_has_lastundlyquotets();
}
inline ::google::protobuf::int64 OCData::lastundlyquotets() const {
  // @@protoc_insertion_point(field_get:XT.OCData.lastundlyquotets)
  return lastundlyquotets_;
}
inline void OCData::set_lastundlyquotets(::google::protobuf::int64 value) {
  set_has_lastundlyquotets();
  lastundlyquotets_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.lastundlyquotets)
}

// optional int64 lastoptionquotets = 16 [default = 0];
inline bool OCData::has_lastoptionquotets() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OCData::set_has_lastoptionquotets() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OCData::clear_has_lastoptionquotets() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OCData::clear_lastoptionquotets() {
  lastoptionquotets_ = GOOGLE_LONGLONG(0);
  clear_has_lastoptionquotets();
}
inline ::google::protobuf::int64 OCData::lastoptionquotets() const {
  // @@protoc_insertion_point(field_get:XT.OCData.lastoptionquotets)
  return lastoptionquotets_;
}
inline void OCData::set_lastoptionquotets(::google::protobuf::int64 value) {
  set_has_lastoptionquotets();
  lastoptionquotets_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.lastoptionquotets)
}

// optional int64 lastquotets = 17 [default = 0];
inline bool OCData::has_lastquotets() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OCData::set_has_lastquotets() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OCData::clear_has_lastquotets() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OCData::clear_lastquotets() {
  lastquotets_ = GOOGLE_LONGLONG(0);
  clear_has_lastquotets();
}
inline ::google::protobuf::int64 OCData::lastquotets() const {
  // @@protoc_insertion_point(field_get:XT.OCData.lastquotets)
  return lastquotets_;
}
inline void OCData::set_lastquotets(::google::protobuf::int64 value) {
  set_has_lastquotets();
  lastquotets_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.lastquotets)
}

// optional double undlypxclose = 20 [default = 0];
inline bool OCData::has_undlypxclose() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OCData::set_has_undlypxclose() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OCData::clear_has_undlypxclose() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OCData::clear_undlypxclose() {
  undlypxclose_ = 0;
  clear_has_undlypxclose();
}
inline double OCData::undlypxclose() const {
  // @@protoc_insertion_point(field_get:XT.OCData.undlypxclose)
  return undlypxclose_;
}
inline void OCData::set_undlypxclose(double value) {
  set_has_undlypxclose();
  undlypxclose_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.undlypxclose)
}

// optional double undlypxsettle = 21 [default = 0];
inline bool OCData::has_undlypxsettle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OCData::set_has_undlypxsettle() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OCData::clear_has_undlypxsettle() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OCData::clear_undlypxsettle() {
  undlypxsettle_ = 0;
  clear_has_undlypxsettle();
}
inline double OCData::undlypxsettle() const {
  // @@protoc_insertion_point(field_get:XT.OCData.undlypxsettle)
  return undlypxsettle_;
}
inline void OCData::set_undlypxsettle(double value) {
  set_has_undlypxsettle();
  undlypxsettle_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.undlypxsettle)
}

// optional double atmstrikeclose = 22 [default = 0];
inline bool OCData::has_atmstrikeclose() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OCData::set_has_atmstrikeclose() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OCData::clear_has_atmstrikeclose() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OCData::clear_atmstrikeclose() {
  atmstrikeclose_ = 0;
  clear_has_atmstrikeclose();
}
inline double OCData::atmstrikeclose() const {
  // @@protoc_insertion_point(field_get:XT.OCData.atmstrikeclose)
  return atmstrikeclose_;
}
inline void OCData::set_atmstrikeclose(double value) {
  set_has_atmstrikeclose();
  atmstrikeclose_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.atmstrikeclose)
}

// optional double atmstrikesettle = 23 [default = 0];
inline bool OCData::has_atmstrikesettle() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OCData::set_has_atmstrikesettle() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OCData::clear_has_atmstrikesettle() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OCData::clear_atmstrikesettle() {
  atmstrikesettle_ = 0;
  clear_has_atmstrikesettle();
}
inline double OCData::atmstrikesettle() const {
  // @@protoc_insertion_point(field_get:XT.OCData.atmstrikesettle)
  return atmstrikesettle_;
}
inline void OCData::set_atmstrikesettle(double value) {
  set_has_atmstrikesettle();
  atmstrikesettle_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.atmstrikesettle)
}

// optional double atmvolclose = 24 [default = 0];
inline bool OCData::has_atmvolclose() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OCData::set_has_atmvolclose() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OCData::clear_has_atmvolclose() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OCData::clear_atmvolclose() {
  atmvolclose_ = 0;
  clear_has_atmvolclose();
}
inline double OCData::atmvolclose() const {
  // @@protoc_insertion_point(field_get:XT.OCData.atmvolclose)
  return atmvolclose_;
}
inline void OCData::set_atmvolclose(double value) {
  set_has_atmvolclose();
  atmvolclose_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.atmvolclose)
}

// optional double atmvolsettle = 25 [default = 0];
inline bool OCData::has_atmvolsettle() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OCData::set_has_atmvolsettle() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OCData::clear_has_atmvolsettle() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OCData::clear_atmvolsettle() {
  atmvolsettle_ = 0;
  clear_has_atmvolsettle();
}
inline double OCData::atmvolsettle() const {
  // @@protoc_insertion_point(field_get:XT.OCData.atmvolsettle)
  return atmvolsettle_;
}
inline void OCData::set_atmvolsettle(double value) {
  set_has_atmvolsettle();
  atmvolsettle_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.atmvolsettle)
}

// optional double beginT = 26 [default = 0];
inline bool OCData::has_begint() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void OCData::set_has_begint() {
  _has_bits_[0] |= 0x00010000u;
}
inline void OCData::clear_has_begint() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void OCData::clear_begint() {
  begint_ = 0;
  clear_has_begint();
}
inline double OCData::begint() const {
  // @@protoc_insertion_point(field_get:XT.OCData.beginT)
  return begint_;
}
inline void OCData::set_begint(double value) {
  set_has_begint();
  begint_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.beginT)
}

// optional double endT = 27 [default = 0];
inline bool OCData::has_endt() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void OCData::set_has_endt() {
  _has_bits_[0] |= 0x00020000u;
}
inline void OCData::clear_has_endt() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void OCData::clear_endt() {
  endt_ = 0;
  clear_has_endt();
}
inline double OCData::endt() const {
  // @@protoc_insertion_point(field_get:XT.OCData.endT)
  return endt_;
}
inline void OCData::set_endt(double value) {
  set_has_endt();
  endt_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.endT)
}

// optional double T = 28 [default = 0];
inline bool OCData::has_t() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OCData::set_has_t() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OCData::clear_has_t() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OCData::clear_t() {
  t_ = 0;
  clear_has_t();
}
inline double OCData::t() const {
  // @@protoc_insertion_point(field_get:XT.OCData.T)
  return t_;
}
inline void OCData::set_t(double value) {
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.T)
}

// optional double dte = 29 [default = 0];
inline bool OCData::has_dte() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OCData::set_has_dte() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OCData::clear_has_dte() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OCData::clear_dte() {
  dte_ = 0;
  clear_has_dte();
}
inline double OCData::dte() const {
  // @@protoc_insertion_point(field_get:XT.OCData.dte)
  return dte_;
}
inline void OCData::set_dte(double value) {
  set_has_dte();
  dte_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.dte)
}

// optional double tte = 30 [default = 0];
inline bool OCData::has_tte() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OCData::set_has_tte() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OCData::clear_has_tte() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OCData::clear_tte() {
  tte_ = 0;
  clear_has_tte();
}
inline double OCData::tte() const {
  // @@protoc_insertion_point(field_get:XT.OCData.tte)
  return tte_;
}
inline void OCData::set_tte(double value) {
  set_has_tte();
  tte_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.tte)
}

// optional int32 nstrikes = 31 [default = 0];
inline bool OCData::has_nstrikes() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void OCData::set_has_nstrikes() {
  _has_bits_[0] |= 0x00200000u;
}
inline void OCData::clear_has_nstrikes() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void OCData::clear_nstrikes() {
  nstrikes_ = 0;
  clear_has_nstrikes();
}
inline ::google::protobuf::int32 OCData::nstrikes() const {
  // @@protoc_insertion_point(field_get:XT.OCData.nstrikes)
  return nstrikes_;
}
inline void OCData::set_nstrikes(::google::protobuf::int32 value) {
  set_has_nstrikes();
  nstrikes_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.nstrikes)
}

// optional int32 ncalls = 32 [default = 0];
inline bool OCData::has_ncalls() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void OCData::set_has_ncalls() {
  _has_bits_[0] |= 0x00400000u;
}
inline void OCData::clear_has_ncalls() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void OCData::clear_ncalls() {
  ncalls_ = 0;
  clear_has_ncalls();
}
inline ::google::protobuf::int32 OCData::ncalls() const {
  // @@protoc_insertion_point(field_get:XT.OCData.ncalls)
  return ncalls_;
}
inline void OCData::set_ncalls(::google::protobuf::int32 value) {
  set_has_ncalls();
  ncalls_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.ncalls)
}

// optional int32 nputs = 33 [default = 0];
inline bool OCData::has_nputs() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void OCData::set_has_nputs() {
  _has_bits_[0] |= 0x00800000u;
}
inline void OCData::clear_has_nputs() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void OCData::clear_nputs() {
  nputs_ = 0;
  clear_has_nputs();
}
inline ::google::protobuf::int32 OCData::nputs() const {
  // @@protoc_insertion_point(field_get:XT.OCData.nputs)
  return nputs_;
}
inline void OCData::set_nputs(::google::protobuf::int32 value) {
  set_has_nputs();
  nputs_ = value;
  // @@protoc_insertion_point(field_set:XT.OCData.nputs)
}

// map<int32, double> tagdoublemap = 50;
inline int OCData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void OCData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
OCData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.OCData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
OCData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.OCData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<int32, int32> tagintmap = 51;
inline int OCData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void OCData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
OCData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.OCData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
OCData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.OCData.tagintmap)
  return tagintmap_.MutableMap();
}

// -------------------------------------------------------------------

// OCSCfgData

// optional string name = 1 [default = ""];
inline bool OCSCfgData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCSCfgData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCSCfgData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCSCfgData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& OCSCfgData::name() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.name)
}
inline void OCSCfgData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.name)
}
inline void OCSCfgData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.name)
}
inline ::std::string* OCSCfgData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_name() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.name)
}

// optional string exchid = 2 [default = ""];
inline bool OCSCfgData::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCSCfgData::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCSCfgData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCSCfgData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& OCSCfgData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.exchid)
}
inline void OCSCfgData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.exchid)
}
inline void OCSCfgData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.exchid)
}
inline ::std::string* OCSCfgData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.exchid)
}

// optional string productid = 3 [default = ""];
inline bool OCSCfgData::has_productid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCSCfgData::set_has_productid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCSCfgData::clear_has_productid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCSCfgData::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& OCSCfgData::productid() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.productid)
}
inline void OCSCfgData::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.productid)
}
inline void OCSCfgData::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.productid)
}
inline ::std::string* OCSCfgData::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_productid() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.productid)
}

// optional string undlyproduct = 4 [default = ""];
inline bool OCSCfgData::has_undlyproduct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCSCfgData::set_has_undlyproduct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCSCfgData::clear_has_undlyproduct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCSCfgData::clear_undlyproduct() {
  undlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyproduct();
}
inline const ::std::string& OCSCfgData::undlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlyproduct)
  return undlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_undlyproduct(const ::std::string& value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlyproduct)
}
inline void OCSCfgData::set_undlyproduct(const char* value) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.undlyproduct)
}
inline void OCSCfgData::set_undlyproduct(const char* value, size_t size) {
  set_has_undlyproduct();
  undlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.undlyproduct)
}
inline ::std::string* OCSCfgData::mutable_undlyproduct() {
  set_has_undlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.undlyproduct)
  return undlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_undlyproduct() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.undlyproduct)
  clear_has_undlyproduct();
  return undlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_undlyproduct(::std::string* undlyproduct) {
  if (undlyproduct != NULL) {
    set_has_undlyproduct();
  } else {
    clear_has_undlyproduct();
  }
  undlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.undlyproduct)
}

// optional string hedgingproduct = 5 [default = ""];
inline bool OCSCfgData::has_hedgingproduct() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCSCfgData::set_has_hedgingproduct() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCSCfgData::clear_has_hedgingproduct() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCSCfgData::clear_hedgingproduct() {
  hedgingproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedgingproduct();
}
inline const ::std::string& OCSCfgData::hedgingproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.hedgingproduct)
  return hedgingproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_hedgingproduct(const ::std::string& value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.hedgingproduct)
}
inline void OCSCfgData::set_hedgingproduct(const char* value) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.hedgingproduct)
}
inline void OCSCfgData::set_hedgingproduct(const char* value, size_t size) {
  set_has_hedgingproduct();
  hedgingproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.hedgingproduct)
}
inline ::std::string* OCSCfgData::mutable_hedgingproduct() {
  set_has_hedgingproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.hedgingproduct)
  return hedgingproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_hedgingproduct() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.hedgingproduct)
  clear_has_hedgingproduct();
  return hedgingproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_hedgingproduct(::std::string* hedgingproduct) {
  if (hedgingproduct != NULL) {
    set_has_hedgingproduct();
  } else {
    clear_has_hedgingproduct();
  }
  hedgingproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedgingproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.hedgingproduct)
}

// optional string pxundlyproduct = 6 [default = ""];
inline bool OCSCfgData::has_pxundlyproduct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCSCfgData::set_has_pxundlyproduct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCSCfgData::clear_has_pxundlyproduct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCSCfgData::clear_pxundlyproduct() {
  pxundlyproduct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyproduct();
}
inline const ::std::string& OCSCfgData::pxundlyproduct() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.pxundlyproduct)
  return pxundlyproduct_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_pxundlyproduct(const ::std::string& value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.pxundlyproduct)
}
inline void OCSCfgData::set_pxundlyproduct(const char* value) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.pxundlyproduct)
}
inline void OCSCfgData::set_pxundlyproduct(const char* value, size_t size) {
  set_has_pxundlyproduct();
  pxundlyproduct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.pxundlyproduct)
}
inline ::std::string* OCSCfgData::mutable_pxundlyproduct() {
  set_has_pxundlyproduct();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.pxundlyproduct)
  return pxundlyproduct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_pxundlyproduct() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.pxundlyproduct)
  clear_has_pxundlyproduct();
  return pxundlyproduct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_pxundlyproduct(::std::string* pxundlyproduct) {
  if (pxundlyproduct != NULL) {
    set_has_pxundlyproduct();
  } else {
    clear_has_pxundlyproduct();
  }
  pxundlyproduct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyproduct);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.pxundlyproduct)
}

// optional double pxundlyratio = 7 [default = 1];
inline bool OCSCfgData::has_pxundlyratio() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCSCfgData::set_has_pxundlyratio() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCSCfgData::clear_has_pxundlyratio() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCSCfgData::clear_pxundlyratio() {
  pxundlyratio_ = 1;
  clear_has_pxundlyratio();
}
inline double OCSCfgData::pxundlyratio() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.pxundlyratio)
  return pxundlyratio_;
}
inline void OCSCfgData::set_pxundlyratio(double value) {
  set_has_pxundlyratio();
  pxundlyratio_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.pxundlyratio)
}

// optional string undlyinstr = 8 [default = ""];
inline bool OCSCfgData::has_undlyinstr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OCSCfgData::set_has_undlyinstr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OCSCfgData::clear_has_undlyinstr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OCSCfgData::clear_undlyinstr() {
  undlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_undlyinstr();
}
inline const ::std::string& OCSCfgData::undlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlyinstr)
  return undlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_undlyinstr(const ::std::string& value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlyinstr)
}
inline void OCSCfgData::set_undlyinstr(const char* value) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.undlyinstr)
}
inline void OCSCfgData::set_undlyinstr(const char* value, size_t size) {
  set_has_undlyinstr();
  undlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.undlyinstr)
}
inline ::std::string* OCSCfgData::mutable_undlyinstr() {
  set_has_undlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.undlyinstr)
  return undlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_undlyinstr() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.undlyinstr)
  clear_has_undlyinstr();
  return undlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_undlyinstr(::std::string* undlyinstr) {
  if (undlyinstr != NULL) {
    set_has_undlyinstr();
  } else {
    clear_has_undlyinstr();
  }
  undlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), undlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.undlyinstr)
}

// optional string hedginginstr = 9 [default = ""];
inline bool OCSCfgData::has_hedginginstr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OCSCfgData::set_has_hedginginstr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OCSCfgData::clear_has_hedginginstr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OCSCfgData::clear_hedginginstr() {
  hedginginstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hedginginstr();
}
inline const ::std::string& OCSCfgData::hedginginstr() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.hedginginstr)
  return hedginginstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_hedginginstr(const ::std::string& value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.hedginginstr)
}
inline void OCSCfgData::set_hedginginstr(const char* value) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.hedginginstr)
}
inline void OCSCfgData::set_hedginginstr(const char* value, size_t size) {
  set_has_hedginginstr();
  hedginginstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.hedginginstr)
}
inline ::std::string* OCSCfgData::mutable_hedginginstr() {
  set_has_hedginginstr();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.hedginginstr)
  return hedginginstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_hedginginstr() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.hedginginstr)
  clear_has_hedginginstr();
  return hedginginstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_hedginginstr(::std::string* hedginginstr) {
  if (hedginginstr != NULL) {
    set_has_hedginginstr();
  } else {
    clear_has_hedginginstr();
  }
  hedginginstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedginginstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.hedginginstr)
}

// optional string pxundlyinstr = 10 [default = ""];
inline bool OCSCfgData::has_pxundlyinstr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OCSCfgData::set_has_pxundlyinstr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OCSCfgData::clear_has_pxundlyinstr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OCSCfgData::clear_pxundlyinstr() {
  pxundlyinstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pxundlyinstr();
}
inline const ::std::string& OCSCfgData::pxundlyinstr() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.pxundlyinstr)
  return pxundlyinstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_pxundlyinstr(const ::std::string& value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.pxundlyinstr)
}
inline void OCSCfgData::set_pxundlyinstr(const char* value) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OCSCfgData.pxundlyinstr)
}
inline void OCSCfgData::set_pxundlyinstr(const char* value, size_t size) {
  set_has_pxundlyinstr();
  pxundlyinstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OCSCfgData.pxundlyinstr)
}
inline ::std::string* OCSCfgData::mutable_pxundlyinstr() {
  set_has_pxundlyinstr();
  // @@protoc_insertion_point(field_mutable:XT.OCSCfgData.pxundlyinstr)
  return pxundlyinstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCSCfgData::release_pxundlyinstr() {
  // @@protoc_insertion_point(field_release:XT.OCSCfgData.pxundlyinstr)
  clear_has_pxundlyinstr();
  return pxundlyinstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCSCfgData::set_allocated_pxundlyinstr(::std::string* pxundlyinstr) {
  if (pxundlyinstr != NULL) {
    set_has_pxundlyinstr();
  } else {
    clear_has_pxundlyinstr();
  }
  pxundlyinstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pxundlyinstr);
  // @@protoc_insertion_point(field_set_allocated:XT.OCSCfgData.pxundlyinstr)
}

// optional double undlybias = 60 [default = 0];
inline bool OCSCfgData::has_undlybias() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OCSCfgData::set_has_undlybias() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OCSCfgData::clear_has_undlybias() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OCSCfgData::clear_undlybias() {
  undlybias_ = 0;
  clear_has_undlybias();
}
inline double OCSCfgData::undlybias() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybias)
  return undlybias_;
}
inline void OCSCfgData::set_undlybias(double value) {
  set_has_undlybias();
  undlybias_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybias)
}

// optional double undlybiasmin = 61 [default = -100];
inline bool OCSCfgData::has_undlybiasmin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OCSCfgData::set_has_undlybiasmin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OCSCfgData::clear_has_undlybiasmin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OCSCfgData::clear_undlybiasmin() {
  undlybiasmin_ = -100;
  clear_has_undlybiasmin();
}
inline double OCSCfgData::undlybiasmin() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybiasmin)
  return undlybiasmin_;
}
inline void OCSCfgData::set_undlybiasmin(double value) {
  set_has_undlybiasmin();
  undlybiasmin_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybiasmin)
}

// optional double undlybiasmax = 62 [default = 100];
inline bool OCSCfgData::has_undlybiasmax() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OCSCfgData::set_has_undlybiasmax() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OCSCfgData::clear_has_undlybiasmax() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OCSCfgData::clear_undlybiasmax() {
  undlybiasmax_ = 100;
  clear_has_undlybiasmax();
}
inline double OCSCfgData::undlybiasmax() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybiasmax)
  return undlybiasmax_;
}
inline void OCSCfgData::set_undlybiasmax(double value) {
  set_has_undlybiasmax();
  undlybiasmax_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybiasmax)
}

// optional int32 undlybiascountmin = 63 [default = 30];
inline bool OCSCfgData::has_undlybiascountmin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OCSCfgData::set_has_undlybiascountmin() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OCSCfgData::clear_has_undlybiascountmin() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OCSCfgData::clear_undlybiascountmin() {
  undlybiascountmin_ = 30;
  clear_has_undlybiascountmin();
}
inline ::google::protobuf::int32 OCSCfgData::undlybiascountmin() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybiascountmin)
  return undlybiascountmin_;
}
inline void OCSCfgData::set_undlybiascountmin(::google::protobuf::int32 value) {
  set_has_undlybiascountmin();
  undlybiascountmin_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybiascountmin)
}

// optional int32 undlybiasrollingsz = 64 [default = 300];
inline bool OCSCfgData::has_undlybiasrollingsz() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OCSCfgData::set_has_undlybiasrollingsz() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OCSCfgData::clear_has_undlybiasrollingsz() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OCSCfgData::clear_undlybiasrollingsz() {
  undlybiasrollingsz_ = 300;
  clear_has_undlybiasrollingsz();
}
inline ::google::protobuf::int32 OCSCfgData::undlybiasrollingsz() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybiasrollingsz)
  return undlybiasrollingsz_;
}
inline void OCSCfgData::set_undlybiasrollingsz(::google::protobuf::int32 value) {
  set_has_undlybiasrollingsz();
  undlybiasrollingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybiasrollingsz)
}

// optional int32 undlybiasrollingtype = 65 [default = 0];
inline bool OCSCfgData::has_undlybiasrollingtype() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OCSCfgData::set_has_undlybiasrollingtype() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OCSCfgData::clear_has_undlybiasrollingtype() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OCSCfgData::clear_undlybiasrollingtype() {
  undlybiasrollingtype_ = 0;
  clear_has_undlybiasrollingtype();
}
inline ::google::protobuf::int32 OCSCfgData::undlybiasrollingtype() const {
  // @@protoc_insertion_point(field_get:XT.OCSCfgData.undlybiasrollingtype)
  return undlybiasrollingtype_;
}
inline void OCSCfgData::set_undlybiasrollingtype(::google::protobuf::int32 value) {
  set_has_undlybiasrollingtype();
  undlybiasrollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSCfgData.undlybiasrollingtype)
}

// -------------------------------------------------------------------

// OCSData

// optional int32 initflag = 1 [default = 0];
inline bool OCSData::has_initflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCSData::set_has_initflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCSData::clear_has_initflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCSData::clear_initflag() {
  initflag_ = 0;
  clear_has_initflag();
}
inline ::google::protobuf::int32 OCSData::initflag() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.initflag)
  return initflag_;
}
inline void OCSData::set_initflag(::google::protobuf::int32 value) {
  set_has_initflag();
  initflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.initflag)
}

// optional int32 tradingday = 2 [default = 0];
inline bool OCSData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCSData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCSData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCSData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 OCSData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.tradingday)
  return tradingday_;
}
inline void OCSData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.tradingday)
}

// optional int32 prevtradingday = 3 [default = 0];
inline bool OCSData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCSData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCSData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCSData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 OCSData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.prevtradingday)
  return prevtradingday_;
}
inline void OCSData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.prevtradingday)
}

// optional int64 currmktts = 10 [default = 0];
inline bool OCSData::has_currmktts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCSData::set_has_currmktts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCSData::clear_has_currmktts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCSData::clear_currmktts() {
  currmktts_ = GOOGLE_LONGLONG(0);
  clear_has_currmktts();
}
inline ::google::protobuf::int64 OCSData::currmktts() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.currmktts)
  return currmktts_;
}
inline void OCSData::set_currmktts(::google::protobuf::int64 value) {
  set_has_currmktts();
  currmktts_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.currmktts)
}

// optional int32 currsessionidx = 11 [default = 0];
inline bool OCSData::has_currsessionidx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCSData::set_has_currsessionidx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCSData::clear_has_currsessionidx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCSData::clear_currsessionidx() {
  currsessionidx_ = 0;
  clear_has_currsessionidx();
}
inline ::google::protobuf::int32 OCSData::currsessionidx() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.currsessionidx)
  return currsessionidx_;
}
inline void OCSData::set_currsessionidx(::google::protobuf::int32 value) {
  set_has_currsessionidx();
  currsessionidx_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.currsessionidx)
}

// optional int64 currsessionbegints = 12 [default = 0];
inline bool OCSData::has_currsessionbegints() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCSData::set_has_currsessionbegints() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCSData::clear_has_currsessionbegints() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCSData::clear_currsessionbegints() {
  currsessionbegints_ = GOOGLE_LONGLONG(0);
  clear_has_currsessionbegints();
}
inline ::google::protobuf::int64 OCSData::currsessionbegints() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.currsessionbegints)
  return currsessionbegints_;
}
inline void OCSData::set_currsessionbegints(::google::protobuf::int64 value) {
  set_has_currsessionbegints();
  currsessionbegints_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.currsessionbegints)
}

// optional int64 currsessionendts = 13 [default = 0];
inline bool OCSData::has_currsessionendts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCSData::set_has_currsessionendts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCSData::clear_has_currsessionendts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCSData::clear_currsessionendts() {
  currsessionendts_ = GOOGLE_LONGLONG(0);
  clear_has_currsessionendts();
}
inline ::google::protobuf::int64 OCSData::currsessionendts() const {
  // @@protoc_insertion_point(field_get:XT.OCSData.currsessionendts)
  return currsessionendts_;
}
inline void OCSData::set_currsessionendts(::google::protobuf::int64 value) {
  set_has_currsessionendts();
  currsessionendts_ = value;
  // @@protoc_insertion_point(field_set:XT.OCSData.currsessionendts)
}

// -------------------------------------------------------------------

// PortfolioCfgData

// optional string instr = 1 [default = ""];
inline bool PortfolioCfgData::has_instr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PortfolioCfgData::set_has_instr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PortfolioCfgData::clear_has_instr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PortfolioCfgData::clear_instr() {
  instr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instr();
}
inline const ::std::string& PortfolioCfgData::instr() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioCfgData.instr)
  return instr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_instr(const ::std::string& value) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PortfolioCfgData.instr)
}
inline void PortfolioCfgData::set_instr(const char* value) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PortfolioCfgData.instr)
}
inline void PortfolioCfgData::set_instr(const char* value, size_t size) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PortfolioCfgData.instr)
}
inline ::std::string* PortfolioCfgData::mutable_instr() {
  set_has_instr();
  // @@protoc_insertion_point(field_mutable:XT.PortfolioCfgData.instr)
  return instr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PortfolioCfgData::release_instr() {
  // @@protoc_insertion_point(field_release:XT.PortfolioCfgData.instr)
  clear_has_instr();
  return instr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_allocated_instr(::std::string* instr) {
  if (instr != NULL) {
    set_has_instr();
  } else {
    clear_has_instr();
  }
  instr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instr);
  // @@protoc_insertion_point(field_set_allocated:XT.PortfolioCfgData.instr)
}

// optional string ocs = 2 [default = ""];
inline bool PortfolioCfgData::has_ocs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PortfolioCfgData::set_has_ocs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PortfolioCfgData::clear_has_ocs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PortfolioCfgData::clear_ocs() {
  ocs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ocs();
}
inline const ::std::string& PortfolioCfgData::ocs() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioCfgData.ocs)
  return ocs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_ocs(const ::std::string& value) {
  set_has_ocs();
  ocs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PortfolioCfgData.ocs)
}
inline void PortfolioCfgData::set_ocs(const char* value) {
  set_has_ocs();
  ocs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PortfolioCfgData.ocs)
}
inline void PortfolioCfgData::set_ocs(const char* value, size_t size) {
  set_has_ocs();
  ocs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PortfolioCfgData.ocs)
}
inline ::std::string* PortfolioCfgData::mutable_ocs() {
  set_has_ocs();
  // @@protoc_insertion_point(field_mutable:XT.PortfolioCfgData.ocs)
  return ocs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PortfolioCfgData::release_ocs() {
  // @@protoc_insertion_point(field_release:XT.PortfolioCfgData.ocs)
  clear_has_ocs();
  return ocs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_allocated_ocs(::std::string* ocs) {
  if (ocs != NULL) {
    set_has_ocs();
  } else {
    clear_has_ocs();
  }
  ocs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ocs);
  // @@protoc_insertion_point(field_set_allocated:XT.PortfolioCfgData.ocs)
}

// optional string fc = 3 [default = ""];
inline bool PortfolioCfgData::has_fc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PortfolioCfgData::set_has_fc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PortfolioCfgData::clear_has_fc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PortfolioCfgData::clear_fc() {
  fc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fc();
}
inline const ::std::string& PortfolioCfgData::fc() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioCfgData.fc)
  return fc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_fc(const ::std::string& value) {
  set_has_fc();
  fc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PortfolioCfgData.fc)
}
inline void PortfolioCfgData::set_fc(const char* value) {
  set_has_fc();
  fc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PortfolioCfgData.fc)
}
inline void PortfolioCfgData::set_fc(const char* value, size_t size) {
  set_has_fc();
  fc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PortfolioCfgData.fc)
}
inline ::std::string* PortfolioCfgData::mutable_fc() {
  set_has_fc();
  // @@protoc_insertion_point(field_mutable:XT.PortfolioCfgData.fc)
  return fc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PortfolioCfgData::release_fc() {
  // @@protoc_insertion_point(field_release:XT.PortfolioCfgData.fc)
  clear_has_fc();
  return fc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioCfgData::set_allocated_fc(::std::string* fc) {
  if (fc != NULL) {
    set_has_fc();
  } else {
    clear_has_fc();
  }
  fc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fc);
  // @@protoc_insertion_point(field_set_allocated:XT.PortfolioCfgData.fc)
}

// -------------------------------------------------------------------

// PortfolioData

// optional string name = 1 [default = ""];
inline bool PortfolioData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PortfolioData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PortfolioData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PortfolioData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PortfolioData::name() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PortfolioData.name)
}
inline void PortfolioData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PortfolioData.name)
}
inline void PortfolioData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PortfolioData.name)
}
inline ::std::string* PortfolioData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.PortfolioData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PortfolioData::release_name() {
  // @@protoc_insertion_point(field_release:XT.PortfolioData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PortfolioData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.PortfolioData.name)
}

// optional double rpnlcurr = 11 [default = 0];
inline bool PortfolioData::has_rpnlcurr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PortfolioData::set_has_rpnlcurr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PortfolioData::clear_has_rpnlcurr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PortfolioData::clear_rpnlcurr() {
  rpnlcurr_ = 0;
  clear_has_rpnlcurr();
}
inline double PortfolioData::rpnlcurr() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.rpnlcurr)
  return rpnlcurr_;
}
inline void PortfolioData::set_rpnlcurr(double value) {
  set_has_rpnlcurr();
  rpnlcurr_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.rpnlcurr)
}

// optional double upnlcurr = 12 [default = 0];
inline bool PortfolioData::has_upnlcurr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PortfolioData::set_has_upnlcurr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PortfolioData::clear_has_upnlcurr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PortfolioData::clear_upnlcurr() {
  upnlcurr_ = 0;
  clear_has_upnlcurr();
}
inline double PortfolioData::upnlcurr() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.upnlcurr)
  return upnlcurr_;
}
inline void PortfolioData::set_upnlcurr(double value) {
  set_has_upnlcurr();
  upnlcurr_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.upnlcurr)
}

// optional double rpnlprev = 13 [default = 0];
inline bool PortfolioData::has_rpnlprev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PortfolioData::set_has_rpnlprev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PortfolioData::clear_has_rpnlprev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PortfolioData::clear_rpnlprev() {
  rpnlprev_ = 0;
  clear_has_rpnlprev();
}
inline double PortfolioData::rpnlprev() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.rpnlprev)
  return rpnlprev_;
}
inline void PortfolioData::set_rpnlprev(double value) {
  set_has_rpnlprev();
  rpnlprev_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.rpnlprev)
}

// optional double upnlprev = 14 [default = 0];
inline bool PortfolioData::has_upnlprev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PortfolioData::set_has_upnlprev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PortfolioData::clear_has_upnlprev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PortfolioData::clear_upnlprev() {
  upnlprev_ = 0;
  clear_has_upnlprev();
}
inline double PortfolioData::upnlprev() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.upnlprev)
  return upnlprev_;
}
inline void PortfolioData::set_upnlprev(double value) {
  set_has_upnlprev();
  upnlprev_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.upnlprev)
}

// optional double rpnl = 15 [default = 0];
inline bool PortfolioData::has_rpnl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PortfolioData::set_has_rpnl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PortfolioData::clear_has_rpnl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PortfolioData::clear_rpnl() {
  rpnl_ = 0;
  clear_has_rpnl();
}
inline double PortfolioData::rpnl() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.rpnl)
  return rpnl_;
}
inline void PortfolioData::set_rpnl(double value) {
  set_has_rpnl();
  rpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.rpnl)
}

// optional double upnl = 16 [default = 0];
inline bool PortfolioData::has_upnl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PortfolioData::set_has_upnl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PortfolioData::clear_has_upnl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PortfolioData::clear_upnl() {
  upnl_ = 0;
  clear_has_upnl();
}
inline double PortfolioData::upnl() const {
  // @@protoc_insertion_point(field_get:XT.PortfolioData.upnl)
  return upnl_;
}
inline void PortfolioData::set_upnl(double value) {
  set_has_upnl();
  upnl_ = value;
  // @@protoc_insertion_point(field_set:XT.PortfolioData.upnl)
}

// -------------------------------------------------------------------

// PICfgData

// optional double deltanormmax = 1 [default = 0];
inline bool PICfgData::has_deltanormmax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PICfgData::set_has_deltanormmax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PICfgData::clear_has_deltanormmax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PICfgData::clear_deltanormmax() {
  deltanormmax_ = 0;
  clear_has_deltanormmax();
}
inline double PICfgData::deltanormmax() const {
  // @@protoc_insertion_point(field_get:XT.PICfgData.deltanormmax)
  return deltanormmax_;
}
inline void PICfgData::set_deltanormmax(double value) {
  set_has_deltanormmax();
  deltanormmax_ = value;
  // @@protoc_insertion_point(field_set:XT.PICfgData.deltanormmax)
}

// map<string, string> namestrmap = 30;
inline int PICfgData::namestrmap_size() const {
  return namestrmap_.size();
}
inline void PICfgData::clear_namestrmap() {
  namestrmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PICfgData::namestrmap() const {
  // @@protoc_insertion_point(field_map:XT.PICfgData.namestrmap)
  return namestrmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PICfgData::mutable_namestrmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PICfgData.namestrmap)
  return namestrmap_.MutableMap();
}

// -------------------------------------------------------------------

// PIData

// optional string name = 1 [default = ""];
inline bool PIData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PIData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PIData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PIData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PIData::name() const {
  // @@protoc_insertion_point(field_get:XT.PIData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PIData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PIData.name)
}
inline void PIData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PIData.name)
}
inline void PIData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PIData.name)
}
inline ::std::string* PIData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:XT.PIData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PIData::release_name() {
  // @@protoc_insertion_point(field_release:XT.PIData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PIData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XT.PIData.name)
}

// optional string product = 2 [default = ""];
inline bool PIData::has_product() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PIData::set_has_product() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PIData::clear_has_product() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PIData::clear_product() {
  product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product();
}
inline const ::std::string& PIData::product() const {
  // @@protoc_insertion_point(field_get:XT.PIData.product)
  return product_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PIData::set_product(const ::std::string& value) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PIData.product)
}
inline void PIData::set_product(const char* value) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PIData.product)
}
inline void PIData::set_product(const char* value, size_t size) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PIData.product)
}
inline ::std::string* PIData::mutable_product() {
  set_has_product();
  // @@protoc_insertion_point(field_mutable:XT.PIData.product)
  return product_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PIData::release_product() {
  // @@protoc_insertion_point(field_release:XT.PIData.product)
  clear_has_product();
  return product_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PIData::set_allocated_product(::std::string* product) {
  if (product != NULL) {
    set_has_product();
  } else {
    clear_has_product();
  }
  product_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product);
  // @@protoc_insertion_point(field_set_allocated:XT.PIData.product)
}

// optional int32 tradingday = 3 [default = 0];
inline bool PIData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PIData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PIData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PIData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 PIData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.PIData.tradingday)
  return tradingday_;
}
inline void PIData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.tradingday)
}

// optional int32 prevtradingday = 4 [default = 0];
inline bool PIData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PIData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PIData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PIData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 PIData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.PIData.prevtradingday)
  return prevtradingday_;
}
inline void PIData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.prevtradingday)
}

// optional int64 currmktts = 5 [default = 0];
inline bool PIData::has_currmktts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PIData::set_has_currmktts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PIData::clear_has_currmktts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PIData::clear_currmktts() {
  currmktts_ = GOOGLE_LONGLONG(0);
  clear_has_currmktts();
}
inline ::google::protobuf::int64 PIData::currmktts() const {
  // @@protoc_insertion_point(field_get:XT.PIData.currmktts)
  return currmktts_;
}
inline void PIData::set_currmktts(::google::protobuf::int64 value) {
  set_has_currmktts();
  currmktts_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.currmktts)
}

// optional int32 currsessionidx = 6 [default = 0];
inline bool PIData::has_currsessionidx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PIData::set_has_currsessionidx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PIData::clear_has_currsessionidx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PIData::clear_currsessionidx() {
  currsessionidx_ = 0;
  clear_has_currsessionidx();
}
inline ::google::protobuf::int32 PIData::currsessionidx() const {
  // @@protoc_insertion_point(field_get:XT.PIData.currsessionidx)
  return currsessionidx_;
}
inline void PIData::set_currsessionidx(::google::protobuf::int32 value) {
  set_has_currsessionidx();
  currsessionidx_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.currsessionidx)
}

// optional int64 currsessionbegints = 7 [default = 0];
inline bool PIData::has_currsessionbegints() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PIData::set_has_currsessionbegints() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PIData::clear_has_currsessionbegints() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PIData::clear_currsessionbegints() {
  currsessionbegints_ = GOOGLE_LONGLONG(0);
  clear_has_currsessionbegints();
}
inline ::google::protobuf::int64 PIData::currsessionbegints() const {
  // @@protoc_insertion_point(field_get:XT.PIData.currsessionbegints)
  return currsessionbegints_;
}
inline void PIData::set_currsessionbegints(::google::protobuf::int64 value) {
  set_has_currsessionbegints();
  currsessionbegints_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.currsessionbegints)
}

// optional int64 currsessionendts = 8 [default = 0];
inline bool PIData::has_currsessionendts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PIData::set_has_currsessionendts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PIData::clear_has_currsessionendts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PIData::clear_currsessionendts() {
  currsessionendts_ = GOOGLE_LONGLONG(0);
  clear_has_currsessionendts();
}
inline ::google::protobuf::int64 PIData::currsessionendts() const {
  // @@protoc_insertion_point(field_get:XT.PIData.currsessionendts)
  return currsessionendts_;
}
inline void PIData::set_currsessionendts(::google::protobuf::int64 value) {
  set_has_currsessionendts();
  currsessionendts_ = value;
  // @@protoc_insertion_point(field_set:XT.PIData.currsessionendts)
}

// map<int32, double> tagdoublemap = 30;
inline int PIData::tagdoublemap_size() const {
  return tagdoublemap_.size();
}
inline void PIData::clear_tagdoublemap() {
  tagdoublemap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
PIData::tagdoublemap() const {
  // @@protoc_insertion_point(field_map:XT.PIData.tagdoublemap)
  return tagdoublemap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
PIData::mutable_tagdoublemap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PIData.tagdoublemap)
  return tagdoublemap_.MutableMap();
}

// map<int32, int32> tagintmap = 31;
inline int PIData::tagintmap_size() const {
  return tagintmap_.size();
}
inline void PIData::clear_tagintmap() {
  tagintmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
PIData::tagintmap() const {
  // @@protoc_insertion_point(field_map:XT.PIData.tagintmap)
  return tagintmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
PIData::mutable_tagintmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.PIData.tagintmap)
  return tagintmap_.MutableMap();
}

// -------------------------------------------------------------------

// OrderMgrData

// optional int32 orderpoolsz = 1 [default = 128];
inline bool OrderMgrData::has_orderpoolsz() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderMgrData::set_has_orderpoolsz() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderMgrData::clear_has_orderpoolsz() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderMgrData::clear_orderpoolsz() {
  orderpoolsz_ = 128;
  clear_has_orderpoolsz();
}
inline ::google::protobuf::int32 OrderMgrData::orderpoolsz() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.orderpoolsz)
  return orderpoolsz_;
}
inline void OrderMgrData::set_orderpoolsz(::google::protobuf::int32 value) {
  set_has_orderpoolsz();
  orderpoolsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.orderpoolsz)
}

// optional int32 quotepoolsz = 2 [default = 0];
inline bool OrderMgrData::has_quotepoolsz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderMgrData::set_has_quotepoolsz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderMgrData::clear_has_quotepoolsz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderMgrData::clear_quotepoolsz() {
  quotepoolsz_ = 0;
  clear_has_quotepoolsz();
}
inline ::google::protobuf::int32 OrderMgrData::quotepoolsz() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.quotepoolsz)
  return quotepoolsz_;
}
inline void OrderMgrData::set_quotepoolsz(::google::protobuf::int32 value) {
  set_has_quotepoolsz();
  quotepoolsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.quotepoolsz)
}

// optional int32 numorderssent = 3 [default = 0];
inline bool OrderMgrData::has_numorderssent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderMgrData::set_has_numorderssent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderMgrData::clear_has_numorderssent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderMgrData::clear_numorderssent() {
  numorderssent_ = 0;
  clear_has_numorderssent();
}
inline ::google::protobuf::int32 OrderMgrData::numorderssent() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numorderssent)
  return numorderssent_;
}
inline void OrderMgrData::set_numorderssent(::google::protobuf::int32 value) {
  set_has_numorderssent();
  numorderssent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numorderssent)
}

// optional int32 numorderssentrejected = 4 [default = 0];
inline bool OrderMgrData::has_numorderssentrejected() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderMgrData::set_has_numorderssentrejected() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderMgrData::clear_has_numorderssentrejected() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderMgrData::clear_numorderssentrejected() {
  numorderssentrejected_ = 0;
  clear_has_numorderssentrejected();
}
inline ::google::protobuf::int32 OrderMgrData::numorderssentrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numorderssentrejected)
  return numorderssentrejected_;
}
inline void OrderMgrData::set_numorderssentrejected(::google::protobuf::int32 value) {
  set_has_numorderssentrejected();
  numorderssentrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numorderssentrejected)
}

// optional int32 numorderscxlsent = 5 [default = 0];
inline bool OrderMgrData::has_numorderscxlsent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderMgrData::set_has_numorderscxlsent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderMgrData::clear_has_numorderscxlsent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderMgrData::clear_numorderscxlsent() {
  numorderscxlsent_ = 0;
  clear_has_numorderscxlsent();
}
inline ::google::protobuf::int32 OrderMgrData::numorderscxlsent() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numorderscxlsent)
  return numorderscxlsent_;
}
inline void OrderMgrData::set_numorderscxlsent(::google::protobuf::int32 value) {
  set_has_numorderscxlsent();
  numorderscxlsent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numorderscxlsent)
}

// optional int32 numorderscxlrejected = 6 [default = 0];
inline bool OrderMgrData::has_numorderscxlrejected() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderMgrData::set_has_numorderscxlrejected() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderMgrData::clear_has_numorderscxlrejected() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderMgrData::clear_numorderscxlrejected() {
  numorderscxlrejected_ = 0;
  clear_has_numorderscxlrejected();
}
inline ::google::protobuf::int32 OrderMgrData::numorderscxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numorderscxlrejected)
  return numorderscxlrejected_;
}
inline void OrderMgrData::set_numorderscxlrejected(::google::protobuf::int32 value) {
  set_has_numorderscxlrejected();
  numorderscxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numorderscxlrejected)
}

// optional int32 numquotessent = 7 [default = 0];
inline bool OrderMgrData::has_numquotessent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderMgrData::set_has_numquotessent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderMgrData::clear_has_numquotessent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderMgrData::clear_numquotessent() {
  numquotessent_ = 0;
  clear_has_numquotessent();
}
inline ::google::protobuf::int32 OrderMgrData::numquotessent() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numquotessent)
  return numquotessent_;
}
inline void OrderMgrData::set_numquotessent(::google::protobuf::int32 value) {
  set_has_numquotessent();
  numquotessent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numquotessent)
}

// optional int32 numquotessentrejected = 8 [default = 0];
inline bool OrderMgrData::has_numquotessentrejected() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderMgrData::set_has_numquotessentrejected() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderMgrData::clear_has_numquotessentrejected() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderMgrData::clear_numquotessentrejected() {
  numquotessentrejected_ = 0;
  clear_has_numquotessentrejected();
}
inline ::google::protobuf::int32 OrderMgrData::numquotessentrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numquotessentrejected)
  return numquotessentrejected_;
}
inline void OrderMgrData::set_numquotessentrejected(::google::protobuf::int32 value) {
  set_has_numquotessentrejected();
  numquotessentrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numquotessentrejected)
}

// optional int32 numquotescxlsent = 9 [default = 0];
inline bool OrderMgrData::has_numquotescxlsent() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OrderMgrData::set_has_numquotescxlsent() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OrderMgrData::clear_has_numquotescxlsent() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OrderMgrData::clear_numquotescxlsent() {
  numquotescxlsent_ = 0;
  clear_has_numquotescxlsent();
}
inline ::google::protobuf::int32 OrderMgrData::numquotescxlsent() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numquotescxlsent)
  return numquotescxlsent_;
}
inline void OrderMgrData::set_numquotescxlsent(::google::protobuf::int32 value) {
  set_has_numquotescxlsent();
  numquotescxlsent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numquotescxlsent)
}

// optional int32 numquotescxlrejected = 10 [default = 0];
inline bool OrderMgrData::has_numquotescxlrejected() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OrderMgrData::set_has_numquotescxlrejected() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OrderMgrData::clear_has_numquotescxlrejected() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OrderMgrData::clear_numquotescxlrejected() {
  numquotescxlrejected_ = 0;
  clear_has_numquotescxlrejected();
}
inline ::google::protobuf::int32 OrderMgrData::numquotescxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.numquotescxlrejected)
  return numquotescxlrejected_;
}
inline void OrderMgrData::set_numquotescxlrejected(::google::protobuf::int32 value) {
  set_has_numquotescxlrejected();
  numquotescxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.numquotescxlrejected)
}

// optional int64 tssuspend = 11 [default = 0];
inline bool OrderMgrData::has_tssuspend() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OrderMgrData::set_has_tssuspend() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OrderMgrData::clear_has_tssuspend() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OrderMgrData::clear_tssuspend() {
  tssuspend_ = GOOGLE_LONGLONG(0);
  clear_has_tssuspend();
}
inline ::google::protobuf::int64 OrderMgrData::tssuspend() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrData.tssuspend)
  return tssuspend_;
}
inline void OrderMgrData::set_tssuspend(::google::protobuf::int64 value) {
  set_has_tssuspend();
  tssuspend_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrData.tssuspend)
}

// -------------------------------------------------------------------

// OrderMgrCfgData

// optional int32 orderpoolszstep = 1 [default = 128];
inline bool OrderMgrCfgData::has_orderpoolszstep() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderMgrCfgData::set_has_orderpoolszstep() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderMgrCfgData::clear_has_orderpoolszstep() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderMgrCfgData::clear_orderpoolszstep() {
  orderpoolszstep_ = 128;
  clear_has_orderpoolszstep();
}
inline ::google::protobuf::int32 OrderMgrCfgData::orderpoolszstep() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.orderpoolszstep)
  return orderpoolszstep_;
}
inline void OrderMgrCfgData::set_orderpoolszstep(::google::protobuf::int32 value) {
  set_has_orderpoolszstep();
  orderpoolszstep_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.orderpoolszstep)
}

// optional int32 orderpoolszmax = 2 [default = 4096];
inline bool OrderMgrCfgData::has_orderpoolszmax() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderMgrCfgData::set_has_orderpoolszmax() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderMgrCfgData::clear_has_orderpoolszmax() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderMgrCfgData::clear_orderpoolszmax() {
  orderpoolszmax_ = 4096;
  clear_has_orderpoolszmax();
}
inline ::google::protobuf::int32 OrderMgrCfgData::orderpoolszmax() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.orderpoolszmax)
  return orderpoolszmax_;
}
inline void OrderMgrCfgData::set_orderpoolszmax(::google::protobuf::int32 value) {
  set_has_orderpoolszmax();
  orderpoolszmax_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.orderpoolszmax)
}

// optional int32 quotepoolszstep = 3 [default = 128];
inline bool OrderMgrCfgData::has_quotepoolszstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderMgrCfgData::set_has_quotepoolszstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderMgrCfgData::clear_has_quotepoolszstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderMgrCfgData::clear_quotepoolszstep() {
  quotepoolszstep_ = 128;
  clear_has_quotepoolszstep();
}
inline ::google::protobuf::int32 OrderMgrCfgData::quotepoolszstep() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.quotepoolszstep)
  return quotepoolszstep_;
}
inline void OrderMgrCfgData::set_quotepoolszstep(::google::protobuf::int32 value) {
  set_has_quotepoolszstep();
  quotepoolszstep_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.quotepoolszstep)
}

// optional int32 quotepoolszmax = 4 [default = 4096];
inline bool OrderMgrCfgData::has_quotepoolszmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderMgrCfgData::set_has_quotepoolszmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderMgrCfgData::clear_has_quotepoolszmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderMgrCfgData::clear_quotepoolszmax() {
  quotepoolszmax_ = 4096;
  clear_has_quotepoolszmax();
}
inline ::google::protobuf::int32 OrderMgrCfgData::quotepoolszmax() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.quotepoolszmax)
  return quotepoolszmax_;
}
inline void OrderMgrCfgData::set_quotepoolszmax(::google::protobuf::int32 value) {
  set_has_quotepoolszmax();
  quotepoolszmax_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.quotepoolszmax)
}

// optional int32 maxreqpersec = 5 [default = 498];
inline bool OrderMgrCfgData::has_maxreqpersec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderMgrCfgData::set_has_maxreqpersec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderMgrCfgData::clear_has_maxreqpersec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderMgrCfgData::clear_maxreqpersec() {
  maxreqpersec_ = 498;
  clear_has_maxreqpersec();
}
inline ::google::protobuf::int32 OrderMgrCfgData::maxreqpersec() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.maxreqpersec)
  return maxreqpersec_;
}
inline void OrderMgrCfgData::set_maxreqpersec(::google::protobuf::int32 value) {
  set_has_maxreqpersec();
  maxreqpersec_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.maxreqpersec)
}

// optional int32 maxfemasreqpersec = 6 [default = 123];
inline bool OrderMgrCfgData::has_maxfemasreqpersec() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderMgrCfgData::set_has_maxfemasreqpersec() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderMgrCfgData::clear_has_maxfemasreqpersec() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderMgrCfgData::clear_maxfemasreqpersec() {
  maxfemasreqpersec_ = 123;
  clear_has_maxfemasreqpersec();
}
inline ::google::protobuf::int32 OrderMgrCfgData::maxfemasreqpersec() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.maxfemasreqpersec)
  return maxfemasreqpersec_;
}
inline void OrderMgrCfgData::set_maxfemasreqpersec(::google::protobuf::int32 value) {
  set_has_maxfemasreqpersec();
  maxfemasreqpersec_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.maxfemasreqpersec)
}

// optional int32 maxorderssent = 7 [default = 0];
inline bool OrderMgrCfgData::has_maxorderssent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderMgrCfgData::set_has_maxorderssent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderMgrCfgData::clear_has_maxorderssent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderMgrCfgData::clear_maxorderssent() {
  maxorderssent_ = 0;
  clear_has_maxorderssent();
}
inline ::google::protobuf::int32 OrderMgrCfgData::maxorderssent() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.maxorderssent)
  return maxorderssent_;
}
inline void OrderMgrCfgData::set_maxorderssent(::google::protobuf::int32 value) {
  set_has_maxorderssent();
  maxorderssent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.maxorderssent)
}

// optional int32 maxorderscxled = 8 [default = 0];
inline bool OrderMgrCfgData::has_maxorderscxled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderMgrCfgData::set_has_maxorderscxled() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderMgrCfgData::clear_has_maxorderscxled() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderMgrCfgData::clear_maxorderscxled() {
  maxorderscxled_ = 0;
  clear_has_maxorderscxled();
}
inline ::google::protobuf::int32 OrderMgrCfgData::maxorderscxled() const {
  // @@protoc_insertion_point(field_get:XT.OrderMgrCfgData.maxorderscxled)
  return maxorderscxled_;
}
inline void OrderMgrCfgData::set_maxorderscxled(::google::protobuf::int32 value) {
  set_has_maxorderscxled();
  maxorderscxled_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderMgrCfgData.maxorderscxled)
}

// -------------------------------------------------------------------

// ForQuoteMgrCfgData

// optional int32 rspwaitingseconds = 1 [default = 5];
inline bool ForQuoteMgrCfgData::has_rspwaitingseconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForQuoteMgrCfgData::set_has_rspwaitingseconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForQuoteMgrCfgData::clear_has_rspwaitingseconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForQuoteMgrCfgData::clear_rspwaitingseconds() {
  rspwaitingseconds_ = 5;
  clear_has_rspwaitingseconds();
}
inline ::google::protobuf::int32 ForQuoteMgrCfgData::rspwaitingseconds() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteMgrCfgData.rspwaitingseconds)
  return rspwaitingseconds_;
}
inline void ForQuoteMgrCfgData::set_rspwaitingseconds(::google::protobuf::int32 value) {
  set_has_rspwaitingseconds();
  rspwaitingseconds_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteMgrCfgData.rspwaitingseconds)
}

// optional int32 maxqueuesz = 2 [default = 4096];
inline bool ForQuoteMgrCfgData::has_maxqueuesz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForQuoteMgrCfgData::set_has_maxqueuesz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForQuoteMgrCfgData::clear_has_maxqueuesz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForQuoteMgrCfgData::clear_maxqueuesz() {
  maxqueuesz_ = 4096;
  clear_has_maxqueuesz();
}
inline ::google::protobuf::int32 ForQuoteMgrCfgData::maxqueuesz() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteMgrCfgData.maxqueuesz)
  return maxqueuesz_;
}
inline void ForQuoteMgrCfgData::set_maxqueuesz(::google::protobuf::int32 value) {
  set_has_maxqueuesz();
  maxqueuesz_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteMgrCfgData.maxqueuesz)
}

// optional int32 maxwaitingseconds = 3 [default = 20];
inline bool ForQuoteMgrCfgData::has_maxwaitingseconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForQuoteMgrCfgData::set_has_maxwaitingseconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForQuoteMgrCfgData::clear_has_maxwaitingseconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForQuoteMgrCfgData::clear_maxwaitingseconds() {
  maxwaitingseconds_ = 20;
  clear_has_maxwaitingseconds();
}
inline ::google::protobuf::int32 ForQuoteMgrCfgData::maxwaitingseconds() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteMgrCfgData.maxwaitingseconds)
  return maxwaitingseconds_;
}
inline void ForQuoteMgrCfgData::set_maxwaitingseconds(::google::protobuf::int32 value) {
  set_has_maxwaitingseconds();
  maxwaitingseconds_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteMgrCfgData.maxwaitingseconds)
}

// -------------------------------------------------------------------

// CfgData

// map<string, .XT.StratCfgData> stratcfgmap = 1;
inline int CfgData::stratcfgmap_size() const {
  return stratcfgmap_.size();
}
inline void CfgData::clear_stratcfgmap() {
  stratcfgmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::StratCfgData >&
CfgData::stratcfgmap() const {
  // @@protoc_insertion_point(field_map:XT.CfgData.stratcfgmap)
  return stratcfgmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::StratCfgData >*
CfgData::mutable_stratcfgmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CfgData.stratcfgmap)
  return stratcfgmap_.MutableMap();
}

// map<string, .XT.PICfgData> picfgmap = 2;
inline int CfgData::picfgmap_size() const {
  return picfgmap_.size();
}
inline void CfgData::clear_picfgmap() {
  picfgmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::PICfgData >&
CfgData::picfgmap() const {
  // @@protoc_insertion_point(field_map:XT.CfgData.picfgmap)
  return picfgmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::PICfgData >*
CfgData::mutable_picfgmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CfgData.picfgmap)
  return picfgmap_.MutableMap();
}

// map<string, .XT.OCCfgData> occfgmap = 3;
inline int CfgData::occfgmap_size() const {
  return occfgmap_.size();
}
inline void CfgData::clear_occfgmap() {
  occfgmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::OCCfgData >&
CfgData::occfgmap() const {
  // @@protoc_insertion_point(field_map:XT.CfgData.occfgmap)
  return occfgmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::OCCfgData >*
CfgData::mutable_occfgmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CfgData.occfgmap)
  return occfgmap_.MutableMap();
}

// map<string, .XT.FCCfgData> fccfgmap = 4;
inline int CfgData::fccfgmap_size() const {
  return fccfgmap_.size();
}
inline void CfgData::clear_fccfgmap() {
  fccfgmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::FCCfgData >&
CfgData::fccfgmap() const {
  // @@protoc_insertion_point(field_map:XT.CfgData.fccfgmap)
  return fccfgmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::FCCfgData >*
CfgData::mutable_fccfgmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CfgData.fccfgmap)
  return fccfgmap_.MutableMap();
}

// map<string, .XT.InstrCfgData> instrcfgmap = 5;
inline int CfgData::instrcfgmap_size() const {
  return instrcfgmap_.size();
}
inline void CfgData::clear_instrcfgmap() {
  instrcfgmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XT::InstrCfgData >&
CfgData::instrcfgmap() const {
  // @@protoc_insertion_point(field_map:XT.CfgData.instrcfgmap)
  return instrcfgmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XT::InstrCfgData >*
CfgData::mutable_instrcfgmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.CfgData.instrcfgmap)
  return instrcfgmap_.MutableMap();
}

// -------------------------------------------------------------------

// ExchangeInfo

// optional string exchid = 1;
inline bool ExchangeInfo::has_exchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeInfo::set_has_exchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeInfo::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeInfo::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& ExchangeInfo::exchid() const {
  // @@protoc_insertion_point(field_get:XT.ExchangeInfo.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExchangeInfo::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ExchangeInfo.exchid)
}
inline void ExchangeInfo::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ExchangeInfo.exchid)
}
inline void ExchangeInfo::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ExchangeInfo.exchid)
}
inline ::std::string* ExchangeInfo::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.ExchangeInfo.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExchangeInfo::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.ExchangeInfo.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExchangeInfo::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.ExchangeInfo.exchid)
}

// optional int32 exchtype = 2;
inline bool ExchangeInfo::has_exchtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeInfo::set_has_exchtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeInfo::clear_has_exchtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeInfo::clear_exchtype() {
  exchtype_ = 0;
  clear_has_exchtype();
}
inline ::google::protobuf::int32 ExchangeInfo::exchtype() const {
  // @@protoc_insertion_point(field_get:XT.ExchangeInfo.exchtype)
  return exchtype_;
}
inline void ExchangeInfo::set_exchtype(::google::protobuf::int32 value) {
  set_has_exchtype();
  exchtype_ = value;
  // @@protoc_insertion_point(field_set:XT.ExchangeInfo.exchtype)
}

// -------------------------------------------------------------------

// FillInfo

// optional string instrid = 1 [default = ""];
inline bool FillInfo::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FillInfo::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FillInfo::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FillInfo::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& FillInfo::instrid() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FillInfo::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.FillInfo.instrid)
}
inline void FillInfo::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.FillInfo.instrid)
}
inline void FillInfo::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.FillInfo.instrid)
}
inline ::std::string* FillInfo::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.FillInfo.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FillInfo::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.FillInfo.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FillInfo::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.FillInfo.instrid)
}

// optional int64 ts = 2 [default = 0];
inline bool FillInfo::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FillInfo::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FillInfo::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FillInfo::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 FillInfo::ts() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.ts)
  return ts_;
}
inline void FillInfo::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.ts)
}

// optional int32 orderid = 3 [default = 0];
inline bool FillInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FillInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FillInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FillInfo::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 FillInfo::orderid() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.orderid)
  return orderid_;
}
inline void FillInfo::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.orderid)
}

// optional int32 bstype = 4 [default = 0];
inline bool FillInfo::has_bstype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FillInfo::set_has_bstype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FillInfo::clear_has_bstype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FillInfo::clear_bstype() {
  bstype_ = 0;
  clear_has_bstype();
}
inline ::google::protobuf::int32 FillInfo::bstype() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.bstype)
  return bstype_;
}
inline void FillInfo::set_bstype(::google::protobuf::int32 value) {
  set_has_bstype();
  bstype_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.bstype)
}

// optional double px = 5 [default = 0];
inline bool FillInfo::has_px() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FillInfo::set_has_px() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FillInfo::clear_has_px() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FillInfo::clear_px() {
  px_ = 0;
  clear_has_px();
}
inline double FillInfo::px() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.px)
  return px_;
}
inline void FillInfo::set_px(double value) {
  set_has_px();
  px_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.px)
}

// optional int64 sz = 6 [default = 0];
inline bool FillInfo::has_sz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FillInfo::set_has_sz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FillInfo::clear_has_sz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FillInfo::clear_sz() {
  sz_ = GOOGLE_LONGLONG(0);
  clear_has_sz();
}
inline ::google::protobuf::int64 FillInfo::sz() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.sz)
  return sz_;
}
inline void FillInfo::set_sz(::google::protobuf::int64 value) {
  set_has_sz();
  sz_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.sz)
}

// optional int32 ocflag = 7 [default = 0];
inline bool FillInfo::has_ocflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FillInfo::set_has_ocflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FillInfo::clear_has_ocflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FillInfo::clear_ocflag() {
  ocflag_ = 0;
  clear_has_ocflag();
}
inline ::google::protobuf::int32 FillInfo::ocflag() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.ocflag)
  return ocflag_;
}
inline void FillInfo::set_ocflag(::google::protobuf::int32 value) {
  set_has_ocflag();
  ocflag_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.ocflag)
}

// optional int32 flag = 8 [default = 0];
inline bool FillInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FillInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FillInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FillInfo::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 FillInfo::flag() const {
  // @@protoc_insertion_point(field_get:XT.FillInfo.flag)
  return flag_;
}
inline void FillInfo::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:XT.FillInfo.flag)
}

// -------------------------------------------------------------------

// FillStatData

// optional double buypxvolume = 1 [default = 0];
inline bool FillStatData::has_buypxvolume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FillStatData::set_has_buypxvolume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FillStatData::clear_has_buypxvolume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FillStatData::clear_buypxvolume() {
  buypxvolume_ = 0;
  clear_has_buypxvolume();
}
inline double FillStatData::buypxvolume() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.buypxvolume)
  return buypxvolume_;
}
inline void FillStatData::set_buypxvolume(double value) {
  set_has_buypxvolume();
  buypxvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.buypxvolume)
}

// optional double sellpxvolume = 2 [default = 0];
inline bool FillStatData::has_sellpxvolume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FillStatData::set_has_sellpxvolume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FillStatData::clear_has_sellpxvolume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FillStatData::clear_sellpxvolume() {
  sellpxvolume_ = 0;
  clear_has_sellpxvolume();
}
inline double FillStatData::sellpxvolume() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.sellpxvolume)
  return sellpxvolume_;
}
inline void FillStatData::set_sellpxvolume(double value) {
  set_has_sellpxvolume();
  sellpxvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.sellpxvolume)
}

// optional int64 buyvolume = 3 [default = 0];
inline bool FillStatData::has_buyvolume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FillStatData::set_has_buyvolume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FillStatData::clear_has_buyvolume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FillStatData::clear_buyvolume() {
  buyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_buyvolume();
}
inline ::google::protobuf::int64 FillStatData::buyvolume() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.buyvolume)
  return buyvolume_;
}
inline void FillStatData::set_buyvolume(::google::protobuf::int64 value) {
  set_has_buyvolume();
  buyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.buyvolume)
}

// optional int64 sellvolume = 4 [default = 0];
inline bool FillStatData::has_sellvolume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FillStatData::set_has_sellvolume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FillStatData::clear_has_sellvolume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FillStatData::clear_sellvolume() {
  sellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_sellvolume();
}
inline ::google::protobuf::int64 FillStatData::sellvolume() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.sellvolume)
  return sellvolume_;
}
inline void FillStatData::set_sellvolume(::google::protobuf::int64 value) {
  set_has_sellvolume();
  sellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.sellvolume)
}

// optional double rpxpnl = 5 [default = 0];
inline bool FillStatData::has_rpxpnl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FillStatData::set_has_rpxpnl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FillStatData::clear_has_rpxpnl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FillStatData::clear_rpxpnl() {
  rpxpnl_ = 0;
  clear_has_rpxpnl();
}
inline double FillStatData::rpxpnl() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.rpxpnl)
  return rpxpnl_;
}
inline void FillStatData::set_rpxpnl(double value) {
  set_has_rpxpnl();
  rpxpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.rpxpnl)
}

// optional double poscost = 6 [default = 0];
inline bool FillStatData::has_poscost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FillStatData::set_has_poscost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FillStatData::clear_has_poscost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FillStatData::clear_poscost() {
  poscost_ = 0;
  clear_has_poscost();
}
inline double FillStatData::poscost() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.poscost)
  return poscost_;
}
inline void FillStatData::set_poscost(double value) {
  set_has_poscost();
  poscost_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.poscost)
}

// optional int64 netpos = 7 [default = 0];
inline bool FillStatData::has_netpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FillStatData::set_has_netpos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FillStatData::clear_has_netpos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FillStatData::clear_netpos() {
  netpos_ = GOOGLE_LONGLONG(0);
  clear_has_netpos();
}
inline ::google::protobuf::int64 FillStatData::netpos() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.netpos)
  return netpos_;
}
inline void FillStatData::set_netpos(::google::protobuf::int64 value) {
  set_has_netpos();
  netpos_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.netpos)
}

// optional int64 netposprev = 8 [default = 0];
inline bool FillStatData::has_netposprev() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FillStatData::set_has_netposprev() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FillStatData::clear_has_netposprev() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FillStatData::clear_netposprev() {
  netposprev_ = GOOGLE_LONGLONG(0);
  clear_has_netposprev();
}
inline ::google::protobuf::int64 FillStatData::netposprev() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.netposprev)
  return netposprev_;
}
inline void FillStatData::set_netposprev(::google::protobuf::int64 value) {
  set_has_netposprev();
  netposprev_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.netposprev)
}

// optional int64 netposnew = 9 [default = 0];
inline bool FillStatData::has_netposnew() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FillStatData::set_has_netposnew() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FillStatData::clear_has_netposnew() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FillStatData::clear_netposnew() {
  netposnew_ = GOOGLE_LONGLONG(0);
  clear_has_netposnew();
}
inline ::google::protobuf::int64 FillStatData::netposnew() const {
  // @@protoc_insertion_point(field_get:XT.FillStatData.netposnew)
  return netposnew_;
}
inline void FillStatData::set_netposnew(::google::protobuf::int64 value) {
  set_has_netposnew();
  netposnew_ = value;
  // @@protoc_insertion_point(field_set:XT.FillStatData.netposnew)
}

// -------------------------------------------------------------------

// RequestIdData

// optional int32 idtype = 1 [default = 0];
inline bool RequestIdData::has_idtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestIdData::set_has_idtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestIdData::clear_has_idtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestIdData::clear_idtype() {
  idtype_ = 0;
  clear_has_idtype();
}
inline ::google::protobuf::int32 RequestIdData::idtype() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.idtype)
  return idtype_;
}
inline void RequestIdData::set_idtype(::google::protobuf::int32 value) {
  set_has_idtype();
  idtype_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.idtype)
}

// optional int64 reqidbase = 2 [default = 0];
inline bool RequestIdData::has_reqidbase() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestIdData::set_has_reqidbase() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestIdData::clear_has_reqidbase() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestIdData::clear_reqidbase() {
  reqidbase_ = GOOGLE_LONGLONG(0);
  clear_has_reqidbase();
}
inline ::google::protobuf::int64 RequestIdData::reqidbase() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.reqidbase)
  return reqidbase_;
}
inline void RequestIdData::set_reqidbase(::google::protobuf::int64 value) {
  set_has_reqidbase();
  reqidbase_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.reqidbase)
}

// optional int32 currinttime = 3 [default = 0];
inline bool RequestIdData::has_currinttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestIdData::set_has_currinttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestIdData::clear_has_currinttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestIdData::clear_currinttime() {
  currinttime_ = 0;
  clear_has_currinttime();
}
inline ::google::protobuf::int32 RequestIdData::currinttime() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.currinttime)
  return currinttime_;
}
inline void RequestIdData::set_currinttime(::google::protobuf::int32 value) {
  set_has_currinttime();
  currinttime_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.currinttime)
}

// optional int32 previnttime = 4 [default = 0];
inline bool RequestIdData::has_previnttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestIdData::set_has_previnttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestIdData::clear_has_previnttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestIdData::clear_previnttime() {
  previnttime_ = 0;
  clear_has_previnttime();
}
inline ::google::protobuf::int32 RequestIdData::previnttime() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.previnttime)
  return previnttime_;
}
inline void RequestIdData::set_previnttime(::google::protobuf::int32 value) {
  set_has_previnttime();
  previnttime_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.previnttime)
}

// optional int64 currtssec = 5 [default = 0];
inline bool RequestIdData::has_currtssec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestIdData::set_has_currtssec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestIdData::clear_has_currtssec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestIdData::clear_currtssec() {
  currtssec_ = GOOGLE_LONGLONG(0);
  clear_has_currtssec();
}
inline ::google::protobuf::int64 RequestIdData::currtssec() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.currtssec)
  return currtssec_;
}
inline void RequestIdData::set_currtssec(::google::protobuf::int64 value) {
  set_has_currtssec();
  currtssec_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.currtssec)
}

// optional int64 prevtssec = 6 [default = 0];
inline bool RequestIdData::has_prevtssec() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestIdData::set_has_prevtssec() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestIdData::clear_has_prevtssec() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestIdData::clear_prevtssec() {
  prevtssec_ = GOOGLE_LONGLONG(0);
  clear_has_prevtssec();
}
inline ::google::protobuf::int64 RequestIdData::prevtssec() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.prevtssec)
  return prevtssec_;
}
inline void RequestIdData::set_prevtssec(::google::protobuf::int64 value) {
  set_has_prevtssec();
  prevtssec_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.prevtssec)
}

// optional int32 currreqidinsec = 7 [default = 0];
inline bool RequestIdData::has_currreqidinsec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestIdData::set_has_currreqidinsec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestIdData::clear_has_currreqidinsec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestIdData::clear_currreqidinsec() {
  currreqidinsec_ = 0;
  clear_has_currreqidinsec();
}
inline ::google::protobuf::int32 RequestIdData::currreqidinsec() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.currreqidinsec)
  return currreqidinsec_;
}
inline void RequestIdData::set_currreqidinsec(::google::protobuf::int32 value) {
  set_has_currreqidinsec();
  currreqidinsec_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.currreqidinsec)
}

// optional int32 maxreqidinsec = 8 [default = 800];
inline bool RequestIdData::has_maxreqidinsec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestIdData::set_has_maxreqidinsec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestIdData::clear_has_maxreqidinsec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestIdData::clear_maxreqidinsec() {
  maxreqidinsec_ = 800;
  clear_has_maxreqidinsec();
}
inline ::google::protobuf::int32 RequestIdData::maxreqidinsec() const {
  // @@protoc_insertion_point(field_get:XT.RequestIdData.maxreqidinsec)
  return maxreqidinsec_;
}
inline void RequestIdData::set_maxreqidinsec(::google::protobuf::int32 value) {
  set_has_maxreqidinsec();
  maxreqidinsec_ = value;
  // @@protoc_insertion_point(field_set:XT.RequestIdData.maxreqidinsec)
}

// -------------------------------------------------------------------

// OrderInfo

// optional string instrid = 1 [default = ""];
inline bool OrderInfo::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderInfo::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderInfo::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderInfo::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& OrderInfo::instrid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.instrid)
}
inline void OrderInfo::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.instrid)
}
inline void OrderInfo::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.instrid)
}
inline ::std::string* OrderInfo::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.instrid)
}

// optional int32 iid = 2 [default = 0];
inline bool OrderInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 OrderInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.iid)
  return iid_;
}
inline void OrderInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.iid)
}

// optional int32 orderid = 3 [default = 0];
inline bool OrderInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderInfo::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 OrderInfo::orderid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.orderid)
  return orderid_;
}
inline void OrderInfo::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.orderid)
}

// optional int32 qid = 4 [default = 0];
inline bool OrderInfo::has_qid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderInfo::set_has_qid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderInfo::clear_has_qid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderInfo::clear_qid() {
  qid_ = 0;
  clear_has_qid();
}
inline ::google::protobuf::int32 OrderInfo::qid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.qid)
  return qid_;
}
inline void OrderInfo::set_qid(::google::protobuf::int32 value) {
  set_has_qid();
  qid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.qid)
}

// optional int32 bstype = 5 [default = 0];
inline bool OrderInfo::has_bstype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderInfo::set_has_bstype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderInfo::clear_has_bstype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderInfo::clear_bstype() {
  bstype_ = 0;
  clear_has_bstype();
}
inline ::google::protobuf::int32 OrderInfo::bstype() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.bstype)
  return bstype_;
}
inline void OrderInfo::set_bstype(::google::protobuf::int32 value) {
  set_has_bstype();
  bstype_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.bstype)
}

// optional double px = 6 [default = 0];
inline bool OrderInfo::has_px() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderInfo::set_has_px() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderInfo::clear_has_px() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderInfo::clear_px() {
  px_ = 0;
  clear_has_px();
}
inline double OrderInfo::px() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.px)
  return px_;
}
inline void OrderInfo::set_px(double value) {
  set_has_px();
  px_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.px)
}

// optional int64 origsz = 7 [default = 0];
inline bool OrderInfo::has_origsz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderInfo::set_has_origsz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderInfo::clear_has_origsz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderInfo::clear_origsz() {
  origsz_ = GOOGLE_LONGLONG(0);
  clear_has_origsz();
}
inline ::google::protobuf::int64 OrderInfo::origsz() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.origsz)
  return origsz_;
}
inline void OrderInfo::set_origsz(::google::protobuf::int64 value) {
  set_has_origsz();
  origsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.origsz)
}

// optional int64 opensz = 8 [default = 0];
inline bool OrderInfo::has_opensz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderInfo::set_has_opensz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderInfo::clear_has_opensz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderInfo::clear_opensz() {
  opensz_ = GOOGLE_LONGLONG(0);
  clear_has_opensz();
}
inline ::google::protobuf::int64 OrderInfo::opensz() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.opensz)
  return opensz_;
}
inline void OrderInfo::set_opensz(::google::protobuf::int64 value) {
  set_has_opensz();
  opensz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.opensz)
}

// optional int64 filledsz = 9 [default = 0];
inline bool OrderInfo::has_filledsz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OrderInfo::set_has_filledsz() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OrderInfo::clear_has_filledsz() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OrderInfo::clear_filledsz() {
  filledsz_ = GOOGLE_LONGLONG(0);
  clear_has_filledsz();
}
inline ::google::protobuf::int64 OrderInfo::filledsz() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.filledsz)
  return filledsz_;
}
inline void OrderInfo::set_filledsz(::google::protobuf::int64 value) {
  set_has_filledsz();
  filledsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.filledsz)
}

// optional int32 trdapi = 10 [default = 0];
inline bool OrderInfo::has_trdapi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OrderInfo::set_has_trdapi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OrderInfo::clear_has_trdapi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OrderInfo::clear_trdapi() {
  trdapi_ = 0;
  clear_has_trdapi();
}
inline ::google::protobuf::int32 OrderInfo::trdapi() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.trdapi)
  return trdapi_;
}
inline void OrderInfo::set_trdapi(::google::protobuf::int32 value) {
  set_has_trdapi();
  trdapi_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.trdapi)
}

// optional int32 ordertype = 11 [default = 0];
inline bool OrderInfo::has_ordertype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OrderInfo::set_has_ordertype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OrderInfo::clear_has_ordertype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OrderInfo::clear_ordertype() {
  ordertype_ = 0;
  clear_has_ordertype();
}
inline ::google::protobuf::int32 OrderInfo::ordertype() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.ordertype)
  return ordertype_;
}
inline void OrderInfo::set_ordertype(::google::protobuf::int32 value) {
  set_has_ordertype();
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.ordertype)
}

// optional int32 status = 12 [default = 0];
inline bool OrderInfo::has_status() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OrderInfo::set_has_status() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OrderInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OrderInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OrderInfo::status() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.status)
  return status_;
}
inline void OrderInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.status)
}

// optional int32 coupleoid = 13 [default = 0];
inline bool OrderInfo::has_coupleoid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OrderInfo::set_has_coupleoid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OrderInfo::clear_has_coupleoid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OrderInfo::clear_coupleoid() {
  coupleoid_ = 0;
  clear_has_coupleoid();
}
inline ::google::protobuf::int32 OrderInfo::coupleoid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.coupleoid)
  return coupleoid_;
}
inline void OrderInfo::set_coupleoid(::google::protobuf::int32 value) {
  set_has_coupleoid();
  coupleoid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.coupleoid)
}

// optional int64 oid64 = 14 [default = 0];
inline bool OrderInfo::has_oid64() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OrderInfo::set_has_oid64() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OrderInfo::clear_has_oid64() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OrderInfo::clear_oid64() {
  oid64_ = GOOGLE_LONGLONG(0);
  clear_has_oid64();
}
inline ::google::protobuf::int64 OrderInfo::oid64() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.oid64)
  return oid64_;
}
inline void OrderInfo::set_oid64(::google::protobuf::int64 value) {
  set_has_oid64();
  oid64_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.oid64)
}

// optional string gtwystrid = 15 [default = ""];
inline bool OrderInfo::has_gtwystrid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OrderInfo::set_has_gtwystrid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OrderInfo::clear_has_gtwystrid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OrderInfo::clear_gtwystrid() {
  gtwystrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gtwystrid();
}
inline const ::std::string& OrderInfo::gtwystrid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.gtwystrid)
  return gtwystrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_gtwystrid(const ::std::string& value) {
  set_has_gtwystrid();
  gtwystrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.gtwystrid)
}
inline void OrderInfo::set_gtwystrid(const char* value) {
  set_has_gtwystrid();
  gtwystrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.gtwystrid)
}
inline void OrderInfo::set_gtwystrid(const char* value, size_t size) {
  set_has_gtwystrid();
  gtwystrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.gtwystrid)
}
inline ::std::string* OrderInfo::mutable_gtwystrid() {
  set_has_gtwystrid();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.gtwystrid)
  return gtwystrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_gtwystrid() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.gtwystrid)
  clear_has_gtwystrid();
  return gtwystrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_gtwystrid(::std::string* gtwystrid) {
  if (gtwystrid != NULL) {
    set_has_gtwystrid();
  } else {
    clear_has_gtwystrid();
  }
  gtwystrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gtwystrid);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.gtwystrid)
}

// optional string exchstrid = 16 [default = ""];
inline bool OrderInfo::has_exchstrid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OrderInfo::set_has_exchstrid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OrderInfo::clear_has_exchstrid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OrderInfo::clear_exchstrid() {
  exchstrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchstrid();
}
inline const ::std::string& OrderInfo::exchstrid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.exchstrid)
  return exchstrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_exchstrid(const ::std::string& value) {
  set_has_exchstrid();
  exchstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.exchstrid)
}
inline void OrderInfo::set_exchstrid(const char* value) {
  set_has_exchstrid();
  exchstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.exchstrid)
}
inline void OrderInfo::set_exchstrid(const char* value, size_t size) {
  set_has_exchstrid();
  exchstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.exchstrid)
}
inline ::std::string* OrderInfo::mutable_exchstrid() {
  set_has_exchstrid();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.exchstrid)
  return exchstrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_exchstrid() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.exchstrid)
  clear_has_exchstrid();
  return exchstrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_exchstrid(::std::string* exchstrid) {
  if (exchstrid != NULL) {
    set_has_exchstrid();
  } else {
    clear_has_exchstrid();
  }
  exchstrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchstrid);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.exchstrid)
}

// optional string localstrid = 17 [default = ""];
inline bool OrderInfo::has_localstrid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void OrderInfo::set_has_localstrid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void OrderInfo::clear_has_localstrid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void OrderInfo::clear_localstrid() {
  localstrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localstrid();
}
inline const ::std::string& OrderInfo::localstrid() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.localstrid)
  return localstrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_localstrid(const ::std::string& value) {
  set_has_localstrid();
  localstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.localstrid)
}
inline void OrderInfo::set_localstrid(const char* value) {
  set_has_localstrid();
  localstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.localstrid)
}
inline void OrderInfo::set_localstrid(const char* value, size_t size) {
  set_has_localstrid();
  localstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.localstrid)
}
inline ::std::string* OrderInfo::mutable_localstrid() {
  set_has_localstrid();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.localstrid)
  return localstrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_localstrid() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.localstrid)
  clear_has_localstrid();
  return localstrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_localstrid(::std::string* localstrid) {
  if (localstrid != NULL) {
    set_has_localstrid();
  } else {
    clear_has_localstrid();
  }
  localstrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localstrid);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.localstrid)
}

// optional int32 stratflag = 20 [default = 0];
inline bool OrderInfo::has_stratflag() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void OrderInfo::set_has_stratflag() {
  _has_bits_[0] |= 0x00020000u;
}
inline void OrderInfo::clear_has_stratflag() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void OrderInfo::clear_stratflag() {
  stratflag_ = 0;
  clear_has_stratflag();
}
inline ::google::protobuf::int32 OrderInfo::stratflag() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.stratflag)
  return stratflag_;
}
inline void OrderInfo::set_stratflag(::google::protobuf::int32 value) {
  set_has_stratflag();
  stratflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.stratflag)
}

// optional int32 ocflag = 21 [default = 0];
inline bool OrderInfo::has_ocflag() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OrderInfo::set_has_ocflag() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OrderInfo::clear_has_ocflag() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OrderInfo::clear_ocflag() {
  ocflag_ = 0;
  clear_has_ocflag();
}
inline ::google::protobuf::int32 OrderInfo::ocflag() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.ocflag)
  return ocflag_;
}
inline void OrderInfo::set_ocflag(::google::protobuf::int32 value) {
  set_has_ocflag();
  ocflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.ocflag)
}

// optional int32 ocflagautotype = 22 [default = 0];
inline bool OrderInfo::has_ocflagautotype() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OrderInfo::set_has_ocflagautotype() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OrderInfo::clear_has_ocflagautotype() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OrderInfo::clear_ocflagautotype() {
  ocflagautotype_ = 0;
  clear_has_ocflagautotype();
}
inline ::google::protobuf::int32 OrderInfo::ocflagautotype() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.ocflagautotype)
  return ocflagautotype_;
}
inline void OrderInfo::set_ocflagautotype(::google::protobuf::int32 value) {
  set_has_ocflagautotype();
  ocflagautotype_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.ocflagautotype)
}

// optional int32 ocflagautothresh = 23 [default = 0];
inline bool OrderInfo::has_ocflagautothresh() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OrderInfo::set_has_ocflagautothresh() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OrderInfo::clear_has_ocflagautothresh() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OrderInfo::clear_ocflagautothresh() {
  ocflagautothresh_ = 0;
  clear_has_ocflagautothresh();
}
inline ::google::protobuf::int32 OrderInfo::ocflagautothresh() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.ocflagautothresh)
  return ocflagautothresh_;
}
inline void OrderInfo::set_ocflagautothresh(::google::protobuf::int32 value) {
  set_has_ocflagautothresh();
  ocflagautothresh_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.ocflagautothresh)
}

// optional int32 oqrtypemask = 24 [default = 0];
inline bool OrderInfo::has_oqrtypemask() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void OrderInfo::set_has_oqrtypemask() {
  _has_bits_[0] |= 0x00200000u;
}
inline void OrderInfo::clear_has_oqrtypemask() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void OrderInfo::clear_oqrtypemask() {
  oqrtypemask_ = 0;
  clear_has_oqrtypemask();
}
inline ::google::protobuf::int32 OrderInfo::oqrtypemask() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.oqrtypemask)
  return oqrtypemask_;
}
inline void OrderInfo::set_oqrtypemask(::google::protobuf::int32 value) {
  set_has_oqrtypemask();
  oqrtypemask_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.oqrtypemask)
}

// optional int64 tssent = 25 [default = 0];
inline bool OrderInfo::has_tssent() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void OrderInfo::set_has_tssent() {
  _has_bits_[0] |= 0x00400000u;
}
inline void OrderInfo::clear_has_tssent() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void OrderInfo::clear_tssent() {
  tssent_ = GOOGLE_LONGLONG(0);
  clear_has_tssent();
}
inline ::google::protobuf::int64 OrderInfo::tssent() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tssent)
  return tssent_;
}
inline void OrderInfo::set_tssent(::google::protobuf::int64 value) {
  set_has_tssent();
  tssent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tssent)
}

// optional int64 tssentrejected = 26 [default = 0];
inline bool OrderInfo::has_tssentrejected() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void OrderInfo::set_has_tssentrejected() {
  _has_bits_[0] |= 0x00800000u;
}
inline void OrderInfo::clear_has_tssentrejected() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void OrderInfo::clear_tssentrejected() {
  tssentrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tssentrejected();
}
inline ::google::protobuf::int64 OrderInfo::tssentrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tssentrejected)
  return tssentrejected_;
}
inline void OrderInfo::set_tssentrejected(::google::protobuf::int64 value) {
  set_has_tssentrejected();
  tssentrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tssentrejected)
}

// optional int64 tsgtwy = 27 [default = 0];
inline bool OrderInfo::has_tsgtwy() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void OrderInfo::set_has_tsgtwy() {
  _has_bits_[0] |= 0x01000000u;
}
inline void OrderInfo::clear_has_tsgtwy() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void OrderInfo::clear_tsgtwy() {
  tsgtwy_ = GOOGLE_LONGLONG(0);
  clear_has_tsgtwy();
}
inline ::google::protobuf::int64 OrderInfo::tsgtwy() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsgtwy)
  return tsgtwy_;
}
inline void OrderInfo::set_tsgtwy(::google::protobuf::int64 value) {
  set_has_tsgtwy();
  tsgtwy_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsgtwy)
}

// optional int64 tscnf = 28 [default = 0];
inline bool OrderInfo::has_tscnf() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void OrderInfo::set_has_tscnf() {
  _has_bits_[0] |= 0x02000000u;
}
inline void OrderInfo::clear_has_tscnf() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void OrderInfo::clear_tscnf() {
  tscnf_ = GOOGLE_LONGLONG(0);
  clear_has_tscnf();
}
inline ::google::protobuf::int64 OrderInfo::tscnf() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tscnf)
  return tscnf_;
}
inline void OrderInfo::set_tscnf(::google::protobuf::int64 value) {
  set_has_tscnf();
  tscnf_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tscnf)
}

// optional int64 tscxlsent = 29 [default = 0];
inline bool OrderInfo::has_tscxlsent() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void OrderInfo::set_has_tscxlsent() {
  _has_bits_[0] |= 0x04000000u;
}
inline void OrderInfo::clear_has_tscxlsent() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void OrderInfo::clear_tscxlsent() {
  tscxlsent_ = GOOGLE_LONGLONG(0);
  clear_has_tscxlsent();
}
inline ::google::protobuf::int64 OrderInfo::tscxlsent() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tscxlsent)
  return tscxlsent_;
}
inline void OrderInfo::set_tscxlsent(::google::protobuf::int64 value) {
  set_has_tscxlsent();
  tscxlsent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tscxlsent)
}

// optional int64 tscxlrejected = 30 [default = 0];
inline bool OrderInfo::has_tscxlrejected() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void OrderInfo::set_has_tscxlrejected() {
  _has_bits_[0] |= 0x08000000u;
}
inline void OrderInfo::clear_has_tscxlrejected() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void OrderInfo::clear_tscxlrejected() {
  tscxlrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tscxlrejected();
}
inline ::google::protobuf::int64 OrderInfo::tscxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tscxlrejected)
  return tscxlrejected_;
}
inline void OrderInfo::set_tscxlrejected(::google::protobuf::int64 value) {
  set_has_tscxlrejected();
  tscxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tscxlrejected)
}

// optional int64 tsfinished = 31 [default = 0];
inline bool OrderInfo::has_tsfinished() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void OrderInfo::set_has_tsfinished() {
  _has_bits_[0] |= 0x10000000u;
}
inline void OrderInfo::clear_has_tsfinished() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void OrderInfo::clear_tsfinished() {
  tsfinished_ = GOOGLE_LONGLONG(0);
  clear_has_tsfinished();
}
inline ::google::protobuf::int64 OrderInfo::tsfinished() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsfinished)
  return tsfinished_;
}
inline void OrderInfo::set_tsfinished(::google::protobuf::int64 value) {
  set_has_tsfinished();
  tsfinished_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsfinished)
}

// optional int64 tsexchrcv = 32 [default = 0];
inline bool OrderInfo::has_tsexchrcv() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void OrderInfo::set_has_tsexchrcv() {
  _has_bits_[0] |= 0x20000000u;
}
inline void OrderInfo::clear_has_tsexchrcv() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void OrderInfo::clear_tsexchrcv() {
  tsexchrcv_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchrcv();
}
inline ::google::protobuf::int64 OrderInfo::tsexchrcv() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchrcv)
  return tsexchrcv_;
}
inline void OrderInfo::set_tsexchrcv(::google::protobuf::int64 value) {
  set_has_tsexchrcv();
  tsexchrcv_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchrcv)
}

// optional int64 tsexchrcvrejected = 33 [default = 0];
inline bool OrderInfo::has_tsexchrcvrejected() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void OrderInfo::set_has_tsexchrcvrejected() {
  _has_bits_[0] |= 0x40000000u;
}
inline void OrderInfo::clear_has_tsexchrcvrejected() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void OrderInfo::clear_tsexchrcvrejected() {
  tsexchrcvrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchrcvrejected();
}
inline ::google::protobuf::int64 OrderInfo::tsexchrcvrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchrcvrejected)
  return tsexchrcvrejected_;
}
inline void OrderInfo::set_tsexchrcvrejected(::google::protobuf::int64 value) {
  set_has_tsexchrcvrejected();
  tsexchrcvrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchrcvrejected)
}

// optional int64 tsexchcnf = 34 [default = 0];
inline bool OrderInfo::has_tsexchcnf() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void OrderInfo::set_has_tsexchcnf() {
  _has_bits_[0] |= 0x80000000u;
}
inline void OrderInfo::clear_has_tsexchcnf() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void OrderInfo::clear_tsexchcnf() {
  tsexchcnf_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcnf();
}
inline ::google::protobuf::int64 OrderInfo::tsexchcnf() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchcnf)
  return tsexchcnf_;
}
inline void OrderInfo::set_tsexchcnf(::google::protobuf::int64 value) {
  set_has_tsexchcnf();
  tsexchcnf_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchcnf)
}

// optional int64 tsexchcxlrcv = 35 [default = 0];
inline bool OrderInfo::has_tsexchcxlrcv() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void OrderInfo::set_has_tsexchcxlrcv() {
  _has_bits_[1] |= 0x00000001u;
}
inline void OrderInfo::clear_has_tsexchcxlrcv() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void OrderInfo::clear_tsexchcxlrcv() {
  tsexchcxlrcv_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcxlrcv();
}
inline ::google::protobuf::int64 OrderInfo::tsexchcxlrcv() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchcxlrcv)
  return tsexchcxlrcv_;
}
inline void OrderInfo::set_tsexchcxlrcv(::google::protobuf::int64 value) {
  set_has_tsexchcxlrcv();
  tsexchcxlrcv_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchcxlrcv)
}

// optional int64 tsexchcxlrejected = 36 [default = 0];
inline bool OrderInfo::has_tsexchcxlrejected() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void OrderInfo::set_has_tsexchcxlrejected() {
  _has_bits_[1] |= 0x00000002u;
}
inline void OrderInfo::clear_has_tsexchcxlrejected() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void OrderInfo::clear_tsexchcxlrejected() {
  tsexchcxlrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcxlrejected();
}
inline ::google::protobuf::int64 OrderInfo::tsexchcxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchcxlrejected)
  return tsexchcxlrejected_;
}
inline void OrderInfo::set_tsexchcxlrejected(::google::protobuf::int64 value) {
  set_has_tsexchcxlrejected();
  tsexchcxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchcxlrejected)
}

// optional int64 tsexchfinished = 37 [default = 0];
inline bool OrderInfo::has_tsexchfinished() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void OrderInfo::set_has_tsexchfinished() {
  _has_bits_[1] |= 0x00000004u;
}
inline void OrderInfo::clear_has_tsexchfinished() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void OrderInfo::clear_tsexchfinished() {
  tsexchfinished_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchfinished();
}
inline ::google::protobuf::int64 OrderInfo::tsexchfinished() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.tsexchfinished)
  return tsexchfinished_;
}
inline void OrderInfo::set_tsexchfinished(::google::protobuf::int64 value) {
  set_has_tsexchfinished();
  tsexchfinished_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.tsexchfinished)
}

// optional int32 reasonflag = 50 [default = 0];
inline bool OrderInfo::has_reasonflag() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void OrderInfo::set_has_reasonflag() {
  _has_bits_[1] |= 0x00000008u;
}
inline void OrderInfo::clear_has_reasonflag() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void OrderInfo::clear_reasonflag() {
  reasonflag_ = 0;
  clear_has_reasonflag();
}
inline ::google::protobuf::int32 OrderInfo::reasonflag() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.reasonflag)
  return reasonflag_;
}
inline void OrderInfo::set_reasonflag(::google::protobuf::int32 value) {
  set_has_reasonflag();
  reasonflag_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.reasonflag)
}

// optional string sendmemo = 51 [default = ""];
inline bool OrderInfo::has_sendmemo() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void OrderInfo::set_has_sendmemo() {
  _has_bits_[1] |= 0x00000010u;
}
inline void OrderInfo::clear_has_sendmemo() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void OrderInfo::clear_sendmemo() {
  sendmemo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendmemo();
}
inline const ::std::string& OrderInfo::sendmemo() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.sendmemo)
  return sendmemo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_sendmemo(const ::std::string& value) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.sendmemo)
}
inline void OrderInfo::set_sendmemo(const char* value) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.sendmemo)
}
inline void OrderInfo::set_sendmemo(const char* value, size_t size) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.sendmemo)
}
inline ::std::string* OrderInfo::mutable_sendmemo() {
  set_has_sendmemo();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.sendmemo)
  return sendmemo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_sendmemo() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.sendmemo)
  clear_has_sendmemo();
  return sendmemo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_sendmemo(::std::string* sendmemo) {
  if (sendmemo != NULL) {
    set_has_sendmemo();
  } else {
    clear_has_sendmemo();
  }
  sendmemo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendmemo);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.sendmemo)
}

// optional string cxlmemo = 52 [default = ""];
inline bool OrderInfo::has_cxlmemo() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void OrderInfo::set_has_cxlmemo() {
  _has_bits_[1] |= 0x00000020u;
}
inline void OrderInfo::clear_has_cxlmemo() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void OrderInfo::clear_cxlmemo() {
  cxlmemo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cxlmemo();
}
inline const ::std::string& OrderInfo::cxlmemo() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.cxlmemo)
  return cxlmemo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_cxlmemo(const ::std::string& value) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.OrderInfo.cxlmemo)
}
inline void OrderInfo::set_cxlmemo(const char* value) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.OrderInfo.cxlmemo)
}
inline void OrderInfo::set_cxlmemo(const char* value, size_t size) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.OrderInfo.cxlmemo)
}
inline ::std::string* OrderInfo::mutable_cxlmemo() {
  set_has_cxlmemo();
  // @@protoc_insertion_point(field_mutable:XT.OrderInfo.cxlmemo)
  return cxlmemo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_cxlmemo() {
  // @@protoc_insertion_point(field_release:XT.OrderInfo.cxlmemo)
  clear_has_cxlmemo();
  return cxlmemo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_cxlmemo(::std::string* cxlmemo) {
  if (cxlmemo != NULL) {
    set_has_cxlmemo();
  } else {
    clear_has_cxlmemo();
  }
  cxlmemo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cxlmemo);
  // @@protoc_insertion_point(field_set_allocated:XT.OrderInfo.cxlmemo)
}

// optional int32 idx = 53 [default = 0];
inline bool OrderInfo::has_idx() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void OrderInfo::set_has_idx() {
  _has_bits_[1] |= 0x00000040u;
}
inline void OrderInfo::clear_has_idx() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void OrderInfo::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 OrderInfo::idx() const {
  // @@protoc_insertion_point(field_get:XT.OrderInfo.idx)
  return idx_;
}
inline void OrderInfo::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderInfo.idx)
}

// -------------------------------------------------------------------

// QuoteInfo

// optional string instrid = 1 [default = ""];
inline bool QuoteInfo::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuoteInfo::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuoteInfo::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuoteInfo::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& QuoteInfo::instrid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.instrid)
}
inline void QuoteInfo::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.instrid)
}
inline void QuoteInfo::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.instrid)
}
inline ::std::string* QuoteInfo::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.instrid)
}

// optional int32 iid = 2 [default = 0];
inline bool QuoteInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuoteInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuoteInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuoteInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 QuoteInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.iid)
  return iid_;
}
inline void QuoteInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.iid)
}

// optional int32 qid = 3 [default = 0];
inline bool QuoteInfo::has_qid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuoteInfo::set_has_qid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuoteInfo::clear_has_qid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuoteInfo::clear_qid() {
  qid_ = 0;
  clear_has_qid();
}
inline ::google::protobuf::int32 QuoteInfo::qid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.qid)
  return qid_;
}
inline void QuoteInfo::set_qid(::google::protobuf::int32 value) {
  set_has_qid();
  qid_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.qid)
}

// optional int32 bidorderid = 4 [default = 0];
inline bool QuoteInfo::has_bidorderid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuoteInfo::set_has_bidorderid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuoteInfo::clear_has_bidorderid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuoteInfo::clear_bidorderid() {
  bidorderid_ = 0;
  clear_has_bidorderid();
}
inline ::google::protobuf::int32 QuoteInfo::bidorderid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidorderid)
  return bidorderid_;
}
inline void QuoteInfo::set_bidorderid(::google::protobuf::int32 value) {
  set_has_bidorderid();
  bidorderid_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidorderid)
}

// optional int32 askorderid = 5 [default = 0];
inline bool QuoteInfo::has_askorderid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuoteInfo::set_has_askorderid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuoteInfo::clear_has_askorderid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuoteInfo::clear_askorderid() {
  askorderid_ = 0;
  clear_has_askorderid();
}
inline ::google::protobuf::int32 QuoteInfo::askorderid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askorderid)
  return askorderid_;
}
inline void QuoteInfo::set_askorderid(::google::protobuf::int32 value) {
  set_has_askorderid();
  askorderid_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askorderid)
}

// optional int32 status = 6 [default = 0];
inline bool QuoteInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QuoteInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QuoteInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QuoteInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 QuoteInfo::status() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.status)
  return status_;
}
inline void QuoteInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.status)
}

// optional int32 bidocflag = 7 [default = 0];
inline bool QuoteInfo::has_bidocflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QuoteInfo::set_has_bidocflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QuoteInfo::clear_has_bidocflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QuoteInfo::clear_bidocflag() {
  bidocflag_ = 0;
  clear_has_bidocflag();
}
inline ::google::protobuf::int32 QuoteInfo::bidocflag() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidocflag)
  return bidocflag_;
}
inline void QuoteInfo::set_bidocflag(::google::protobuf::int32 value) {
  set_has_bidocflag();
  bidocflag_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidocflag)
}

// optional int32 askocflag = 8 [default = 0];
inline bool QuoteInfo::has_askocflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QuoteInfo::set_has_askocflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QuoteInfo::clear_has_askocflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QuoteInfo::clear_askocflag() {
  askocflag_ = 0;
  clear_has_askocflag();
}
inline ::google::protobuf::int32 QuoteInfo::askocflag() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askocflag)
  return askocflag_;
}
inline void QuoteInfo::set_askocflag(::google::protobuf::int32 value) {
  set_has_askocflag();
  askocflag_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askocflag)
}

// optional int32 ocflagautotype = 9 [default = 0];
inline bool QuoteInfo::has_ocflagautotype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QuoteInfo::set_has_ocflagautotype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QuoteInfo::clear_has_ocflagautotype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QuoteInfo::clear_ocflagautotype() {
  ocflagautotype_ = 0;
  clear_has_ocflagautotype();
}
inline ::google::protobuf::int32 QuoteInfo::ocflagautotype() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.ocflagautotype)
  return ocflagautotype_;
}
inline void QuoteInfo::set_ocflagautotype(::google::protobuf::int32 value) {
  set_has_ocflagautotype();
  ocflagautotype_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.ocflagautotype)
}

// optional int32 ocflagautothresh = 10 [default = 0];
inline bool QuoteInfo::has_ocflagautothresh() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QuoteInfo::set_has_ocflagautothresh() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QuoteInfo::clear_has_ocflagautothresh() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QuoteInfo::clear_ocflagautothresh() {
  ocflagautothresh_ = 0;
  clear_has_ocflagautothresh();
}
inline ::google::protobuf::int32 QuoteInfo::ocflagautothresh() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.ocflagautothresh)
  return ocflagautothresh_;
}
inline void QuoteInfo::set_ocflagautothresh(::google::protobuf::int32 value) {
  set_has_ocflagautothresh();
  ocflagautothresh_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.ocflagautothresh)
}

// optional int32 oqrtypemask = 11 [default = 0];
inline bool QuoteInfo::has_oqrtypemask() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QuoteInfo::set_has_oqrtypemask() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QuoteInfo::clear_has_oqrtypemask() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QuoteInfo::clear_oqrtypemask() {
  oqrtypemask_ = 0;
  clear_has_oqrtypemask();
}
inline ::google::protobuf::int32 QuoteInfo::oqrtypemask() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.oqrtypemask)
  return oqrtypemask_;
}
inline void QuoteInfo::set_oqrtypemask(::google::protobuf::int32 value) {
  set_has_oqrtypemask();
  oqrtypemask_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.oqrtypemask)
}

// optional string quotesysid = 12 [default = ""];
inline bool QuoteInfo::has_quotesysid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QuoteInfo::set_has_quotesysid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QuoteInfo::clear_has_quotesysid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QuoteInfo::clear_quotesysid() {
  quotesysid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quotesysid();
}
inline const ::std::string& QuoteInfo::quotesysid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.quotesysid)
  return quotesysid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_quotesysid(const ::std::string& value) {
  set_has_quotesysid();
  quotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.quotesysid)
}
inline void QuoteInfo::set_quotesysid(const char* value) {
  set_has_quotesysid();
  quotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.quotesysid)
}
inline void QuoteInfo::set_quotesysid(const char* value, size_t size) {
  set_has_quotesysid();
  quotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.quotesysid)
}
inline ::std::string* QuoteInfo::mutable_quotesysid() {
  set_has_quotesysid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.quotesysid)
  return quotesysid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_quotesysid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.quotesysid)
  clear_has_quotesysid();
  return quotesysid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_quotesysid(::std::string* quotesysid) {
  if (quotesysid != NULL) {
    set_has_quotesysid();
  } else {
    clear_has_quotesysid();
  }
  quotesysid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quotesysid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.quotesysid)
}

// optional string bidordersysid = 13 [default = ""];
inline bool QuoteInfo::has_bidordersysid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QuoteInfo::set_has_bidordersysid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QuoteInfo::clear_has_bidordersysid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QuoteInfo::clear_bidordersysid() {
  bidordersysid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bidordersysid();
}
inline const ::std::string& QuoteInfo::bidordersysid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidordersysid)
  return bidordersysid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_bidordersysid(const ::std::string& value) {
  set_has_bidordersysid();
  bidordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidordersysid)
}
inline void QuoteInfo::set_bidordersysid(const char* value) {
  set_has_bidordersysid();
  bidordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.bidordersysid)
}
inline void QuoteInfo::set_bidordersysid(const char* value, size_t size) {
  set_has_bidordersysid();
  bidordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.bidordersysid)
}
inline ::std::string* QuoteInfo::mutable_bidordersysid() {
  set_has_bidordersysid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.bidordersysid)
  return bidordersysid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_bidordersysid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.bidordersysid)
  clear_has_bidordersysid();
  return bidordersysid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_bidordersysid(::std::string* bidordersysid) {
  if (bidordersysid != NULL) {
    set_has_bidordersysid();
  } else {
    clear_has_bidordersysid();
  }
  bidordersysid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bidordersysid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.bidordersysid)
}

// optional string askordersysid = 14 [default = ""];
inline bool QuoteInfo::has_askordersysid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QuoteInfo::set_has_askordersysid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QuoteInfo::clear_has_askordersysid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QuoteInfo::clear_askordersysid() {
  askordersysid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_askordersysid();
}
inline const ::std::string& QuoteInfo::askordersysid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askordersysid)
  return askordersysid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_askordersysid(const ::std::string& value) {
  set_has_askordersysid();
  askordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askordersysid)
}
inline void QuoteInfo::set_askordersysid(const char* value) {
  set_has_askordersysid();
  askordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.askordersysid)
}
inline void QuoteInfo::set_askordersysid(const char* value, size_t size) {
  set_has_askordersysid();
  askordersysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.askordersysid)
}
inline ::std::string* QuoteInfo::mutable_askordersysid() {
  set_has_askordersysid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.askordersysid)
  return askordersysid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_askordersysid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.askordersysid)
  clear_has_askordersysid();
  return askordersysid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_askordersysid(::std::string* askordersysid) {
  if (askordersysid != NULL) {
    set_has_askordersysid();
  } else {
    clear_has_askordersysid();
  }
  askordersysid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), askordersysid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.askordersysid)
}

// optional string forquotesysid = 15 [default = ""];
inline bool QuoteInfo::has_forquotesysid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void QuoteInfo::set_has_forquotesysid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void QuoteInfo::clear_has_forquotesysid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void QuoteInfo::clear_forquotesysid() {
  forquotesysid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forquotesysid();
}
inline const ::std::string& QuoteInfo::forquotesysid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.forquotesysid)
  return forquotesysid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_forquotesysid(const ::std::string& value) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.forquotesysid)
}
inline void QuoteInfo::set_forquotesysid(const char* value) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.forquotesysid)
}
inline void QuoteInfo::set_forquotesysid(const char* value, size_t size) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.forquotesysid)
}
inline ::std::string* QuoteInfo::mutable_forquotesysid() {
  set_has_forquotesysid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.forquotesysid)
  return forquotesysid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_forquotesysid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.forquotesysid)
  clear_has_forquotesysid();
  return forquotesysid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_forquotesysid(::std::string* forquotesysid) {
  if (forquotesysid != NULL) {
    set_has_forquotesysid();
  } else {
    clear_has_forquotesysid();
  }
  forquotesysid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forquotesysid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.forquotesysid)
}

// optional string forquotetime = 16 [default = ""];
inline bool QuoteInfo::has_forquotetime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void QuoteInfo::set_has_forquotetime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void QuoteInfo::clear_has_forquotetime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void QuoteInfo::clear_forquotetime() {
  forquotetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forquotetime();
}
inline const ::std::string& QuoteInfo::forquotetime() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.forquotetime)
  return forquotetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_forquotetime(const ::std::string& value) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.forquotetime)
}
inline void QuoteInfo::set_forquotetime(const char* value) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.forquotetime)
}
inline void QuoteInfo::set_forquotetime(const char* value, size_t size) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.forquotetime)
}
inline ::std::string* QuoteInfo::mutable_forquotetime() {
  set_has_forquotetime();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.forquotetime)
  return forquotetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_forquotetime() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.forquotetime)
  clear_has_forquotetime();
  return forquotetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_forquotetime(::std::string* forquotetime) {
  if (forquotetime != NULL) {
    set_has_forquotetime();
  } else {
    clear_has_forquotetime();
  }
  forquotetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forquotetime);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.forquotetime)
}

// optional string quoteref = 17 [default = ""];
inline bool QuoteInfo::has_quoteref() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void QuoteInfo::set_has_quoteref() {
  _has_bits_[0] |= 0x00010000u;
}
inline void QuoteInfo::clear_has_quoteref() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void QuoteInfo::clear_quoteref() {
  quoteref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quoteref();
}
inline const ::std::string& QuoteInfo::quoteref() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.quoteref)
  return quoteref_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_quoteref(const ::std::string& value) {
  set_has_quoteref();
  quoteref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.quoteref)
}
inline void QuoteInfo::set_quoteref(const char* value) {
  set_has_quoteref();
  quoteref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.quoteref)
}
inline void QuoteInfo::set_quoteref(const char* value, size_t size) {
  set_has_quoteref();
  quoteref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.quoteref)
}
inline ::std::string* QuoteInfo::mutable_quoteref() {
  set_has_quoteref();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.quoteref)
  return quoteref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_quoteref() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.quoteref)
  clear_has_quoteref();
  return quoteref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_quoteref(::std::string* quoteref) {
  if (quoteref != NULL) {
    set_has_quoteref();
  } else {
    clear_has_quoteref();
  }
  quoteref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quoteref);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.quoteref)
}

// optional string bidorderref = 18 [default = ""];
inline bool QuoteInfo::has_bidorderref() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void QuoteInfo::set_has_bidorderref() {
  _has_bits_[0] |= 0x00020000u;
}
inline void QuoteInfo::clear_has_bidorderref() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void QuoteInfo::clear_bidorderref() {
  bidorderref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bidorderref();
}
inline const ::std::string& QuoteInfo::bidorderref() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidorderref)
  return bidorderref_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_bidorderref(const ::std::string& value) {
  set_has_bidorderref();
  bidorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidorderref)
}
inline void QuoteInfo::set_bidorderref(const char* value) {
  set_has_bidorderref();
  bidorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.bidorderref)
}
inline void QuoteInfo::set_bidorderref(const char* value, size_t size) {
  set_has_bidorderref();
  bidorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.bidorderref)
}
inline ::std::string* QuoteInfo::mutable_bidorderref() {
  set_has_bidorderref();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.bidorderref)
  return bidorderref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_bidorderref() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.bidorderref)
  clear_has_bidorderref();
  return bidorderref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_bidorderref(::std::string* bidorderref) {
  if (bidorderref != NULL) {
    set_has_bidorderref();
  } else {
    clear_has_bidorderref();
  }
  bidorderref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bidorderref);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.bidorderref)
}

// optional string askorderref = 19 [default = ""];
inline bool QuoteInfo::has_askorderref() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void QuoteInfo::set_has_askorderref() {
  _has_bits_[0] |= 0x00040000u;
}
inline void QuoteInfo::clear_has_askorderref() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void QuoteInfo::clear_askorderref() {
  askorderref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_askorderref();
}
inline const ::std::string& QuoteInfo::askorderref() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askorderref)
  return askorderref_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_askorderref(const ::std::string& value) {
  set_has_askorderref();
  askorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askorderref)
}
inline void QuoteInfo::set_askorderref(const char* value) {
  set_has_askorderref();
  askorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.askorderref)
}
inline void QuoteInfo::set_askorderref(const char* value, size_t size) {
  set_has_askorderref();
  askorderref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.askorderref)
}
inline ::std::string* QuoteInfo::mutable_askorderref() {
  set_has_askorderref();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.askorderref)
  return askorderref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_askorderref() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.askorderref)
  clear_has_askorderref();
  return askorderref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_askorderref(::std::string* askorderref) {
  if (askorderref != NULL) {
    set_has_askorderref();
  } else {
    clear_has_askorderref();
  }
  askorderref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), askorderref);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.askorderref)
}

// optional string quotelocalid = 20 [default = ""];
inline bool QuoteInfo::has_quotelocalid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void QuoteInfo::set_has_quotelocalid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void QuoteInfo::clear_has_quotelocalid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void QuoteInfo::clear_quotelocalid() {
  quotelocalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quotelocalid();
}
inline const ::std::string& QuoteInfo::quotelocalid() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.quotelocalid)
  return quotelocalid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_quotelocalid(const ::std::string& value) {
  set_has_quotelocalid();
  quotelocalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.quotelocalid)
}
inline void QuoteInfo::set_quotelocalid(const char* value) {
  set_has_quotelocalid();
  quotelocalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.quotelocalid)
}
inline void QuoteInfo::set_quotelocalid(const char* value, size_t size) {
  set_has_quotelocalid();
  quotelocalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.quotelocalid)
}
inline ::std::string* QuoteInfo::mutable_quotelocalid() {
  set_has_quotelocalid();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.quotelocalid)
  return quotelocalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_quotelocalid() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.quotelocalid)
  clear_has_quotelocalid();
  return quotelocalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_quotelocalid(::std::string* quotelocalid) {
  if (quotelocalid != NULL) {
    set_has_quotelocalid();
  } else {
    clear_has_quotelocalid();
  }
  quotelocalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quotelocalid);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.quotelocalid)
}

// optional double bidpx = 21 [default = 0];
inline bool QuoteInfo::has_bidpx() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void QuoteInfo::set_has_bidpx() {
  _has_bits_[0] |= 0x00100000u;
}
inline void QuoteInfo::clear_has_bidpx() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void QuoteInfo::clear_bidpx() {
  bidpx_ = 0;
  clear_has_bidpx();
}
inline double QuoteInfo::bidpx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidpx)
  return bidpx_;
}
inline void QuoteInfo::set_bidpx(double value) {
  set_has_bidpx();
  bidpx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidpx)
}

// optional double askpx = 22 [default = 0];
inline bool QuoteInfo::has_askpx() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void QuoteInfo::set_has_askpx() {
  _has_bits_[0] |= 0x00200000u;
}
inline void QuoteInfo::clear_has_askpx() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void QuoteInfo::clear_askpx() {
  askpx_ = 0;
  clear_has_askpx();
}
inline double QuoteInfo::askpx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askpx)
  return askpx_;
}
inline void QuoteInfo::set_askpx(double value) {
  set_has_askpx();
  askpx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askpx)
}

// optional int64 bidsz = 23 [default = 0];
inline bool QuoteInfo::has_bidsz() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void QuoteInfo::set_has_bidsz() {
  _has_bits_[0] |= 0x00400000u;
}
inline void QuoteInfo::clear_has_bidsz() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void QuoteInfo::clear_bidsz() {
  bidsz_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz();
}
inline ::google::protobuf::int64 QuoteInfo::bidsz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidsz)
  return bidsz_;
}
inline void QuoteInfo::set_bidsz(::google::protobuf::int64 value) {
  set_has_bidsz();
  bidsz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidsz)
}

// optional int64 asksz = 24 [default = 0];
inline bool QuoteInfo::has_asksz() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void QuoteInfo::set_has_asksz() {
  _has_bits_[0] |= 0x00800000u;
}
inline void QuoteInfo::clear_has_asksz() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void QuoteInfo::clear_asksz() {
  asksz_ = GOOGLE_LONGLONG(0);
  clear_has_asksz();
}
inline ::google::protobuf::int64 QuoteInfo::asksz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.asksz)
  return asksz_;
}
inline void QuoteInfo::set_asksz(::google::protobuf::int64 value) {
  set_has_asksz();
  asksz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.asksz)
}

// optional int64 bidfilledsz = 25 [default = 0];
inline bool QuoteInfo::has_bidfilledsz() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void QuoteInfo::set_has_bidfilledsz() {
  _has_bits_[0] |= 0x01000000u;
}
inline void QuoteInfo::clear_has_bidfilledsz() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void QuoteInfo::clear_bidfilledsz() {
  bidfilledsz_ = GOOGLE_LONGLONG(0);
  clear_has_bidfilledsz();
}
inline ::google::protobuf::int64 QuoteInfo::bidfilledsz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidfilledsz)
  return bidfilledsz_;
}
inline void QuoteInfo::set_bidfilledsz(::google::protobuf::int64 value) {
  set_has_bidfilledsz();
  bidfilledsz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidfilledsz)
}

// optional int64 askfilledsz = 26 [default = 0];
inline bool QuoteInfo::has_askfilledsz() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void QuoteInfo::set_has_askfilledsz() {
  _has_bits_[0] |= 0x02000000u;
}
inline void QuoteInfo::clear_has_askfilledsz() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void QuoteInfo::clear_askfilledsz() {
  askfilledsz_ = GOOGLE_LONGLONG(0);
  clear_has_askfilledsz();
}
inline ::google::protobuf::int64 QuoteInfo::askfilledsz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askfilledsz)
  return askfilledsz_;
}
inline void QuoteInfo::set_askfilledsz(::google::protobuf::int64 value) {
  set_has_askfilledsz();
  askfilledsz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askfilledsz)
}

// optional int64 bidopensz = 27 [default = 0];
inline bool QuoteInfo::has_bidopensz() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void QuoteInfo::set_has_bidopensz() {
  _has_bits_[0] |= 0x04000000u;
}
inline void QuoteInfo::clear_has_bidopensz() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void QuoteInfo::clear_bidopensz() {
  bidopensz_ = GOOGLE_LONGLONG(0);
  clear_has_bidopensz();
}
inline ::google::protobuf::int64 QuoteInfo::bidopensz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.bidopensz)
  return bidopensz_;
}
inline void QuoteInfo::set_bidopensz(::google::protobuf::int64 value) {
  set_has_bidopensz();
  bidopensz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.bidopensz)
}

// optional int64 askopensz = 28 [default = 0];
inline bool QuoteInfo::has_askopensz() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void QuoteInfo::set_has_askopensz() {
  _has_bits_[0] |= 0x08000000u;
}
inline void QuoteInfo::clear_has_askopensz() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void QuoteInfo::clear_askopensz() {
  askopensz_ = GOOGLE_LONGLONG(0);
  clear_has_askopensz();
}
inline ::google::protobuf::int64 QuoteInfo::askopensz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.askopensz)
  return askopensz_;
}
inline void QuoteInfo::set_askopensz(::google::protobuf::int64 value) {
  set_has_askopensz();
  askopensz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.askopensz)
}

// optional int64 tssent = 30 [default = 0];
inline bool QuoteInfo::has_tssent() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void QuoteInfo::set_has_tssent() {
  _has_bits_[0] |= 0x10000000u;
}
inline void QuoteInfo::clear_has_tssent() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void QuoteInfo::clear_tssent() {
  tssent_ = GOOGLE_LONGLONG(0);
  clear_has_tssent();
}
inline ::google::protobuf::int64 QuoteInfo::tssent() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tssent)
  return tssent_;
}
inline void QuoteInfo::set_tssent(::google::protobuf::int64 value) {
  set_has_tssent();
  tssent_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tssent)
}

// optional int64 tssentrejected = 31 [default = 0];
inline bool QuoteInfo::has_tssentrejected() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void QuoteInfo::set_has_tssentrejected() {
  _has_bits_[0] |= 0x20000000u;
}
inline void QuoteInfo::clear_has_tssentrejected() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void QuoteInfo::clear_tssentrejected() {
  tssentrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tssentrejected();
}
inline ::google::protobuf::int64 QuoteInfo::tssentrejected() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tssentrejected)
  return tssentrejected_;
}
inline void QuoteInfo::set_tssentrejected(::google::protobuf::int64 value) {
  set_has_tssentrejected();
  tssentrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tssentrejected)
}

// optional int64 tsgtwy = 32 [default = 0];
inline bool QuoteInfo::has_tsgtwy() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void QuoteInfo::set_has_tsgtwy() {
  _has_bits_[0] |= 0x40000000u;
}
inline void QuoteInfo::clear_has_tsgtwy() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void QuoteInfo::clear_tsgtwy() {
  tsgtwy_ = GOOGLE_LONGLONG(0);
  clear_has_tsgtwy();
}
inline ::google::protobuf::int64 QuoteInfo::tsgtwy() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsgtwy)
  return tsgtwy_;
}
inline void QuoteInfo::set_tsgtwy(::google::protobuf::int64 value) {
  set_has_tsgtwy();
  tsgtwy_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsgtwy)
}

// optional int64 tscnf = 33 [default = 0];
inline bool QuoteInfo::has_tscnf() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void QuoteInfo::set_has_tscnf() {
  _has_bits_[0] |= 0x80000000u;
}
inline void QuoteInfo::clear_has_tscnf() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void QuoteInfo::clear_tscnf() {
  tscnf_ = GOOGLE_LONGLONG(0);
  clear_has_tscnf();
}
inline ::google::protobuf::int64 QuoteInfo::tscnf() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tscnf)
  return tscnf_;
}
inline void QuoteInfo::set_tscnf(::google::protobuf::int64 value) {
  set_has_tscnf();
  tscnf_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tscnf)
}

// optional int64 tscxlsent = 34 [default = 0];
inline bool QuoteInfo::has_tscxlsent() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void QuoteInfo::set_has_tscxlsent() {
  _has_bits_[1] |= 0x00000001u;
}
inline void QuoteInfo::clear_has_tscxlsent() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void QuoteInfo::clear_tscxlsent() {
  tscxlsent_ = GOOGLE_LONGLONG(0);
  clear_has_tscxlsent();
}
inline ::google::protobuf::int64 QuoteInfo::tscxlsent() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tscxlsent)
  return tscxlsent_;
}
inline void QuoteInfo::set_tscxlsent(::google::protobuf::int64 value) {
  set_has_tscxlsent();
  tscxlsent_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tscxlsent)
}

// optional int64 tscxlrejected = 35 [default = 0];
inline bool QuoteInfo::has_tscxlrejected() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void QuoteInfo::set_has_tscxlrejected() {
  _has_bits_[1] |= 0x00000002u;
}
inline void QuoteInfo::clear_has_tscxlrejected() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void QuoteInfo::clear_tscxlrejected() {
  tscxlrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tscxlrejected();
}
inline ::google::protobuf::int64 QuoteInfo::tscxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tscxlrejected)
  return tscxlrejected_;
}
inline void QuoteInfo::set_tscxlrejected(::google::protobuf::int64 value) {
  set_has_tscxlrejected();
  tscxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tscxlrejected)
}

// optional int64 tsfinished = 36 [default = 0];
inline bool QuoteInfo::has_tsfinished() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void QuoteInfo::set_has_tsfinished() {
  _has_bits_[1] |= 0x00000004u;
}
inline void QuoteInfo::clear_has_tsfinished() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void QuoteInfo::clear_tsfinished() {
  tsfinished_ = GOOGLE_LONGLONG(0);
  clear_has_tsfinished();
}
inline ::google::protobuf::int64 QuoteInfo::tsfinished() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsfinished)
  return tsfinished_;
}
inline void QuoteInfo::set_tsfinished(::google::protobuf::int64 value) {
  set_has_tsfinished();
  tsfinished_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsfinished)
}

// optional int64 tsexchrcv = 37 [default = 0];
inline bool QuoteInfo::has_tsexchrcv() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void QuoteInfo::set_has_tsexchrcv() {
  _has_bits_[1] |= 0x00000008u;
}
inline void QuoteInfo::clear_has_tsexchrcv() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void QuoteInfo::clear_tsexchrcv() {
  tsexchrcv_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchrcv();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchrcv() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchrcv)
  return tsexchrcv_;
}
inline void QuoteInfo::set_tsexchrcv(::google::protobuf::int64 value) {
  set_has_tsexchrcv();
  tsexchrcv_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchrcv)
}

// optional int64 tsexchrcvrejected = 38 [default = 0];
inline bool QuoteInfo::has_tsexchrcvrejected() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void QuoteInfo::set_has_tsexchrcvrejected() {
  _has_bits_[1] |= 0x00000010u;
}
inline void QuoteInfo::clear_has_tsexchrcvrejected() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void QuoteInfo::clear_tsexchrcvrejected() {
  tsexchrcvrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchrcvrejected();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchrcvrejected() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchrcvrejected)
  return tsexchrcvrejected_;
}
inline void QuoteInfo::set_tsexchrcvrejected(::google::protobuf::int64 value) {
  set_has_tsexchrcvrejected();
  tsexchrcvrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchrcvrejected)
}

// optional int64 tsexchcnf = 39 [default = 0];
inline bool QuoteInfo::has_tsexchcnf() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void QuoteInfo::set_has_tsexchcnf() {
  _has_bits_[1] |= 0x00000020u;
}
inline void QuoteInfo::clear_has_tsexchcnf() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void QuoteInfo::clear_tsexchcnf() {
  tsexchcnf_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcnf();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchcnf() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchcnf)
  return tsexchcnf_;
}
inline void QuoteInfo::set_tsexchcnf(::google::protobuf::int64 value) {
  set_has_tsexchcnf();
  tsexchcnf_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchcnf)
}

// optional int64 tsexchcxlrcv = 40 [default = 0];
inline bool QuoteInfo::has_tsexchcxlrcv() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void QuoteInfo::set_has_tsexchcxlrcv() {
  _has_bits_[1] |= 0x00000040u;
}
inline void QuoteInfo::clear_has_tsexchcxlrcv() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void QuoteInfo::clear_tsexchcxlrcv() {
  tsexchcxlrcv_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcxlrcv();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchcxlrcv() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchcxlrcv)
  return tsexchcxlrcv_;
}
inline void QuoteInfo::set_tsexchcxlrcv(::google::protobuf::int64 value) {
  set_has_tsexchcxlrcv();
  tsexchcxlrcv_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchcxlrcv)
}

// optional int64 tsexchcxlrejected = 41 [default = 0];
inline bool QuoteInfo::has_tsexchcxlrejected() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void QuoteInfo::set_has_tsexchcxlrejected() {
  _has_bits_[1] |= 0x00000080u;
}
inline void QuoteInfo::clear_has_tsexchcxlrejected() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void QuoteInfo::clear_tsexchcxlrejected() {
  tsexchcxlrejected_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchcxlrejected();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchcxlrejected() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchcxlrejected)
  return tsexchcxlrejected_;
}
inline void QuoteInfo::set_tsexchcxlrejected(::google::protobuf::int64 value) {
  set_has_tsexchcxlrejected();
  tsexchcxlrejected_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchcxlrejected)
}

// optional int64 tsexchfinished = 42 [default = 0];
inline bool QuoteInfo::has_tsexchfinished() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void QuoteInfo::set_has_tsexchfinished() {
  _has_bits_[1] |= 0x00000100u;
}
inline void QuoteInfo::clear_has_tsexchfinished() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void QuoteInfo::clear_tsexchfinished() {
  tsexchfinished_ = GOOGLE_LONGLONG(0);
  clear_has_tsexchfinished();
}
inline ::google::protobuf::int64 QuoteInfo::tsexchfinished() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsexchfinished)
  return tsexchfinished_;
}
inline void QuoteInfo::set_tsexchfinished(::google::protobuf::int64 value) {
  set_has_tsexchfinished();
  tsexchfinished_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsexchfinished)
}

// optional int64 tsbidcxled = 43 [default = 0];
inline bool QuoteInfo::has_tsbidcxled() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void QuoteInfo::set_has_tsbidcxled() {
  _has_bits_[1] |= 0x00000200u;
}
inline void QuoteInfo::clear_has_tsbidcxled() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void QuoteInfo::clear_tsbidcxled() {
  tsbidcxled_ = GOOGLE_LONGLONG(0);
  clear_has_tsbidcxled();
}
inline ::google::protobuf::int64 QuoteInfo::tsbidcxled() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsbidcxled)
  return tsbidcxled_;
}
inline void QuoteInfo::set_tsbidcxled(::google::protobuf::int64 value) {
  set_has_tsbidcxled();
  tsbidcxled_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsbidcxled)
}

// optional int64 tsaskcxled = 44 [default = 0];
inline bool QuoteInfo::has_tsaskcxled() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void QuoteInfo::set_has_tsaskcxled() {
  _has_bits_[1] |= 0x00000400u;
}
inline void QuoteInfo::clear_has_tsaskcxled() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void QuoteInfo::clear_tsaskcxled() {
  tsaskcxled_ = GOOGLE_LONGLONG(0);
  clear_has_tsaskcxled();
}
inline ::google::protobuf::int64 QuoteInfo::tsaskcxled() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsaskcxled)
  return tsaskcxled_;
}
inline void QuoteInfo::set_tsaskcxled(::google::protobuf::int64 value) {
  set_has_tsaskcxled();
  tsaskcxled_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsaskcxled)
}

// optional int64 tsbidallfilled = 45 [default = 0];
inline bool QuoteInfo::has_tsbidallfilled() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void QuoteInfo::set_has_tsbidallfilled() {
  _has_bits_[1] |= 0x00000800u;
}
inline void QuoteInfo::clear_has_tsbidallfilled() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void QuoteInfo::clear_tsbidallfilled() {
  tsbidallfilled_ = GOOGLE_LONGLONG(0);
  clear_has_tsbidallfilled();
}
inline ::google::protobuf::int64 QuoteInfo::tsbidallfilled() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsbidallfilled)
  return tsbidallfilled_;
}
inline void QuoteInfo::set_tsbidallfilled(::google::protobuf::int64 value) {
  set_has_tsbidallfilled();
  tsbidallfilled_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsbidallfilled)
}

// optional int64 tsaskallfilled = 46 [default = 0];
inline bool QuoteInfo::has_tsaskallfilled() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void QuoteInfo::set_has_tsaskallfilled() {
  _has_bits_[1] |= 0x00001000u;
}
inline void QuoteInfo::clear_has_tsaskallfilled() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void QuoteInfo::clear_tsaskallfilled() {
  tsaskallfilled_ = GOOGLE_LONGLONG(0);
  clear_has_tsaskallfilled();
}
inline ::google::protobuf::int64 QuoteInfo::tsaskallfilled() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.tsaskallfilled)
  return tsaskallfilled_;
}
inline void QuoteInfo::set_tsaskallfilled(::google::protobuf::int64 value) {
  set_has_tsaskallfilled();
  tsaskallfilled_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.tsaskallfilled)
}

// optional int32 reasonflag = 50 [default = 0];
inline bool QuoteInfo::has_reasonflag() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void QuoteInfo::set_has_reasonflag() {
  _has_bits_[1] |= 0x00002000u;
}
inline void QuoteInfo::clear_has_reasonflag() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void QuoteInfo::clear_reasonflag() {
  reasonflag_ = 0;
  clear_has_reasonflag();
}
inline ::google::protobuf::int32 QuoteInfo::reasonflag() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.reasonflag)
  return reasonflag_;
}
inline void QuoteInfo::set_reasonflag(::google::protobuf::int32 value) {
  set_has_reasonflag();
  reasonflag_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.reasonflag)
}

// optional string sendmemo = 51 [default = ""];
inline bool QuoteInfo::has_sendmemo() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void QuoteInfo::set_has_sendmemo() {
  _has_bits_[1] |= 0x00004000u;
}
inline void QuoteInfo::clear_has_sendmemo() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void QuoteInfo::clear_sendmemo() {
  sendmemo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendmemo();
}
inline const ::std::string& QuoteInfo::sendmemo() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.sendmemo)
  return sendmemo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_sendmemo(const ::std::string& value) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.sendmemo)
}
inline void QuoteInfo::set_sendmemo(const char* value) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.sendmemo)
}
inline void QuoteInfo::set_sendmemo(const char* value, size_t size) {
  set_has_sendmemo();
  sendmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.sendmemo)
}
inline ::std::string* QuoteInfo::mutable_sendmemo() {
  set_has_sendmemo();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.sendmemo)
  return sendmemo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_sendmemo() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.sendmemo)
  clear_has_sendmemo();
  return sendmemo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_sendmemo(::std::string* sendmemo) {
  if (sendmemo != NULL) {
    set_has_sendmemo();
  } else {
    clear_has_sendmemo();
  }
  sendmemo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendmemo);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.sendmemo)
}

// optional string cxlmemo = 52 [default = ""];
inline bool QuoteInfo::has_cxlmemo() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void QuoteInfo::set_has_cxlmemo() {
  _has_bits_[1] |= 0x00008000u;
}
inline void QuoteInfo::clear_has_cxlmemo() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void QuoteInfo::clear_cxlmemo() {
  cxlmemo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cxlmemo();
}
inline const ::std::string& QuoteInfo::cxlmemo() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.cxlmemo)
  return cxlmemo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_cxlmemo(const ::std::string& value) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.cxlmemo)
}
inline void QuoteInfo::set_cxlmemo(const char* value) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.QuoteInfo.cxlmemo)
}
inline void QuoteInfo::set_cxlmemo(const char* value, size_t size) {
  set_has_cxlmemo();
  cxlmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.QuoteInfo.cxlmemo)
}
inline ::std::string* QuoteInfo::mutable_cxlmemo() {
  set_has_cxlmemo();
  // @@protoc_insertion_point(field_mutable:XT.QuoteInfo.cxlmemo)
  return cxlmemo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuoteInfo::release_cxlmemo() {
  // @@protoc_insertion_point(field_release:XT.QuoteInfo.cxlmemo)
  clear_has_cxlmemo();
  return cxlmemo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuoteInfo::set_allocated_cxlmemo(::std::string* cxlmemo) {
  if (cxlmemo != NULL) {
    set_has_cxlmemo();
  } else {
    clear_has_cxlmemo();
  }
  cxlmemo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cxlmemo);
  // @@protoc_insertion_point(field_set_allocated:XT.QuoteInfo.cxlmemo)
}

// optional double idx = 53 [default = -1];
inline bool QuoteInfo::has_idx() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void QuoteInfo::set_has_idx() {
  _has_bits_[1] |= 0x00010000u;
}
inline void QuoteInfo::clear_has_idx() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void QuoteInfo::clear_idx() {
  idx_ = -1;
  clear_has_idx();
}
inline double QuoteInfo::idx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteInfo.idx)
  return idx_;
}
inline void QuoteInfo::set_idx(double value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteInfo.idx)
}

// -------------------------------------------------------------------

// MktDataEventInfo

// optional int32 iid = 1 [default = 0];
inline bool MktDataEventInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MktDataEventInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MktDataEventInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MktDataEventInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 MktDataEventInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.MktDataEventInfo.iid)
  return iid_;
}
inline void MktDataEventInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.MktDataEventInfo.iid)
}

// optional int32 eventtype = 2 [default = 0];
inline bool MktDataEventInfo::has_eventtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MktDataEventInfo::set_has_eventtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MktDataEventInfo::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MktDataEventInfo::clear_eventtype() {
  eventtype_ = 0;
  clear_has_eventtype();
}
inline ::google::protobuf::int32 MktDataEventInfo::eventtype() const {
  // @@protoc_insertion_point(field_get:XT.MktDataEventInfo.eventtype)
  return eventtype_;
}
inline void MktDataEventInfo::set_eventtype(::google::protobuf::int32 value) {
  set_has_eventtype();
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:XT.MktDataEventInfo.eventtype)
}

// -------------------------------------------------------------------

// OrderEventInfo

// optional int32 iid = 1 [default = 0];
inline bool OrderEventInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderEventInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderEventInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderEventInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 OrderEventInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.OrderEventInfo.iid)
  return iid_;
}
inline void OrderEventInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderEventInfo.iid)
}

// optional int32 oid = 2 [default = 0];
inline bool OrderEventInfo::has_oid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderEventInfo::set_has_oid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderEventInfo::clear_has_oid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderEventInfo::clear_oid() {
  oid_ = 0;
  clear_has_oid();
}
inline ::google::protobuf::int32 OrderEventInfo::oid() const {
  // @@protoc_insertion_point(field_get:XT.OrderEventInfo.oid)
  return oid_;
}
inline void OrderEventInfo::set_oid(::google::protobuf::int32 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderEventInfo.oid)
}

// optional int32 qid = 3 [default = 0];
inline bool OrderEventInfo::has_qid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderEventInfo::set_has_qid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderEventInfo::clear_has_qid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderEventInfo::clear_qid() {
  qid_ = 0;
  clear_has_qid();
}
inline ::google::protobuf::int32 OrderEventInfo::qid() const {
  // @@protoc_insertion_point(field_get:XT.OrderEventInfo.qid)
  return qid_;
}
inline void OrderEventInfo::set_qid(::google::protobuf::int32 value) {
  set_has_qid();
  qid_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderEventInfo.qid)
}

// optional int32 eventtype = 4 [default = 0];
inline bool OrderEventInfo::has_eventtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderEventInfo::set_has_eventtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderEventInfo::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderEventInfo::clear_eventtype() {
  eventtype_ = 0;
  clear_has_eventtype();
}
inline ::google::protobuf::int32 OrderEventInfo::eventtype() const {
  // @@protoc_insertion_point(field_get:XT.OrderEventInfo.eventtype)
  return eventtype_;
}
inline void OrderEventInfo::set_eventtype(::google::protobuf::int32 value) {
  set_has_eventtype();
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderEventInfo.eventtype)
}

// -------------------------------------------------------------------

// InstrEventInfo

// optional int32 iid = 1 [default = 0];
inline bool InstrEventInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstrEventInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstrEventInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstrEventInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 InstrEventInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.InstrEventInfo.iid)
  return iid_;
}
inline void InstrEventInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrEventInfo.iid)
}

// optional int32 oid = 2 [default = 0];
inline bool InstrEventInfo::has_oid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstrEventInfo::set_has_oid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstrEventInfo::clear_has_oid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstrEventInfo::clear_oid() {
  oid_ = 0;
  clear_has_oid();
}
inline ::google::protobuf::int32 InstrEventInfo::oid() const {
  // @@protoc_insertion_point(field_get:XT.InstrEventInfo.oid)
  return oid_;
}
inline void InstrEventInfo::set_oid(::google::protobuf::int32 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrEventInfo.oid)
}

// optional int32 qid = 3 [default = 0];
inline bool InstrEventInfo::has_qid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstrEventInfo::set_has_qid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstrEventInfo::clear_has_qid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstrEventInfo::clear_qid() {
  qid_ = 0;
  clear_has_qid();
}
inline ::google::protobuf::int32 InstrEventInfo::qid() const {
  // @@protoc_insertion_point(field_get:XT.InstrEventInfo.qid)
  return qid_;
}
inline void InstrEventInfo::set_qid(::google::protobuf::int32 value) {
  set_has_qid();
  qid_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrEventInfo.qid)
}

// optional int32 flag = 4 [default = 0];
inline bool InstrEventInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstrEventInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstrEventInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstrEventInfo::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 InstrEventInfo::flag() const {
  // @@protoc_insertion_point(field_get:XT.InstrEventInfo.flag)
  return flag_;
}
inline void InstrEventInfo::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrEventInfo.flag)
}

// -------------------------------------------------------------------

// ForQuoteInfo

// optional string instrid = 1 [default = ""];
inline bool ForQuoteInfo::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForQuoteInfo::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForQuoteInfo::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForQuoteInfo::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& ForQuoteInfo::instrid() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.instrid)
}
inline void ForQuoteInfo::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ForQuoteInfo.instrid)
}
inline void ForQuoteInfo::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ForQuoteInfo.instrid)
}
inline ::std::string* ForQuoteInfo::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.ForQuoteInfo.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForQuoteInfo::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.ForQuoteInfo.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.ForQuoteInfo.instrid)
}

// optional string exchid = 2 [default = ""];
inline bool ForQuoteInfo::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForQuoteInfo::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForQuoteInfo::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForQuoteInfo::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& ForQuoteInfo::exchid() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.exchid)
}
inline void ForQuoteInfo::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ForQuoteInfo.exchid)
}
inline void ForQuoteInfo::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ForQuoteInfo.exchid)
}
inline ::std::string* ForQuoteInfo::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.ForQuoteInfo.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForQuoteInfo::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.ForQuoteInfo.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.ForQuoteInfo.exchid)
}

// optional string forquotesysid = 3 [default = ""];
inline bool ForQuoteInfo::has_forquotesysid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForQuoteInfo::set_has_forquotesysid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForQuoteInfo::clear_has_forquotesysid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForQuoteInfo::clear_forquotesysid() {
  forquotesysid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forquotesysid();
}
inline const ::std::string& ForQuoteInfo::forquotesysid() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.forquotesysid)
  return forquotesysid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_forquotesysid(const ::std::string& value) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.forquotesysid)
}
inline void ForQuoteInfo::set_forquotesysid(const char* value) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ForQuoteInfo.forquotesysid)
}
inline void ForQuoteInfo::set_forquotesysid(const char* value, size_t size) {
  set_has_forquotesysid();
  forquotesysid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ForQuoteInfo.forquotesysid)
}
inline ::std::string* ForQuoteInfo::mutable_forquotesysid() {
  set_has_forquotesysid();
  // @@protoc_insertion_point(field_mutable:XT.ForQuoteInfo.forquotesysid)
  return forquotesysid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForQuoteInfo::release_forquotesysid() {
  // @@protoc_insertion_point(field_release:XT.ForQuoteInfo.forquotesysid)
  clear_has_forquotesysid();
  return forquotesysid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_allocated_forquotesysid(::std::string* forquotesysid) {
  if (forquotesysid != NULL) {
    set_has_forquotesysid();
  } else {
    clear_has_forquotesysid();
  }
  forquotesysid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forquotesysid);
  // @@protoc_insertion_point(field_set_allocated:XT.ForQuoteInfo.forquotesysid)
}

// optional string forquotedate = 4 [default = ""];
inline bool ForQuoteInfo::has_forquotedate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForQuoteInfo::set_has_forquotedate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForQuoteInfo::clear_has_forquotedate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForQuoteInfo::clear_forquotedate() {
  forquotedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forquotedate();
}
inline const ::std::string& ForQuoteInfo::forquotedate() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.forquotedate)
  return forquotedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_forquotedate(const ::std::string& value) {
  set_has_forquotedate();
  forquotedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.forquotedate)
}
inline void ForQuoteInfo::set_forquotedate(const char* value) {
  set_has_forquotedate();
  forquotedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ForQuoteInfo.forquotedate)
}
inline void ForQuoteInfo::set_forquotedate(const char* value, size_t size) {
  set_has_forquotedate();
  forquotedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ForQuoteInfo.forquotedate)
}
inline ::std::string* ForQuoteInfo::mutable_forquotedate() {
  set_has_forquotedate();
  // @@protoc_insertion_point(field_mutable:XT.ForQuoteInfo.forquotedate)
  return forquotedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForQuoteInfo::release_forquotedate() {
  // @@protoc_insertion_point(field_release:XT.ForQuoteInfo.forquotedate)
  clear_has_forquotedate();
  return forquotedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_allocated_forquotedate(::std::string* forquotedate) {
  if (forquotedate != NULL) {
    set_has_forquotedate();
  } else {
    clear_has_forquotedate();
  }
  forquotedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forquotedate);
  // @@protoc_insertion_point(field_set_allocated:XT.ForQuoteInfo.forquotedate)
}

// optional string forquotetime = 5 [default = ""];
inline bool ForQuoteInfo::has_forquotetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForQuoteInfo::set_has_forquotetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForQuoteInfo::clear_has_forquotetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForQuoteInfo::clear_forquotetime() {
  forquotetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forquotetime();
}
inline const ::std::string& ForQuoteInfo::forquotetime() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.forquotetime)
  return forquotetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_forquotetime(const ::std::string& value) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.forquotetime)
}
inline void ForQuoteInfo::set_forquotetime(const char* value) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ForQuoteInfo.forquotetime)
}
inline void ForQuoteInfo::set_forquotetime(const char* value, size_t size) {
  set_has_forquotetime();
  forquotetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ForQuoteInfo.forquotetime)
}
inline ::std::string* ForQuoteInfo::mutable_forquotetime() {
  set_has_forquotetime();
  // @@protoc_insertion_point(field_mutable:XT.ForQuoteInfo.forquotetime)
  return forquotetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForQuoteInfo::release_forquotetime() {
  // @@protoc_insertion_point(field_release:XT.ForQuoteInfo.forquotetime)
  clear_has_forquotetime();
  return forquotetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForQuoteInfo::set_allocated_forquotetime(::std::string* forquotetime) {
  if (forquotetime != NULL) {
    set_has_forquotetime();
  } else {
    clear_has_forquotetime();
  }
  forquotetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forquotetime);
  // @@protoc_insertion_point(field_set_allocated:XT.ForQuoteInfo.forquotetime)
}

// optional int32 tradingday = 6 [default = 0];
inline bool ForQuoteInfo::has_tradingday() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ForQuoteInfo::set_has_tradingday() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ForQuoteInfo::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ForQuoteInfo::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 ForQuoteInfo::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.tradingday)
  return tradingday_;
}
inline void ForQuoteInfo::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.tradingday)
}

// optional int64 exchts = 7 [default = 0];
inline bool ForQuoteInfo::has_exchts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ForQuoteInfo::set_has_exchts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ForQuoteInfo::clear_has_exchts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ForQuoteInfo::clear_exchts() {
  exchts_ = GOOGLE_LONGLONG(0);
  clear_has_exchts();
}
inline ::google::protobuf::int64 ForQuoteInfo::exchts() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.exchts)
  return exchts_;
}
inline void ForQuoteInfo::set_exchts(::google::protobuf::int64 value) {
  set_has_exchts();
  exchts_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.exchts)
}

// optional int64 rcvts = 8 [default = 0];
inline bool ForQuoteInfo::has_rcvts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ForQuoteInfo::set_has_rcvts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ForQuoteInfo::clear_has_rcvts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ForQuoteInfo::clear_rcvts() {
  rcvts_ = GOOGLE_LONGLONG(0);
  clear_has_rcvts();
}
inline ::google::protobuf::int64 ForQuoteInfo::rcvts() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.rcvts)
  return rcvts_;
}
inline void ForQuoteInfo::set_rcvts(::google::protobuf::int64 value) {
  set_has_rcvts();
  rcvts_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.rcvts)
}

// optional int64 rspts = 9 [default = 0];
inline bool ForQuoteInfo::has_rspts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ForQuoteInfo::set_has_rspts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ForQuoteInfo::clear_has_rspts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ForQuoteInfo::clear_rspts() {
  rspts_ = GOOGLE_LONGLONG(0);
  clear_has_rspts();
}
inline ::google::protobuf::int64 ForQuoteInfo::rspts() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.rspts)
  return rspts_;
}
inline void ForQuoteInfo::set_rspts(::google::protobuf::int64 value) {
  set_has_rspts();
  rspts_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.rspts)
}

// optional int32 currqid = 10 [default = 0];
inline bool ForQuoteInfo::has_currqid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ForQuoteInfo::set_has_currqid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ForQuoteInfo::clear_has_currqid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ForQuoteInfo::clear_currqid() {
  currqid_ = 0;
  clear_has_currqid();
}
inline ::google::protobuf::int32 ForQuoteInfo::currqid() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.currqid)
  return currqid_;
}
inline void ForQuoteInfo::set_currqid(::google::protobuf::int32 value) {
  set_has_currqid();
  currqid_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.currqid)
}

// optional int32 rspstatus = 11 [default = 0];
inline bool ForQuoteInfo::has_rspstatus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ForQuoteInfo::set_has_rspstatus() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ForQuoteInfo::clear_has_rspstatus() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ForQuoteInfo::clear_rspstatus() {
  rspstatus_ = 0;
  clear_has_rspstatus();
}
inline ::google::protobuf::int32 ForQuoteInfo::rspstatus() const {
  // @@protoc_insertion_point(field_get:XT.ForQuoteInfo.rspstatus)
  return rspstatus_;
}
inline void ForQuoteInfo::set_rspstatus(::google::protobuf::int32 value) {
  set_has_rspstatus();
  rspstatus_ = value;
  // @@protoc_insertion_point(field_set:XT.ForQuoteInfo.rspstatus)
}

// -------------------------------------------------------------------

// VolumeAmount

// optional int64 volume = 1 [default = 0];
inline bool VolumeAmount::has_volume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VolumeAmount::set_has_volume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VolumeAmount::clear_has_volume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VolumeAmount::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 VolumeAmount::volume() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmount.volume)
  return volume_;
}
inline void VolumeAmount::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmount.volume)
}

// optional double amount = 2 [default = 0];
inline bool VolumeAmount::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VolumeAmount::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VolumeAmount::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VolumeAmount::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline double VolumeAmount::amount() const {
  // @@protoc_insertion_point(field_get:XT.VolumeAmount.amount)
  return amount_;
}
inline void VolumeAmount::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.VolumeAmount.amount)
}

// -------------------------------------------------------------------

// PxVolume

// optional double px = 1 [default = 0];
inline bool PxVolume::has_px() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PxVolume::set_has_px() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PxVolume::clear_has_px() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PxVolume::clear_px() {
  px_ = 0;
  clear_has_px();
}
inline double PxVolume::px() const {
  // @@protoc_insertion_point(field_get:XT.PxVolume.px)
  return px_;
}
inline void PxVolume::set_px(double value) {
  set_has_px();
  px_ = value;
  // @@protoc_insertion_point(field_set:XT.PxVolume.px)
}

// optional int64 volume = 2 [default = 0];
inline bool PxVolume::has_volume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PxVolume::set_has_volume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PxVolume::clear_has_volume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PxVolume::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 PxVolume::volume() const {
  // @@protoc_insertion_point(field_get:XT.PxVolume.volume)
  return volume_;
}
inline void PxVolume::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.PxVolume.volume)
}

// -------------------------------------------------------------------

// IntPxHalfExposure

// optional int64 intpx = 1 [default = 0];
inline bool IntPxHalfExposure::has_intpx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntPxHalfExposure::set_has_intpx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntPxHalfExposure::clear_has_intpx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntPxHalfExposure::clear_intpx() {
  intpx_ = GOOGLE_LONGLONG(0);
  clear_has_intpx();
}
inline ::google::protobuf::int64 IntPxHalfExposure::intpx() const {
  // @@protoc_insertion_point(field_get:XT.IntPxHalfExposure.intpx)
  return intpx_;
}
inline void IntPxHalfExposure::set_intpx(::google::protobuf::int64 value) {
  set_has_intpx();
  intpx_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxHalfExposure.intpx)
}

// optional int32 workingnumorders = 2 [default = 0];
inline bool IntPxHalfExposure::has_workingnumorders() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntPxHalfExposure::set_has_workingnumorders() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntPxHalfExposure::clear_has_workingnumorders() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntPxHalfExposure::clear_workingnumorders() {
  workingnumorders_ = 0;
  clear_has_workingnumorders();
}
inline ::google::protobuf::int32 IntPxHalfExposure::workingnumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxHalfExposure.workingnumorders)
  return workingnumorders_;
}
inline void IntPxHalfExposure::set_workingnumorders(::google::protobuf::int32 value) {
  set_has_workingnumorders();
  workingnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxHalfExposure.workingnumorders)
}

// optional int64 workingsz = 3 [default = 0];
inline bool IntPxHalfExposure::has_workingsz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntPxHalfExposure::set_has_workingsz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntPxHalfExposure::clear_has_workingsz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntPxHalfExposure::clear_workingsz() {
  workingsz_ = GOOGLE_LONGLONG(0);
  clear_has_workingsz();
}
inline ::google::protobuf::int64 IntPxHalfExposure::workingsz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxHalfExposure.workingsz)
  return workingsz_;
}
inline void IntPxHalfExposure::set_workingsz(::google::protobuf::int64 value) {
  set_has_workingsz();
  workingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxHalfExposure.workingsz)
}

// -------------------------------------------------------------------

// IntPxInfo

// optional int64 intpx = 1 [default = 0];
inline bool IntPxInfo::has_intpx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntPxInfo::set_has_intpx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntPxInfo::clear_has_intpx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntPxInfo::clear_intpx() {
  intpx_ = GOOGLE_LONGLONG(0);
  clear_has_intpx();
}
inline ::google::protobuf::int64 IntPxInfo::intpx() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.intpx)
  return intpx_;
}
inline void IntPxInfo::set_intpx(::google::protobuf::int64 value) {
  set_has_intpx();
  intpx_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.intpx)
}

// optional int32 mktbstype = 2 [default = 0];
inline bool IntPxInfo::has_mktbstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntPxInfo::set_has_mktbstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntPxInfo::clear_has_mktbstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntPxInfo::clear_mktbstype() {
  mktbstype_ = 0;
  clear_has_mktbstype();
}
inline ::google::protobuf::int32 IntPxInfo::mktbstype() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktbstype)
  return mktbstype_;
}
inline void IntPxInfo::set_mktbstype(::google::protobuf::int32 value) {
  set_has_mktbstype();
  mktbstype_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktbstype)
}

// optional int64 mktsz = 3 [default = 0];
inline bool IntPxInfo::has_mktsz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntPxInfo::set_has_mktsz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntPxInfo::clear_has_mktsz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntPxInfo::clear_mktsz() {
  mktsz_ = GOOGLE_LONGLONG(0);
  clear_has_mktsz();
}
inline ::google::protobuf::int64 IntPxInfo::mktsz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktsz)
  return mktsz_;
}
inline void IntPxInfo::set_mktsz(::google::protobuf::int64 value) {
  set_has_mktsz();
  mktsz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktsz)
}

// optional int32 mktnumorders = 4 [default = 0];
inline bool IntPxInfo::has_mktnumorders() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IntPxInfo::set_has_mktnumorders() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IntPxInfo::clear_has_mktnumorders() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IntPxInfo::clear_mktnumorders() {
  mktnumorders_ = 0;
  clear_has_mktnumorders();
}
inline ::google::protobuf::int32 IntPxInfo::mktnumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktnumorders)
  return mktnumorders_;
}
inline void IntPxInfo::set_mktnumorders(::google::protobuf::int32 value) {
  set_has_mktnumorders();
  mktnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktnumorders)
}

// optional int64 mktbuyvolume = 5 [default = 0];
inline bool IntPxInfo::has_mktbuyvolume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IntPxInfo::set_has_mktbuyvolume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IntPxInfo::clear_has_mktbuyvolume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IntPxInfo::clear_mktbuyvolume() {
  mktbuyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_mktbuyvolume();
}
inline ::google::protobuf::int64 IntPxInfo::mktbuyvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktbuyvolume)
  return mktbuyvolume_;
}
inline void IntPxInfo::set_mktbuyvolume(::google::protobuf::int64 value) {
  set_has_mktbuyvolume();
  mktbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktbuyvolume)
}

// optional double mktbuyamount = 6 [default = 0];
inline bool IntPxInfo::has_mktbuyamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IntPxInfo::set_has_mktbuyamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IntPxInfo::clear_has_mktbuyamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IntPxInfo::clear_mktbuyamount() {
  mktbuyamount_ = 0;
  clear_has_mktbuyamount();
}
inline double IntPxInfo::mktbuyamount() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktbuyamount)
  return mktbuyamount_;
}
inline void IntPxInfo::set_mktbuyamount(double value) {
  set_has_mktbuyamount();
  mktbuyamount_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktbuyamount)
}

// optional int64 mktsellvolume = 7 [default = 0];
inline bool IntPxInfo::has_mktsellvolume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IntPxInfo::set_has_mktsellvolume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IntPxInfo::clear_has_mktsellvolume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IntPxInfo::clear_mktsellvolume() {
  mktsellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_mktsellvolume();
}
inline ::google::protobuf::int64 IntPxInfo::mktsellvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktsellvolume)
  return mktsellvolume_;
}
inline void IntPxInfo::set_mktsellvolume(::google::protobuf::int64 value) {
  set_has_mktsellvolume();
  mktsellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktsellvolume)
}

// optional double mktsellamount = 8 [default = 0];
inline bool IntPxInfo::has_mktsellamount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IntPxInfo::set_has_mktsellamount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IntPxInfo::clear_has_mktsellamount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IntPxInfo::clear_mktsellamount() {
  mktsellamount_ = 0;
  clear_has_mktsellamount();
}
inline double IntPxInfo::mktsellamount() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.mktsellamount)
  return mktsellamount_;
}
inline void IntPxInfo::set_mktsellamount(double value) {
  set_has_mktsellamount();
  mktsellamount_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.mktsellamount)
}

// optional int64 buyvolume = 21 [default = 0];
inline bool IntPxInfo::has_buyvolume() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IntPxInfo::set_has_buyvolume() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IntPxInfo::clear_has_buyvolume() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IntPxInfo::clear_buyvolume() {
  buyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_buyvolume();
}
inline ::google::protobuf::int64 IntPxInfo::buyvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.buyvolume)
  return buyvolume_;
}
inline void IntPxInfo::set_buyvolume(::google::protobuf::int64 value) {
  set_has_buyvolume();
  buyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.buyvolume)
}

// optional double buyamount = 22 [default = 0];
inline bool IntPxInfo::has_buyamount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IntPxInfo::set_has_buyamount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IntPxInfo::clear_has_buyamount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IntPxInfo::clear_buyamount() {
  buyamount_ = 0;
  clear_has_buyamount();
}
inline double IntPxInfo::buyamount() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.buyamount)
  return buyamount_;
}
inline void IntPxInfo::set_buyamount(double value) {
  set_has_buyamount();
  buyamount_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.buyamount)
}

// optional int64 sellvolume = 23 [default = 0];
inline bool IntPxInfo::has_sellvolume() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IntPxInfo::set_has_sellvolume() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IntPxInfo::clear_has_sellvolume() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IntPxInfo::clear_sellvolume() {
  sellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_sellvolume();
}
inline ::google::protobuf::int64 IntPxInfo::sellvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.sellvolume)
  return sellvolume_;
}
inline void IntPxInfo::set_sellvolume(::google::protobuf::int64 value) {
  set_has_sellvolume();
  sellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.sellvolume)
}

// optional double sellamount = 24 [default = 0];
inline bool IntPxInfo::has_sellamount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IntPxInfo::set_has_sellamount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IntPxInfo::clear_has_sellamount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IntPxInfo::clear_sellamount() {
  sellamount_ = 0;
  clear_has_sellamount();
}
inline double IntPxInfo::sellamount() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.sellamount)
  return sellamount_;
}
inline void IntPxInfo::set_sellamount(double value) {
  set_has_sellamount();
  sellamount_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.sellamount)
}

// optional int32 buynumorders = 25 [default = 0];
inline bool IntPxInfo::has_buynumorders() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void IntPxInfo::set_has_buynumorders() {
  _has_bits_[0] |= 0x00001000u;
}
inline void IntPxInfo::clear_has_buynumorders() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void IntPxInfo::clear_buynumorders() {
  buynumorders_ = 0;
  clear_has_buynumorders();
}
inline ::google::protobuf::int32 IntPxInfo::buynumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.buynumorders)
  return buynumorders_;
}
inline void IntPxInfo::set_buynumorders(::google::protobuf::int32 value) {
  set_has_buynumorders();
  buynumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.buynumorders)
}

// optional int64 buysz = 26 [default = 0];
inline bool IntPxInfo::has_buysz() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void IntPxInfo::set_has_buysz() {
  _has_bits_[0] |= 0x00002000u;
}
inline void IntPxInfo::clear_has_buysz() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void IntPxInfo::clear_buysz() {
  buysz_ = GOOGLE_LONGLONG(0);
  clear_has_buysz();
}
inline ::google::protobuf::int64 IntPxInfo::buysz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.buysz)
  return buysz_;
}
inline void IntPxInfo::set_buysz(::google::protobuf::int64 value) {
  set_has_buysz();
  buysz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.buysz)
}

// optional int32 sellnumorders = 27 [default = 0];
inline bool IntPxInfo::has_sellnumorders() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void IntPxInfo::set_has_sellnumorders() {
  _has_bits_[0] |= 0x00004000u;
}
inline void IntPxInfo::clear_has_sellnumorders() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void IntPxInfo::clear_sellnumorders() {
  sellnumorders_ = 0;
  clear_has_sellnumorders();
}
inline ::google::protobuf::int32 IntPxInfo::sellnumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.sellnumorders)
  return sellnumorders_;
}
inline void IntPxInfo::set_sellnumorders(::google::protobuf::int32 value) {
  set_has_sellnumorders();
  sellnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.sellnumorders)
}

// optional int64 sellsz = 28 [default = 0];
inline bool IntPxInfo::has_sellsz() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void IntPxInfo::set_has_sellsz() {
  _has_bits_[0] |= 0x00008000u;
}
inline void IntPxInfo::clear_has_sellsz() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void IntPxInfo::clear_sellsz() {
  sellsz_ = GOOGLE_LONGLONG(0);
  clear_has_sellsz();
}
inline ::google::protobuf::int64 IntPxInfo::sellsz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxInfo.sellsz)
  return sellsz_;
}
inline void IntPxInfo::set_sellsz(::google::protobuf::int64 value) {
  set_has_sellsz();
  sellsz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxInfo.sellsz)
}

// -------------------------------------------------------------------

// IntPxMktInfo

// optional int64 intpx = 1 [default = 0];
inline bool IntPxMktInfo::has_intpx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntPxMktInfo::set_has_intpx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntPxMktInfo::clear_has_intpx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntPxMktInfo::clear_intpx() {
  intpx_ = GOOGLE_LONGLONG(0);
  clear_has_intpx();
}
inline ::google::protobuf::int64 IntPxMktInfo::intpx() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.intpx)
  return intpx_;
}
inline void IntPxMktInfo::set_intpx(::google::protobuf::int64 value) {
  set_has_intpx();
  intpx_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.intpx)
}

// optional int32 mktbstype = 2 [default = 0];
inline bool IntPxMktInfo::has_mktbstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntPxMktInfo::set_has_mktbstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntPxMktInfo::clear_has_mktbstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntPxMktInfo::clear_mktbstype() {
  mktbstype_ = 0;
  clear_has_mktbstype();
}
inline ::google::protobuf::int32 IntPxMktInfo::mktbstype() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.mktbstype)
  return mktbstype_;
}
inline void IntPxMktInfo::set_mktbstype(::google::protobuf::int32 value) {
  set_has_mktbstype();
  mktbstype_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.mktbstype)
}

// optional int64 mktsz = 3 [default = 0];
inline bool IntPxMktInfo::has_mktsz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntPxMktInfo::set_has_mktsz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntPxMktInfo::clear_has_mktsz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntPxMktInfo::clear_mktsz() {
  mktsz_ = GOOGLE_LONGLONG(0);
  clear_has_mktsz();
}
inline ::google::protobuf::int64 IntPxMktInfo::mktsz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.mktsz)
  return mktsz_;
}
inline void IntPxMktInfo::set_mktsz(::google::protobuf::int64 value) {
  set_has_mktsz();
  mktsz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.mktsz)
}

// optional int32 mktnumorders = 4 [default = 0];
inline bool IntPxMktInfo::has_mktnumorders() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IntPxMktInfo::set_has_mktnumorders() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IntPxMktInfo::clear_has_mktnumorders() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IntPxMktInfo::clear_mktnumorders() {
  mktnumorders_ = 0;
  clear_has_mktnumorders();
}
inline ::google::protobuf::int32 IntPxMktInfo::mktnumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.mktnumorders)
  return mktnumorders_;
}
inline void IntPxMktInfo::set_mktnumorders(::google::protobuf::int32 value) {
  set_has_mktnumorders();
  mktnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.mktnumorders)
}

// optional int64 mktbuyvolume = 5 [default = 0];
inline bool IntPxMktInfo::has_mktbuyvolume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IntPxMktInfo::set_has_mktbuyvolume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IntPxMktInfo::clear_has_mktbuyvolume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IntPxMktInfo::clear_mktbuyvolume() {
  mktbuyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_mktbuyvolume();
}
inline ::google::protobuf::int64 IntPxMktInfo::mktbuyvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.mktbuyvolume)
  return mktbuyvolume_;
}
inline void IntPxMktInfo::set_mktbuyvolume(::google::protobuf::int64 value) {
  set_has_mktbuyvolume();
  mktbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.mktbuyvolume)
}

// optional int64 rmktbuyvolume = 6 [default = 0];
inline bool IntPxMktInfo::has_rmktbuyvolume() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IntPxMktInfo::set_has_rmktbuyvolume() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IntPxMktInfo::clear_has_rmktbuyvolume() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IntPxMktInfo::clear_rmktbuyvolume() {
  rmktbuyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_rmktbuyvolume();
}
inline ::google::protobuf::int64 IntPxMktInfo::rmktbuyvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.rmktbuyvolume)
  return rmktbuyvolume_;
}
inline void IntPxMktInfo::set_rmktbuyvolume(::google::protobuf::int64 value) {
  set_has_rmktbuyvolume();
  rmktbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.rmktbuyvolume)
}

// optional int64 mktsellvolume = 7 [default = 0];
inline bool IntPxMktInfo::has_mktsellvolume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IntPxMktInfo::set_has_mktsellvolume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IntPxMktInfo::clear_has_mktsellvolume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IntPxMktInfo::clear_mktsellvolume() {
  mktsellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_mktsellvolume();
}
inline ::google::protobuf::int64 IntPxMktInfo::mktsellvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.mktsellvolume)
  return mktsellvolume_;
}
inline void IntPxMktInfo::set_mktsellvolume(::google::protobuf::int64 value) {
  set_has_mktsellvolume();
  mktsellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.mktsellvolume)
}

// optional int64 rmktsellvolume = 8 [default = 0];
inline bool IntPxMktInfo::has_rmktsellvolume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IntPxMktInfo::set_has_rmktsellvolume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IntPxMktInfo::clear_has_rmktsellvolume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IntPxMktInfo::clear_rmktsellvolume() {
  rmktsellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_rmktsellvolume();
}
inline ::google::protobuf::int64 IntPxMktInfo::rmktsellvolume() const {
  // @@protoc_insertion_point(field_get:XT.IntPxMktInfo.rmktsellvolume)
  return rmktsellvolume_;
}
inline void IntPxMktInfo::set_rmktsellvolume(::google::protobuf::int64 value) {
  set_has_rmktsellvolume();
  rmktsellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxMktInfo.rmktsellvolume)
}

// -------------------------------------------------------------------

// IntPxOrderInfo

// optional int64 intpx = 1 [default = 0];
inline bool IntPxOrderInfo::has_intpx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntPxOrderInfo::set_has_intpx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntPxOrderInfo::clear_has_intpx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntPxOrderInfo::clear_intpx() {
  intpx_ = GOOGLE_LONGLONG(0);
  clear_has_intpx();
}
inline ::google::protobuf::int64 IntPxOrderInfo::intpx() const {
  // @@protoc_insertion_point(field_get:XT.IntPxOrderInfo.intpx)
  return intpx_;
}
inline void IntPxOrderInfo::set_intpx(::google::protobuf::int64 value) {
  set_has_intpx();
  intpx_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxOrderInfo.intpx)
}

// optional int32 workingnumorders = 2 [default = 0];
inline bool IntPxOrderInfo::has_workingnumorders() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntPxOrderInfo::set_has_workingnumorders() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntPxOrderInfo::clear_has_workingnumorders() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntPxOrderInfo::clear_workingnumorders() {
  workingnumorders_ = 0;
  clear_has_workingnumorders();
}
inline ::google::protobuf::int32 IntPxOrderInfo::workingnumorders() const {
  // @@protoc_insertion_point(field_get:XT.IntPxOrderInfo.workingnumorders)
  return workingnumorders_;
}
inline void IntPxOrderInfo::set_workingnumorders(::google::protobuf::int32 value) {
  set_has_workingnumorders();
  workingnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxOrderInfo.workingnumorders)
}

// optional int64 workingsz = 3 [default = 0];
inline bool IntPxOrderInfo::has_workingsz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntPxOrderInfo::set_has_workingsz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntPxOrderInfo::clear_has_workingsz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntPxOrderInfo::clear_workingsz() {
  workingsz_ = GOOGLE_LONGLONG(0);
  clear_has_workingsz();
}
inline ::google::protobuf::int64 IntPxOrderInfo::workingsz() const {
  // @@protoc_insertion_point(field_get:XT.IntPxOrderInfo.workingsz)
  return workingsz_;
}
inline void IntPxOrderInfo::set_workingsz(::google::protobuf::int64 value) {
  set_has_workingsz();
  workingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.IntPxOrderInfo.workingsz)
}

// map<int32, int64> orderid2openszmap = 4;
inline int IntPxOrderInfo::orderid2openszmap_size() const {
  return orderid2openszmap_.size();
}
inline void IntPxOrderInfo::clear_orderid2openszmap() {
  orderid2openszmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
IntPxOrderInfo::orderid2openszmap() const {
  // @@protoc_insertion_point(field_map:XT.IntPxOrderInfo.orderid2openszmap)
  return orderid2openszmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
IntPxOrderInfo::mutable_orderid2openszmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.IntPxOrderInfo.orderid2openszmap)
  return orderid2openszmap_.MutableMap();
}

// -------------------------------------------------------------------

// HalfExposure

// optional int32 workingnumorders = 1 [default = 0];
inline bool HalfExposure::has_workingnumorders() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HalfExposure::set_has_workingnumorders() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HalfExposure::clear_has_workingnumorders() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HalfExposure::clear_workingnumorders() {
  workingnumorders_ = 0;
  clear_has_workingnumorders();
}
inline ::google::protobuf::int32 HalfExposure::workingnumorders() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.workingnumorders)
  return workingnumorders_;
}
inline void HalfExposure::set_workingnumorders(::google::protobuf::int32 value) {
  set_has_workingnumorders();
  workingnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.workingnumorders)
}

// optional int64 workingsz = 2 [default = 0];
inline bool HalfExposure::has_workingsz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HalfExposure::set_has_workingsz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HalfExposure::clear_has_workingsz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HalfExposure::clear_workingsz() {
  workingsz_ = GOOGLE_LONGLONG(0);
  clear_has_workingsz();
}
inline ::google::protobuf::int64 HalfExposure::workingsz() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.workingsz)
  return workingsz_;
}
inline void HalfExposure::set_workingsz(::google::protobuf::int64 value) {
  set_has_workingsz();
  workingsz_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.workingsz)
}

// optional int64 volume = 3 [default = 0];
inline bool HalfExposure::has_volume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HalfExposure::set_has_volume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HalfExposure::clear_has_volume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HalfExposure::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 HalfExposure::volume() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.volume)
  return volume_;
}
inline void HalfExposure::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.volume)
}

// optional double amount = 4 [default = 0];
inline bool HalfExposure::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HalfExposure::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HalfExposure::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HalfExposure::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline double HalfExposure::amount() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.amount)
  return amount_;
}
inline void HalfExposure::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.amount)
}

// optional int64 volumesession = 5 [default = 0];
inline bool HalfExposure::has_volumesession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HalfExposure::set_has_volumesession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HalfExposure::clear_has_volumesession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HalfExposure::clear_volumesession() {
  volumesession_ = GOOGLE_LONGLONG(0);
  clear_has_volumesession();
}
inline ::google::protobuf::int64 HalfExposure::volumesession() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.volumesession)
  return volumesession_;
}
inline void HalfExposure::set_volumesession(::google::protobuf::int64 value) {
  set_has_volumesession();
  volumesession_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.volumesession)
}

// optional double amountsession = 6 [default = 0];
inline bool HalfExposure::has_amountsession() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HalfExposure::set_has_amountsession() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HalfExposure::clear_has_amountsession() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HalfExposure::clear_amountsession() {
  amountsession_ = 0;
  clear_has_amountsession();
}
inline double HalfExposure::amountsession() const {
  // @@protoc_insertion_point(field_get:XT.HalfExposure.amountsession)
  return amountsession_;
}
inline void HalfExposure::set_amountsession(double value) {
  set_has_amountsession();
  amountsession_ = value;
  // @@protoc_insertion_point(field_set:XT.HalfExposure.amountsession)
}

// -------------------------------------------------------------------

// MktQuoteData

// optional string instrid = 1 [default = ""];
inline bool MktQuoteData::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MktQuoteData::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MktQuoteData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MktQuoteData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& MktQuoteData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.instrid)
}
inline void MktQuoteData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MktQuoteData.instrid)
}
inline void MktQuoteData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MktQuoteData.instrid)
}
inline ::std::string* MktQuoteData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.MktQuoteData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MktQuoteData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.MktQuoteData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.MktQuoteData.instrid)
}

// optional string exchid = 2 [default = ""];
inline bool MktQuoteData::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MktQuoteData::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MktQuoteData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MktQuoteData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& MktQuoteData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.exchid)
}
inline void MktQuoteData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MktQuoteData.exchid)
}
inline void MktQuoteData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MktQuoteData.exchid)
}
inline ::std::string* MktQuoteData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.MktQuoteData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MktQuoteData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.MktQuoteData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.MktQuoteData.exchid)
}

// optional string source = 3 [default = ""];
inline bool MktQuoteData::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MktQuoteData::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MktQuoteData::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MktQuoteData::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& MktQuoteData::source() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.source)
}
inline void MktQuoteData::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MktQuoteData.source)
}
inline void MktQuoteData::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MktQuoteData.source)
}
inline ::std::string* MktQuoteData::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:XT.MktQuoteData.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MktQuoteData::release_source() {
  // @@protoc_insertion_point(field_release:XT.MktQuoteData.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:XT.MktQuoteData.source)
}

// optional int64 exchts = 4 [default = 0];
inline bool MktQuoteData::has_exchts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MktQuoteData::set_has_exchts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MktQuoteData::clear_has_exchts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MktQuoteData::clear_exchts() {
  exchts_ = GOOGLE_LONGLONG(0);
  clear_has_exchts();
}
inline ::google::protobuf::int64 MktQuoteData::exchts() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.exchts)
  return exchts_;
}
inline void MktQuoteData::set_exchts(::google::protobuf::int64 value) {
  set_has_exchts();
  exchts_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.exchts)
}

// optional int64 recvts = 5 [default = 0];
inline bool MktQuoteData::has_recvts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MktQuoteData::set_has_recvts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MktQuoteData::clear_has_recvts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MktQuoteData::clear_recvts() {
  recvts_ = GOOGLE_LONGLONG(0);
  clear_has_recvts();
}
inline ::google::protobuf::int64 MktQuoteData::recvts() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.recvts)
  return recvts_;
}
inline void MktQuoteData::set_recvts(::google::protobuf::int64 value) {
  set_has_recvts();
  recvts_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.recvts)
}

// optional double lastpx = 6 [default = 0];
inline bool MktQuoteData::has_lastpx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MktQuoteData::set_has_lastpx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MktQuoteData::clear_has_lastpx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MktQuoteData::clear_lastpx() {
  lastpx_ = 0;
  clear_has_lastpx();
}
inline double MktQuoteData::lastpx() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.lastpx)
  return lastpx_;
}
inline void MktQuoteData::set_lastpx(double value) {
  set_has_lastpx();
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.lastpx)
}

// optional int64 lastts = 7 [default = 0];
inline bool MktQuoteData::has_lastts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MktQuoteData::set_has_lastts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MktQuoteData::clear_has_lastts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MktQuoteData::clear_lastts() {
  lastts_ = GOOGLE_LONGLONG(0);
  clear_has_lastts();
}
inline ::google::protobuf::int64 MktQuoteData::lastts() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.lastts)
  return lastts_;
}
inline void MktQuoteData::set_lastts(::google::protobuf::int64 value) {
  set_has_lastts();
  lastts_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.lastts)
}

// optional int64 totvolume = 8 [default = 0];
inline bool MktQuoteData::has_totvolume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MktQuoteData::set_has_totvolume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MktQuoteData::clear_has_totvolume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MktQuoteData::clear_totvolume() {
  totvolume_ = GOOGLE_LONGLONG(0);
  clear_has_totvolume();
}
inline ::google::protobuf::int64 MktQuoteData::totvolume() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.totvolume)
  return totvolume_;
}
inline void MktQuoteData::set_totvolume(::google::protobuf::int64 value) {
  set_has_totvolume();
  totvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.totvolume)
}

// optional double totamount = 9 [default = 0];
inline bool MktQuoteData::has_totamount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MktQuoteData::set_has_totamount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MktQuoteData::clear_has_totamount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MktQuoteData::clear_totamount() {
  totamount_ = 0;
  clear_has_totamount();
}
inline double MktQuoteData::totamount() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.totamount)
  return totamount_;
}
inline void MktQuoteData::set_totamount(double value) {
  set_has_totamount();
  totamount_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.totamount)
}

// optional int64 totoi = 10 [default = 0];
inline bool MktQuoteData::has_totoi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MktQuoteData::set_has_totoi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MktQuoteData::clear_has_totoi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MktQuoteData::clear_totoi() {
  totoi_ = GOOGLE_LONGLONG(0);
  clear_has_totoi();
}
inline ::google::protobuf::int64 MktQuoteData::totoi() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.totoi)
  return totoi_;
}
inline void MktQuoteData::set_totoi(::google::protobuf::int64 value) {
  set_has_totoi();
  totoi_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.totoi)
}

// optional double bidpx0 = 11 [default = 0];
inline bool MktQuoteData::has_bidpx0() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MktQuoteData::set_has_bidpx0() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MktQuoteData::clear_has_bidpx0() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MktQuoteData::clear_bidpx0() {
  bidpx0_ = 0;
  clear_has_bidpx0();
}
inline double MktQuoteData::bidpx0() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidpx0)
  return bidpx0_;
}
inline void MktQuoteData::set_bidpx0(double value) {
  set_has_bidpx0();
  bidpx0_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidpx0)
}

// optional double askpx0 = 12 [default = 0];
inline bool MktQuoteData::has_askpx0() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MktQuoteData::set_has_askpx0() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MktQuoteData::clear_has_askpx0() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MktQuoteData::clear_askpx0() {
  askpx0_ = 0;
  clear_has_askpx0();
}
inline double MktQuoteData::askpx0() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.askpx0)
  return askpx0_;
}
inline void MktQuoteData::set_askpx0(double value) {
  set_has_askpx0();
  askpx0_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.askpx0)
}

// optional int64 bidsz0 = 13 [default = 0];
inline bool MktQuoteData::has_bidsz0() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MktQuoteData::set_has_bidsz0() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MktQuoteData::clear_has_bidsz0() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MktQuoteData::clear_bidsz0() {
  bidsz0_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz0();
}
inline ::google::protobuf::int64 MktQuoteData::bidsz0() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidsz0)
  return bidsz0_;
}
inline void MktQuoteData::set_bidsz0(::google::protobuf::int64 value) {
  set_has_bidsz0();
  bidsz0_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidsz0)
}

// optional int64 asksz0 = 14 [default = 0];
inline bool MktQuoteData::has_asksz0() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MktQuoteData::set_has_asksz0() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MktQuoteData::clear_has_asksz0() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MktQuoteData::clear_asksz0() {
  asksz0_ = GOOGLE_LONGLONG(0);
  clear_has_asksz0();
}
inline ::google::protobuf::int64 MktQuoteData::asksz0() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.asksz0)
  return asksz0_;
}
inline void MktQuoteData::set_asksz0(::google::protobuf::int64 value) {
  set_has_asksz0();
  asksz0_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.asksz0)
}

// optional int32 tradingday = 15 [default = 0];
inline bool MktQuoteData::has_tradingday() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MktQuoteData::set_has_tradingday() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MktQuoteData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MktQuoteData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 MktQuoteData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.tradingday)
  return tradingday_;
}
inline void MktQuoteData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.tradingday)
}

// optional string exchdt = 16 [default = ""];
inline bool MktQuoteData::has_exchdt() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MktQuoteData::set_has_exchdt() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MktQuoteData::clear_has_exchdt() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MktQuoteData::clear_exchdt() {
  exchdt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchdt();
}
inline const ::std::string& MktQuoteData::exchdt() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.exchdt)
  return exchdt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_exchdt(const ::std::string& value) {
  set_has_exchdt();
  exchdt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.exchdt)
}
inline void MktQuoteData::set_exchdt(const char* value) {
  set_has_exchdt();
  exchdt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.MktQuoteData.exchdt)
}
inline void MktQuoteData::set_exchdt(const char* value, size_t size) {
  set_has_exchdt();
  exchdt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.MktQuoteData.exchdt)
}
inline ::std::string* MktQuoteData::mutable_exchdt() {
  set_has_exchdt();
  // @@protoc_insertion_point(field_mutable:XT.MktQuoteData.exchdt)
  return exchdt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MktQuoteData::release_exchdt() {
  // @@protoc_insertion_point(field_release:XT.MktQuoteData.exchdt)
  clear_has_exchdt();
  return exchdt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MktQuoteData::set_allocated_exchdt(::std::string* exchdt) {
  if (exchdt != NULL) {
    set_has_exchdt();
  } else {
    clear_has_exchdt();
  }
  exchdt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchdt);
  // @@protoc_insertion_point(field_set_allocated:XT.MktQuoteData.exchdt)
}

// optional double bidpx1 = 20 [default = 0];
inline bool MktQuoteData::has_bidpx1() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MktQuoteData::set_has_bidpx1() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MktQuoteData::clear_has_bidpx1() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MktQuoteData::clear_bidpx1() {
  bidpx1_ = 0;
  clear_has_bidpx1();
}
inline double MktQuoteData::bidpx1() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidpx1)
  return bidpx1_;
}
inline void MktQuoteData::set_bidpx1(double value) {
  set_has_bidpx1();
  bidpx1_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidpx1)
}

// optional double askpx1 = 21 [default = 0];
inline bool MktQuoteData::has_askpx1() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MktQuoteData::set_has_askpx1() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MktQuoteData::clear_has_askpx1() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MktQuoteData::clear_askpx1() {
  askpx1_ = 0;
  clear_has_askpx1();
}
inline double MktQuoteData::askpx1() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.askpx1)
  return askpx1_;
}
inline void MktQuoteData::set_askpx1(double value) {
  set_has_askpx1();
  askpx1_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.askpx1)
}

// optional int64 bidsz1 = 22 [default = 0];
inline bool MktQuoteData::has_bidsz1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MktQuoteData::set_has_bidsz1() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MktQuoteData::clear_has_bidsz1() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MktQuoteData::clear_bidsz1() {
  bidsz1_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz1();
}
inline ::google::protobuf::int64 MktQuoteData::bidsz1() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidsz1)
  return bidsz1_;
}
inline void MktQuoteData::set_bidsz1(::google::protobuf::int64 value) {
  set_has_bidsz1();
  bidsz1_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidsz1)
}

// optional int64 asksz1 = 23 [default = 0];
inline bool MktQuoteData::has_asksz1() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MktQuoteData::set_has_asksz1() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MktQuoteData::clear_has_asksz1() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MktQuoteData::clear_asksz1() {
  asksz1_ = GOOGLE_LONGLONG(0);
  clear_has_asksz1();
}
inline ::google::protobuf::int64 MktQuoteData::asksz1() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.asksz1)
  return asksz1_;
}
inline void MktQuoteData::set_asksz1(::google::protobuf::int64 value) {
  set_has_asksz1();
  asksz1_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.asksz1)
}

// optional double bidpx2 = 24 [default = 0];
inline bool MktQuoteData::has_bidpx2() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MktQuoteData::set_has_bidpx2() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MktQuoteData::clear_has_bidpx2() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MktQuoteData::clear_bidpx2() {
  bidpx2_ = 0;
  clear_has_bidpx2();
}
inline double MktQuoteData::bidpx2() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidpx2)
  return bidpx2_;
}
inline void MktQuoteData::set_bidpx2(double value) {
  set_has_bidpx2();
  bidpx2_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidpx2)
}

// optional double askpx2 = 25 [default = 0];
inline bool MktQuoteData::has_askpx2() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MktQuoteData::set_has_askpx2() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MktQuoteData::clear_has_askpx2() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MktQuoteData::clear_askpx2() {
  askpx2_ = 0;
  clear_has_askpx2();
}
inline double MktQuoteData::askpx2() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.askpx2)
  return askpx2_;
}
inline void MktQuoteData::set_askpx2(double value) {
  set_has_askpx2();
  askpx2_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.askpx2)
}

// optional int64 bidsz2 = 26 [default = 0];
inline bool MktQuoteData::has_bidsz2() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MktQuoteData::set_has_bidsz2() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MktQuoteData::clear_has_bidsz2() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MktQuoteData::clear_bidsz2() {
  bidsz2_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz2();
}
inline ::google::protobuf::int64 MktQuoteData::bidsz2() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidsz2)
  return bidsz2_;
}
inline void MktQuoteData::set_bidsz2(::google::protobuf::int64 value) {
  set_has_bidsz2();
  bidsz2_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidsz2)
}

// optional int64 asksz2 = 27 [default = 0];
inline bool MktQuoteData::has_asksz2() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MktQuoteData::set_has_asksz2() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MktQuoteData::clear_has_asksz2() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MktQuoteData::clear_asksz2() {
  asksz2_ = GOOGLE_LONGLONG(0);
  clear_has_asksz2();
}
inline ::google::protobuf::int64 MktQuoteData::asksz2() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.asksz2)
  return asksz2_;
}
inline void MktQuoteData::set_asksz2(::google::protobuf::int64 value) {
  set_has_asksz2();
  asksz2_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.asksz2)
}

// optional double bidpx3 = 28 [default = 0];
inline bool MktQuoteData::has_bidpx3() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MktQuoteData::set_has_bidpx3() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MktQuoteData::clear_has_bidpx3() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MktQuoteData::clear_bidpx3() {
  bidpx3_ = 0;
  clear_has_bidpx3();
}
inline double MktQuoteData::bidpx3() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidpx3)
  return bidpx3_;
}
inline void MktQuoteData::set_bidpx3(double value) {
  set_has_bidpx3();
  bidpx3_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidpx3)
}

// optional double askpx3 = 29 [default = 0];
inline bool MktQuoteData::has_askpx3() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void MktQuoteData::set_has_askpx3() {
  _has_bits_[0] |= 0x02000000u;
}
inline void MktQuoteData::clear_has_askpx3() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void MktQuoteData::clear_askpx3() {
  askpx3_ = 0;
  clear_has_askpx3();
}
inline double MktQuoteData::askpx3() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.askpx3)
  return askpx3_;
}
inline void MktQuoteData::set_askpx3(double value) {
  set_has_askpx3();
  askpx3_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.askpx3)
}

// optional int64 bidsz3 = 30 [default = 0];
inline bool MktQuoteData::has_bidsz3() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void MktQuoteData::set_has_bidsz3() {
  _has_bits_[0] |= 0x04000000u;
}
inline void MktQuoteData::clear_has_bidsz3() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void MktQuoteData::clear_bidsz3() {
  bidsz3_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz3();
}
inline ::google::protobuf::int64 MktQuoteData::bidsz3() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidsz3)
  return bidsz3_;
}
inline void MktQuoteData::set_bidsz3(::google::protobuf::int64 value) {
  set_has_bidsz3();
  bidsz3_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidsz3)
}

// optional int64 asksz3 = 31 [default = 0];
inline bool MktQuoteData::has_asksz3() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void MktQuoteData::set_has_asksz3() {
  _has_bits_[0] |= 0x08000000u;
}
inline void MktQuoteData::clear_has_asksz3() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void MktQuoteData::clear_asksz3() {
  asksz3_ = GOOGLE_LONGLONG(0);
  clear_has_asksz3();
}
inline ::google::protobuf::int64 MktQuoteData::asksz3() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.asksz3)
  return asksz3_;
}
inline void MktQuoteData::set_asksz3(::google::protobuf::int64 value) {
  set_has_asksz3();
  asksz3_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.asksz3)
}

// optional double bidpx4 = 32 [default = 0];
inline bool MktQuoteData::has_bidpx4() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void MktQuoteData::set_has_bidpx4() {
  _has_bits_[0] |= 0x10000000u;
}
inline void MktQuoteData::clear_has_bidpx4() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void MktQuoteData::clear_bidpx4() {
  bidpx4_ = 0;
  clear_has_bidpx4();
}
inline double MktQuoteData::bidpx4() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidpx4)
  return bidpx4_;
}
inline void MktQuoteData::set_bidpx4(double value) {
  set_has_bidpx4();
  bidpx4_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidpx4)
}

// optional double askpx4 = 33 [default = 0];
inline bool MktQuoteData::has_askpx4() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void MktQuoteData::set_has_askpx4() {
  _has_bits_[0] |= 0x20000000u;
}
inline void MktQuoteData::clear_has_askpx4() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void MktQuoteData::clear_askpx4() {
  askpx4_ = 0;
  clear_has_askpx4();
}
inline double MktQuoteData::askpx4() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.askpx4)
  return askpx4_;
}
inline void MktQuoteData::set_askpx4(double value) {
  set_has_askpx4();
  askpx4_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.askpx4)
}

// optional int64 bidsz4 = 34 [default = 0];
inline bool MktQuoteData::has_bidsz4() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void MktQuoteData::set_has_bidsz4() {
  _has_bits_[0] |= 0x40000000u;
}
inline void MktQuoteData::clear_has_bidsz4() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void MktQuoteData::clear_bidsz4() {
  bidsz4_ = GOOGLE_LONGLONG(0);
  clear_has_bidsz4();
}
inline ::google::protobuf::int64 MktQuoteData::bidsz4() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.bidsz4)
  return bidsz4_;
}
inline void MktQuoteData::set_bidsz4(::google::protobuf::int64 value) {
  set_has_bidsz4();
  bidsz4_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.bidsz4)
}

// optional int64 asksz4 = 35 [default = 0];
inline bool MktQuoteData::has_asksz4() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void MktQuoteData::set_has_asksz4() {
  _has_bits_[0] |= 0x80000000u;
}
inline void MktQuoteData::clear_has_asksz4() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void MktQuoteData::clear_asksz4() {
  asksz4_ = GOOGLE_LONGLONG(0);
  clear_has_asksz4();
}
inline ::google::protobuf::int64 MktQuoteData::asksz4() const {
  // @@protoc_insertion_point(field_get:XT.MktQuoteData.asksz4)
  return asksz4_;
}
inline void MktQuoteData::set_asksz4(::google::protobuf::int64 value) {
  set_has_asksz4();
  asksz4_ = value;
  // @@protoc_insertion_point(field_set:XT.MktQuoteData.asksz4)
}

// -------------------------------------------------------------------

// GreeksData

// optional double delta = 1 [default = 0];
inline bool GreeksData::has_delta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GreeksData::set_has_delta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GreeksData::clear_has_delta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GreeksData::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline double GreeksData::delta() const {
  // @@protoc_insertion_point(field_get:XT.GreeksData.delta)
  return delta_;
}
inline void GreeksData::set_delta(double value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:XT.GreeksData.delta)
}

// optional double gamma = 2 [default = 0];
inline bool GreeksData::has_gamma() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GreeksData::set_has_gamma() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GreeksData::clear_has_gamma() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GreeksData::clear_gamma() {
  gamma_ = 0;
  clear_has_gamma();
}
inline double GreeksData::gamma() const {
  // @@protoc_insertion_point(field_get:XT.GreeksData.gamma)
  return gamma_;
}
inline void GreeksData::set_gamma(double value) {
  set_has_gamma();
  gamma_ = value;
  // @@protoc_insertion_point(field_set:XT.GreeksData.gamma)
}

// optional double vega = 3 [default = 0];
inline bool GreeksData::has_vega() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GreeksData::set_has_vega() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GreeksData::clear_has_vega() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GreeksData::clear_vega() {
  vega_ = 0;
  clear_has_vega();
}
inline double GreeksData::vega() const {
  // @@protoc_insertion_point(field_get:XT.GreeksData.vega)
  return vega_;
}
inline void GreeksData::set_vega(double value) {
  set_has_vega();
  vega_ = value;
  // @@protoc_insertion_point(field_set:XT.GreeksData.vega)
}

// optional double theta = 4 [default = 0];
inline bool GreeksData::has_theta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GreeksData::set_has_theta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GreeksData::clear_has_theta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GreeksData::clear_theta() {
  theta_ = 0;
  clear_has_theta();
}
inline double GreeksData::theta() const {
  // @@protoc_insertion_point(field_get:XT.GreeksData.theta)
  return theta_;
}
inline void GreeksData::set_theta(double value) {
  set_has_theta();
  theta_ = value;
  // @@protoc_insertion_point(field_set:XT.GreeksData.theta)
}

// optional double rho = 5 [default = 0];
inline bool GreeksData::has_rho() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GreeksData::set_has_rho() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GreeksData::clear_has_rho() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GreeksData::clear_rho() {
  rho_ = 0;
  clear_has_rho();
}
inline double GreeksData::rho() const {
  // @@protoc_insertion_point(field_get:XT.GreeksData.rho)
  return rho_;
}
inline void GreeksData::set_rho(double value) {
  set_has_rho();
  rho_ = value;
  // @@protoc_insertion_point(field_set:XT.GreeksData.rho)
}

// -------------------------------------------------------------------

// PosData

// optional int64 netpos = 1 [default = 0];
inline bool PosData::has_netpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PosData::set_has_netpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PosData::clear_has_netpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PosData::clear_netpos() {
  netpos_ = GOOGLE_LONGLONG(0);
  clear_has_netpos();
}
inline ::google::protobuf::int64 PosData::netpos() const {
  // @@protoc_insertion_point(field_get:XT.PosData.netpos)
  return netpos_;
}
inline void PosData::set_netpos(::google::protobuf::int64 value) {
  set_has_netpos();
  netpos_ = value;
  // @@protoc_insertion_point(field_set:XT.PosData.netpos)
}

// optional int64 netposprev = 2 [default = 0];
inline bool PosData::has_netposprev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PosData::set_has_netposprev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PosData::clear_has_netposprev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PosData::clear_netposprev() {
  netposprev_ = GOOGLE_LONGLONG(0);
  clear_has_netposprev();
}
inline ::google::protobuf::int64 PosData::netposprev() const {
  // @@protoc_insertion_point(field_get:XT.PosData.netposprev)
  return netposprev_;
}
inline void PosData::set_netposprev(::google::protobuf::int64 value) {
  set_has_netposprev();
  netposprev_ = value;
  // @@protoc_insertion_point(field_set:XT.PosData.netposprev)
}

// optional int64 netposnew = 3 [default = 0];
inline bool PosData::has_netposnew() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PosData::set_has_netposnew() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PosData::clear_has_netposnew() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PosData::clear_netposnew() {
  netposnew_ = GOOGLE_LONGLONG(0);
  clear_has_netposnew();
}
inline ::google::protobuf::int64 PosData::netposnew() const {
  // @@protoc_insertion_point(field_get:XT.PosData.netposnew)
  return netposnew_;
}
inline void PosData::set_netposnew(::google::protobuf::int64 value) {
  set_has_netposnew();
  netposnew_ = value;
  // @@protoc_insertion_point(field_set:XT.PosData.netposnew)
}

// -------------------------------------------------------------------

// PnLData

// optional double rpnlcurr = 1 [default = 0];
inline bool PnLData::has_rpnlcurr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PnLData::set_has_rpnlcurr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PnLData::clear_has_rpnlcurr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PnLData::clear_rpnlcurr() {
  rpnlcurr_ = 0;
  clear_has_rpnlcurr();
}
inline double PnLData::rpnlcurr() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.rpnlcurr)
  return rpnlcurr_;
}
inline void PnLData::set_rpnlcurr(double value) {
  set_has_rpnlcurr();
  rpnlcurr_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.rpnlcurr)
}

// optional double upnlcurr = 2 [default = 0];
inline bool PnLData::has_upnlcurr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PnLData::set_has_upnlcurr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PnLData::clear_has_upnlcurr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PnLData::clear_upnlcurr() {
  upnlcurr_ = 0;
  clear_has_upnlcurr();
}
inline double PnLData::upnlcurr() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.upnlcurr)
  return upnlcurr_;
}
inline void PnLData::set_upnlcurr(double value) {
  set_has_upnlcurr();
  upnlcurr_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.upnlcurr)
}

// optional double rpnlprev = 3 [default = 0];
inline bool PnLData::has_rpnlprev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PnLData::set_has_rpnlprev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PnLData::clear_has_rpnlprev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PnLData::clear_rpnlprev() {
  rpnlprev_ = 0;
  clear_has_rpnlprev();
}
inline double PnLData::rpnlprev() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.rpnlprev)
  return rpnlprev_;
}
inline void PnLData::set_rpnlprev(double value) {
  set_has_rpnlprev();
  rpnlprev_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.rpnlprev)
}

// optional double upnlprev = 4 [default = 0];
inline bool PnLData::has_upnlprev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PnLData::set_has_upnlprev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PnLData::clear_has_upnlprev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PnLData::clear_upnlprev() {
  upnlprev_ = 0;
  clear_has_upnlprev();
}
inline double PnLData::upnlprev() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.upnlprev)
  return upnlprev_;
}
inline void PnLData::set_upnlprev(double value) {
  set_has_upnlprev();
  upnlprev_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.upnlprev)
}

// optional double rpnl = 5 [default = 0];
inline bool PnLData::has_rpnl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PnLData::set_has_rpnl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PnLData::clear_has_rpnl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PnLData::clear_rpnl() {
  rpnl_ = 0;
  clear_has_rpnl();
}
inline double PnLData::rpnl() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.rpnl)
  return rpnl_;
}
inline void PnLData::set_rpnl(double value) {
  set_has_rpnl();
  rpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.rpnl)
}

// optional double upnl = 6 [default = 0];
inline bool PnLData::has_upnl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PnLData::set_has_upnl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PnLData::clear_has_upnl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PnLData::clear_upnl() {
  upnl_ = 0;
  clear_has_upnl();
}
inline double PnLData::upnl() const {
  // @@protoc_insertion_point(field_get:XT.PnLData.upnl)
  return upnl_;
}
inline void PnLData::set_upnl(double value) {
  set_has_upnl();
  upnl_ = value;
  // @@protoc_insertion_point(field_set:XT.PnLData.upnl)
}

// -------------------------------------------------------------------

// PxPnLData

// optional double rpxpnltdy = 1 [default = 0];
inline bool PxPnLData::has_rpxpnltdy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PxPnLData::set_has_rpxpnltdy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PxPnLData::clear_has_rpxpnltdy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PxPnLData::clear_rpxpnltdy() {
  rpxpnltdy_ = 0;
  clear_has_rpxpnltdy();
}
inline double PxPnLData::rpxpnltdy() const {
  // @@protoc_insertion_point(field_get:XT.PxPnLData.rpxpnltdy)
  return rpxpnltdy_;
}
inline void PxPnLData::set_rpxpnltdy(double value) {
  set_has_rpxpnltdy();
  rpxpnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.PxPnLData.rpxpnltdy)
}

// optional double upxpnltdy = 2 [default = 0];
inline bool PxPnLData::has_upxpnltdy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PxPnLData::set_has_upxpnltdy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PxPnLData::clear_has_upxpnltdy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PxPnLData::clear_upxpnltdy() {
  upxpnltdy_ = 0;
  clear_has_upxpnltdy();
}
inline double PxPnLData::upxpnltdy() const {
  // @@protoc_insertion_point(field_get:XT.PxPnLData.upxpnltdy)
  return upxpnltdy_;
}
inline void PxPnLData::set_upxpnltdy(double value) {
  set_has_upxpnltdy();
  upxpnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.PxPnLData.upxpnltdy)
}

// optional double rpxpnlytd = 3 [default = 0];
inline bool PxPnLData::has_rpxpnlytd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PxPnLData::set_has_rpxpnlytd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PxPnLData::clear_has_rpxpnlytd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PxPnLData::clear_rpxpnlytd() {
  rpxpnlytd_ = 0;
  clear_has_rpxpnlytd();
}
inline double PxPnLData::rpxpnlytd() const {
  // @@protoc_insertion_point(field_get:XT.PxPnLData.rpxpnlytd)
  return rpxpnlytd_;
}
inline void PxPnLData::set_rpxpnlytd(double value) {
  set_has_rpxpnlytd();
  rpxpnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.PxPnLData.rpxpnlytd)
}

// optional double upxpnlytd = 4 [default = 0];
inline bool PxPnLData::has_upxpnlytd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PxPnLData::set_has_upxpnlytd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PxPnLData::clear_has_upxpnlytd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PxPnLData::clear_upxpnlytd() {
  upxpnlytd_ = 0;
  clear_has_upxpnlytd();
}
inline double PxPnLData::upxpnlytd() const {
  // @@protoc_insertion_point(field_get:XT.PxPnLData.upxpnlytd)
  return upxpnlytd_;
}
inline void PxPnLData::set_upxpnlytd(double value) {
  set_has_upxpnlytd();
  upxpnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.PxPnLData.upxpnlytd)
}

// -------------------------------------------------------------------

// RPnLData

// optional double rpxpnl = 1 [default = 0];
inline bool RPnLData::has_rpxpnl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RPnLData::set_has_rpxpnl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RPnLData::clear_has_rpxpnl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RPnLData::clear_rpxpnl() {
  rpxpnl_ = 0;
  clear_has_rpxpnl();
}
inline double RPnLData::rpxpnl() const {
  // @@protoc_insertion_point(field_get:XT.RPnLData.rpxpnl)
  return rpxpnl_;
}
inline void RPnLData::set_rpxpnl(double value) {
  set_has_rpxpnl();
  rpxpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.RPnLData.rpxpnl)
}

// optional double rpnl = 2 [default = 0];
inline bool RPnLData::has_rpnl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RPnLData::set_has_rpnl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RPnLData::clear_has_rpnl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RPnLData::clear_rpnl() {
  rpnl_ = 0;
  clear_has_rpnl();
}
inline double RPnLData::rpnl() const {
  // @@protoc_insertion_point(field_get:XT.RPnLData.rpnl)
  return rpnl_;
}
inline void RPnLData::set_rpnl(double value) {
  set_has_rpnl();
  rpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.RPnLData.rpnl)
}

// -------------------------------------------------------------------

// UPnLData

// optional double upxpnl = 1 [default = 0];
inline bool UPnLData::has_upxpnl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UPnLData::set_has_upxpnl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UPnLData::clear_has_upxpnl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UPnLData::clear_upxpnl() {
  upxpnl_ = 0;
  clear_has_upxpnl();
}
inline double UPnLData::upxpnl() const {
  // @@protoc_insertion_point(field_get:XT.UPnLData.upxpnl)
  return upxpnl_;
}
inline void UPnLData::set_upxpnl(double value) {
  set_has_upxpnl();
  upxpnl_ = value;
  // @@protoc_insertion_point(field_set:XT.UPnLData.upxpnl)
}

// optional double upnl = 2 [default = 0];
inline bool UPnLData::has_upnl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UPnLData::set_has_upnl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UPnLData::clear_has_upnl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UPnLData::clear_upnl() {
  upnl_ = 0;
  clear_has_upnl();
}
inline double UPnLData::upnl() const {
  // @@protoc_insertion_point(field_get:XT.UPnLData.upnl)
  return upnl_;
}
inline void UPnLData::set_upnl(double value) {
  set_has_upnl();
  upnl_ = value;
  // @@protoc_insertion_point(field_set:XT.UPnLData.upnl)
}

// -------------------------------------------------------------------

// PosGreeksData

// optional double posdelta = 1 [default = 0];
inline bool PosGreeksData::has_posdelta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PosGreeksData::set_has_posdelta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PosGreeksData::clear_has_posdelta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PosGreeksData::clear_posdelta() {
  posdelta_ = 0;
  clear_has_posdelta();
}
inline double PosGreeksData::posdelta() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posdelta)
  return posdelta_;
}
inline void PosGreeksData::set_posdelta(double value) {
  set_has_posdelta();
  posdelta_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posdelta)
}

// optional double posdeltanorm = 2 [default = 0];
inline bool PosGreeksData::has_posdeltanorm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PosGreeksData::set_has_posdeltanorm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PosGreeksData::clear_has_posdeltanorm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PosGreeksData::clear_posdeltanorm() {
  posdeltanorm_ = 0;
  clear_has_posdeltanorm();
}
inline double PosGreeksData::posdeltanorm() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posdeltanorm)
  return posdeltanorm_;
}
inline void PosGreeksData::set_posdeltanorm(double value) {
  set_has_posdeltanorm();
  posdeltanorm_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posdeltanorm)
}

// optional double posgamma = 3 [default = 0];
inline bool PosGreeksData::has_posgamma() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PosGreeksData::set_has_posgamma() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PosGreeksData::clear_has_posgamma() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PosGreeksData::clear_posgamma() {
  posgamma_ = 0;
  clear_has_posgamma();
}
inline double PosGreeksData::posgamma() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posgamma)
  return posgamma_;
}
inline void PosGreeksData::set_posgamma(double value) {
  set_has_posgamma();
  posgamma_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posgamma)
}

// optional double posgammanorm = 4 [default = 0];
inline bool PosGreeksData::has_posgammanorm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PosGreeksData::set_has_posgammanorm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PosGreeksData::clear_has_posgammanorm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PosGreeksData::clear_posgammanorm() {
  posgammanorm_ = 0;
  clear_has_posgammanorm();
}
inline double PosGreeksData::posgammanorm() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posgammanorm)
  return posgammanorm_;
}
inline void PosGreeksData::set_posgammanorm(double value) {
  set_has_posgammanorm();
  posgammanorm_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posgammanorm)
}

// optional double posvega = 5 [default = 0];
inline bool PosGreeksData::has_posvega() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PosGreeksData::set_has_posvega() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PosGreeksData::clear_has_posvega() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PosGreeksData::clear_posvega() {
  posvega_ = 0;
  clear_has_posvega();
}
inline double PosGreeksData::posvega() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posvega)
  return posvega_;
}
inline void PosGreeksData::set_posvega(double value) {
  set_has_posvega();
  posvega_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posvega)
}

// optional double posveganorm = 6 [default = 0];
inline bool PosGreeksData::has_posveganorm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PosGreeksData::set_has_posveganorm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PosGreeksData::clear_has_posveganorm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PosGreeksData::clear_posveganorm() {
  posveganorm_ = 0;
  clear_has_posveganorm();
}
inline double PosGreeksData::posveganorm() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posveganorm)
  return posveganorm_;
}
inline void PosGreeksData::set_posveganorm(double value) {
  set_has_posveganorm();
  posveganorm_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posveganorm)
}

// optional double postheta = 7 [default = 0];
inline bool PosGreeksData::has_postheta() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PosGreeksData::set_has_postheta() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PosGreeksData::clear_has_postheta() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PosGreeksData::clear_postheta() {
  postheta_ = 0;
  clear_has_postheta();
}
inline double PosGreeksData::postheta() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.postheta)
  return postheta_;
}
inline void PosGreeksData::set_postheta(double value) {
  set_has_postheta();
  postheta_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.postheta)
}

// optional double posrho = 8 [default = 0];
inline bool PosGreeksData::has_posrho() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PosGreeksData::set_has_posrho() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PosGreeksData::clear_has_posrho() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PosGreeksData::clear_posrho() {
  posrho_ = 0;
  clear_has_posrho();
}
inline double PosGreeksData::posrho() const {
  // @@protoc_insertion_point(field_get:XT.PosGreeksData.posrho)
  return posrho_;
}
inline void PosGreeksData::set_posrho(double value) {
  set_has_posrho();
  posrho_ = value;
  // @@protoc_insertion_point(field_set:XT.PosGreeksData.posrho)
}

// -------------------------------------------------------------------

// QuoteData

// optional int64 theopxts = 1 [default = 0];
inline bool QuoteData::has_theopxts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuoteData::set_has_theopxts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuoteData::clear_has_theopxts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuoteData::clear_theopxts() {
  theopxts_ = GOOGLE_LONGLONG(0);
  clear_has_theopxts();
}
inline ::google::protobuf::int64 QuoteData::theopxts() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.theopxts)
  return theopxts_;
}
inline void QuoteData::set_theopxts(::google::protobuf::int64 value) {
  set_has_theopxts();
  theopxts_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.theopxts)
}

// optional double theopx = 2 [default = 0];
inline bool QuoteData::has_theopx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuoteData::set_has_theopx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuoteData::clear_has_theopx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuoteData::clear_theopx() {
  theopx_ = 0;
  clear_has_theopx();
}
inline double QuoteData::theopx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.theopx)
  return theopx_;
}
inline void QuoteData::set_theopx(double value) {
  set_has_theopx();
  theopx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.theopx)
}

// optional double riskpx = 3 [default = 0];
inline bool QuoteData::has_riskpx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuoteData::set_has_riskpx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuoteData::clear_has_riskpx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuoteData::clear_riskpx() {
  riskpx_ = 0;
  clear_has_riskpx();
}
inline double QuoteData::riskpx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.riskpx)
  return riskpx_;
}
inline void QuoteData::set_riskpx(double value) {
  set_has_riskpx();
  riskpx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.riskpx)
}

// optional int64 quotepxts = 4 [default = 0];
inline bool QuoteData::has_quotepxts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuoteData::set_has_quotepxts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuoteData::clear_has_quotepxts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuoteData::clear_quotepxts() {
  quotepxts_ = GOOGLE_LONGLONG(0);
  clear_has_quotepxts();
}
inline ::google::protobuf::int64 QuoteData::quotepxts() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quotepxts)
  return quotepxts_;
}
inline void QuoteData::set_quotepxts(::google::protobuf::int64 value) {
  set_has_quotepxts();
  quotepxts_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quotepxts)
}

// optional double quotepx = 5 [default = 0];
inline bool QuoteData::has_quotepx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuoteData::set_has_quotepx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuoteData::clear_has_quotepx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuoteData::clear_quotepx() {
  quotepx_ = 0;
  clear_has_quotepx();
}
inline double QuoteData::quotepx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quotepx)
  return quotepx_;
}
inline void QuoteData::set_quotepx(double value) {
  set_has_quotepx();
  quotepx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quotepx)
}

// optional double quotebidpx = 6 [default = 0];
inline bool QuoteData::has_quotebidpx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QuoteData::set_has_quotebidpx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QuoteData::clear_has_quotebidpx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QuoteData::clear_quotebidpx() {
  quotebidpx_ = 0;
  clear_has_quotebidpx();
}
inline double QuoteData::quotebidpx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quotebidpx)
  return quotebidpx_;
}
inline void QuoteData::set_quotebidpx(double value) {
  set_has_quotebidpx();
  quotebidpx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quotebidpx)
}

// optional double quoteaskpx = 7 [default = 0];
inline bool QuoteData::has_quoteaskpx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QuoteData::set_has_quoteaskpx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QuoteData::clear_has_quoteaskpx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QuoteData::clear_quoteaskpx() {
  quoteaskpx_ = 0;
  clear_has_quoteaskpx();
}
inline double QuoteData::quoteaskpx() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quoteaskpx)
  return quoteaskpx_;
}
inline void QuoteData::set_quoteaskpx(double value) {
  set_has_quoteaskpx();
  quoteaskpx_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quoteaskpx)
}

// optional int64 quotebidsz = 8 [default = 0];
inline bool QuoteData::has_quotebidsz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QuoteData::set_has_quotebidsz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QuoteData::clear_has_quotebidsz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QuoteData::clear_quotebidsz() {
  quotebidsz_ = GOOGLE_LONGLONG(0);
  clear_has_quotebidsz();
}
inline ::google::protobuf::int64 QuoteData::quotebidsz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quotebidsz)
  return quotebidsz_;
}
inline void QuoteData::set_quotebidsz(::google::protobuf::int64 value) {
  set_has_quotebidsz();
  quotebidsz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quotebidsz)
}

// optional int64 quoteasksz = 9 [default = 0];
inline bool QuoteData::has_quoteasksz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QuoteData::set_has_quoteasksz() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QuoteData::clear_has_quoteasksz() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QuoteData::clear_quoteasksz() {
  quoteasksz_ = GOOGLE_LONGLONG(0);
  clear_has_quoteasksz();
}
inline ::google::protobuf::int64 QuoteData::quoteasksz() const {
  // @@protoc_insertion_point(field_get:XT.QuoteData.quoteasksz)
  return quoteasksz_;
}
inline void QuoteData::set_quoteasksz(::google::protobuf::int64 value) {
  set_has_quoteasksz();
  quoteasksz_ = value;
  // @@protoc_insertion_point(field_set:XT.QuoteData.quoteasksz)
}

// -------------------------------------------------------------------

// VolatilityData

// optional double impvolbid = 1 [default = 0];
inline bool VolatilityData::has_impvolbid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VolatilityData::set_has_impvolbid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VolatilityData::clear_has_impvolbid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VolatilityData::clear_impvolbid() {
  impvolbid_ = 0;
  clear_has_impvolbid();
}
inline double VolatilityData::impvolbid() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.impvolbid)
  return impvolbid_;
}
inline void VolatilityData::set_impvolbid(double value) {
  set_has_impvolbid();
  impvolbid_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.impvolbid)
}

// optional double impvolask = 2 [default = 0];
inline bool VolatilityData::has_impvolask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VolatilityData::set_has_impvolask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VolatilityData::clear_has_impvolask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VolatilityData::clear_impvolask() {
  impvolask_ = 0;
  clear_has_impvolask();
}
inline double VolatilityData::impvolask() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.impvolask)
  return impvolask_;
}
inline void VolatilityData::set_impvolask(double value) {
  set_has_impvolask();
  impvolask_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.impvolask)
}

// optional double impvolmid = 3 [default = 0];
inline bool VolatilityData::has_impvolmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VolatilityData::set_has_impvolmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VolatilityData::clear_has_impvolmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VolatilityData::clear_impvolmid() {
  impvolmid_ = 0;
  clear_has_impvolmid();
}
inline double VolatilityData::impvolmid() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.impvolmid)
  return impvolmid_;
}
inline void VolatilityData::set_impvolmid(double value) {
  set_has_impvolmid();
  impvolmid_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.impvolmid)
}

// optional double theovol = 4 [default = 0];
inline bool VolatilityData::has_theovol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VolatilityData::set_has_theovol() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VolatilityData::clear_has_theovol() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VolatilityData::clear_theovol() {
  theovol_ = 0;
  clear_has_theovol();
}
inline double VolatilityData::theovol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.theovol)
  return theovol_;
}
inline void VolatilityData::set_theovol(double value) {
  set_has_theovol();
  theovol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.theovol)
}

// optional double riskvol = 5 [default = 0];
inline bool VolatilityData::has_riskvol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VolatilityData::set_has_riskvol() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VolatilityData::clear_has_riskvol() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VolatilityData::clear_riskvol() {
  riskvol_ = 0;
  clear_has_riskvol();
}
inline double VolatilityData::riskvol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.riskvol)
  return riskvol_;
}
inline void VolatilityData::set_riskvol(double value) {
  set_has_riskvol();
  riskvol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.riskvol)
}

// optional double fittedvol = 6 [default = 0];
inline bool VolatilityData::has_fittedvol() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VolatilityData::set_has_fittedvol() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VolatilityData::clear_has_fittedvol() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VolatilityData::clear_fittedvol() {
  fittedvol_ = 0;
  clear_has_fittedvol();
}
inline double VolatilityData::fittedvol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.fittedvol)
  return fittedvol_;
}
inline void VolatilityData::set_fittedvol(double value) {
  set_has_fittedvol();
  fittedvol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.fittedvol)
}

// optional double prevsettlevol = 7 [default = 0];
inline bool VolatilityData::has_prevsettlevol() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VolatilityData::set_has_prevsettlevol() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VolatilityData::clear_has_prevsettlevol() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VolatilityData::clear_prevsettlevol() {
  prevsettlevol_ = 0;
  clear_has_prevsettlevol();
}
inline double VolatilityData::prevsettlevol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.prevsettlevol)
  return prevsettlevol_;
}
inline void VolatilityData::set_prevsettlevol(double value) {
  set_has_prevsettlevol();
  prevsettlevol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.prevsettlevol)
}

// optional double prevclosevol = 8 [default = 0];
inline bool VolatilityData::has_prevclosevol() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VolatilityData::set_has_prevclosevol() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VolatilityData::clear_has_prevclosevol() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VolatilityData::clear_prevclosevol() {
  prevclosevol_ = 0;
  clear_has_prevclosevol();
}
inline double VolatilityData::prevclosevol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.prevclosevol)
  return prevclosevol_;
}
inline void VolatilityData::set_prevclosevol(double value) {
  set_has_prevclosevol();
  prevclosevol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.prevclosevol)
}

// optional double settlevol = 9 [default = 0];
inline bool VolatilityData::has_settlevol() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VolatilityData::set_has_settlevol() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VolatilityData::clear_has_settlevol() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VolatilityData::clear_settlevol() {
  settlevol_ = 0;
  clear_has_settlevol();
}
inline double VolatilityData::settlevol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.settlevol)
  return settlevol_;
}
inline void VolatilityData::set_settlevol(double value) {
  set_has_settlevol();
  settlevol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.settlevol)
}

// optional double closevol = 10 [default = 0];
inline bool VolatilityData::has_closevol() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VolatilityData::set_has_closevol() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VolatilityData::clear_has_closevol() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VolatilityData::clear_closevol() {
  closevol_ = 0;
  clear_has_closevol();
}
inline double VolatilityData::closevol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.closevol)
  return closevol_;
}
inline void VolatilityData::set_closevol(double value) {
  set_has_closevol();
  closevol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.closevol)
}

// optional double avgvol = 11 [default = 0];
inline bool VolatilityData::has_avgvol() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VolatilityData::set_has_avgvol() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VolatilityData::clear_has_avgvol() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VolatilityData::clear_avgvol() {
  avgvol_ = 0;
  clear_has_avgvol();
}
inline double VolatilityData::avgvol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.avgvol)
  return avgvol_;
}
inline void VolatilityData::set_avgvol(double value) {
  set_has_avgvol();
  avgvol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.avgvol)
}

// optional double histvol = 12 [default = 0];
inline bool VolatilityData::has_histvol() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VolatilityData::set_has_histvol() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VolatilityData::clear_has_histvol() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VolatilityData::clear_histvol() {
  histvol_ = 0;
  clear_has_histvol();
}
inline double VolatilityData::histvol() const {
  // @@protoc_insertion_point(field_get:XT.VolatilityData.histvol)
  return histvol_;
}
inline void VolatilityData::set_histvol(double value) {
  set_has_histvol();
  histvol_ = value;
  // @@protoc_insertion_point(field_set:XT.VolatilityData.histvol)
}

// -------------------------------------------------------------------

// TaqStatData

// optional int32 numbookupdates = 1 [default = 0];
inline bool TaqStatData::has_numbookupdates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaqStatData::set_has_numbookupdates() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaqStatData::clear_has_numbookupdates() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaqStatData::clear_numbookupdates() {
  numbookupdates_ = 0;
  clear_has_numbookupdates();
}
inline ::google::protobuf::int32 TaqStatData::numbookupdates() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.numbookupdates)
  return numbookupdates_;
}
inline void TaqStatData::set_numbookupdates(::google::protobuf::int32 value) {
  set_has_numbookupdates();
  numbookupdates_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.numbookupdates)
}

// optional int64 bestszchged = 2 [default = 0];
inline bool TaqStatData::has_bestszchged() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaqStatData::set_has_bestszchged() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaqStatData::clear_has_bestszchged() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaqStatData::clear_bestszchged() {
  bestszchged_ = GOOGLE_LONGLONG(0);
  clear_has_bestszchged();
}
inline ::google::protobuf::int64 TaqStatData::bestszchged() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.bestszchged)
  return bestszchged_;
}
inline void TaqStatData::set_bestszchged(::google::protobuf::int64 value) {
  set_has_bestszchged();
  bestszchged_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.bestszchged)
}

// optional int64 bestpxtickchged = 3 [default = 0];
inline bool TaqStatData::has_bestpxtickchged() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaqStatData::set_has_bestpxtickchged() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaqStatData::clear_has_bestpxtickchged() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaqStatData::clear_bestpxtickchged() {
  bestpxtickchged_ = GOOGLE_LONGLONG(0);
  clear_has_bestpxtickchged();
}
inline ::google::protobuf::int64 TaqStatData::bestpxtickchged() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.bestpxtickchged)
  return bestpxtickchged_;
}
inline void TaqStatData::set_bestpxtickchged(::google::protobuf::int64 value) {
  set_has_bestpxtickchged();
  bestpxtickchged_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.bestpxtickchged)
}

// optional double midpxchged = 4 [default = 0];
inline bool TaqStatData::has_midpxchged() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaqStatData::set_has_midpxchged() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaqStatData::clear_has_midpxchged() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaqStatData::clear_midpxchged() {
  midpxchged_ = 0;
  clear_has_midpxchged();
}
inline double TaqStatData::midpxchged() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.midpxchged)
  return midpxchged_;
}
inline void TaqStatData::set_midpxchged(double value) {
  set_has_midpxchged();
  midpxchged_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.midpxchged)
}

// optional int64 snapvolume = 5 [default = 0];
inline bool TaqStatData::has_snapvolume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TaqStatData::set_has_snapvolume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TaqStatData::clear_has_snapvolume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TaqStatData::clear_snapvolume() {
  snapvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapvolume();
}
inline ::google::protobuf::int64 TaqStatData::snapvolume() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapvolume)
  return snapvolume_;
}
inline void TaqStatData::set_snapvolume(::google::protobuf::int64 value) {
  set_has_snapvolume();
  snapvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapvolume)
}

// optional double snapamount = 6 [default = 0];
inline bool TaqStatData::has_snapamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TaqStatData::set_has_snapamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TaqStatData::clear_has_snapamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TaqStatData::clear_snapamount() {
  snapamount_ = 0;
  clear_has_snapamount();
}
inline double TaqStatData::snapamount() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapamount)
  return snapamount_;
}
inline void TaqStatData::set_snapamount(double value) {
  set_has_snapamount();
  snapamount_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapamount)
}

// optional int64 snapoichg = 7 [default = 0];
inline bool TaqStatData::has_snapoichg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaqStatData::set_has_snapoichg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaqStatData::clear_has_snapoichg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaqStatData::clear_snapoichg() {
  snapoichg_ = GOOGLE_LONGLONG(0);
  clear_has_snapoichg();
}
inline ::google::protobuf::int64 TaqStatData::snapoichg() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapoichg)
  return snapoichg_;
}
inline void TaqStatData::set_snapoichg(::google::protobuf::int64 value) {
  set_has_snapoichg();
  snapoichg_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapoichg)
}

// optional double snapavgpx = 8 [default = 0];
inline bool TaqStatData::has_snapavgpx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TaqStatData::set_has_snapavgpx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TaqStatData::clear_has_snapavgpx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TaqStatData::clear_snapavgpx() {
  snapavgpx_ = 0;
  clear_has_snapavgpx();
}
inline double TaqStatData::snapavgpx() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapavgpx)
  return snapavgpx_;
}
inline void TaqStatData::set_snapavgpx(double value) {
  set_has_snapavgpx();
  snapavgpx_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapavgpx)
}

// optional int64 snapbuyvolume = 9 [default = 0];
inline bool TaqStatData::has_snapbuyvolume() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TaqStatData::set_has_snapbuyvolume() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TaqStatData::clear_has_snapbuyvolume() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TaqStatData::clear_snapbuyvolume() {
  snapbuyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapbuyvolume();
}
inline ::google::protobuf::int64 TaqStatData::snapbuyvolume() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapbuyvolume)
  return snapbuyvolume_;
}
inline void TaqStatData::set_snapbuyvolume(::google::protobuf::int64 value) {
  set_has_snapbuyvolume();
  snapbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapbuyvolume)
}

// optional int64 snapsellvolume = 10 [default = 0];
inline bool TaqStatData::has_snapsellvolume() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TaqStatData::set_has_snapsellvolume() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TaqStatData::clear_has_snapsellvolume() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TaqStatData::clear_snapsellvolume() {
  snapsellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapsellvolume();
}
inline ::google::protobuf::int64 TaqStatData::snapsellvolume() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapsellvolume)
  return snapsellvolume_;
}
inline void TaqStatData::set_snapsellvolume(::google::protobuf::int64 value) {
  set_has_snapsellvolume();
  snapsellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapsellvolume)
}

// optional double snapbsadiff = 11 [default = 0];
inline bool TaqStatData::has_snapbsadiff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TaqStatData::set_has_snapbsadiff() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TaqStatData::clear_has_snapbsadiff() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TaqStatData::clear_snapbsadiff() {
  snapbsadiff_ = 0;
  clear_has_snapbsadiff();
}
inline double TaqStatData::snapbsadiff() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapbsadiff)
  return snapbsadiff_;
}
inline void TaqStatData::set_snapbsadiff(double value) {
  set_has_snapbsadiff();
  snapbsadiff_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapbsadiff)
}

// optional double snapflipups = 12 [default = 0];
inline bool TaqStatData::has_snapflipups() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TaqStatData::set_has_snapflipups() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TaqStatData::clear_has_snapflipups() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TaqStatData::clear_snapflipups() {
  snapflipups_ = 0;
  clear_has_snapflipups();
}
inline double TaqStatData::snapflipups() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapflipups)
  return snapflipups_;
}
inline void TaqStatData::set_snapflipups(double value) {
  set_has_snapflipups();
  snapflipups_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapflipups)
}

// optional double snapflipdns = 13 [default = 0];
inline bool TaqStatData::has_snapflipdns() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TaqStatData::set_has_snapflipdns() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TaqStatData::clear_has_snapflipdns() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TaqStatData::clear_snapflipdns() {
  snapflipdns_ = 0;
  clear_has_snapflipdns();
}
inline double TaqStatData::snapflipdns() const {
  // @@protoc_insertion_point(field_get:XT.TaqStatData.snapflipdns)
  return snapflipdns_;
}
inline void TaqStatData::set_snapflipdns(double value) {
  set_has_snapflipdns();
  snapflipdns_ = value;
  // @@protoc_insertion_point(field_set:XT.TaqStatData.snapflipdns)
}

// -------------------------------------------------------------------

// XpStatData

// optional int64 netpos = 1 [default = 0];
inline bool XpStatData::has_netpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XpStatData::set_has_netpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XpStatData::clear_has_netpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XpStatData::clear_netpos() {
  netpos_ = GOOGLE_LONGLONG(0);
  clear_has_netpos();
}
inline ::google::protobuf::int64 XpStatData::netpos() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.netpos)
  return netpos_;
}
inline void XpStatData::set_netpos(::google::protobuf::int64 value) {
  set_has_netpos();
  netpos_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.netpos)
}

// optional int64 netposprev = 2 [default = 0];
inline bool XpStatData::has_netposprev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XpStatData::set_has_netposprev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XpStatData::clear_has_netposprev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XpStatData::clear_netposprev() {
  netposprev_ = GOOGLE_LONGLONG(0);
  clear_has_netposprev();
}
inline ::google::protobuf::int64 XpStatData::netposprev() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.netposprev)
  return netposprev_;
}
inline void XpStatData::set_netposprev(::google::protobuf::int64 value) {
  set_has_netposprev();
  netposprev_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.netposprev)
}

// optional int64 netposnew = 3 [default = 0];
inline bool XpStatData::has_netposnew() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XpStatData::set_has_netposnew() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XpStatData::clear_has_netposnew() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XpStatData::clear_netposnew() {
  netposnew_ = GOOGLE_LONGLONG(0);
  clear_has_netposnew();
}
inline ::google::protobuf::int64 XpStatData::netposnew() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.netposnew)
  return netposnew_;
}
inline void XpStatData::set_netposnew(::google::protobuf::int64 value) {
  set_has_netposnew();
  netposnew_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.netposnew)
}

// optional double rpxpnltdy = 4 [default = 0];
inline bool XpStatData::has_rpxpnltdy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XpStatData::set_has_rpxpnltdy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XpStatData::clear_has_rpxpnltdy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XpStatData::clear_rpxpnltdy() {
  rpxpnltdy_ = 0;
  clear_has_rpxpnltdy();
}
inline double XpStatData::rpxpnltdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.rpxpnltdy)
  return rpxpnltdy_;
}
inline void XpStatData::set_rpxpnltdy(double value) {
  set_has_rpxpnltdy();
  rpxpnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.rpxpnltdy)
}

// optional double rpnltdy = 5 [default = 0];
inline bool XpStatData::has_rpnltdy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void XpStatData::set_has_rpnltdy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void XpStatData::clear_has_rpnltdy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void XpStatData::clear_rpnltdy() {
  rpnltdy_ = 0;
  clear_has_rpnltdy();
}
inline double XpStatData::rpnltdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.rpnltdy)
  return rpnltdy_;
}
inline void XpStatData::set_rpnltdy(double value) {
  set_has_rpnltdy();
  rpnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.rpnltdy)
}

// optional double upxpnltdy = 6 [default = 0];
inline bool XpStatData::has_upxpnltdy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void XpStatData::set_has_upxpnltdy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void XpStatData::clear_has_upxpnltdy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void XpStatData::clear_upxpnltdy() {
  upxpnltdy_ = 0;
  clear_has_upxpnltdy();
}
inline double XpStatData::upxpnltdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.upxpnltdy)
  return upxpnltdy_;
}
inline void XpStatData::set_upxpnltdy(double value) {
  set_has_upxpnltdy();
  upxpnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.upxpnltdy)
}

// optional double upnltdy = 7 [default = 0];
inline bool XpStatData::has_upnltdy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void XpStatData::set_has_upnltdy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void XpStatData::clear_has_upnltdy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void XpStatData::clear_upnltdy() {
  upnltdy_ = 0;
  clear_has_upnltdy();
}
inline double XpStatData::upnltdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.upnltdy)
  return upnltdy_;
}
inline void XpStatData::set_upnltdy(double value) {
  set_has_upnltdy();
  upnltdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.upnltdy)
}

// optional double rpxpnlytd = 8 [default = 0];
inline bool XpStatData::has_rpxpnlytd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void XpStatData::set_has_rpxpnlytd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void XpStatData::clear_has_rpxpnlytd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void XpStatData::clear_rpxpnlytd() {
  rpxpnlytd_ = 0;
  clear_has_rpxpnlytd();
}
inline double XpStatData::rpxpnlytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.rpxpnlytd)
  return rpxpnlytd_;
}
inline void XpStatData::set_rpxpnlytd(double value) {
  set_has_rpxpnlytd();
  rpxpnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.rpxpnlytd)
}

// optional double rpnlytd = 9 [default = 0];
inline bool XpStatData::has_rpnlytd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void XpStatData::set_has_rpnlytd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void XpStatData::clear_has_rpnlytd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void XpStatData::clear_rpnlytd() {
  rpnlytd_ = 0;
  clear_has_rpnlytd();
}
inline double XpStatData::rpnlytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.rpnlytd)
  return rpnlytd_;
}
inline void XpStatData::set_rpnlytd(double value) {
  set_has_rpnlytd();
  rpnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.rpnlytd)
}

// optional double upxpnlytd = 10 [default = 0];
inline bool XpStatData::has_upxpnlytd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void XpStatData::set_has_upxpnlytd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void XpStatData::clear_has_upxpnlytd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void XpStatData::clear_upxpnlytd() {
  upxpnlytd_ = 0;
  clear_has_upxpnlytd();
}
inline double XpStatData::upxpnlytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.upxpnlytd)
  return upxpnlytd_;
}
inline void XpStatData::set_upxpnlytd(double value) {
  set_has_upxpnlytd();
  upxpnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.upxpnlytd)
}

// optional double upnlytd = 11 [default = 0];
inline bool XpStatData::has_upnlytd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void XpStatData::set_has_upnlytd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void XpStatData::clear_has_upnlytd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void XpStatData::clear_upnlytd() {
  upnlytd_ = 0;
  clear_has_upnlytd();
}
inline double XpStatData::upnlytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.upnlytd)
  return upnlytd_;
}
inline void XpStatData::set_upnlytd(double value) {
  set_has_upnlytd();
  upnlytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.upnlytd)
}

// optional int32 buyorders = 21 [default = 0];
inline bool XpStatData::has_buyorders() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void XpStatData::set_has_buyorders() {
  _has_bits_[0] |= 0x00000800u;
}
inline void XpStatData::clear_has_buyorders() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void XpStatData::clear_buyorders() {
  buyorders_ = 0;
  clear_has_buyorders();
}
inline ::google::protobuf::int32 XpStatData::buyorders() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyorders)
  return buyorders_;
}
inline void XpStatData::set_buyorders(::google::protobuf::int32 value) {
  set_has_buyorders();
  buyorders_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyorders)
}

// optional int64 buysz = 22 [default = 0];
inline bool XpStatData::has_buysz() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void XpStatData::set_has_buysz() {
  _has_bits_[0] |= 0x00001000u;
}
inline void XpStatData::clear_has_buysz() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void XpStatData::clear_buysz() {
  buysz_ = GOOGLE_LONGLONG(0);
  clear_has_buysz();
}
inline ::google::protobuf::int64 XpStatData::buysz() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buysz)
  return buysz_;
}
inline void XpStatData::set_buysz(::google::protobuf::int64 value) {
  set_has_buysz();
  buysz_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buysz)
}

// optional int32 sellorders = 23 [default = 0];
inline bool XpStatData::has_sellorders() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void XpStatData::set_has_sellorders() {
  _has_bits_[0] |= 0x00002000u;
}
inline void XpStatData::clear_has_sellorders() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void XpStatData::clear_sellorders() {
  sellorders_ = 0;
  clear_has_sellorders();
}
inline ::google::protobuf::int32 XpStatData::sellorders() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellorders)
  return sellorders_;
}
inline void XpStatData::set_sellorders(::google::protobuf::int32 value) {
  set_has_sellorders();
  sellorders_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellorders)
}

// optional int64 sellsz = 24 [default = 0];
inline bool XpStatData::has_sellsz() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void XpStatData::set_has_sellsz() {
  _has_bits_[0] |= 0x00004000u;
}
inline void XpStatData::clear_has_sellsz() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void XpStatData::clear_sellsz() {
  sellsz_ = GOOGLE_LONGLONG(0);
  clear_has_sellsz();
}
inline ::google::protobuf::int64 XpStatData::sellsz() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellsz)
  return sellsz_;
}
inline void XpStatData::set_sellsz(::google::protobuf::int64 value) {
  set_has_sellsz();
  sellsz_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellsz)
}

// optional int32 buyordersopenytd = 25 [default = 0];
inline bool XpStatData::has_buyordersopenytd() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void XpStatData::set_has_buyordersopenytd() {
  _has_bits_[0] |= 0x00008000u;
}
inline void XpStatData::clear_has_buyordersopenytd() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void XpStatData::clear_buyordersopenytd() {
  buyordersopenytd_ = 0;
  clear_has_buyordersopenytd();
}
inline ::google::protobuf::int32 XpStatData::buyordersopenytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyordersopenytd)
  return buyordersopenytd_;
}
inline void XpStatData::set_buyordersopenytd(::google::protobuf::int32 value) {
  set_has_buyordersopenytd();
  buyordersopenytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyordersopenytd)
}

// optional int64 buyszopenytd = 26 [default = 0];
inline bool XpStatData::has_buyszopenytd() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void XpStatData::set_has_buyszopenytd() {
  _has_bits_[0] |= 0x00010000u;
}
inline void XpStatData::clear_has_buyszopenytd() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void XpStatData::clear_buyszopenytd() {
  buyszopenytd_ = GOOGLE_LONGLONG(0);
  clear_has_buyszopenytd();
}
inline ::google::protobuf::int64 XpStatData::buyszopenytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyszopenytd)
  return buyszopenytd_;
}
inline void XpStatData::set_buyszopenytd(::google::protobuf::int64 value) {
  set_has_buyszopenytd();
  buyszopenytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyszopenytd)
}

// optional int32 sellordersopenytd = 27 [default = 0];
inline bool XpStatData::has_sellordersopenytd() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void XpStatData::set_has_sellordersopenytd() {
  _has_bits_[0] |= 0x00020000u;
}
inline void XpStatData::clear_has_sellordersopenytd() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void XpStatData::clear_sellordersopenytd() {
  sellordersopenytd_ = 0;
  clear_has_sellordersopenytd();
}
inline ::google::protobuf::int32 XpStatData::sellordersopenytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellordersopenytd)
  return sellordersopenytd_;
}
inline void XpStatData::set_sellordersopenytd(::google::protobuf::int32 value) {
  set_has_sellordersopenytd();
  sellordersopenytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellordersopenytd)
}

// optional int64 sellszopenytd = 28 [default = 0];
inline bool XpStatData::has_sellszopenytd() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void XpStatData::set_has_sellszopenytd() {
  _has_bits_[0] |= 0x00040000u;
}
inline void XpStatData::clear_has_sellszopenytd() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void XpStatData::clear_sellszopenytd() {
  sellszopenytd_ = GOOGLE_LONGLONG(0);
  clear_has_sellszopenytd();
}
inline ::google::protobuf::int64 XpStatData::sellszopenytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellszopenytd)
  return sellszopenytd_;
}
inline void XpStatData::set_sellszopenytd(::google::protobuf::int64 value) {
  set_has_sellszopenytd();
  sellszopenytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellszopenytd)
}

// optional int32 buyorderscloseytd = 29 [default = 0];
inline bool XpStatData::has_buyorderscloseytd() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void XpStatData::set_has_buyorderscloseytd() {
  _has_bits_[0] |= 0x00080000u;
}
inline void XpStatData::clear_has_buyorderscloseytd() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void XpStatData::clear_buyorderscloseytd() {
  buyorderscloseytd_ = 0;
  clear_has_buyorderscloseytd();
}
inline ::google::protobuf::int32 XpStatData::buyorderscloseytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyorderscloseytd)
  return buyorderscloseytd_;
}
inline void XpStatData::set_buyorderscloseytd(::google::protobuf::int32 value) {
  set_has_buyorderscloseytd();
  buyorderscloseytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyorderscloseytd)
}

// optional int64 buyszcloseytd = 30 [default = 0];
inline bool XpStatData::has_buyszcloseytd() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void XpStatData::set_has_buyszcloseytd() {
  _has_bits_[0] |= 0x00100000u;
}
inline void XpStatData::clear_has_buyszcloseytd() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void XpStatData::clear_buyszcloseytd() {
  buyszcloseytd_ = GOOGLE_LONGLONG(0);
  clear_has_buyszcloseytd();
}
inline ::google::protobuf::int64 XpStatData::buyszcloseytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyszcloseytd)
  return buyszcloseytd_;
}
inline void XpStatData::set_buyszcloseytd(::google::protobuf::int64 value) {
  set_has_buyszcloseytd();
  buyszcloseytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyszcloseytd)
}

// optional int32 sellorderscloseytd = 31 [default = 0];
inline bool XpStatData::has_sellorderscloseytd() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void XpStatData::set_has_sellorderscloseytd() {
  _has_bits_[0] |= 0x00200000u;
}
inline void XpStatData::clear_has_sellorderscloseytd() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void XpStatData::clear_sellorderscloseytd() {
  sellorderscloseytd_ = 0;
  clear_has_sellorderscloseytd();
}
inline ::google::protobuf::int32 XpStatData::sellorderscloseytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellorderscloseytd)
  return sellorderscloseytd_;
}
inline void XpStatData::set_sellorderscloseytd(::google::protobuf::int32 value) {
  set_has_sellorderscloseytd();
  sellorderscloseytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellorderscloseytd)
}

// optional int64 sellszcloseytd = 32 [default = 0];
inline bool XpStatData::has_sellszcloseytd() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void XpStatData::set_has_sellszcloseytd() {
  _has_bits_[0] |= 0x00400000u;
}
inline void XpStatData::clear_has_sellszcloseytd() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void XpStatData::clear_sellszcloseytd() {
  sellszcloseytd_ = GOOGLE_LONGLONG(0);
  clear_has_sellszcloseytd();
}
inline ::google::protobuf::int64 XpStatData::sellszcloseytd() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellszcloseytd)
  return sellszcloseytd_;
}
inline void XpStatData::set_sellszcloseytd(::google::protobuf::int64 value) {
  set_has_sellszcloseytd();
  sellszcloseytd_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellszcloseytd)
}

// optional int32 buyordersopentdy = 33 [default = 0];
inline bool XpStatData::has_buyordersopentdy() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void XpStatData::set_has_buyordersopentdy() {
  _has_bits_[0] |= 0x00800000u;
}
inline void XpStatData::clear_has_buyordersopentdy() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void XpStatData::clear_buyordersopentdy() {
  buyordersopentdy_ = 0;
  clear_has_buyordersopentdy();
}
inline ::google::protobuf::int32 XpStatData::buyordersopentdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyordersopentdy)
  return buyordersopentdy_;
}
inline void XpStatData::set_buyordersopentdy(::google::protobuf::int32 value) {
  set_has_buyordersopentdy();
  buyordersopentdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyordersopentdy)
}

// optional int64 buyszopentdy = 34 [default = 0];
inline bool XpStatData::has_buyszopentdy() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void XpStatData::set_has_buyszopentdy() {
  _has_bits_[0] |= 0x01000000u;
}
inline void XpStatData::clear_has_buyszopentdy() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void XpStatData::clear_buyszopentdy() {
  buyszopentdy_ = GOOGLE_LONGLONG(0);
  clear_has_buyszopentdy();
}
inline ::google::protobuf::int64 XpStatData::buyszopentdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyszopentdy)
  return buyszopentdy_;
}
inline void XpStatData::set_buyszopentdy(::google::protobuf::int64 value) {
  set_has_buyszopentdy();
  buyszopentdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyszopentdy)
}

// optional int32 sellordersopentdy = 35 [default = 0];
inline bool XpStatData::has_sellordersopentdy() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void XpStatData::set_has_sellordersopentdy() {
  _has_bits_[0] |= 0x02000000u;
}
inline void XpStatData::clear_has_sellordersopentdy() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void XpStatData::clear_sellordersopentdy() {
  sellordersopentdy_ = 0;
  clear_has_sellordersopentdy();
}
inline ::google::protobuf::int32 XpStatData::sellordersopentdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellordersopentdy)
  return sellordersopentdy_;
}
inline void XpStatData::set_sellordersopentdy(::google::protobuf::int32 value) {
  set_has_sellordersopentdy();
  sellordersopentdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellordersopentdy)
}

// optional int64 sellszopentdy = 36 [default = 0];
inline bool XpStatData::has_sellszopentdy() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void XpStatData::set_has_sellszopentdy() {
  _has_bits_[0] |= 0x04000000u;
}
inline void XpStatData::clear_has_sellszopentdy() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void XpStatData::clear_sellszopentdy() {
  sellszopentdy_ = GOOGLE_LONGLONG(0);
  clear_has_sellszopentdy();
}
inline ::google::protobuf::int64 XpStatData::sellszopentdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellszopentdy)
  return sellszopentdy_;
}
inline void XpStatData::set_sellszopentdy(::google::protobuf::int64 value) {
  set_has_sellszopentdy();
  sellszopentdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellszopentdy)
}

// optional int32 buyordersclosetdy = 37 [default = 0];
inline bool XpStatData::has_buyordersclosetdy() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void XpStatData::set_has_buyordersclosetdy() {
  _has_bits_[0] |= 0x08000000u;
}
inline void XpStatData::clear_has_buyordersclosetdy() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void XpStatData::clear_buyordersclosetdy() {
  buyordersclosetdy_ = 0;
  clear_has_buyordersclosetdy();
}
inline ::google::protobuf::int32 XpStatData::buyordersclosetdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyordersclosetdy)
  return buyordersclosetdy_;
}
inline void XpStatData::set_buyordersclosetdy(::google::protobuf::int32 value) {
  set_has_buyordersclosetdy();
  buyordersclosetdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyordersclosetdy)
}

// optional int64 buyszclosetdy = 38 [default = 0];
inline bool XpStatData::has_buyszclosetdy() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void XpStatData::set_has_buyszclosetdy() {
  _has_bits_[0] |= 0x10000000u;
}
inline void XpStatData::clear_has_buyszclosetdy() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void XpStatData::clear_buyszclosetdy() {
  buyszclosetdy_ = GOOGLE_LONGLONG(0);
  clear_has_buyszclosetdy();
}
inline ::google::protobuf::int64 XpStatData::buyszclosetdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.buyszclosetdy)
  return buyszclosetdy_;
}
inline void XpStatData::set_buyszclosetdy(::google::protobuf::int64 value) {
  set_has_buyszclosetdy();
  buyszclosetdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.buyszclosetdy)
}

// optional int32 sellordersclosetdy = 39 [default = 0];
inline bool XpStatData::has_sellordersclosetdy() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void XpStatData::set_has_sellordersclosetdy() {
  _has_bits_[0] |= 0x20000000u;
}
inline void XpStatData::clear_has_sellordersclosetdy() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void XpStatData::clear_sellordersclosetdy() {
  sellordersclosetdy_ = 0;
  clear_has_sellordersclosetdy();
}
inline ::google::protobuf::int32 XpStatData::sellordersclosetdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellordersclosetdy)
  return sellordersclosetdy_;
}
inline void XpStatData::set_sellordersclosetdy(::google::protobuf::int32 value) {
  set_has_sellordersclosetdy();
  sellordersclosetdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellordersclosetdy)
}

// optional int64 sellszclosetdy = 40 [default = 0];
inline bool XpStatData::has_sellszclosetdy() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void XpStatData::set_has_sellszclosetdy() {
  _has_bits_[0] |= 0x40000000u;
}
inline void XpStatData::clear_has_sellszclosetdy() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void XpStatData::clear_sellszclosetdy() {
  sellszclosetdy_ = GOOGLE_LONGLONG(0);
  clear_has_sellszclosetdy();
}
inline ::google::protobuf::int64 XpStatData::sellszclosetdy() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.sellszclosetdy)
  return sellszclosetdy_;
}
inline void XpStatData::set_sellszclosetdy(::google::protobuf::int64 value) {
  set_has_sellszclosetdy();
  sellszclosetdy_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.sellszclosetdy)
}

// optional int32 orderssent = 41 [default = 0];
inline bool XpStatData::has_orderssent() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void XpStatData::set_has_orderssent() {
  _has_bits_[0] |= 0x80000000u;
}
inline void XpStatData::clear_has_orderssent() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void XpStatData::clear_orderssent() {
  orderssent_ = 0;
  clear_has_orderssent();
}
inline ::google::protobuf::int32 XpStatData::orderssent() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.orderssent)
  return orderssent_;
}
inline void XpStatData::set_orderssent(::google::protobuf::int32 value) {
  set_has_orderssent();
  orderssent_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.orderssent)
}

// optional int32 orderscxled = 42 [default = 0];
inline bool XpStatData::has_orderscxled() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void XpStatData::set_has_orderscxled() {
  _has_bits_[1] |= 0x00000001u;
}
inline void XpStatData::clear_has_orderscxled() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void XpStatData::clear_orderscxled() {
  orderscxled_ = 0;
  clear_has_orderscxled();
}
inline ::google::protobuf::int32 XpStatData::orderscxled() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.orderscxled)
  return orderscxled_;
}
inline void XpStatData::set_orderscxled(::google::protobuf::int32 value) {
  set_has_orderscxled();
  orderscxled_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.orderscxled)
}

// optional int32 quotessent = 43 [default = 0];
inline bool XpStatData::has_quotessent() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void XpStatData::set_has_quotessent() {
  _has_bits_[1] |= 0x00000002u;
}
inline void XpStatData::clear_has_quotessent() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void XpStatData::clear_quotessent() {
  quotessent_ = 0;
  clear_has_quotessent();
}
inline ::google::protobuf::int32 XpStatData::quotessent() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.quotessent)
  return quotessent_;
}
inline void XpStatData::set_quotessent(::google::protobuf::int32 value) {
  set_has_quotessent();
  quotessent_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.quotessent)
}

// optional int32 quotescxled = 44 [default = 0];
inline bool XpStatData::has_quotescxled() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void XpStatData::set_has_quotescxled() {
  _has_bits_[1] |= 0x00000004u;
}
inline void XpStatData::clear_has_quotescxled() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void XpStatData::clear_quotescxled() {
  quotescxled_ = 0;
  clear_has_quotescxled();
}
inline ::google::protobuf::int32 XpStatData::quotescxled() const {
  // @@protoc_insertion_point(field_get:XT.XpStatData.quotescxled)
  return quotescxled_;
}
inline void XpStatData::set_quotescxled(::google::protobuf::int32 value) {
  set_has_quotescxled();
  quotescxled_ = value;
  // @@protoc_insertion_point(field_set:XT.XpStatData.quotescxled)
}

// -------------------------------------------------------------------

// OrdersSzPair

// optional int32 orders = 1 [default = 0];
inline bool OrdersSzPair::has_orders() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrdersSzPair::set_has_orders() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrdersSzPair::clear_has_orders() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrdersSzPair::clear_orders() {
  orders_ = 0;
  clear_has_orders();
}
inline ::google::protobuf::int32 OrdersSzPair::orders() const {
  // @@protoc_insertion_point(field_get:XT.OrdersSzPair.orders)
  return orders_;
}
inline void OrdersSzPair::set_orders(::google::protobuf::int32 value) {
  set_has_orders();
  orders_ = value;
  // @@protoc_insertion_point(field_set:XT.OrdersSzPair.orders)
}

// optional int64 sz = 2 [default = 0];
inline bool OrdersSzPair::has_sz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrdersSzPair::set_has_sz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrdersSzPair::clear_has_sz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrdersSzPair::clear_sz() {
  sz_ = GOOGLE_LONGLONG(0);
  clear_has_sz();
}
inline ::google::protobuf::int64 OrdersSzPair::sz() const {
  // @@protoc_insertion_point(field_get:XT.OrdersSzPair.sz)
  return sz_;
}
inline void OrdersSzPair::set_sz(::google::protobuf::int64 value) {
  set_has_sz();
  sz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrdersSzPair.sz)
}

// -------------------------------------------------------------------

// OrderStatData

// optional int32 orderssent = 1 [default = 0];
inline bool OrderStatData::has_orderssent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderStatData::set_has_orderssent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderStatData::clear_has_orderssent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderStatData::clear_orderssent() {
  orderssent_ = 0;
  clear_has_orderssent();
}
inline ::google::protobuf::int32 OrderStatData::orderssent() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.orderssent)
  return orderssent_;
}
inline void OrderStatData::set_orderssent(::google::protobuf::int32 value) {
  set_has_orderssent();
  orderssent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.orderssent)
}

// optional int32 orderscxled = 2 [default = 0];
inline bool OrderStatData::has_orderscxled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderStatData::set_has_orderscxled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderStatData::clear_has_orderscxled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderStatData::clear_orderscxled() {
  orderscxled_ = 0;
  clear_has_orderscxled();
}
inline ::google::protobuf::int32 OrderStatData::orderscxled() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.orderscxled)
  return orderscxled_;
}
inline void OrderStatData::set_orderscxled(::google::protobuf::int32 value) {
  set_has_orderscxled();
  orderscxled_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.orderscxled)
}

// optional int32 quotessent = 3 [default = 0];
inline bool OrderStatData::has_quotessent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderStatData::set_has_quotessent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderStatData::clear_has_quotessent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderStatData::clear_quotessent() {
  quotessent_ = 0;
  clear_has_quotessent();
}
inline ::google::protobuf::int32 OrderStatData::quotessent() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.quotessent)
  return quotessent_;
}
inline void OrderStatData::set_quotessent(::google::protobuf::int32 value) {
  set_has_quotessent();
  quotessent_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.quotessent)
}

// optional int32 quotescxled = 4 [default = 0];
inline bool OrderStatData::has_quotescxled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderStatData::set_has_quotescxled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderStatData::clear_has_quotescxled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderStatData::clear_quotescxled() {
  quotescxled_ = 0;
  clear_has_quotescxled();
}
inline ::google::protobuf::int32 OrderStatData::quotescxled() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.quotescxled)
  return quotescxled_;
}
inline void OrderStatData::set_quotescxled(::google::protobuf::int32 value) {
  set_has_quotescxled();
  quotescxled_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.quotescxled)
}

// optional int32 workingbuyorders = 5 [default = 0];
inline bool OrderStatData::has_workingbuyorders() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderStatData::set_has_workingbuyorders() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderStatData::clear_has_workingbuyorders() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderStatData::clear_workingbuyorders() {
  workingbuyorders_ = 0;
  clear_has_workingbuyorders();
}
inline ::google::protobuf::int32 OrderStatData::workingbuyorders() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.workingbuyorders)
  return workingbuyorders_;
}
inline void OrderStatData::set_workingbuyorders(::google::protobuf::int32 value) {
  set_has_workingbuyorders();
  workingbuyorders_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.workingbuyorders)
}

// optional int32 workingsellorders = 6 [default = 0];
inline bool OrderStatData::has_workingsellorders() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderStatData::set_has_workingsellorders() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderStatData::clear_has_workingsellorders() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderStatData::clear_workingsellorders() {
  workingsellorders_ = 0;
  clear_has_workingsellorders();
}
inline ::google::protobuf::int32 OrderStatData::workingsellorders() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.workingsellorders)
  return workingsellorders_;
}
inline void OrderStatData::set_workingsellorders(::google::protobuf::int32 value) {
  set_has_workingsellorders();
  workingsellorders_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.workingsellorders)
}

// optional int64 workingbuysz = 7 [default = 0];
inline bool OrderStatData::has_workingbuysz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderStatData::set_has_workingbuysz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderStatData::clear_has_workingbuysz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderStatData::clear_workingbuysz() {
  workingbuysz_ = GOOGLE_LONGLONG(0);
  clear_has_workingbuysz();
}
inline ::google::protobuf::int64 OrderStatData::workingbuysz() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.workingbuysz)
  return workingbuysz_;
}
inline void OrderStatData::set_workingbuysz(::google::protobuf::int64 value) {
  set_has_workingbuysz();
  workingbuysz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.workingbuysz)
}

// optional int64 workingsellsz = 8 [default = 0];
inline bool OrderStatData::has_workingsellsz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderStatData::set_has_workingsellsz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderStatData::clear_has_workingsellsz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderStatData::clear_workingsellsz() {
  workingsellsz_ = GOOGLE_LONGLONG(0);
  clear_has_workingsellsz();
}
inline ::google::protobuf::int64 OrderStatData::workingsellsz() const {
  // @@protoc_insertion_point(field_get:XT.OrderStatData.workingsellsz)
  return workingsellsz_;
}
inline void OrderStatData::set_workingsellsz(::google::protobuf::int64 value) {
  set_has_workingsellsz();
  workingsellsz_ = value;
  // @@protoc_insertion_point(field_set:XT.OrderStatData.workingsellsz)
}

// -------------------------------------------------------------------

// LadderPxData

// optional double px = 1 [default = 0];
inline bool LadderPxData::has_px() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LadderPxData::set_has_px() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LadderPxData::clear_has_px() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LadderPxData::clear_px() {
  px_ = 0;
  clear_has_px();
}
inline double LadderPxData::px() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.px)
  return px_;
}
inline void LadderPxData::set_px(double value) {
  set_has_px();
  px_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.px)
}

// optional int32 mktbstype = 2 [default = 0];
inline bool LadderPxData::has_mktbstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LadderPxData::set_has_mktbstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LadderPxData::clear_has_mktbstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LadderPxData::clear_mktbstype() {
  mktbstype_ = 0;
  clear_has_mktbstype();
}
inline ::google::protobuf::int32 LadderPxData::mktbstype() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.mktbstype)
  return mktbstype_;
}
inline void LadderPxData::set_mktbstype(::google::protobuf::int32 value) {
  set_has_mktbstype();
  mktbstype_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.mktbstype)
}

// optional int64 mktsz = 3 [default = 0];
inline bool LadderPxData::has_mktsz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LadderPxData::set_has_mktsz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LadderPxData::clear_has_mktsz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LadderPxData::clear_mktsz() {
  mktsz_ = GOOGLE_LONGLONG(0);
  clear_has_mktsz();
}
inline ::google::protobuf::int64 LadderPxData::mktsz() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.mktsz)
  return mktsz_;
}
inline void LadderPxData::set_mktsz(::google::protobuf::int64 value) {
  set_has_mktsz();
  mktsz_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.mktsz)
}

// optional int64 mktnumorders = 4 [default = 0];
inline bool LadderPxData::has_mktnumorders() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LadderPxData::set_has_mktnumorders() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LadderPxData::clear_has_mktnumorders() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LadderPxData::clear_mktnumorders() {
  mktnumorders_ = GOOGLE_LONGLONG(0);
  clear_has_mktnumorders();
}
inline ::google::protobuf::int64 LadderPxData::mktnumorders() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.mktnumorders)
  return mktnumorders_;
}
inline void LadderPxData::set_mktnumorders(::google::protobuf::int64 value) {
  set_has_mktnumorders();
  mktnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.mktnumorders)
}

// optional int64 buysz = 5 [default = 0];
inline bool LadderPxData::has_buysz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LadderPxData::set_has_buysz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LadderPxData::clear_has_buysz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LadderPxData::clear_buysz() {
  buysz_ = GOOGLE_LONGLONG(0);
  clear_has_buysz();
}
inline ::google::protobuf::int64 LadderPxData::buysz() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.buysz)
  return buysz_;
}
inline void LadderPxData::set_buysz(::google::protobuf::int64 value) {
  set_has_buysz();
  buysz_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.buysz)
}

// optional int32 buynumorders = 6 [default = 0];
inline bool LadderPxData::has_buynumorders() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LadderPxData::set_has_buynumorders() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LadderPxData::clear_has_buynumorders() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LadderPxData::clear_buynumorders() {
  buynumorders_ = 0;
  clear_has_buynumorders();
}
inline ::google::protobuf::int32 LadderPxData::buynumorders() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.buynumorders)
  return buynumorders_;
}
inline void LadderPxData::set_buynumorders(::google::protobuf::int32 value) {
  set_has_buynumorders();
  buynumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.buynumorders)
}

// optional int64 sellsz = 7 [default = 0];
inline bool LadderPxData::has_sellsz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LadderPxData::set_has_sellsz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LadderPxData::clear_has_sellsz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LadderPxData::clear_sellsz() {
  sellsz_ = GOOGLE_LONGLONG(0);
  clear_has_sellsz();
}
inline ::google::protobuf::int64 LadderPxData::sellsz() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.sellsz)
  return sellsz_;
}
inline void LadderPxData::set_sellsz(::google::protobuf::int64 value) {
  set_has_sellsz();
  sellsz_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.sellsz)
}

// optional int32 sellnumorders = 8 [default = 0];
inline bool LadderPxData::has_sellnumorders() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LadderPxData::set_has_sellnumorders() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LadderPxData::clear_has_sellnumorders() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LadderPxData::clear_sellnumorders() {
  sellnumorders_ = 0;
  clear_has_sellnumorders();
}
inline ::google::protobuf::int32 LadderPxData::sellnumorders() const {
  // @@protoc_insertion_point(field_get:XT.LadderPxData.sellnumorders)
  return sellnumorders_;
}
inline void LadderPxData::set_sellnumorders(::google::protobuf::int32 value) {
  set_has_sellnumorders();
  sellnumorders_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderPxData.sellnumorders)
}

// map<int32, int64> oid2openszmap = 10;
inline int LadderPxData::oid2openszmap_size() const {
  return oid2openszmap_.size();
}
inline void LadderPxData::clear_oid2openszmap() {
  oid2openszmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
LadderPxData::oid2openszmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderPxData.oid2openszmap)
  return oid2openszmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
LadderPxData::mutable_oid2openszmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderPxData.oid2openszmap)
  return oid2openszmap_.MutableMap();
}

// -------------------------------------------------------------------

// LadderBookData

// optional string instrid = 1 [default = ""];
inline bool LadderBookData::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LadderBookData::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LadderBookData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LadderBookData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& LadderBookData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.LadderBookData.instrid)
}
inline void LadderBookData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.LadderBookData.instrid)
}
inline void LadderBookData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.LadderBookData.instrid)
}
inline ::std::string* LadderBookData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LadderBookData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.instrid)
}

// optional string exchid = 2 [default = ""];
inline bool LadderBookData::has_exchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LadderBookData::set_has_exchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LadderBookData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LadderBookData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& LadderBookData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.LadderBookData.exchid)
}
inline void LadderBookData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.LadderBookData.exchid)
}
inline void LadderBookData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.LadderBookData.exchid)
}
inline ::std::string* LadderBookData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LadderBookData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.exchid)
}

// optional string source = 3 [default = ""];
inline bool LadderBookData::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LadderBookData::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LadderBookData::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LadderBookData::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& LadderBookData::source() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.LadderBookData.source)
}
inline void LadderBookData::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.LadderBookData.source)
}
inline void LadderBookData::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.LadderBookData.source)
}
inline ::std::string* LadderBookData::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LadderBookData::release_source() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LadderBookData::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.source)
}

// optional int64 exchts = 4 [default = 0];
inline bool LadderBookData::has_exchts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LadderBookData::set_has_exchts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LadderBookData::clear_has_exchts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LadderBookData::clear_exchts() {
  exchts_ = GOOGLE_LONGLONG(0);
  clear_has_exchts();
}
inline ::google::protobuf::int64 LadderBookData::exchts() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.exchts)
  return exchts_;
}
inline void LadderBookData::set_exchts(::google::protobuf::int64 value) {
  set_has_exchts();
  exchts_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.exchts)
}

// optional int64 recvts = 5 [default = 0];
inline bool LadderBookData::has_recvts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LadderBookData::set_has_recvts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LadderBookData::clear_has_recvts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LadderBookData::clear_recvts() {
  recvts_ = GOOGLE_LONGLONG(0);
  clear_has_recvts();
}
inline ::google::protobuf::int64 LadderBookData::recvts() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.recvts)
  return recvts_;
}
inline void LadderBookData::set_recvts(::google::protobuf::int64 value) {
  set_has_recvts();
  recvts_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.recvts)
}

// optional double lastpx = 6 [default = 0];
inline bool LadderBookData::has_lastpx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LadderBookData::set_has_lastpx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LadderBookData::clear_has_lastpx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LadderBookData::clear_lastpx() {
  lastpx_ = 0;
  clear_has_lastpx();
}
inline double LadderBookData::lastpx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.lastpx)
  return lastpx_;
}
inline void LadderBookData::set_lastpx(double value) {
  set_has_lastpx();
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.lastpx)
}

// optional int64 lastts = 7 [default = 0];
inline bool LadderBookData::has_lastts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LadderBookData::set_has_lastts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LadderBookData::clear_has_lastts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LadderBookData::clear_lastts() {
  lastts_ = GOOGLE_LONGLONG(0);
  clear_has_lastts();
}
inline ::google::protobuf::int64 LadderBookData::lastts() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.lastts)
  return lastts_;
}
inline void LadderBookData::set_lastts(::google::protobuf::int64 value) {
  set_has_lastts();
  lastts_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.lastts)
}

// optional int64 totvolume = 8 [default = 0];
inline bool LadderBookData::has_totvolume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LadderBookData::set_has_totvolume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LadderBookData::clear_has_totvolume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LadderBookData::clear_totvolume() {
  totvolume_ = GOOGLE_LONGLONG(0);
  clear_has_totvolume();
}
inline ::google::protobuf::int64 LadderBookData::totvolume() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.totvolume)
  return totvolume_;
}
inline void LadderBookData::set_totvolume(::google::protobuf::int64 value) {
  set_has_totvolume();
  totvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.totvolume)
}

// optional double totamount = 9 [default = 0];
inline bool LadderBookData::has_totamount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LadderBookData::set_has_totamount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LadderBookData::clear_has_totamount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LadderBookData::clear_totamount() {
  totamount_ = 0;
  clear_has_totamount();
}
inline double LadderBookData::totamount() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.totamount)
  return totamount_;
}
inline void LadderBookData::set_totamount(double value) {
  set_has_totamount();
  totamount_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.totamount)
}

// optional int64 totoi = 10 [default = 0];
inline bool LadderBookData::has_totoi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LadderBookData::set_has_totoi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LadderBookData::clear_has_totoi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LadderBookData::clear_totoi() {
  totoi_ = GOOGLE_LONGLONG(0);
  clear_has_totoi();
}
inline ::google::protobuf::int64 LadderBookData::totoi() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.totoi)
  return totoi_;
}
inline void LadderBookData::set_totoi(::google::protobuf::int64 value) {
  set_has_totoi();
  totoi_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.totoi)
}

// optional int64 szmultiplier = 11 [default = 1];
inline bool LadderBookData::has_szmultiplier() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LadderBookData::set_has_szmultiplier() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LadderBookData::clear_has_szmultiplier() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LadderBookData::clear_szmultiplier() {
  szmultiplier_ = GOOGLE_LONGLONG(1);
  clear_has_szmultiplier();
}
inline ::google::protobuf::int64 LadderBookData::szmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.szmultiplier)
  return szmultiplier_;
}
inline void LadderBookData::set_szmultiplier(::google::protobuf::int64 value) {
  set_has_szmultiplier();
  szmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.szmultiplier)
}

// optional int64 pxscaletoint64 = 12 [default = 100000000];
inline bool LadderBookData::has_pxscaletoint64() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LadderBookData::set_has_pxscaletoint64() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LadderBookData::clear_has_pxscaletoint64() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LadderBookData::clear_pxscaletoint64() {
  pxscaletoint64_ = GOOGLE_LONGLONG(100000000);
  clear_has_pxscaletoint64();
}
inline ::google::protobuf::int64 LadderBookData::pxscaletoint64() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.pxscaletoint64)
  return pxscaletoint64_;
}
inline void LadderBookData::set_pxscaletoint64(::google::protobuf::int64 value) {
  set_has_pxscaletoint64();
  pxscaletoint64_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.pxscaletoint64)
}

// optional double pxscaletodouble = 13 [default = 1e-08];
inline bool LadderBookData::has_pxscaletodouble() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LadderBookData::set_has_pxscaletodouble() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LadderBookData::clear_has_pxscaletodouble() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LadderBookData::clear_pxscaletodouble() {
  pxscaletodouble_ = 1e-08;
  clear_has_pxscaletodouble();
}
inline double LadderBookData::pxscaletodouble() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.pxscaletodouble)
  return pxscaletodouble_;
}
inline void LadderBookData::set_pxscaletodouble(double value) {
  set_has_pxscaletodouble();
  pxscaletodouble_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.pxscaletodouble)
}

// optional int64 int64pxtick = 14 [default = 0];
inline bool LadderBookData::has_int64pxtick() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LadderBookData::set_has_int64pxtick() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LadderBookData::clear_has_int64pxtick() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LadderBookData::clear_int64pxtick() {
  int64pxtick_ = GOOGLE_LONGLONG(0);
  clear_has_int64pxtick();
}
inline ::google::protobuf::int64 LadderBookData::int64pxtick() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.int64pxtick)
  return int64pxtick_;
}
inline void LadderBookData::set_int64pxtick(::google::protobuf::int64 value) {
  set_has_int64pxtick();
  int64pxtick_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.int64pxtick)
}

// optional double pricetick = 15 [default = 0];
inline bool LadderBookData::has_pricetick() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LadderBookData::set_has_pricetick() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LadderBookData::clear_has_pricetick() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LadderBookData::clear_pricetick() {
  pricetick_ = 0;
  clear_has_pricetick();
}
inline double LadderBookData::pricetick() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.pricetick)
  return pricetick_;
}
inline void LadderBookData::set_pricetick(double value) {
  set_has_pricetick();
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.pricetick)
}

// optional double contractmultiplier = 16 [default = 1];
inline bool LadderBookData::has_contractmultiplier() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LadderBookData::set_has_contractmultiplier() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LadderBookData::clear_has_contractmultiplier() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LadderBookData::clear_contractmultiplier() {
  contractmultiplier_ = 1;
  clear_has_contractmultiplier();
}
inline double LadderBookData::contractmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.contractmultiplier)
  return contractmultiplier_;
}
inline void LadderBookData::set_contractmultiplier(double value) {
  set_has_contractmultiplier();
  contractmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.contractmultiplier)
}

// map<int64, .XT.LadderPxData> ladderpxmap = 17;
inline int LadderBookData::ladderpxmap_size() const {
  return ladderpxmap_.size();
}
inline void LadderBookData::clear_ladderpxmap() {
  ladderpxmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::LadderPxData >&
LadderBookData::ladderpxmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderBookData.ladderpxmap)
  return ladderpxmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::XT::LadderPxData >*
LadderBookData::mutable_ladderpxmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderBookData.ladderpxmap)
  return ladderpxmap_.MutableMap();
}

// repeated int64 ladderintpxs = 18;
inline int LadderBookData::ladderintpxs_size() const {
  return ladderintpxs_.size();
}
inline void LadderBookData::clear_ladderintpxs() {
  ladderintpxs_.Clear();
}
inline ::google::protobuf::int64 LadderBookData::ladderintpxs(int index) const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.ladderintpxs)
  return ladderintpxs_.Get(index);
}
inline void LadderBookData::set_ladderintpxs(int index, ::google::protobuf::int64 value) {
  ladderintpxs_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.LadderBookData.ladderintpxs)
}
inline void LadderBookData::add_ladderintpxs(::google::protobuf::int64 value) {
  ladderintpxs_.Add(value);
  // @@protoc_insertion_point(field_add:XT.LadderBookData.ladderintpxs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LadderBookData::ladderintpxs() const {
  // @@protoc_insertion_point(field_list:XT.LadderBookData.ladderintpxs)
  return ladderintpxs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LadderBookData::mutable_ladderintpxs() {
  // @@protoc_insertion_point(field_mutable_list:XT.LadderBookData.ladderintpxs)
  return &ladderintpxs_;
}

// repeated double ladderpxs = 19;
inline int LadderBookData::ladderpxs_size() const {
  return ladderpxs_.size();
}
inline void LadderBookData::clear_ladderpxs() {
  ladderpxs_.Clear();
}
inline double LadderBookData::ladderpxs(int index) const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.ladderpxs)
  return ladderpxs_.Get(index);
}
inline void LadderBookData::set_ladderpxs(int index, double value) {
  ladderpxs_.Set(index, value);
  // @@protoc_insertion_point(field_set:XT.LadderBookData.ladderpxs)
}
inline void LadderBookData::add_ladderpxs(double value) {
  ladderpxs_.Add(value);
  // @@protoc_insertion_point(field_add:XT.LadderBookData.ladderpxs)
}
inline const ::google::protobuf::RepeatedField< double >&
LadderBookData::ladderpxs() const {
  // @@protoc_insertion_point(field_list:XT.LadderBookData.ladderpxs)
  return ladderpxs_;
}
inline ::google::protobuf::RepeatedField< double >*
LadderBookData::mutable_ladderpxs() {
  // @@protoc_insertion_point(field_mutable_list:XT.LadderBookData.ladderpxs)
  return &ladderpxs_;
}

// map<int64, int32> intpx2idxmap = 20;
inline int LadderBookData::intpx2idxmap_size() const {
  return intpx2idxmap_.size();
}
inline void LadderBookData::clear_intpx2idxmap() {
  intpx2idxmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
LadderBookData::intpx2idxmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderBookData.intpx2idxmap)
  return intpx2idxmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
LadderBookData::mutable_intpx2idxmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderBookData.intpx2idxmap)
  return intpx2idxmap_.MutableMap();
}

// optional int32 mktbididx = 21 [default = -1];
inline bool LadderBookData::has_mktbididx() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LadderBookData::set_has_mktbididx() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LadderBookData::clear_has_mktbididx() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LadderBookData::clear_mktbididx() {
  mktbididx_ = -1;
  clear_has_mktbididx();
}
inline ::google::protobuf::int32 LadderBookData::mktbididx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktbididx)
  return mktbididx_;
}
inline void LadderBookData::set_mktbididx(::google::protobuf::int32 value) {
  set_has_mktbididx();
  mktbididx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktbididx)
}

// optional int32 mktaskidx = 22 [default = -1];
inline bool LadderBookData::has_mktaskidx() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LadderBookData::set_has_mktaskidx() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LadderBookData::clear_has_mktaskidx() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LadderBookData::clear_mktaskidx() {
  mktaskidx_ = -1;
  clear_has_mktaskidx();
}
inline ::google::protobuf::int32 LadderBookData::mktaskidx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktaskidx)
  return mktaskidx_;
}
inline void LadderBookData::set_mktaskidx(::google::protobuf::int32 value) {
  set_has_mktaskidx();
  mktaskidx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktaskidx)
}

// optional double mktbidpx = 23 [default = 0];
inline bool LadderBookData::has_mktbidpx() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LadderBookData::set_has_mktbidpx() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LadderBookData::clear_has_mktbidpx() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LadderBookData::clear_mktbidpx() {
  mktbidpx_ = 0;
  clear_has_mktbidpx();
}
inline double LadderBookData::mktbidpx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktbidpx)
  return mktbidpx_;
}
inline void LadderBookData::set_mktbidpx(double value) {
  set_has_mktbidpx();
  mktbidpx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktbidpx)
}

// optional double mktaskpx = 24 [default = 0];
inline bool LadderBookData::has_mktaskpx() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LadderBookData::set_has_mktaskpx() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LadderBookData::clear_has_mktaskpx() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LadderBookData::clear_mktaskpx() {
  mktaskpx_ = 0;
  clear_has_mktaskpx();
}
inline double LadderBookData::mktaskpx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktaskpx)
  return mktaskpx_;
}
inline void LadderBookData::set_mktaskpx(double value) {
  set_has_mktaskpx();
  mktaskpx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktaskpx)
}

// optional int64 mktbidsz = 25 [default = 0];
inline bool LadderBookData::has_mktbidsz() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void LadderBookData::set_has_mktbidsz() {
  _has_bits_[0] |= 0x01000000u;
}
inline void LadderBookData::clear_has_mktbidsz() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void LadderBookData::clear_mktbidsz() {
  mktbidsz_ = GOOGLE_LONGLONG(0);
  clear_has_mktbidsz();
}
inline ::google::protobuf::int64 LadderBookData::mktbidsz() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktbidsz)
  return mktbidsz_;
}
inline void LadderBookData::set_mktbidsz(::google::protobuf::int64 value) {
  set_has_mktbidsz();
  mktbidsz_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktbidsz)
}

// optional int64 mktasksz = 26 [default = 0];
inline bool LadderBookData::has_mktasksz() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void LadderBookData::set_has_mktasksz() {
  _has_bits_[0] |= 0x02000000u;
}
inline void LadderBookData::clear_has_mktasksz() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void LadderBookData::clear_mktasksz() {
  mktasksz_ = GOOGLE_LONGLONG(0);
  clear_has_mktasksz();
}
inline ::google::protobuf::int64 LadderBookData::mktasksz() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktasksz)
  return mktasksz_;
}
inline void LadderBookData::set_mktasksz(::google::protobuf::int64 value) {
  set_has_mktasksz();
  mktasksz_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktasksz)
}

// optional double mktbidpxprev = 27 [default = 0];
inline bool LadderBookData::has_mktbidpxprev() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void LadderBookData::set_has_mktbidpxprev() {
  _has_bits_[0] |= 0x04000000u;
}
inline void LadderBookData::clear_has_mktbidpxprev() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void LadderBookData::clear_mktbidpxprev() {
  mktbidpxprev_ = 0;
  clear_has_mktbidpxprev();
}
inline double LadderBookData::mktbidpxprev() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktbidpxprev)
  return mktbidpxprev_;
}
inline void LadderBookData::set_mktbidpxprev(double value) {
  set_has_mktbidpxprev();
  mktbidpxprev_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktbidpxprev)
}

// optional double mktaskpxprev = 28 [default = 0];
inline bool LadderBookData::has_mktaskpxprev() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void LadderBookData::set_has_mktaskpxprev() {
  _has_bits_[0] |= 0x08000000u;
}
inline void LadderBookData::clear_has_mktaskpxprev() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void LadderBookData::clear_mktaskpxprev() {
  mktaskpxprev_ = 0;
  clear_has_mktaskpxprev();
}
inline double LadderBookData::mktaskpxprev() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktaskpxprev)
  return mktaskpxprev_;
}
inline void LadderBookData::set_mktaskpxprev(double value) {
  set_has_mktaskpxprev();
  mktaskpxprev_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktaskpxprev)
}

// optional int64 mktbidszprev = 29 [default = 0];
inline bool LadderBookData::has_mktbidszprev() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void LadderBookData::set_has_mktbidszprev() {
  _has_bits_[0] |= 0x10000000u;
}
inline void LadderBookData::clear_has_mktbidszprev() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void LadderBookData::clear_mktbidszprev() {
  mktbidszprev_ = GOOGLE_LONGLONG(0);
  clear_has_mktbidszprev();
}
inline ::google::protobuf::int64 LadderBookData::mktbidszprev() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktbidszprev)
  return mktbidszprev_;
}
inline void LadderBookData::set_mktbidszprev(::google::protobuf::int64 value) {
  set_has_mktbidszprev();
  mktbidszprev_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktbidszprev)
}

// optional int64 mktaskszprev = 30 [default = 0];
inline bool LadderBookData::has_mktaskszprev() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void LadderBookData::set_has_mktaskszprev() {
  _has_bits_[0] |= 0x20000000u;
}
inline void LadderBookData::clear_has_mktaskszprev() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void LadderBookData::clear_mktaskszprev() {
  mktaskszprev_ = GOOGLE_LONGLONG(0);
  clear_has_mktaskszprev();
}
inline ::google::protobuf::int64 LadderBookData::mktaskszprev() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.mktaskszprev)
  return mktaskszprev_;
}
inline void LadderBookData::set_mktaskszprev(::google::protobuf::int64 value) {
  set_has_mktaskszprev();
  mktaskszprev_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.mktaskszprev)
}

// optional int32 numbookupdates = 31 [default = 0];
inline bool LadderBookData::has_numbookupdates() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void LadderBookData::set_has_numbookupdates() {
  _has_bits_[0] |= 0x40000000u;
}
inline void LadderBookData::clear_has_numbookupdates() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void LadderBookData::clear_numbookupdates() {
  numbookupdates_ = 0;
  clear_has_numbookupdates();
}
inline ::google::protobuf::int32 LadderBookData::numbookupdates() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.numbookupdates)
  return numbookupdates_;
}
inline void LadderBookData::set_numbookupdates(::google::protobuf::int32 value) {
  set_has_numbookupdates();
  numbookupdates_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.numbookupdates)
}

// optional int64 bestszchged = 32 [default = 0];
inline bool LadderBookData::has_bestszchged() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void LadderBookData::set_has_bestszchged() {
  _has_bits_[0] |= 0x80000000u;
}
inline void LadderBookData::clear_has_bestszchged() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void LadderBookData::clear_bestszchged() {
  bestszchged_ = GOOGLE_LONGLONG(0);
  clear_has_bestszchged();
}
inline ::google::protobuf::int64 LadderBookData::bestszchged() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.bestszchged)
  return bestszchged_;
}
inline void LadderBookData::set_bestszchged(::google::protobuf::int64 value) {
  set_has_bestszchged();
  bestszchged_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.bestszchged)
}

// optional int64 bestpxtickchged = 33 [default = 0];
inline bool LadderBookData::has_bestpxtickchged() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void LadderBookData::set_has_bestpxtickchged() {
  _has_bits_[1] |= 0x00000001u;
}
inline void LadderBookData::clear_has_bestpxtickchged() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void LadderBookData::clear_bestpxtickchged() {
  bestpxtickchged_ = GOOGLE_LONGLONG(0);
  clear_has_bestpxtickchged();
}
inline ::google::protobuf::int64 LadderBookData::bestpxtickchged() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.bestpxtickchged)
  return bestpxtickchged_;
}
inline void LadderBookData::set_bestpxtickchged(::google::protobuf::int64 value) {
  set_has_bestpxtickchged();
  bestpxtickchged_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.bestpxtickchged)
}

// optional double midpxchged = 34 [default = 0];
inline bool LadderBookData::has_midpxchged() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void LadderBookData::set_has_midpxchged() {
  _has_bits_[1] |= 0x00000002u;
}
inline void LadderBookData::clear_has_midpxchged() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void LadderBookData::clear_midpxchged() {
  midpxchged_ = 0;
  clear_has_midpxchged();
}
inline double LadderBookData::midpxchged() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.midpxchged)
  return midpxchged_;
}
inline void LadderBookData::set_midpxchged(double value) {
  set_has_midpxchged();
  midpxchged_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.midpxchged)
}

// optional int64 snapvolume = 35 [default = 0];
inline bool LadderBookData::has_snapvolume() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void LadderBookData::set_has_snapvolume() {
  _has_bits_[1] |= 0x00000004u;
}
inline void LadderBookData::clear_has_snapvolume() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void LadderBookData::clear_snapvolume() {
  snapvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapvolume();
}
inline ::google::protobuf::int64 LadderBookData::snapvolume() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapvolume)
  return snapvolume_;
}
inline void LadderBookData::set_snapvolume(::google::protobuf::int64 value) {
  set_has_snapvolume();
  snapvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapvolume)
}

// optional double snapamount = 36 [default = 0];
inline bool LadderBookData::has_snapamount() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void LadderBookData::set_has_snapamount() {
  _has_bits_[1] |= 0x00000008u;
}
inline void LadderBookData::clear_has_snapamount() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void LadderBookData::clear_snapamount() {
  snapamount_ = 0;
  clear_has_snapamount();
}
inline double LadderBookData::snapamount() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapamount)
  return snapamount_;
}
inline void LadderBookData::set_snapamount(double value) {
  set_has_snapamount();
  snapamount_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapamount)
}

// optional int64 snapoichg = 37 [default = 0];
inline bool LadderBookData::has_snapoichg() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void LadderBookData::set_has_snapoichg() {
  _has_bits_[1] |= 0x00000010u;
}
inline void LadderBookData::clear_has_snapoichg() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void LadderBookData::clear_snapoichg() {
  snapoichg_ = GOOGLE_LONGLONG(0);
  clear_has_snapoichg();
}
inline ::google::protobuf::int64 LadderBookData::snapoichg() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapoichg)
  return snapoichg_;
}
inline void LadderBookData::set_snapoichg(::google::protobuf::int64 value) {
  set_has_snapoichg();
  snapoichg_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapoichg)
}

// optional double snapavgpx = 38 [default = 0];
inline bool LadderBookData::has_snapavgpx() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void LadderBookData::set_has_snapavgpx() {
  _has_bits_[1] |= 0x00000020u;
}
inline void LadderBookData::clear_has_snapavgpx() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void LadderBookData::clear_snapavgpx() {
  snapavgpx_ = 0;
  clear_has_snapavgpx();
}
inline double LadderBookData::snapavgpx() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapavgpx)
  return snapavgpx_;
}
inline void LadderBookData::set_snapavgpx(double value) {
  set_has_snapavgpx();
  snapavgpx_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapavgpx)
}

// optional int64 snapbuyvolume = 39 [default = 0];
inline bool LadderBookData::has_snapbuyvolume() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void LadderBookData::set_has_snapbuyvolume() {
  _has_bits_[1] |= 0x00000040u;
}
inline void LadderBookData::clear_has_snapbuyvolume() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void LadderBookData::clear_snapbuyvolume() {
  snapbuyvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapbuyvolume();
}
inline ::google::protobuf::int64 LadderBookData::snapbuyvolume() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapbuyvolume)
  return snapbuyvolume_;
}
inline void LadderBookData::set_snapbuyvolume(::google::protobuf::int64 value) {
  set_has_snapbuyvolume();
  snapbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapbuyvolume)
}

// optional int64 snapsellvolume = 40 [default = 0];
inline bool LadderBookData::has_snapsellvolume() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void LadderBookData::set_has_snapsellvolume() {
  _has_bits_[1] |= 0x00000080u;
}
inline void LadderBookData::clear_has_snapsellvolume() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void LadderBookData::clear_snapsellvolume() {
  snapsellvolume_ = GOOGLE_LONGLONG(0);
  clear_has_snapsellvolume();
}
inline ::google::protobuf::int64 LadderBookData::snapsellvolume() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapsellvolume)
  return snapsellvolume_;
}
inline void LadderBookData::set_snapsellvolume(::google::protobuf::int64 value) {
  set_has_snapsellvolume();
  snapsellvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapsellvolume)
}

// optional double snapbsadiff = 41 [default = 0];
inline bool LadderBookData::has_snapbsadiff() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void LadderBookData::set_has_snapbsadiff() {
  _has_bits_[1] |= 0x00000100u;
}
inline void LadderBookData::clear_has_snapbsadiff() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void LadderBookData::clear_snapbsadiff() {
  snapbsadiff_ = 0;
  clear_has_snapbsadiff();
}
inline double LadderBookData::snapbsadiff() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapbsadiff)
  return snapbsadiff_;
}
inline void LadderBookData::set_snapbsadiff(double value) {
  set_has_snapbsadiff();
  snapbsadiff_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapbsadiff)
}

// optional double snapflipups = 42 [default = 0];
inline bool LadderBookData::has_snapflipups() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void LadderBookData::set_has_snapflipups() {
  _has_bits_[1] |= 0x00000200u;
}
inline void LadderBookData::clear_has_snapflipups() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void LadderBookData::clear_snapflipups() {
  snapflipups_ = 0;
  clear_has_snapflipups();
}
inline double LadderBookData::snapflipups() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapflipups)
  return snapflipups_;
}
inline void LadderBookData::set_snapflipups(double value) {
  set_has_snapflipups();
  snapflipups_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapflipups)
}

// optional double snapflipdns = 43 [default = 0];
inline bool LadderBookData::has_snapflipdns() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void LadderBookData::set_has_snapflipdns() {
  _has_bits_[1] |= 0x00000400u;
}
inline void LadderBookData::clear_has_snapflipdns() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void LadderBookData::clear_snapflipdns() {
  snapflipdns_ = 0;
  clear_has_snapflipdns();
}
inline double LadderBookData::snapflipdns() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.snapflipdns)
  return snapflipdns_;
}
inline void LadderBookData::set_snapflipdns(double value) {
  set_has_snapflipdns();
  snapflipdns_ = value;
  // @@protoc_insertion_point(field_set:XT.LadderBookData.snapflipdns)
}

// optional .XT.OrdersSzPair buyorderssz = 51;
inline bool LadderBookData::has_buyorderssz() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void LadderBookData::set_has_buyorderssz() {
  _has_bits_[1] |= 0x00000800u;
}
inline void LadderBookData::clear_has_buyorderssz() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void LadderBookData::clear_buyorderssz() {
  if (buyorderssz_ != NULL) buyorderssz_->::XT::OrdersSzPair::Clear();
  clear_has_buyorderssz();
}
inline const ::XT::OrdersSzPair& LadderBookData::buyorderssz() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.buyorderssz)
  return buyorderssz_ != NULL ? *buyorderssz_ : *default_instance_->buyorderssz_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_buyorderssz() {
  set_has_buyorderssz();
  if (buyorderssz_ == NULL) {
    buyorderssz_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.buyorderssz)
  return buyorderssz_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_buyorderssz() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.buyorderssz)
  clear_has_buyorderssz();
  ::XT::OrdersSzPair* temp = buyorderssz_;
  buyorderssz_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_buyorderssz(::XT::OrdersSzPair* buyorderssz) {
  delete buyorderssz_;
  buyorderssz_ = buyorderssz;
  if (buyorderssz) {
    set_has_buyorderssz();
  } else {
    clear_has_buyorderssz();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.buyorderssz)
}

// optional .XT.OrdersSzPair sellorderssz = 52;
inline bool LadderBookData::has_sellorderssz() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void LadderBookData::set_has_sellorderssz() {
  _has_bits_[1] |= 0x00001000u;
}
inline void LadderBookData::clear_has_sellorderssz() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void LadderBookData::clear_sellorderssz() {
  if (sellorderssz_ != NULL) sellorderssz_->::XT::OrdersSzPair::Clear();
  clear_has_sellorderssz();
}
inline const ::XT::OrdersSzPair& LadderBookData::sellorderssz() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.sellorderssz)
  return sellorderssz_ != NULL ? *sellorderssz_ : *default_instance_->sellorderssz_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_sellorderssz() {
  set_has_sellorderssz();
  if (sellorderssz_ == NULL) {
    sellorderssz_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.sellorderssz)
  return sellorderssz_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_sellorderssz() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.sellorderssz)
  clear_has_sellorderssz();
  ::XT::OrdersSzPair* temp = sellorderssz_;
  sellorderssz_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_sellorderssz(::XT::OrdersSzPair* sellorderssz) {
  delete sellorderssz_;
  sellorderssz_ = sellorderssz;
  if (sellorderssz) {
    set_has_sellorderssz();
  } else {
    clear_has_sellorderssz();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.sellorderssz)
}

// optional .XT.OrdersSzPair buyordersszotdy = 53;
inline bool LadderBookData::has_buyordersszotdy() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void LadderBookData::set_has_buyordersszotdy() {
  _has_bits_[1] |= 0x00002000u;
}
inline void LadderBookData::clear_has_buyordersszotdy() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void LadderBookData::clear_buyordersszotdy() {
  if (buyordersszotdy_ != NULL) buyordersszotdy_->::XT::OrdersSzPair::Clear();
  clear_has_buyordersszotdy();
}
inline const ::XT::OrdersSzPair& LadderBookData::buyordersszotdy() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.buyordersszotdy)
  return buyordersszotdy_ != NULL ? *buyordersszotdy_ : *default_instance_->buyordersszotdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_buyordersszotdy() {
  set_has_buyordersszotdy();
  if (buyordersszotdy_ == NULL) {
    buyordersszotdy_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.buyordersszotdy)
  return buyordersszotdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_buyordersszotdy() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.buyordersszotdy)
  clear_has_buyordersszotdy();
  ::XT::OrdersSzPair* temp = buyordersszotdy_;
  buyordersszotdy_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_buyordersszotdy(::XT::OrdersSzPair* buyordersszotdy) {
  delete buyordersszotdy_;
  buyordersszotdy_ = buyordersszotdy;
  if (buyordersszotdy) {
    set_has_buyordersszotdy();
  } else {
    clear_has_buyordersszotdy();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.buyordersszotdy)
}

// optional .XT.OrdersSzPair sellordersszotdy = 54;
inline bool LadderBookData::has_sellordersszotdy() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void LadderBookData::set_has_sellordersszotdy() {
  _has_bits_[1] |= 0x00004000u;
}
inline void LadderBookData::clear_has_sellordersszotdy() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void LadderBookData::clear_sellordersszotdy() {
  if (sellordersszotdy_ != NULL) sellordersszotdy_->::XT::OrdersSzPair::Clear();
  clear_has_sellordersszotdy();
}
inline const ::XT::OrdersSzPair& LadderBookData::sellordersszotdy() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.sellordersszotdy)
  return sellordersszotdy_ != NULL ? *sellordersszotdy_ : *default_instance_->sellordersszotdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_sellordersszotdy() {
  set_has_sellordersszotdy();
  if (sellordersszotdy_ == NULL) {
    sellordersszotdy_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.sellordersszotdy)
  return sellordersszotdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_sellordersszotdy() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.sellordersszotdy)
  clear_has_sellordersszotdy();
  ::XT::OrdersSzPair* temp = sellordersszotdy_;
  sellordersszotdy_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_sellordersszotdy(::XT::OrdersSzPair* sellordersszotdy) {
  delete sellordersszotdy_;
  sellordersszotdy_ = sellordersszotdy;
  if (sellordersszotdy) {
    set_has_sellordersszotdy();
  } else {
    clear_has_sellordersszotdy();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.sellordersszotdy)
}

// optional .XT.OrdersSzPair buyordersszctdy = 55;
inline bool LadderBookData::has_buyordersszctdy() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void LadderBookData::set_has_buyordersszctdy() {
  _has_bits_[1] |= 0x00008000u;
}
inline void LadderBookData::clear_has_buyordersszctdy() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void LadderBookData::clear_buyordersszctdy() {
  if (buyordersszctdy_ != NULL) buyordersszctdy_->::XT::OrdersSzPair::Clear();
  clear_has_buyordersszctdy();
}
inline const ::XT::OrdersSzPair& LadderBookData::buyordersszctdy() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.buyordersszctdy)
  return buyordersszctdy_ != NULL ? *buyordersszctdy_ : *default_instance_->buyordersszctdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_buyordersszctdy() {
  set_has_buyordersszctdy();
  if (buyordersszctdy_ == NULL) {
    buyordersszctdy_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.buyordersszctdy)
  return buyordersszctdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_buyordersszctdy() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.buyordersszctdy)
  clear_has_buyordersszctdy();
  ::XT::OrdersSzPair* temp = buyordersszctdy_;
  buyordersszctdy_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_buyordersszctdy(::XT::OrdersSzPair* buyordersszctdy) {
  delete buyordersszctdy_;
  buyordersszctdy_ = buyordersszctdy;
  if (buyordersszctdy) {
    set_has_buyordersszctdy();
  } else {
    clear_has_buyordersszctdy();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.buyordersszctdy)
}

// optional .XT.OrdersSzPair sellordersszctdy = 56;
inline bool LadderBookData::has_sellordersszctdy() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void LadderBookData::set_has_sellordersszctdy() {
  _has_bits_[1] |= 0x00010000u;
}
inline void LadderBookData::clear_has_sellordersszctdy() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void LadderBookData::clear_sellordersszctdy() {
  if (sellordersszctdy_ != NULL) sellordersszctdy_->::XT::OrdersSzPair::Clear();
  clear_has_sellordersszctdy();
}
inline const ::XT::OrdersSzPair& LadderBookData::sellordersszctdy() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.sellordersszctdy)
  return sellordersszctdy_ != NULL ? *sellordersszctdy_ : *default_instance_->sellordersszctdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_sellordersszctdy() {
  set_has_sellordersszctdy();
  if (sellordersszctdy_ == NULL) {
    sellordersszctdy_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.sellordersszctdy)
  return sellordersszctdy_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_sellordersszctdy() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.sellordersszctdy)
  clear_has_sellordersszctdy();
  ::XT::OrdersSzPair* temp = sellordersszctdy_;
  sellordersszctdy_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_sellordersszctdy(::XT::OrdersSzPair* sellordersszctdy) {
  delete sellordersszctdy_;
  sellordersszctdy_ = sellordersszctdy;
  if (sellordersszctdy) {
    set_has_sellordersszctdy();
  } else {
    clear_has_sellordersszctdy();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.sellordersszctdy)
}

// optional .XT.OrdersSzPair buyordersszoytd = 57;
inline bool LadderBookData::has_buyordersszoytd() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void LadderBookData::set_has_buyordersszoytd() {
  _has_bits_[1] |= 0x00020000u;
}
inline void LadderBookData::clear_has_buyordersszoytd() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void LadderBookData::clear_buyordersszoytd() {
  if (buyordersszoytd_ != NULL) buyordersszoytd_->::XT::OrdersSzPair::Clear();
  clear_has_buyordersszoytd();
}
inline const ::XT::OrdersSzPair& LadderBookData::buyordersszoytd() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.buyordersszoytd)
  return buyordersszoytd_ != NULL ? *buyordersszoytd_ : *default_instance_->buyordersszoytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_buyordersszoytd() {
  set_has_buyordersszoytd();
  if (buyordersszoytd_ == NULL) {
    buyordersszoytd_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.buyordersszoytd)
  return buyordersszoytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_buyordersszoytd() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.buyordersszoytd)
  clear_has_buyordersszoytd();
  ::XT::OrdersSzPair* temp = buyordersszoytd_;
  buyordersszoytd_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_buyordersszoytd(::XT::OrdersSzPair* buyordersszoytd) {
  delete buyordersszoytd_;
  buyordersszoytd_ = buyordersszoytd;
  if (buyordersszoytd) {
    set_has_buyordersszoytd();
  } else {
    clear_has_buyordersszoytd();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.buyordersszoytd)
}

// optional .XT.OrdersSzPair sellordersszoytd = 58;
inline bool LadderBookData::has_sellordersszoytd() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void LadderBookData::set_has_sellordersszoytd() {
  _has_bits_[1] |= 0x00040000u;
}
inline void LadderBookData::clear_has_sellordersszoytd() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void LadderBookData::clear_sellordersszoytd() {
  if (sellordersszoytd_ != NULL) sellordersszoytd_->::XT::OrdersSzPair::Clear();
  clear_has_sellordersszoytd();
}
inline const ::XT::OrdersSzPair& LadderBookData::sellordersszoytd() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.sellordersszoytd)
  return sellordersszoytd_ != NULL ? *sellordersszoytd_ : *default_instance_->sellordersszoytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_sellordersszoytd() {
  set_has_sellordersszoytd();
  if (sellordersszoytd_ == NULL) {
    sellordersszoytd_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.sellordersszoytd)
  return sellordersszoytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_sellordersszoytd() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.sellordersszoytd)
  clear_has_sellordersszoytd();
  ::XT::OrdersSzPair* temp = sellordersszoytd_;
  sellordersszoytd_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_sellordersszoytd(::XT::OrdersSzPair* sellordersszoytd) {
  delete sellordersszoytd_;
  sellordersszoytd_ = sellordersszoytd;
  if (sellordersszoytd) {
    set_has_sellordersszoytd();
  } else {
    clear_has_sellordersszoytd();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.sellordersszoytd)
}

// optional .XT.OrdersSzPair buyordersszcytd = 59;
inline bool LadderBookData::has_buyordersszcytd() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void LadderBookData::set_has_buyordersszcytd() {
  _has_bits_[1] |= 0x00080000u;
}
inline void LadderBookData::clear_has_buyordersszcytd() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void LadderBookData::clear_buyordersszcytd() {
  if (buyordersszcytd_ != NULL) buyordersszcytd_->::XT::OrdersSzPair::Clear();
  clear_has_buyordersszcytd();
}
inline const ::XT::OrdersSzPair& LadderBookData::buyordersszcytd() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.buyordersszcytd)
  return buyordersszcytd_ != NULL ? *buyordersszcytd_ : *default_instance_->buyordersszcytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_buyordersszcytd() {
  set_has_buyordersszcytd();
  if (buyordersszcytd_ == NULL) {
    buyordersszcytd_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.buyordersszcytd)
  return buyordersszcytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_buyordersszcytd() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.buyordersszcytd)
  clear_has_buyordersszcytd();
  ::XT::OrdersSzPair* temp = buyordersszcytd_;
  buyordersszcytd_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_buyordersszcytd(::XT::OrdersSzPair* buyordersszcytd) {
  delete buyordersszcytd_;
  buyordersszcytd_ = buyordersszcytd;
  if (buyordersszcytd) {
    set_has_buyordersszcytd();
  } else {
    clear_has_buyordersszcytd();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.buyordersszcytd)
}

// optional .XT.OrdersSzPair sellordersszcytd = 60;
inline bool LadderBookData::has_sellordersszcytd() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void LadderBookData::set_has_sellordersszcytd() {
  _has_bits_[1] |= 0x00100000u;
}
inline void LadderBookData::clear_has_sellordersszcytd() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void LadderBookData::clear_sellordersszcytd() {
  if (sellordersszcytd_ != NULL) sellordersszcytd_->::XT::OrdersSzPair::Clear();
  clear_has_sellordersszcytd();
}
inline const ::XT::OrdersSzPair& LadderBookData::sellordersszcytd() const {
  // @@protoc_insertion_point(field_get:XT.LadderBookData.sellordersszcytd)
  return sellordersszcytd_ != NULL ? *sellordersszcytd_ : *default_instance_->sellordersszcytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::mutable_sellordersszcytd() {
  set_has_sellordersszcytd();
  if (sellordersszcytd_ == NULL) {
    sellordersszcytd_ = new ::XT::OrdersSzPair;
  }
  // @@protoc_insertion_point(field_mutable:XT.LadderBookData.sellordersszcytd)
  return sellordersszcytd_;
}
inline ::XT::OrdersSzPair* LadderBookData::release_sellordersszcytd() {
  // @@protoc_insertion_point(field_release:XT.LadderBookData.sellordersszcytd)
  clear_has_sellordersszcytd();
  ::XT::OrdersSzPair* temp = sellordersszcytd_;
  sellordersszcytd_ = NULL;
  return temp;
}
inline void LadderBookData::set_allocated_sellordersszcytd(::XT::OrdersSzPair* sellordersszcytd) {
  delete sellordersszcytd_;
  sellordersszcytd_ = sellordersszcytd;
  if (sellordersszcytd) {
    set_has_sellordersszcytd();
  } else {
    clear_has_sellordersszcytd();
  }
  // @@protoc_insertion_point(field_set_allocated:XT.LadderBookData.sellordersszcytd)
}

// map<int32, int64> oid2openszmap = 61;
inline int LadderBookData::oid2openszmap_size() const {
  return oid2openszmap_.size();
}
inline void LadderBookData::clear_oid2openszmap() {
  oid2openszmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
LadderBookData::oid2openszmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderBookData.oid2openszmap)
  return oid2openszmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
LadderBookData::mutable_oid2openszmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderBookData.oid2openszmap)
  return oid2openszmap_.MutableMap();
}

// map<int32, int64> qid2bidopenszmap = 66;
inline int LadderBookData::qid2bidopenszmap_size() const {
  return qid2bidopenszmap_.size();
}
inline void LadderBookData::clear_qid2bidopenszmap() {
  qid2bidopenszmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
LadderBookData::qid2bidopenszmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderBookData.qid2bidopenszmap)
  return qid2bidopenszmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
LadderBookData::mutable_qid2bidopenszmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderBookData.qid2bidopenszmap)
  return qid2bidopenszmap_.MutableMap();
}

// map<int32, int64> qid2askopenszmap = 67;
inline int LadderBookData::qid2askopenszmap_size() const {
  return qid2askopenszmap_.size();
}
inline void LadderBookData::clear_qid2askopenszmap() {
  qid2askopenszmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
LadderBookData::qid2askopenszmap() const {
  // @@protoc_insertion_point(field_map:XT.LadderBookData.qid2askopenszmap)
  return qid2askopenszmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
LadderBookData::mutable_qid2askopenszmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.LadderBookData.qid2askopenszmap)
  return qid2askopenszmap_.MutableMap();
}

// -------------------------------------------------------------------

// DayData

// optional int32 tradingday = 1 [default = 0];
inline bool DayData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 DayData::tradingday() const {
  // @@protoc_insertion_point(field_get:XT.DayData.tradingday)
  return tradingday_;
}
inline void DayData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.tradingday)
}

// optional int32 prevtradingday = 2 [default = 0];
inline bool DayData::has_prevtradingday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DayData::set_has_prevtradingday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DayData::clear_has_prevtradingday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DayData::clear_prevtradingday() {
  prevtradingday_ = 0;
  clear_has_prevtradingday();
}
inline ::google::protobuf::int32 DayData::prevtradingday() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevtradingday)
  return prevtradingday_;
}
inline void DayData::set_prevtradingday(::google::protobuf::int32 value) {
  set_has_prevtradingday();
  prevtradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevtradingday)
}

// optional int32 hasprevsettle = 3 [default = 0];
inline bool DayData::has_hasprevsettle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DayData::set_has_hasprevsettle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DayData::clear_has_hasprevsettle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DayData::clear_hasprevsettle() {
  hasprevsettle_ = 0;
  clear_has_hasprevsettle();
}
inline ::google::protobuf::int32 DayData::hasprevsettle() const {
  // @@protoc_insertion_point(field_get:XT.DayData.hasprevsettle)
  return hasprevsettle_;
}
inline void DayData::set_hasprevsettle(::google::protobuf::int32 value) {
  set_has_hasprevsettle();
  hasprevsettle_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.hasprevsettle)
}

// optional double prevsettlepx = 4 [default = 0];
inline bool DayData::has_prevsettlepx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DayData::set_has_prevsettlepx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DayData::clear_has_prevsettlepx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DayData::clear_prevsettlepx() {
  prevsettlepx_ = 0;
  clear_has_prevsettlepx();
}
inline double DayData::prevsettlepx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevsettlepx)
  return prevsettlepx_;
}
inline void DayData::set_prevsettlepx(double value) {
  set_has_prevsettlepx();
  prevsettlepx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevsettlepx)
}

// optional int32 hasprevclose = 5 [default = 0];
inline bool DayData::has_hasprevclose() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DayData::set_has_hasprevclose() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DayData::clear_has_hasprevclose() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DayData::clear_hasprevclose() {
  hasprevclose_ = 0;
  clear_has_hasprevclose();
}
inline ::google::protobuf::int32 DayData::hasprevclose() const {
  // @@protoc_insertion_point(field_get:XT.DayData.hasprevclose)
  return hasprevclose_;
}
inline void DayData::set_hasprevclose(::google::protobuf::int32 value) {
  set_has_hasprevclose();
  hasprevclose_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.hasprevclose)
}

// optional double prevclosepx = 6 [default = 0];
inline bool DayData::has_prevclosepx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DayData::set_has_prevclosepx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DayData::clear_has_prevclosepx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DayData::clear_prevclosepx() {
  prevclosepx_ = 0;
  clear_has_prevclosepx();
}
inline double DayData::prevclosepx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevclosepx)
  return prevclosepx_;
}
inline void DayData::set_prevclosepx(double value) {
  set_has_prevclosepx();
  prevclosepx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevclosepx)
}

// optional int32 hasprevtot = 7 [default = 0];
inline bool DayData::has_hasprevtot() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DayData::set_has_hasprevtot() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DayData::clear_has_hasprevtot() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DayData::clear_hasprevtot() {
  hasprevtot_ = 0;
  clear_has_hasprevtot();
}
inline ::google::protobuf::int32 DayData::hasprevtot() const {
  // @@protoc_insertion_point(field_get:XT.DayData.hasprevtot)
  return hasprevtot_;
}
inline void DayData::set_hasprevtot(::google::protobuf::int32 value) {
  set_has_hasprevtot();
  hasprevtot_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.hasprevtot)
}

// optional int64 prevtotvolume = 8 [default = 0];
inline bool DayData::has_prevtotvolume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DayData::set_has_prevtotvolume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DayData::clear_has_prevtotvolume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DayData::clear_prevtotvolume() {
  prevtotvolume_ = GOOGLE_LONGLONG(0);
  clear_has_prevtotvolume();
}
inline ::google::protobuf::int64 DayData::prevtotvolume() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevtotvolume)
  return prevtotvolume_;
}
inline void DayData::set_prevtotvolume(::google::protobuf::int64 value) {
  set_has_prevtotvolume();
  prevtotvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevtotvolume)
}

// optional double prevtotamount = 9 [default = 0];
inline bool DayData::has_prevtotamount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DayData::set_has_prevtotamount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DayData::clear_has_prevtotamount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DayData::clear_prevtotamount() {
  prevtotamount_ = 0;
  clear_has_prevtotamount();
}
inline double DayData::prevtotamount() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevtotamount)
  return prevtotamount_;
}
inline void DayData::set_prevtotamount(double value) {
  set_has_prevtotamount();
  prevtotamount_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevtotamount)
}

// optional int64 prevtotoi = 10 [default = 0];
inline bool DayData::has_prevtotoi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DayData::set_has_prevtotoi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DayData::clear_has_prevtotoi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DayData::clear_prevtotoi() {
  prevtotoi_ = GOOGLE_LONGLONG(0);
  clear_has_prevtotoi();
}
inline ::google::protobuf::int64 DayData::prevtotoi() const {
  // @@protoc_insertion_point(field_get:XT.DayData.prevtotoi)
  return prevtotoi_;
}
inline void DayData::set_prevtotoi(::google::protobuf::int64 value) {
  set_has_prevtotoi();
  prevtotoi_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.prevtotoi)
}

// optional int32 haslimitpx = 11 [default = 0];
inline bool DayData::has_haslimitpx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DayData::set_has_haslimitpx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DayData::clear_has_haslimitpx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DayData::clear_haslimitpx() {
  haslimitpx_ = 0;
  clear_has_haslimitpx();
}
inline ::google::protobuf::int32 DayData::haslimitpx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.haslimitpx)
  return haslimitpx_;
}
inline void DayData::set_haslimitpx(::google::protobuf::int32 value) {
  set_has_haslimitpx();
  haslimitpx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.haslimitpx)
}

// optional double lowerlimitpx = 12 [default = 0];
inline bool DayData::has_lowerlimitpx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DayData::set_has_lowerlimitpx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DayData::clear_has_lowerlimitpx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DayData::clear_lowerlimitpx() {
  lowerlimitpx_ = 0;
  clear_has_lowerlimitpx();
}
inline double DayData::lowerlimitpx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.lowerlimitpx)
  return lowerlimitpx_;
}
inline void DayData::set_lowerlimitpx(double value) {
  set_has_lowerlimitpx();
  lowerlimitpx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.lowerlimitpx)
}

// optional double upperlimitpx = 13 [default = 0];
inline bool DayData::has_upperlimitpx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DayData::set_has_upperlimitpx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DayData::clear_has_upperlimitpx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DayData::clear_upperlimitpx() {
  upperlimitpx_ = 0;
  clear_has_upperlimitpx();
}
inline double DayData::upperlimitpx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.upperlimitpx)
  return upperlimitpx_;
}
inline void DayData::set_upperlimitpx(double value) {
  set_has_upperlimitpx();
  upperlimitpx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.upperlimitpx)
}

// optional double openprice = 14 [default = 0];
inline bool DayData::has_openprice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DayData::set_has_openprice() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DayData::clear_has_openprice() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DayData::clear_openprice() {
  openprice_ = 0;
  clear_has_openprice();
}
inline double DayData::openprice() const {
  // @@protoc_insertion_point(field_get:XT.DayData.openprice)
  return openprice_;
}
inline void DayData::set_openprice(double value) {
  set_has_openprice();
  openprice_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.openprice)
}

// optional double highpx = 15 [default = 0];
inline bool DayData::has_highpx() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DayData::set_has_highpx() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DayData::clear_has_highpx() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DayData::clear_highpx() {
  highpx_ = 0;
  clear_has_highpx();
}
inline double DayData::highpx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.highpx)
  return highpx_;
}
inline void DayData::set_highpx(double value) {
  set_has_highpx();
  highpx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.highpx)
}

// optional double lowpx = 16 [default = 0];
inline bool DayData::has_lowpx() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DayData::set_has_lowpx() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DayData::clear_has_lowpx() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DayData::clear_lowpx() {
  lowpx_ = 0;
  clear_has_lowpx();
}
inline double DayData::lowpx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.lowpx)
  return lowpx_;
}
inline void DayData::set_lowpx(double value) {
  set_has_lowpx();
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.lowpx)
}

// optional double closeprice = 17 [default = 0];
inline bool DayData::has_closeprice() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DayData::set_has_closeprice() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DayData::clear_has_closeprice() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DayData::clear_closeprice() {
  closeprice_ = 0;
  clear_has_closeprice();
}
inline double DayData::closeprice() const {
  // @@protoc_insertion_point(field_get:XT.DayData.closeprice)
  return closeprice_;
}
inline void DayData::set_closeprice(double value) {
  set_has_closeprice();
  closeprice_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.closeprice)
}

// optional int64 totvolume = 18 [default = 0];
inline bool DayData::has_totvolume() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DayData::set_has_totvolume() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DayData::clear_has_totvolume() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DayData::clear_totvolume() {
  totvolume_ = GOOGLE_LONGLONG(0);
  clear_has_totvolume();
}
inline ::google::protobuf::int64 DayData::totvolume() const {
  // @@protoc_insertion_point(field_get:XT.DayData.totvolume)
  return totvolume_;
}
inline void DayData::set_totvolume(::google::protobuf::int64 value) {
  set_has_totvolume();
  totvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.totvolume)
}

// optional double totamount = 19 [default = 0];
inline bool DayData::has_totamount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DayData::set_has_totamount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DayData::clear_has_totamount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DayData::clear_totamount() {
  totamount_ = 0;
  clear_has_totamount();
}
inline double DayData::totamount() const {
  // @@protoc_insertion_point(field_get:XT.DayData.totamount)
  return totamount_;
}
inline void DayData::set_totamount(double value) {
  set_has_totamount();
  totamount_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.totamount)
}

// optional int64 totoi = 20 [default = 0];
inline bool DayData::has_totoi() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void DayData::set_has_totoi() {
  _has_bits_[0] |= 0x00080000u;
}
inline void DayData::clear_has_totoi() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void DayData::clear_totoi() {
  totoi_ = GOOGLE_LONGLONG(0);
  clear_has_totoi();
}
inline ::google::protobuf::int64 DayData::totoi() const {
  // @@protoc_insertion_point(field_get:XT.DayData.totoi)
  return totoi_;
}
inline void DayData::set_totoi(::google::protobuf::int64 value) {
  set_has_totoi();
  totoi_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.totoi)
}

// optional double settlepx = 21 [default = 0];
inline bool DayData::has_settlepx() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DayData::set_has_settlepx() {
  _has_bits_[0] |= 0x00100000u;
}
inline void DayData::clear_has_settlepx() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void DayData::clear_settlepx() {
  settlepx_ = 0;
  clear_has_settlepx();
}
inline double DayData::settlepx() const {
  // @@protoc_insertion_point(field_get:XT.DayData.settlepx)
  return settlepx_;
}
inline void DayData::set_settlepx(double value) {
  set_has_settlepx();
  settlepx_ = value;
  // @@protoc_insertion_point(field_set:XT.DayData.settlepx)
}

// -------------------------------------------------------------------

// BarData

// optional string instrid = 1 [default = ""];
inline bool BarData::has_instrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BarData::set_has_instrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BarData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BarData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& BarData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.BarData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.BarData.instrid)
}
inline void BarData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.BarData.instrid)
}
inline void BarData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.BarData.instrid)
}
inline ::std::string* BarData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.BarData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BarData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.BarData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.BarData.instrid)
}

// optional int64 begindt = 2 [default = 0];
inline bool BarData::has_begindt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BarData::set_has_begindt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BarData::clear_has_begindt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BarData::clear_begindt() {
  begindt_ = GOOGLE_LONGLONG(0);
  clear_has_begindt();
}
inline ::google::protobuf::int64 BarData::begindt() const {
  // @@protoc_insertion_point(field_get:XT.BarData.begindt)
  return begindt_;
}
inline void BarData::set_begindt(::google::protobuf::int64 value) {
  set_has_begindt();
  begindt_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.begindt)
}

// optional string begindtstr = 3 [default = ""];
inline bool BarData::has_begindtstr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BarData::set_has_begindtstr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BarData::clear_has_begindtstr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BarData::clear_begindtstr() {
  begindtstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_begindtstr();
}
inline const ::std::string& BarData::begindtstr() const {
  // @@protoc_insertion_point(field_get:XT.BarData.begindtstr)
  return begindtstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_begindtstr(const ::std::string& value) {
  set_has_begindtstr();
  begindtstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.BarData.begindtstr)
}
inline void BarData::set_begindtstr(const char* value) {
  set_has_begindtstr();
  begindtstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.BarData.begindtstr)
}
inline void BarData::set_begindtstr(const char* value, size_t size) {
  set_has_begindtstr();
  begindtstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.BarData.begindtstr)
}
inline ::std::string* BarData::mutable_begindtstr() {
  set_has_begindtstr();
  // @@protoc_insertion_point(field_mutable:XT.BarData.begindtstr)
  return begindtstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BarData::release_begindtstr() {
  // @@protoc_insertion_point(field_release:XT.BarData.begindtstr)
  clear_has_begindtstr();
  return begindtstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_allocated_begindtstr(::std::string* begindtstr) {
  if (begindtstr != NULL) {
    set_has_begindtstr();
  } else {
    clear_has_begindtstr();
  }
  begindtstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begindtstr);
  // @@protoc_insertion_point(field_set_allocated:XT.BarData.begindtstr)
}

// optional int64 enddt = 4;
inline bool BarData::has_enddt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BarData::set_has_enddt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BarData::clear_has_enddt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BarData::clear_enddt() {
  enddt_ = GOOGLE_LONGLONG(0);
  clear_has_enddt();
}
inline ::google::protobuf::int64 BarData::enddt() const {
  // @@protoc_insertion_point(field_get:XT.BarData.enddt)
  return enddt_;
}
inline void BarData::set_enddt(::google::protobuf::int64 value) {
  set_has_enddt();
  enddt_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.enddt)
}

// optional double openprice = 5;
inline bool BarData::has_openprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BarData::set_has_openprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BarData::clear_has_openprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BarData::clear_openprice() {
  openprice_ = 0;
  clear_has_openprice();
}
inline double BarData::openprice() const {
  // @@protoc_insertion_point(field_get:XT.BarData.openprice)
  return openprice_;
}
inline void BarData::set_openprice(double value) {
  set_has_openprice();
  openprice_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.openprice)
}

// optional double highpx = 6;
inline bool BarData::has_highpx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BarData::set_has_highpx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BarData::clear_has_highpx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BarData::clear_highpx() {
  highpx_ = 0;
  clear_has_highpx();
}
inline double BarData::highpx() const {
  // @@protoc_insertion_point(field_get:XT.BarData.highpx)
  return highpx_;
}
inline void BarData::set_highpx(double value) {
  set_has_highpx();
  highpx_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.highpx)
}

// optional double lowpx = 7;
inline bool BarData::has_lowpx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BarData::set_has_lowpx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BarData::clear_has_lowpx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BarData::clear_lowpx() {
  lowpx_ = 0;
  clear_has_lowpx();
}
inline double BarData::lowpx() const {
  // @@protoc_insertion_point(field_get:XT.BarData.lowpx)
  return lowpx_;
}
inline void BarData::set_lowpx(double value) {
  set_has_lowpx();
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.lowpx)
}

// optional double closeprice = 8;
inline bool BarData::has_closeprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BarData::set_has_closeprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BarData::clear_has_closeprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BarData::clear_closeprice() {
  closeprice_ = 0;
  clear_has_closeprice();
}
inline double BarData::closeprice() const {
  // @@protoc_insertion_point(field_get:XT.BarData.closeprice)
  return closeprice_;
}
inline void BarData::set_closeprice(double value) {
  set_has_closeprice();
  closeprice_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.closeprice)
}

// optional int64 volume = 9;
inline bool BarData::has_volume() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BarData::set_has_volume() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BarData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BarData::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 BarData::volume() const {
  // @@protoc_insertion_point(field_get:XT.BarData.volume)
  return volume_;
}
inline void BarData::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.volume)
}

// optional int64 oichg = 10;
inline bool BarData::has_oichg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BarData::set_has_oichg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BarData::clear_has_oichg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BarData::clear_oichg() {
  oichg_ = GOOGLE_LONGLONG(0);
  clear_has_oichg();
}
inline ::google::protobuf::int64 BarData::oichg() const {
  // @@protoc_insertion_point(field_get:XT.BarData.oichg)
  return oichg_;
}
inline void BarData::set_oichg(::google::protobuf::int64 value) {
  set_has_oichg();
  oichg_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.oichg)
}

// optional int64 bsvoldiff = 11;
inline bool BarData::has_bsvoldiff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BarData::set_has_bsvoldiff() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BarData::clear_has_bsvoldiff() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BarData::clear_bsvoldiff() {
  bsvoldiff_ = GOOGLE_LONGLONG(0);
  clear_has_bsvoldiff();
}
inline ::google::protobuf::int64 BarData::bsvoldiff() const {
  // @@protoc_insertion_point(field_get:XT.BarData.bsvoldiff)
  return bsvoldiff_;
}
inline void BarData::set_bsvoldiff(::google::protobuf::int64 value) {
  set_has_bsvoldiff();
  bsvoldiff_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.bsvoldiff)
}

// optional double amount = 12;
inline bool BarData::has_amount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BarData::set_has_amount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BarData::clear_has_amount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BarData::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline double BarData::amount() const {
  // @@protoc_insertion_point(field_get:XT.BarData.amount)
  return amount_;
}
inline void BarData::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.amount)
}

// optional double bsadiff = 13;
inline bool BarData::has_bsadiff() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BarData::set_has_bsadiff() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BarData::clear_has_bsadiff() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BarData::clear_bsadiff() {
  bsadiff_ = 0;
  clear_has_bsadiff();
}
inline double BarData::bsadiff() const {
  // @@protoc_insertion_point(field_get:XT.BarData.bsadiff)
  return bsadiff_;
}
inline void BarData::set_bsadiff(double value) {
  set_has_bsadiff();
  bsadiff_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.bsadiff)
}

// optional double flipups = 14;
inline bool BarData::has_flipups() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BarData::set_has_flipups() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BarData::clear_has_flipups() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BarData::clear_flipups() {
  flipups_ = 0;
  clear_has_flipups();
}
inline double BarData::flipups() const {
  // @@protoc_insertion_point(field_get:XT.BarData.flipups)
  return flipups_;
}
inline void BarData::set_flipups(double value) {
  set_has_flipups();
  flipups_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.flipups)
}

// optional double flipdns = 15;
inline bool BarData::has_flipdns() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BarData::set_has_flipdns() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BarData::clear_has_flipdns() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BarData::clear_flipdns() {
  flipdns_ = 0;
  clear_has_flipdns();
}
inline double BarData::flipdns() const {
  // @@protoc_insertion_point(field_get:XT.BarData.flipdns)
  return flipdns_;
}
inline void BarData::set_flipdns(double value) {
  set_has_flipdns();
  flipdns_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.flipdns)
}

// optional int32 flag = 16;
inline bool BarData::has_flag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BarData::set_has_flag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BarData::clear_has_flag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BarData::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 BarData::flag() const {
  // @@protoc_insertion_point(field_get:XT.BarData.flag)
  return flag_;
}
inline void BarData::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:XT.BarData.flag)
}

// optional string tagdata = 17;
inline bool BarData::has_tagdata() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BarData::set_has_tagdata() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BarData::clear_has_tagdata() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BarData::clear_tagdata() {
  tagdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagdata();
}
inline const ::std::string& BarData::tagdata() const {
  // @@protoc_insertion_point(field_get:XT.BarData.tagdata)
  return tagdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_tagdata(const ::std::string& value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.BarData.tagdata)
}
inline void BarData::set_tagdata(const char* value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.BarData.tagdata)
}
inline void BarData::set_tagdata(const char* value, size_t size) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.BarData.tagdata)
}
inline ::std::string* BarData::mutable_tagdata() {
  set_has_tagdata();
  // @@protoc_insertion_point(field_mutable:XT.BarData.tagdata)
  return tagdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BarData::release_tagdata() {
  // @@protoc_insertion_point(field_release:XT.BarData.tagdata)
  clear_has_tagdata();
  return tagdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BarData::set_allocated_tagdata(::std::string* tagdata) {
  if (tagdata != NULL) {
    set_has_tagdata();
  } else {
    clear_has_tagdata();
  }
  tagdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagdata);
  // @@protoc_insertion_point(field_set_allocated:XT.BarData.tagdata)
}

// -------------------------------------------------------------------

// BarDataMap

// optional int32 span = 1;
inline bool BarDataMap::has_span() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BarDataMap::set_has_span() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BarDataMap::clear_has_span() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BarDataMap::clear_span() {
  span_ = 0;
  clear_has_span();
}
inline ::google::protobuf::int32 BarDataMap::span() const {
  // @@protoc_insertion_point(field_get:XT.BarDataMap.span)
  return span_;
}
inline void BarDataMap::set_span(::google::protobuf::int32 value) {
  set_has_span();
  span_ = value;
  // @@protoc_insertion_point(field_set:XT.BarDataMap.span)
}

// optional int64 spandt = 2;
inline bool BarDataMap::has_spandt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BarDataMap::set_has_spandt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BarDataMap::clear_has_spandt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BarDataMap::clear_spandt() {
  spandt_ = GOOGLE_LONGLONG(0);
  clear_has_spandt();
}
inline ::google::protobuf::int64 BarDataMap::spandt() const {
  // @@protoc_insertion_point(field_get:XT.BarDataMap.spandt)
  return spandt_;
}
inline void BarDataMap::set_spandt(::google::protobuf::int64 value) {
  set_has_spandt();
  spandt_ = value;
  // @@protoc_insertion_point(field_set:XT.BarDataMap.spandt)
}

// optional int32 rollingtype = 3;
inline bool BarDataMap::has_rollingtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BarDataMap::set_has_rollingtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BarDataMap::clear_has_rollingtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BarDataMap::clear_rollingtype() {
  rollingtype_ = 0;
  clear_has_rollingtype();
}
inline ::google::protobuf::int32 BarDataMap::rollingtype() const {
  // @@protoc_insertion_point(field_get:XT.BarDataMap.rollingtype)
  return rollingtype_;
}
inline void BarDataMap::set_rollingtype(::google::protobuf::int32 value) {
  set_has_rollingtype();
  rollingtype_ = value;
  // @@protoc_insertion_point(field_set:XT.BarDataMap.rollingtype)
}

// optional int32 dttype = 4;
inline bool BarDataMap::has_dttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BarDataMap::set_has_dttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BarDataMap::clear_has_dttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BarDataMap::clear_dttype() {
  dttype_ = 0;
  clear_has_dttype();
}
inline ::google::protobuf::int32 BarDataMap::dttype() const {
  // @@protoc_insertion_point(field_get:XT.BarDataMap.dttype)
  return dttype_;
}
inline void BarDataMap::set_dttype(::google::protobuf::int32 value) {
  set_has_dttype();
  dttype_ = value;
  // @@protoc_insertion_point(field_set:XT.BarDataMap.dttype)
}

// optional int64 lastts = 5;
inline bool BarDataMap::has_lastts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BarDataMap::set_has_lastts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BarDataMap::clear_has_lastts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BarDataMap::clear_lastts() {
  lastts_ = GOOGLE_LONGLONG(0);
  clear_has_lastts();
}
inline ::google::protobuf::int64 BarDataMap::lastts() const {
  // @@protoc_insertion_point(field_get:XT.BarDataMap.lastts)
  return lastts_;
}
inline void BarDataMap::set_lastts(::google::protobuf::int64 value) {
  set_has_lastts();
  lastts_ = value;
  // @@protoc_insertion_point(field_set:XT.BarDataMap.lastts)
}

// map<int64, .XT.BarData> tstobardatamap = 10;
inline int BarDataMap::tstobardatamap_size() const {
  return tstobardatamap_.size();
}
inline void BarDataMap::clear_tstobardatamap() {
  tstobardatamap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::XT::BarData >&
BarDataMap::tstobardatamap() const {
  // @@protoc_insertion_point(field_map:XT.BarDataMap.tstobardatamap)
  return tstobardatamap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::XT::BarData >*
BarDataMap::mutable_tstobardatamap() {
  // @@protoc_insertion_point(field_mutable_map:XT.BarDataMap.tstobardatamap)
  return tstobardatamap_.MutableMap();
}

// map<int32, int64> idxtotsmap = 11;
inline int BarDataMap::idxtotsmap_size() const {
  return idxtotsmap_.size();
}
inline void BarDataMap::clear_idxtotsmap() {
  idxtotsmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
BarDataMap::idxtotsmap() const {
  // @@protoc_insertion_point(field_map:XT.BarDataMap.idxtotsmap)
  return idxtotsmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
BarDataMap::mutable_idxtotsmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.BarDataMap.idxtotsmap)
  return idxtotsmap_.MutableMap();
}

// map<int64, int32> tstoidxmap = 12;
inline int BarDataMap::tstoidxmap_size() const {
  return tstoidxmap_.size();
}
inline void BarDataMap::clear_tstoidxmap() {
  tstoidxmap_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
BarDataMap::tstoidxmap() const {
  // @@protoc_insertion_point(field_map:XT.BarDataMap.tstoidxmap)
  return tstoidxmap_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
BarDataMap::mutable_tstoidxmap() {
  // @@protoc_insertion_point(field_mutable_map:XT.BarDataMap.tstoidxmap)
  return tstoidxmap_.MutableMap();
}

// -------------------------------------------------------------------

// ProductInfo

// optional string exchid = 1;
inline bool ProductInfo::has_exchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductInfo::set_has_exchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductInfo::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductInfo::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& ProductInfo::exchid() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ProductInfo.exchid)
}
inline void ProductInfo::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ProductInfo.exchid)
}
inline void ProductInfo::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ProductInfo.exchid)
}
inline ::std::string* ProductInfo::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.ProductInfo.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.ProductInfo.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.ProductInfo.exchid)
}

// optional string securitytype = 2;
inline bool ProductInfo::has_securitytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductInfo::set_has_securitytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductInfo::clear_has_securitytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductInfo::clear_securitytype() {
  securitytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_securitytype();
}
inline const ::std::string& ProductInfo::securitytype() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.securitytype)
  return securitytype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_securitytype(const ::std::string& value) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ProductInfo.securitytype)
}
inline void ProductInfo::set_securitytype(const char* value) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ProductInfo.securitytype)
}
inline void ProductInfo::set_securitytype(const char* value, size_t size) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ProductInfo.securitytype)
}
inline ::std::string* ProductInfo::mutable_securitytype() {
  set_has_securitytype();
  // @@protoc_insertion_point(field_mutable:XT.ProductInfo.securitytype)
  return securitytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_securitytype() {
  // @@protoc_insertion_point(field_release:XT.ProductInfo.securitytype)
  clear_has_securitytype();
  return securitytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_securitytype(::std::string* securitytype) {
  if (securitytype != NULL) {
    set_has_securitytype();
  } else {
    clear_has_securitytype();
  }
  securitytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytype);
  // @@protoc_insertion_point(field_set_allocated:XT.ProductInfo.securitytype)
}

// optional string productid = 3;
inline bool ProductInfo::has_productid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductInfo::set_has_productid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductInfo::clear_has_productid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductInfo::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& ProductInfo::productid() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ProductInfo.productid)
}
inline void ProductInfo::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ProductInfo.productid)
}
inline void ProductInfo::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ProductInfo.productid)
}
inline ::std::string* ProductInfo::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.ProductInfo.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_productid() {
  // @@protoc_insertion_point(field_release:XT.ProductInfo.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.ProductInfo.productid)
}

// optional string underlyingsymbol = 4;
inline bool ProductInfo::has_underlyingsymbol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductInfo::set_has_underlyingsymbol() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductInfo::clear_has_underlyingsymbol() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductInfo::clear_underlyingsymbol() {
  underlyingsymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_underlyingsymbol();
}
inline const ::std::string& ProductInfo::underlyingsymbol() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.underlyingsymbol)
  return underlyingsymbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_underlyingsymbol(const ::std::string& value) {
  set_has_underlyingsymbol();
  underlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ProductInfo.underlyingsymbol)
}
inline void ProductInfo::set_underlyingsymbol(const char* value) {
  set_has_underlyingsymbol();
  underlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ProductInfo.underlyingsymbol)
}
inline void ProductInfo::set_underlyingsymbol(const char* value, size_t size) {
  set_has_underlyingsymbol();
  underlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ProductInfo.underlyingsymbol)
}
inline ::std::string* ProductInfo::mutable_underlyingsymbol() {
  set_has_underlyingsymbol();
  // @@protoc_insertion_point(field_mutable:XT.ProductInfo.underlyingsymbol)
  return underlyingsymbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_underlyingsymbol() {
  // @@protoc_insertion_point(field_release:XT.ProductInfo.underlyingsymbol)
  clear_has_underlyingsymbol();
  return underlyingsymbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_underlyingsymbol(::std::string* underlyingsymbol) {
  if (underlyingsymbol != NULL) {
    set_has_underlyingsymbol();
  } else {
    clear_has_underlyingsymbol();
  }
  underlyingsymbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlyingsymbol);
  // @@protoc_insertion_point(field_set_allocated:XT.ProductInfo.underlyingsymbol)
}

// optional double pricetick = 5;
inline bool ProductInfo::has_pricetick() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProductInfo::set_has_pricetick() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProductInfo::clear_has_pricetick() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProductInfo::clear_pricetick() {
  pricetick_ = 0;
  clear_has_pricetick();
}
inline double ProductInfo::pricetick() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.pricetick)
  return pricetick_;
}
inline void ProductInfo::set_pricetick(double value) {
  set_has_pricetick();
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:XT.ProductInfo.pricetick)
}

// optional double contractmultiplier = 6;
inline bool ProductInfo::has_contractmultiplier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProductInfo::set_has_contractmultiplier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProductInfo::clear_has_contractmultiplier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProductInfo::clear_contractmultiplier() {
  contractmultiplier_ = 0;
  clear_has_contractmultiplier();
}
inline double ProductInfo::contractmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.contractmultiplier)
  return contractmultiplier_;
}
inline void ProductInfo::set_contractmultiplier(double value) {
  set_has_contractmultiplier();
  contractmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.ProductInfo.contractmultiplier)
}

// optional string tagdata = 7;
inline bool ProductInfo::has_tagdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProductInfo::set_has_tagdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProductInfo::clear_has_tagdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProductInfo::clear_tagdata() {
  tagdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagdata();
}
inline const ::std::string& ProductInfo::tagdata() const {
  // @@protoc_insertion_point(field_get:XT.ProductInfo.tagdata)
  return tagdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_tagdata(const ::std::string& value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.ProductInfo.tagdata)
}
inline void ProductInfo::set_tagdata(const char* value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.ProductInfo.tagdata)
}
inline void ProductInfo::set_tagdata(const char* value, size_t size) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.ProductInfo.tagdata)
}
inline ::std::string* ProductInfo::mutable_tagdata() {
  set_has_tagdata();
  // @@protoc_insertion_point(field_mutable:XT.ProductInfo.tagdata)
  return tagdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_tagdata() {
  // @@protoc_insertion_point(field_release:XT.ProductInfo.tagdata)
  clear_has_tagdata();
  return tagdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_tagdata(::std::string* tagdata) {
  if (tagdata != NULL) {
    set_has_tagdata();
  } else {
    clear_has_tagdata();
  }
  tagdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagdata);
  // @@protoc_insertion_point(field_set_allocated:XT.ProductInfo.tagdata)
}

// -------------------------------------------------------------------

// InstrumentInfo

// optional string exchid = 1;
inline bool InstrumentInfo::has_exchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstrumentInfo::set_has_exchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstrumentInfo::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstrumentInfo::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& InstrumentInfo::exchid() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.exchid)
}
inline void InstrumentInfo::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrumentInfo.exchid)
}
inline void InstrumentInfo::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrumentInfo.exchid)
}
inline ::std::string* InstrumentInfo::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.InstrumentInfo.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrumentInfo::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.InstrumentInfo.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrumentInfo.exchid)
}

// optional string instrid = 2;
inline bool InstrumentInfo::has_instrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstrumentInfo::set_has_instrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstrumentInfo::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstrumentInfo::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& InstrumentInfo::instrid() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.instrid)
}
inline void InstrumentInfo::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrumentInfo.instrid)
}
inline void InstrumentInfo::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrumentInfo.instrid)
}
inline ::std::string* InstrumentInfo::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.InstrumentInfo.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrumentInfo::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.InstrumentInfo.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrumentInfo.instrid)
}

// optional string securitytype = 3;
inline bool InstrumentInfo::has_securitytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstrumentInfo::set_has_securitytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstrumentInfo::clear_has_securitytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstrumentInfo::clear_securitytype() {
  securitytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_securitytype();
}
inline const ::std::string& InstrumentInfo::securitytype() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.securitytype)
  return securitytype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_securitytype(const ::std::string& value) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.securitytype)
}
inline void InstrumentInfo::set_securitytype(const char* value) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrumentInfo.securitytype)
}
inline void InstrumentInfo::set_securitytype(const char* value, size_t size) {
  set_has_securitytype();
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrumentInfo.securitytype)
}
inline ::std::string* InstrumentInfo::mutable_securitytype() {
  set_has_securitytype();
  // @@protoc_insertion_point(field_mutable:XT.InstrumentInfo.securitytype)
  return securitytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrumentInfo::release_securitytype() {
  // @@protoc_insertion_point(field_release:XT.InstrumentInfo.securitytype)
  clear_has_securitytype();
  return securitytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_allocated_securitytype(::std::string* securitytype) {
  if (securitytype != NULL) {
    set_has_securitytype();
  } else {
    clear_has_securitytype();
  }
  securitytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytype);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrumentInfo.securitytype)
}

// optional string productid = 4;
inline bool InstrumentInfo::has_productid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstrumentInfo::set_has_productid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstrumentInfo::clear_has_productid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstrumentInfo::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& InstrumentInfo::productid() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.productid)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.productid)
}
inline void InstrumentInfo::set_productid(const char* value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrumentInfo.productid)
}
inline void InstrumentInfo::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrumentInfo.productid)
}
inline ::std::string* InstrumentInfo::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:XT.InstrumentInfo.productid)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrumentInfo::release_productid() {
  // @@protoc_insertion_point(field_release:XT.InstrumentInfo.productid)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrumentInfo.productid)
}

// optional int32 expireintdate = 5;
inline bool InstrumentInfo::has_expireintdate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstrumentInfo::set_has_expireintdate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstrumentInfo::clear_has_expireintdate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstrumentInfo::clear_expireintdate() {
  expireintdate_ = 0;
  clear_has_expireintdate();
}
inline ::google::protobuf::int32 InstrumentInfo::expireintdate() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.expireintdate)
  return expireintdate_;
}
inline void InstrumentInfo::set_expireintdate(::google::protobuf::int32 value) {
  set_has_expireintdate();
  expireintdate_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.expireintdate)
}

// optional int32 callputtype = 6;
inline bool InstrumentInfo::has_callputtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InstrumentInfo::set_has_callputtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InstrumentInfo::clear_has_callputtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InstrumentInfo::clear_callputtype() {
  callputtype_ = 0;
  clear_has_callputtype();
}
inline ::google::protobuf::int32 InstrumentInfo::callputtype() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.callputtype)
  return callputtype_;
}
inline void InstrumentInfo::set_callputtype(::google::protobuf::int32 value) {
  set_has_callputtype();
  callputtype_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.callputtype)
}

// optional double strikeprice = 7;
inline bool InstrumentInfo::has_strikeprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InstrumentInfo::set_has_strikeprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InstrumentInfo::clear_has_strikeprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InstrumentInfo::clear_strikeprice() {
  strikeprice_ = 0;
  clear_has_strikeprice();
}
inline double InstrumentInfo::strikeprice() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.strikeprice)
  return strikeprice_;
}
inline void InstrumentInfo::set_strikeprice(double value) {
  set_has_strikeprice();
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.strikeprice)
}

// optional double pricetick = 8;
inline bool InstrumentInfo::has_pricetick() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InstrumentInfo::set_has_pricetick() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InstrumentInfo::clear_has_pricetick() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InstrumentInfo::clear_pricetick() {
  pricetick_ = 0;
  clear_has_pricetick();
}
inline double InstrumentInfo::pricetick() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.pricetick)
  return pricetick_;
}
inline void InstrumentInfo::set_pricetick(double value) {
  set_has_pricetick();
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.pricetick)
}

// optional double contractmultiplier = 9;
inline bool InstrumentInfo::has_contractmultiplier() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InstrumentInfo::set_has_contractmultiplier() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InstrumentInfo::clear_has_contractmultiplier() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InstrumentInfo::clear_contractmultiplier() {
  contractmultiplier_ = 0;
  clear_has_contractmultiplier();
}
inline double InstrumentInfo::contractmultiplier() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.contractmultiplier)
  return contractmultiplier_;
}
inline void InstrumentInfo::set_contractmultiplier(double value) {
  set_has_contractmultiplier();
  contractmultiplier_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.contractmultiplier)
}

// optional string tagdata = 10;
inline bool InstrumentInfo::has_tagdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InstrumentInfo::set_has_tagdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InstrumentInfo::clear_has_tagdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InstrumentInfo::clear_tagdata() {
  tagdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagdata();
}
inline const ::std::string& InstrumentInfo::tagdata() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentInfo.tagdata)
  return tagdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_tagdata(const ::std::string& value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.InstrumentInfo.tagdata)
}
inline void InstrumentInfo::set_tagdata(const char* value) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.InstrumentInfo.tagdata)
}
inline void InstrumentInfo::set_tagdata(const char* value, size_t size) {
  set_has_tagdata();
  tagdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.InstrumentInfo.tagdata)
}
inline ::std::string* InstrumentInfo::mutable_tagdata() {
  set_has_tagdata();
  // @@protoc_insertion_point(field_mutable:XT.InstrumentInfo.tagdata)
  return tagdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstrumentInfo::release_tagdata() {
  // @@protoc_insertion_point(field_release:XT.InstrumentInfo.tagdata)
  clear_has_tagdata();
  return tagdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstrumentInfo::set_allocated_tagdata(::std::string* tagdata) {
  if (tagdata != NULL) {
    set_has_tagdata();
  } else {
    clear_has_tagdata();
  }
  tagdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagdata);
  // @@protoc_insertion_point(field_set_allocated:XT.InstrumentInfo.tagdata)
}

// -------------------------------------------------------------------

// InstrumentEventInfo

// optional int32 tag = 1;
inline bool InstrumentEventInfo::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstrumentEventInfo::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstrumentEventInfo::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstrumentEventInfo::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 InstrumentEventInfo::tag() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentEventInfo.tag)
  return tag_;
}
inline void InstrumentEventInfo::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentEventInfo.tag)
}

// optional int32 iid = 2;
inline bool InstrumentEventInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstrumentEventInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstrumentEventInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstrumentEventInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 InstrumentEventInfo::iid() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentEventInfo.iid)
  return iid_;
}
inline void InstrumentEventInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentEventInfo.iid)
}

// optional int32 orderid = 3;
inline bool InstrumentEventInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstrumentEventInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstrumentEventInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstrumentEventInfo::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 InstrumentEventInfo::orderid() const {
  // @@protoc_insertion_point(field_get:XT.InstrumentEventInfo.orderid)
  return orderid_;
}
inline void InstrumentEventInfo::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:XT.InstrumentEventInfo.orderid)
}

// -------------------------------------------------------------------

// TAParams

// optional int32 smaPeriod = 1 [default = 12];
inline bool TAParams::has_smaperiod() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAParams::set_has_smaperiod() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAParams::clear_has_smaperiod() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAParams::clear_smaperiod() {
  smaperiod_ = 12;
  clear_has_smaperiod();
}
inline ::google::protobuf::int32 TAParams::smaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.smaPeriod)
  return smaperiod_;
}
inline void TAParams::set_smaperiod(::google::protobuf::int32 value) {
  set_has_smaperiod();
  smaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.smaPeriod)
}

// optional int32 smaMidPeriod = 2 [default = 12];
inline bool TAParams::has_smamidperiod() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAParams::set_has_smamidperiod() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAParams::clear_has_smamidperiod() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAParams::clear_smamidperiod() {
  smamidperiod_ = 12;
  clear_has_smamidperiod();
}
inline ::google::protobuf::int32 TAParams::smamidperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.smaMidPeriod)
  return smamidperiod_;
}
inline void TAParams::set_smamidperiod(::google::protobuf::int32 value) {
  set_has_smamidperiod();
  smamidperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.smaMidPeriod)
}

// optional int32 smaFastPeriod = 3 [default = 12];
inline bool TAParams::has_smafastperiod() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAParams::set_has_smafastperiod() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAParams::clear_has_smafastperiod() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAParams::clear_smafastperiod() {
  smafastperiod_ = 12;
  clear_has_smafastperiod();
}
inline ::google::protobuf::int32 TAParams::smafastperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.smaFastPeriod)
  return smafastperiod_;
}
inline void TAParams::set_smafastperiod(::google::protobuf::int32 value) {
  set_has_smafastperiod();
  smafastperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.smaFastPeriod)
}

// optional int32 smaSlowPeriod = 4 [default = 26];
inline bool TAParams::has_smaslowperiod() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAParams::set_has_smaslowperiod() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAParams::clear_has_smaslowperiod() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAParams::clear_smaslowperiod() {
  smaslowperiod_ = 26;
  clear_has_smaslowperiod();
}
inline ::google::protobuf::int32 TAParams::smaslowperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.smaSlowPeriod)
  return smaslowperiod_;
}
inline void TAParams::set_smaslowperiod(::google::protobuf::int32 value) {
  set_has_smaslowperiod();
  smaslowperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.smaSlowPeriod)
}

// optional int32 emaPeriod = 5 [default = 12];
inline bool TAParams::has_emaperiod() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAParams::set_has_emaperiod() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAParams::clear_has_emaperiod() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAParams::clear_emaperiod() {
  emaperiod_ = 12;
  clear_has_emaperiod();
}
inline ::google::protobuf::int32 TAParams::emaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.emaPeriod)
  return emaperiod_;
}
inline void TAParams::set_emaperiod(::google::protobuf::int32 value) {
  set_has_emaperiod();
  emaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.emaPeriod)
}

// optional int32 emaMidPeriod = 6 [default = 12];
inline bool TAParams::has_emamidperiod() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAParams::set_has_emamidperiod() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAParams::clear_has_emamidperiod() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAParams::clear_emamidperiod() {
  emamidperiod_ = 12;
  clear_has_emamidperiod();
}
inline ::google::protobuf::int32 TAParams::emamidperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.emaMidPeriod)
  return emamidperiod_;
}
inline void TAParams::set_emamidperiod(::google::protobuf::int32 value) {
  set_has_emamidperiod();
  emamidperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.emaMidPeriod)
}

// optional int32 emaFastPeriod = 7 [default = 12];
inline bool TAParams::has_emafastperiod() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAParams::set_has_emafastperiod() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAParams::clear_has_emafastperiod() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAParams::clear_emafastperiod() {
  emafastperiod_ = 12;
  clear_has_emafastperiod();
}
inline ::google::protobuf::int32 TAParams::emafastperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.emaFastPeriod)
  return emafastperiod_;
}
inline void TAParams::set_emafastperiod(::google::protobuf::int32 value) {
  set_has_emafastperiod();
  emafastperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.emaFastPeriod)
}

// optional int32 emaSlowPeriod = 8 [default = 26];
inline bool TAParams::has_emaslowperiod() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TAParams::set_has_emaslowperiod() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TAParams::clear_has_emaslowperiod() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TAParams::clear_emaslowperiod() {
  emaslowperiod_ = 26;
  clear_has_emaslowperiod();
}
inline ::google::protobuf::int32 TAParams::emaslowperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.emaSlowPeriod)
  return emaslowperiod_;
}
inline void TAParams::set_emaslowperiod(::google::protobuf::int32 value) {
  set_has_emaslowperiod();
  emaslowperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.emaSlowPeriod)
}

// optional int32 atrPeriod = 9 [default = 14];
inline bool TAParams::has_atrperiod() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TAParams::set_has_atrperiod() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TAParams::clear_has_atrperiod() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TAParams::clear_atrperiod() {
  atrperiod_ = 14;
  clear_has_atrperiod();
}
inline ::google::protobuf::int32 TAParams::atrperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.atrPeriod)
  return atrperiod_;
}
inline void TAParams::set_atrperiod(::google::protobuf::int32 value) {
  set_has_atrperiod();
  atrperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.atrPeriod)
}

// optional int32 rsiPeriod = 10 [default = 14];
inline bool TAParams::has_rsiperiod() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TAParams::set_has_rsiperiod() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TAParams::clear_has_rsiperiod() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TAParams::clear_rsiperiod() {
  rsiperiod_ = 14;
  clear_has_rsiperiod();
}
inline ::google::protobuf::int32 TAParams::rsiperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.rsiPeriod)
  return rsiperiod_;
}
inline void TAParams::set_rsiperiod(::google::protobuf::int32 value) {
  set_has_rsiperiod();
  rsiperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.rsiPeriod)
}

// optional double rsiOverbought = 11 [default = 70];
inline bool TAParams::has_rsioverbought() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TAParams::set_has_rsioverbought() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TAParams::clear_has_rsioverbought() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TAParams::clear_rsioverbought() {
  rsioverbought_ = 70;
  clear_has_rsioverbought();
}
inline double TAParams::rsioverbought() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.rsiOverbought)
  return rsioverbought_;
}
inline void TAParams::set_rsioverbought(double value) {
  set_has_rsioverbought();
  rsioverbought_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.rsiOverbought)
}

// optional double rsiOversold = 12 [default = 30];
inline bool TAParams::has_rsioversold() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TAParams::set_has_rsioversold() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TAParams::clear_has_rsioversold() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TAParams::clear_rsioversold() {
  rsioversold_ = 30;
  clear_has_rsioversold();
}
inline double TAParams::rsioversold() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.rsiOversold)
  return rsioversold_;
}
inline void TAParams::set_rsioversold(double value) {
  set_has_rsioversold();
  rsioversold_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.rsiOversold)
}

// optional int32 mfiPeriod = 13 [default = 14];
inline bool TAParams::has_mfiperiod() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TAParams::set_has_mfiperiod() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TAParams::clear_has_mfiperiod() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TAParams::clear_mfiperiod() {
  mfiperiod_ = 14;
  clear_has_mfiperiod();
}
inline ::google::protobuf::int32 TAParams::mfiperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.mfiPeriod)
  return mfiperiod_;
}
inline void TAParams::set_mfiperiod(::google::protobuf::int32 value) {
  set_has_mfiperiod();
  mfiperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.mfiPeriod)
}

// optional int32 cciPeriod = 14 [default = 20];
inline bool TAParams::has_cciperiod() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TAParams::set_has_cciperiod() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TAParams::clear_has_cciperiod() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TAParams::clear_cciperiod() {
  cciperiod_ = 20;
  clear_has_cciperiod();
}
inline ::google::protobuf::int32 TAParams::cciperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.cciPeriod)
  return cciperiod_;
}
inline void TAParams::set_cciperiod(::google::protobuf::int32 value) {
  set_has_cciperiod();
  cciperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.cciPeriod)
}

// optional double cciOverbought = 15 [default = 1.5];
inline bool TAParams::has_ccioverbought() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TAParams::set_has_ccioverbought() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TAParams::clear_has_ccioverbought() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TAParams::clear_ccioverbought() {
  ccioverbought_ = 1.5;
  clear_has_ccioverbought();
}
inline double TAParams::ccioverbought() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.cciOverbought)
  return ccioverbought_;
}
inline void TAParams::set_ccioverbought(double value) {
  set_has_ccioverbought();
  ccioverbought_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.cciOverbought)
}

// optional double cciOversold = 16 [default = 1.5];
inline bool TAParams::has_ccioversold() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TAParams::set_has_ccioversold() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TAParams::clear_has_ccioversold() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TAParams::clear_ccioversold() {
  ccioversold_ = 1.5;
  clear_has_ccioversold();
}
inline double TAParams::ccioversold() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.cciOversold)
  return ccioversold_;
}
inline void TAParams::set_ccioversold(double value) {
  set_has_ccioversold();
  ccioversold_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.cciOversold)
}

// optional int32 cciMaPeriod = 17 [default = 5];
inline bool TAParams::has_ccimaperiod() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TAParams::set_has_ccimaperiod() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TAParams::clear_has_ccimaperiod() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TAParams::clear_ccimaperiod() {
  ccimaperiod_ = 5;
  clear_has_ccimaperiod();
}
inline ::google::protobuf::int32 TAParams::ccimaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.cciMaPeriod)
  return ccimaperiod_;
}
inline void TAParams::set_ccimaperiod(::google::protobuf::int32 value) {
  set_has_ccimaperiod();
  ccimaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.cciMaPeriod)
}

// optional int32 adxPeriod = 18 [default = 14];
inline bool TAParams::has_adxperiod() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void TAParams::set_has_adxperiod() {
  _has_bits_[0] |= 0x00020000u;
}
inline void TAParams::clear_has_adxperiod() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void TAParams::clear_adxperiod() {
  adxperiod_ = 14;
  clear_has_adxperiod();
}
inline ::google::protobuf::int32 TAParams::adxperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.adxPeriod)
  return adxperiod_;
}
inline void TAParams::set_adxperiod(::google::protobuf::int32 value) {
  set_has_adxperiod();
  adxperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.adxPeriod)
}

// optional int32 macdMAType = 19 [default = 0];
inline bool TAParams::has_macdmatype() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void TAParams::set_has_macdmatype() {
  _has_bits_[0] |= 0x00040000u;
}
inline void TAParams::clear_has_macdmatype() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void TAParams::clear_macdmatype() {
  macdmatype_ = 0;
  clear_has_macdmatype();
}
inline ::google::protobuf::int32 TAParams::macdmatype() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.macdMAType)
  return macdmatype_;
}
inline void TAParams::set_macdmatype(::google::protobuf::int32 value) {
  set_has_macdmatype();
  macdmatype_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.macdMAType)
}

// optional int32 macdFastPeriod = 20 [default = 12];
inline bool TAParams::has_macdfastperiod() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void TAParams::set_has_macdfastperiod() {
  _has_bits_[0] |= 0x00080000u;
}
inline void TAParams::clear_has_macdfastperiod() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void TAParams::clear_macdfastperiod() {
  macdfastperiod_ = 12;
  clear_has_macdfastperiod();
}
inline ::google::protobuf::int32 TAParams::macdfastperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.macdFastPeriod)
  return macdfastperiod_;
}
inline void TAParams::set_macdfastperiod(::google::protobuf::int32 value) {
  set_has_macdfastperiod();
  macdfastperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.macdFastPeriod)
}

// optional int32 macdSlowPeriod = 21 [default = 26];
inline bool TAParams::has_macdslowperiod() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void TAParams::set_has_macdslowperiod() {
  _has_bits_[0] |= 0x00100000u;
}
inline void TAParams::clear_has_macdslowperiod() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void TAParams::clear_macdslowperiod() {
  macdslowperiod_ = 26;
  clear_has_macdslowperiod();
}
inline ::google::protobuf::int32 TAParams::macdslowperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.macdSlowPeriod)
  return macdslowperiod_;
}
inline void TAParams::set_macdslowperiod(::google::protobuf::int32 value) {
  set_has_macdslowperiod();
  macdslowperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.macdSlowPeriod)
}

// optional int32 macdSignalPeriod = 22 [default = 9];
inline bool TAParams::has_macdsignalperiod() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void TAParams::set_has_macdsignalperiod() {
  _has_bits_[0] |= 0x00200000u;
}
inline void TAParams::clear_has_macdsignalperiod() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void TAParams::clear_macdsignalperiod() {
  macdsignalperiod_ = 9;
  clear_has_macdsignalperiod();
}
inline ::google::protobuf::int32 TAParams::macdsignalperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.macdSignalPeriod)
  return macdsignalperiod_;
}
inline void TAParams::set_macdsignalperiod(::google::protobuf::int32 value) {
  set_has_macdsignalperiod();
  macdsignalperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.macdSignalPeriod)
}

// optional int32 macdHistMaPeriod = 23 [default = 5];
inline bool TAParams::has_macdhistmaperiod() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void TAParams::set_has_macdhistmaperiod() {
  _has_bits_[0] |= 0x00400000u;
}
inline void TAParams::clear_has_macdhistmaperiod() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void TAParams::clear_macdhistmaperiod() {
  macdhistmaperiod_ = 5;
  clear_has_macdhistmaperiod();
}
inline ::google::protobuf::int32 TAParams::macdhistmaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.macdHistMaPeriod)
  return macdhistmaperiod_;
}
inline void TAParams::set_macdhistmaperiod(::google::protobuf::int32 value) {
  set_has_macdhistmaperiod();
  macdhistmaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.macdHistMaPeriod)
}

// optional int32 bbPeriod = 24 [default = 20];
inline bool TAParams::has_bbperiod() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void TAParams::set_has_bbperiod() {
  _has_bits_[0] |= 0x00800000u;
}
inline void TAParams::clear_has_bbperiod() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void TAParams::clear_bbperiod() {
  bbperiod_ = 20;
  clear_has_bbperiod();
}
inline ::google::protobuf::int32 TAParams::bbperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bbPeriod)
  return bbperiod_;
}
inline void TAParams::set_bbperiod(::google::protobuf::int32 value) {
  set_has_bbperiod();
  bbperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bbPeriod)
}

// optional int32 volbbPeriod = 25 [default = 20];
inline bool TAParams::has_volbbperiod() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void TAParams::set_has_volbbperiod() {
  _has_bits_[0] |= 0x01000000u;
}
inline void TAParams::clear_has_volbbperiod() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void TAParams::clear_volbbperiod() {
  volbbperiod_ = 20;
  clear_has_volbbperiod();
}
inline ::google::protobuf::int32 TAParams::volbbperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.volbbPeriod)
  return volbbperiod_;
}
inline void TAParams::set_volbbperiod(::google::protobuf::int32 value) {
  set_has_volbbperiod();
  volbbperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.volbbPeriod)
}

// optional int32 bsvdBBPeriod = 26 [default = 20];
inline bool TAParams::has_bsvdbbperiod() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void TAParams::set_has_bsvdbbperiod() {
  _has_bits_[0] |= 0x02000000u;
}
inline void TAParams::clear_has_bsvdbbperiod() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void TAParams::clear_bsvdbbperiod() {
  bsvdbbperiod_ = 20;
  clear_has_bsvdbbperiod();
}
inline ::google::protobuf::int32 TAParams::bsvdbbperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bsvdBBPeriod)
  return bsvdbbperiod_;
}
inline void TAParams::set_bsvdbbperiod(::google::protobuf::int32 value) {
  set_has_bsvdbbperiod();
  bsvdbbperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bsvdBBPeriod)
}

// optional int32 oichgBBPeriod = 27 [default = 20];
inline bool TAParams::has_oichgbbperiod() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void TAParams::set_has_oichgbbperiod() {
  _has_bits_[0] |= 0x04000000u;
}
inline void TAParams::clear_has_oichgbbperiod() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void TAParams::clear_oichgbbperiod() {
  oichgbbperiod_ = 20;
  clear_has_oichgbbperiod();
}
inline ::google::protobuf::int32 TAParams::oichgbbperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.oichgBBPeriod)
  return oichgbbperiod_;
}
inline void TAParams::set_oichgbbperiod(::google::protobuf::int32 value) {
  set_has_oichgbbperiod();
  oichgbbperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.oichgBBPeriod)
}

// optional int32 bbMaPeriod = 28 [default = 20];
inline bool TAParams::has_bbmaperiod() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void TAParams::set_has_bbmaperiod() {
  _has_bits_[0] |= 0x08000000u;
}
inline void TAParams::clear_has_bbmaperiod() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void TAParams::clear_bbmaperiod() {
  bbmaperiod_ = 20;
  clear_has_bbmaperiod();
}
inline ::google::protobuf::int32 TAParams::bbmaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bbMaPeriod)
  return bbmaperiod_;
}
inline void TAParams::set_bbmaperiod(::google::protobuf::int32 value) {
  set_has_bbmaperiod();
  bbmaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bbMaPeriod)
}

// optional int32 volbbMaPeriod = 29 [default = 20];
inline bool TAParams::has_volbbmaperiod() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void TAParams::set_has_volbbmaperiod() {
  _has_bits_[0] |= 0x10000000u;
}
inline void TAParams::clear_has_volbbmaperiod() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void TAParams::clear_volbbmaperiod() {
  volbbmaperiod_ = 20;
  clear_has_volbbmaperiod();
}
inline ::google::protobuf::int32 TAParams::volbbmaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.volbbMaPeriod)
  return volbbmaperiod_;
}
inline void TAParams::set_volbbmaperiod(::google::protobuf::int32 value) {
  set_has_volbbmaperiod();
  volbbmaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.volbbMaPeriod)
}

// optional int32 bsvdBBMaPeriod = 30 [default = 20];
inline bool TAParams::has_bsvdbbmaperiod() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void TAParams::set_has_bsvdbbmaperiod() {
  _has_bits_[0] |= 0x20000000u;
}
inline void TAParams::clear_has_bsvdbbmaperiod() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void TAParams::clear_bsvdbbmaperiod() {
  bsvdbbmaperiod_ = 20;
  clear_has_bsvdbbmaperiod();
}
inline ::google::protobuf::int32 TAParams::bsvdbbmaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bsvdBBMaPeriod)
  return bsvdbbmaperiod_;
}
inline void TAParams::set_bsvdbbmaperiod(::google::protobuf::int32 value) {
  set_has_bsvdbbmaperiod();
  bsvdbbmaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bsvdBBMaPeriod)
}

// optional int32 oichgBBMaPeriod = 31 [default = 20];
inline bool TAParams::has_oichgbbmaperiod() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void TAParams::set_has_oichgbbmaperiod() {
  _has_bits_[0] |= 0x40000000u;
}
inline void TAParams::clear_has_oichgbbmaperiod() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void TAParams::clear_oichgbbmaperiod() {
  oichgbbmaperiod_ = 20;
  clear_has_oichgbbmaperiod();
}
inline ::google::protobuf::int32 TAParams::oichgbbmaperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.oichgBBMaPeriod)
  return oichgbbmaperiod_;
}
inline void TAParams::set_oichgbbmaperiod(::google::protobuf::int32 value) {
  set_has_oichgbbmaperiod();
  oichgbbmaperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.oichgBBMaPeriod)
}

// optional double sarFastAccInit = 32 [default = 0.03];
inline bool TAParams::has_sarfastaccinit() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void TAParams::set_has_sarfastaccinit() {
  _has_bits_[0] |= 0x80000000u;
}
inline void TAParams::clear_has_sarfastaccinit() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void TAParams::clear_sarfastaccinit() {
  sarfastaccinit_ = 0.03;
  clear_has_sarfastaccinit();
}
inline double TAParams::sarfastaccinit() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarFastAccInit)
  return sarfastaccinit_;
}
inline void TAParams::set_sarfastaccinit(double value) {
  set_has_sarfastaccinit();
  sarfastaccinit_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarFastAccInit)
}

// optional double sarFastAccStep = 33 [default = 0.03];
inline bool TAParams::has_sarfastaccstep() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void TAParams::set_has_sarfastaccstep() {
  _has_bits_[1] |= 0x00000001u;
}
inline void TAParams::clear_has_sarfastaccstep() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void TAParams::clear_sarfastaccstep() {
  sarfastaccstep_ = 0.03;
  clear_has_sarfastaccstep();
}
inline double TAParams::sarfastaccstep() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarFastAccStep)
  return sarfastaccstep_;
}
inline void TAParams::set_sarfastaccstep(double value) {
  set_has_sarfastaccstep();
  sarfastaccstep_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarFastAccStep)
}

// optional double sarFastAccMax = 34 [default = 0.3];
inline bool TAParams::has_sarfastaccmax() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void TAParams::set_has_sarfastaccmax() {
  _has_bits_[1] |= 0x00000002u;
}
inline void TAParams::clear_has_sarfastaccmax() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void TAParams::clear_sarfastaccmax() {
  sarfastaccmax_ = 0.3;
  clear_has_sarfastaccmax();
}
inline double TAParams::sarfastaccmax() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarFastAccMax)
  return sarfastaccmax_;
}
inline void TAParams::set_sarfastaccmax(double value) {
  set_has_sarfastaccmax();
  sarfastaccmax_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarFastAccMax)
}

// optional double sarMidAccInit = 35 [default = 0.02];
inline bool TAParams::has_sarmidaccinit() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void TAParams::set_has_sarmidaccinit() {
  _has_bits_[1] |= 0x00000004u;
}
inline void TAParams::clear_has_sarmidaccinit() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void TAParams::clear_sarmidaccinit() {
  sarmidaccinit_ = 0.02;
  clear_has_sarmidaccinit();
}
inline double TAParams::sarmidaccinit() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarMidAccInit)
  return sarmidaccinit_;
}
inline void TAParams::set_sarmidaccinit(double value) {
  set_has_sarmidaccinit();
  sarmidaccinit_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarMidAccInit)
}

// optional double sarMidAccStep = 36 [default = 0.02];
inline bool TAParams::has_sarmidaccstep() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void TAParams::set_has_sarmidaccstep() {
  _has_bits_[1] |= 0x00000008u;
}
inline void TAParams::clear_has_sarmidaccstep() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void TAParams::clear_sarmidaccstep() {
  sarmidaccstep_ = 0.02;
  clear_has_sarmidaccstep();
}
inline double TAParams::sarmidaccstep() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarMidAccStep)
  return sarmidaccstep_;
}
inline void TAParams::set_sarmidaccstep(double value) {
  set_has_sarmidaccstep();
  sarmidaccstep_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarMidAccStep)
}

// optional double sarMidAccMax = 37 [default = 0.2];
inline bool TAParams::has_sarmidaccmax() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void TAParams::set_has_sarmidaccmax() {
  _has_bits_[1] |= 0x00000010u;
}
inline void TAParams::clear_has_sarmidaccmax() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void TAParams::clear_sarmidaccmax() {
  sarmidaccmax_ = 0.2;
  clear_has_sarmidaccmax();
}
inline double TAParams::sarmidaccmax() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarMidAccMax)
  return sarmidaccmax_;
}
inline void TAParams::set_sarmidaccmax(double value) {
  set_has_sarmidaccmax();
  sarmidaccmax_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarMidAccMax)
}

// optional double sarSlowAccInit = 38 [default = 0.01];
inline bool TAParams::has_sarslowaccinit() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void TAParams::set_has_sarslowaccinit() {
  _has_bits_[1] |= 0x00000020u;
}
inline void TAParams::clear_has_sarslowaccinit() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void TAParams::clear_sarslowaccinit() {
  sarslowaccinit_ = 0.01;
  clear_has_sarslowaccinit();
}
inline double TAParams::sarslowaccinit() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarSlowAccInit)
  return sarslowaccinit_;
}
inline void TAParams::set_sarslowaccinit(double value) {
  set_has_sarslowaccinit();
  sarslowaccinit_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarSlowAccInit)
}

// optional double sarSlowAccStep = 39 [default = 0.01];
inline bool TAParams::has_sarslowaccstep() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void TAParams::set_has_sarslowaccstep() {
  _has_bits_[1] |= 0x00000040u;
}
inline void TAParams::clear_has_sarslowaccstep() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void TAParams::clear_sarslowaccstep() {
  sarslowaccstep_ = 0.01;
  clear_has_sarslowaccstep();
}
inline double TAParams::sarslowaccstep() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarSlowAccStep)
  return sarslowaccstep_;
}
inline void TAParams::set_sarslowaccstep(double value) {
  set_has_sarslowaccstep();
  sarslowaccstep_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarSlowAccStep)
}

// optional double sarSlowAccMax = 40 [default = 0.01];
inline bool TAParams::has_sarslowaccmax() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void TAParams::set_has_sarslowaccmax() {
  _has_bits_[1] |= 0x00000080u;
}
inline void TAParams::clear_has_sarslowaccmax() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void TAParams::clear_sarslowaccmax() {
  sarslowaccmax_ = 0.01;
  clear_has_sarslowaccmax();
}
inline double TAParams::sarslowaccmax() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.sarSlowAccMax)
  return sarslowaccmax_;
}
inline void TAParams::set_sarslowaccmax(double value) {
  set_has_sarslowaccmax();
  sarslowaccmax_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.sarSlowAccMax)
}

// optional double bbsarDist = 41 [default = 1.5];
inline bool TAParams::has_bbsardist() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void TAParams::set_has_bbsardist() {
  _has_bits_[1] |= 0x00000100u;
}
inline void TAParams::clear_has_bbsardist() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void TAParams::clear_bbsardist() {
  bbsardist_ = 1.5;
  clear_has_bbsardist();
}
inline double TAParams::bbsardist() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bbsarDist)
  return bbsardist_;
}
inline void TAParams::set_bbsardist(double value) {
  set_has_bbsardist();
  bbsardist_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bbsarDist)
}

// optional double atrsarDist = 42 [default = 1.5];
inline bool TAParams::has_atrsardist() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void TAParams::set_has_atrsardist() {
  _has_bits_[1] |= 0x00000200u;
}
inline void TAParams::clear_has_atrsardist() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void TAParams::clear_atrsardist() {
  atrsardist_ = 1.5;
  clear_has_atrsardist();
}
inline double TAParams::atrsardist() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.atrsarDist)
  return atrsardist_;
}
inline void TAParams::set_atrsardist(double value) {
  set_has_atrsardist();
  atrsardist_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.atrsarDist)
}

// optional int32 bbmidSlopePeriod = 43 [default = 10];
inline bool TAParams::has_bbmidslopeperiod() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void TAParams::set_has_bbmidslopeperiod() {
  _has_bits_[1] |= 0x00000400u;
}
inline void TAParams::clear_has_bbmidslopeperiod() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void TAParams::clear_bbmidslopeperiod() {
  bbmidslopeperiod_ = 10;
  clear_has_bbmidslopeperiod();
}
inline ::google::protobuf::int32 TAParams::bbmidslopeperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.bbmidSlopePeriod)
  return bbmidslopeperiod_;
}
inline void TAParams::set_bbmidslopeperiod(::google::protobuf::int32 value) {
  set_has_bbmidslopeperiod();
  bbmidslopeperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.bbmidSlopePeriod)
}

// optional int32 kbPeriod = 44 [default = 20];
inline bool TAParams::has_kbperiod() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void TAParams::set_has_kbperiod() {
  _has_bits_[1] |= 0x00000800u;
}
inline void TAParams::clear_has_kbperiod() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void TAParams::clear_kbperiod() {
  kbperiod_ = 20;
  clear_has_kbperiod();
}
inline ::google::protobuf::int32 TAParams::kbperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.kbPeriod)
  return kbperiod_;
}
inline void TAParams::set_kbperiod(::google::protobuf::int32 value) {
  set_has_kbperiod();
  kbperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.kbPeriod)
}

// optional int32 slowKPeriod = 45 [default = 14];
inline bool TAParams::has_slowkperiod() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void TAParams::set_has_slowkperiod() {
  _has_bits_[1] |= 0x00001000u;
}
inline void TAParams::clear_has_slowkperiod() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void TAParams::clear_slowkperiod() {
  slowkperiod_ = 14;
  clear_has_slowkperiod();
}
inline ::google::protobuf::int32 TAParams::slowkperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.slowKPeriod)
  return slowkperiod_;
}
inline void TAParams::set_slowkperiod(::google::protobuf::int32 value) {
  set_has_slowkperiod();
  slowkperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.slowKPeriod)
}

// optional int32 slowDPeriod = 46 [default = 3];
inline bool TAParams::has_slowdperiod() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void TAParams::set_has_slowdperiod() {
  _has_bits_[1] |= 0x00002000u;
}
inline void TAParams::clear_has_slowdperiod() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void TAParams::clear_slowdperiod() {
  slowdperiod_ = 3;
  clear_has_slowdperiod();
}
inline ::google::protobuf::int32 TAParams::slowdperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.slowDPeriod)
  return slowdperiod_;
}
inline void TAParams::set_slowdperiod(::google::protobuf::int32 value) {
  set_has_slowdperiod();
  slowdperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.slowDPeriod)
}

// optional int32 fastKPeriod = 47 [default = 14];
inline bool TAParams::has_fastkperiod() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void TAParams::set_has_fastkperiod() {
  _has_bits_[1] |= 0x00004000u;
}
inline void TAParams::clear_has_fastkperiod() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void TAParams::clear_fastkperiod() {
  fastkperiod_ = 14;
  clear_has_fastkperiod();
}
inline ::google::protobuf::int32 TAParams::fastkperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.fastKPeriod)
  return fastkperiod_;
}
inline void TAParams::set_fastkperiod(::google::protobuf::int32 value) {
  set_has_fastkperiod();
  fastkperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.fastKPeriod)
}

// optional int32 fastDPeriod = 48 [default = 3];
inline bool TAParams::has_fastdperiod() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void TAParams::set_has_fastdperiod() {
  _has_bits_[1] |= 0x00008000u;
}
inline void TAParams::clear_has_fastdperiod() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void TAParams::clear_fastdperiod() {
  fastdperiod_ = 3;
  clear_has_fastdperiod();
}
inline ::google::protobuf::int32 TAParams::fastdperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.fastDPeriod)
  return fastdperiod_;
}
inline void TAParams::set_fastdperiod(::google::protobuf::int32 value) {
  set_has_fastdperiod();
  fastdperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.fastDPeriod)
}

// optional int32 dmiatrPeriod = 49 [default = 14];
inline bool TAParams::has_dmiatrperiod() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void TAParams::set_has_dmiatrperiod() {
  _has_bits_[1] |= 0x00010000u;
}
inline void TAParams::clear_has_dmiatrperiod() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void TAParams::clear_dmiatrperiod() {
  dmiatrperiod_ = 14;
  clear_has_dmiatrperiod();
}
inline ::google::protobuf::int32 TAParams::dmiatrperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.dmiatrPeriod)
  return dmiatrperiod_;
}
inline void TAParams::set_dmiatrperiod(::google::protobuf::int32 value) {
  set_has_dmiatrperiod();
  dmiatrperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.dmiatrPeriod)
}

// optional int32 dmiadxPeriod = 50 [default = 6];
inline bool TAParams::has_dmiadxperiod() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void TAParams::set_has_dmiadxperiod() {
  _has_bits_[1] |= 0x00020000u;
}
inline void TAParams::clear_has_dmiadxperiod() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void TAParams::clear_dmiadxperiod() {
  dmiadxperiod_ = 6;
  clear_has_dmiadxperiod();
}
inline ::google::protobuf::int32 TAParams::dmiadxperiod() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.dmiadxPeriod)
  return dmiadxperiod_;
}
inline void TAParams::set_dmiadxperiod(::google::protobuf::int32 value) {
  set_has_dmiadxperiod();
  dmiadxperiod_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.dmiadxPeriod)
}

// optional int32 matype = 51 [default = 0];
inline bool TAParams::has_matype() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void TAParams::set_has_matype() {
  _has_bits_[1] |= 0x00040000u;
}
inline void TAParams::clear_has_matype() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void TAParams::clear_matype() {
  matype_ = 0;
  clear_has_matype();
}
inline ::google::protobuf::int32 TAParams::matype() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.matype)
  return matype_;
}
inline void TAParams::set_matype(::google::protobuf::int32 value) {
  set_has_matype();
  matype_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.matype)
}

// optional int32 maPeriod1 = 52 [default = 5];
inline bool TAParams::has_maperiod1() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void TAParams::set_has_maperiod1() {
  _has_bits_[1] |= 0x00080000u;
}
inline void TAParams::clear_has_maperiod1() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void TAParams::clear_maperiod1() {
  maperiod1_ = 5;
  clear_has_maperiod1();
}
inline ::google::protobuf::int32 TAParams::maperiod1() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.maPeriod1)
  return maperiod1_;
}
inline void TAParams::set_maperiod1(::google::protobuf::int32 value) {
  set_has_maperiod1();
  maperiod1_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.maPeriod1)
}

// optional int32 maPeriod2 = 53 [default = 10];
inline bool TAParams::has_maperiod2() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void TAParams::set_has_maperiod2() {
  _has_bits_[1] |= 0x00100000u;
}
inline void TAParams::clear_has_maperiod2() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void TAParams::clear_maperiod2() {
  maperiod2_ = 10;
  clear_has_maperiod2();
}
inline ::google::protobuf::int32 TAParams::maperiod2() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.maPeriod2)
  return maperiod2_;
}
inline void TAParams::set_maperiod2(::google::protobuf::int32 value) {
  set_has_maperiod2();
  maperiod2_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.maPeriod2)
}

// optional int32 maPeriod3 = 54 [default = 20];
inline bool TAParams::has_maperiod3() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void TAParams::set_has_maperiod3() {
  _has_bits_[1] |= 0x00200000u;
}
inline void TAParams::clear_has_maperiod3() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void TAParams::clear_maperiod3() {
  maperiod3_ = 20;
  clear_has_maperiod3();
}
inline ::google::protobuf::int32 TAParams::maperiod3() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.maPeriod3)
  return maperiod3_;
}
inline void TAParams::set_maperiod3(::google::protobuf::int32 value) {
  set_has_maperiod3();
  maperiod3_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.maPeriod3)
}

// optional int32 maPeriod4 = 55 [default = 40];
inline bool TAParams::has_maperiod4() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void TAParams::set_has_maperiod4() {
  _has_bits_[1] |= 0x00400000u;
}
inline void TAParams::clear_has_maperiod4() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void TAParams::clear_maperiod4() {
  maperiod4_ = 40;
  clear_has_maperiod4();
}
inline ::google::protobuf::int32 TAParams::maperiod4() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.maPeriod4)
  return maperiod4_;
}
inline void TAParams::set_maperiod4(::google::protobuf::int32 value) {
  set_has_maperiod4();
  maperiod4_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.maPeriod4)
}

// optional int32 maPeriod5 = 56 [default = 60];
inline bool TAParams::has_maperiod5() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void TAParams::set_has_maperiod5() {
  _has_bits_[1] |= 0x00800000u;
}
inline void TAParams::clear_has_maperiod5() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void TAParams::clear_maperiod5() {
  maperiod5_ = 60;
  clear_has_maperiod5();
}
inline ::google::protobuf::int32 TAParams::maperiod5() const {
  // @@protoc_insertion_point(field_get:XT.TAParams.maPeriod5)
  return maperiod5_;
}
inline void TAParams::set_maperiod5(::google::protobuf::int32 value) {
  set_has_maperiod5();
  maperiod5_ = value;
  // @@protoc_insertion_point(field_set:XT.TAParams.maPeriod5)
}

// -------------------------------------------------------------------

// OHLCVData

// optional double open = 1;
inline bool OHLCVData::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OHLCVData::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OHLCVData::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OHLCVData::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline double OHLCVData::open() const {
  // @@protoc_insertion_point(field_get:XT.OHLCVData.open)
  return open_;
}
inline void OHLCVData::set_open(double value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:XT.OHLCVData.open)
}

// optional double high = 2;
inline bool OHLCVData::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OHLCVData::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OHLCVData::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OHLCVData::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline double OHLCVData::high() const {
  // @@protoc_insertion_point(field_get:XT.OHLCVData.high)
  return high_;
}
inline void OHLCVData::set_high(double value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:XT.OHLCVData.high)
}

// optional double low = 3;
inline bool OHLCVData::has_low() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OHLCVData::set_has_low() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OHLCVData::clear_has_low() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OHLCVData::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline double OHLCVData::low() const {
  // @@protoc_insertion_point(field_get:XT.OHLCVData.low)
  return low_;
}
inline void OHLCVData::set_low(double value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:XT.OHLCVData.low)
}

// optional double close = 4;
inline bool OHLCVData::has_close() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OHLCVData::set_has_close() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OHLCVData::clear_has_close() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OHLCVData::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline double OHLCVData::close() const {
  // @@protoc_insertion_point(field_get:XT.OHLCVData.close)
  return close_;
}
inline void OHLCVData::set_close(double value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:XT.OHLCVData.close)
}

// optional int64 volume = 5;
inline bool OHLCVData::has_volume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OHLCVData::set_has_volume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OHLCVData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OHLCVData::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 OHLCVData::volume() const {
  // @@protoc_insertion_point(field_get:XT.OHLCVData.volume)
  return volume_;
}
inline void OHLCVData::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.OHLCVData.volume)
}

// -------------------------------------------------------------------

// DateOHLCV

// optional int32 date = 1;
inline bool DateOHLCV::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DateOHLCV::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DateOHLCV::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DateOHLCV::clear_date() {
  date_ = 0;
  clear_has_date();
}
inline ::google::protobuf::int32 DateOHLCV::date() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.date)
  return date_;
}
inline void DateOHLCV::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.date)
}

// optional float open = 2;
inline bool DateOHLCV::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DateOHLCV::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DateOHLCV::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DateOHLCV::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline float DateOHLCV::open() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.open)
  return open_;
}
inline void DateOHLCV::set_open(float value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.open)
}

// optional float high = 3;
inline bool DateOHLCV::has_high() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DateOHLCV::set_has_high() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DateOHLCV::clear_has_high() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DateOHLCV::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline float DateOHLCV::high() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.high)
  return high_;
}
inline void DateOHLCV::set_high(float value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.high)
}

// optional float low = 4;
inline bool DateOHLCV::has_low() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DateOHLCV::set_has_low() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DateOHLCV::clear_has_low() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DateOHLCV::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline float DateOHLCV::low() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.low)
  return low_;
}
inline void DateOHLCV::set_low(float value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.low)
}

// optional float close = 5;
inline bool DateOHLCV::has_close() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DateOHLCV::set_has_close() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DateOHLCV::clear_has_close() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DateOHLCV::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline float DateOHLCV::close() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.close)
  return close_;
}
inline void DateOHLCV::set_close(float value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.close)
}

// optional float amount = 6;
inline bool DateOHLCV::has_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DateOHLCV::set_has_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DateOHLCV::clear_has_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DateOHLCV::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline float DateOHLCV::amount() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.amount)
  return amount_;
}
inline void DateOHLCV::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.amount)
}

// optional int64 volume = 7;
inline bool DateOHLCV::has_volume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DateOHLCV::set_has_volume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DateOHLCV::clear_has_volume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DateOHLCV::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 DateOHLCV::volume() const {
  // @@protoc_insertion_point(field_get:XT.DateOHLCV.volume)
  return volume_;
}
inline void DateOHLCV::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.DateOHLCV.volume)
}

// -------------------------------------------------------------------

// DateTimeOHLCV

// optional int32 date = 1;
inline bool DateTimeOHLCV::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DateTimeOHLCV::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DateTimeOHLCV::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DateTimeOHLCV::clear_date() {
  date_ = 0;
  clear_has_date();
}
inline ::google::protobuf::int32 DateTimeOHLCV::date() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.date)
  return date_;
}
inline void DateTimeOHLCV::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.date)
}

// optional int32 time = 2;
inline bool DateTimeOHLCV::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DateTimeOHLCV::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DateTimeOHLCV::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DateTimeOHLCV::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 DateTimeOHLCV::time() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.time)
  return time_;
}
inline void DateTimeOHLCV::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.time)
}

// optional float open = 3;
inline bool DateTimeOHLCV::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DateTimeOHLCV::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DateTimeOHLCV::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DateTimeOHLCV::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline float DateTimeOHLCV::open() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.open)
  return open_;
}
inline void DateTimeOHLCV::set_open(float value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.open)
}

// optional float high = 4;
inline bool DateTimeOHLCV::has_high() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DateTimeOHLCV::set_has_high() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DateTimeOHLCV::clear_has_high() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DateTimeOHLCV::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline float DateTimeOHLCV::high() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.high)
  return high_;
}
inline void DateTimeOHLCV::set_high(float value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.high)
}

// optional float low = 5;
inline bool DateTimeOHLCV::has_low() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DateTimeOHLCV::set_has_low() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DateTimeOHLCV::clear_has_low() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DateTimeOHLCV::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline float DateTimeOHLCV::low() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.low)
  return low_;
}
inline void DateTimeOHLCV::set_low(float value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.low)
}

// optional float close = 6;
inline bool DateTimeOHLCV::has_close() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DateTimeOHLCV::set_has_close() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DateTimeOHLCV::clear_has_close() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DateTimeOHLCV::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline float DateTimeOHLCV::close() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.close)
  return close_;
}
inline void DateTimeOHLCV::set_close(float value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.close)
}

// optional float amount = 7;
inline bool DateTimeOHLCV::has_amount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DateTimeOHLCV::set_has_amount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DateTimeOHLCV::clear_has_amount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DateTimeOHLCV::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline float DateTimeOHLCV::amount() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.amount)
  return amount_;
}
inline void DateTimeOHLCV::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.amount)
}

// optional int64 volume = 8;
inline bool DateTimeOHLCV::has_volume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DateTimeOHLCV::set_has_volume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DateTimeOHLCV::clear_has_volume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DateTimeOHLCV::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 DateTimeOHLCV::volume() const {
  // @@protoc_insertion_point(field_get:XT.DateTimeOHLCV.volume)
  return volume_;
}
inline void DateTimeOHLCV::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.DateTimeOHLCV.volume)
}

// -------------------------------------------------------------------

// TDXDayData

// optional int32 date = 1;
inline bool TDXDayData::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDXDayData::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDXDayData::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDXDayData::clear_date() {
  date_ = 0;
  clear_has_date();
}
inline ::google::protobuf::int32 TDXDayData::date() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.date)
  return date_;
}
inline void TDXDayData::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.date)
}

// optional int32 open = 2;
inline bool TDXDayData::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDXDayData::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDXDayData::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDXDayData::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline ::google::protobuf::int32 TDXDayData::open() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.open)
  return open_;
}
inline void TDXDayData::set_open(::google::protobuf::int32 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.open)
}

// optional int32 high = 3;
inline bool TDXDayData::has_high() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDXDayData::set_has_high() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDXDayData::clear_has_high() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDXDayData::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline ::google::protobuf::int32 TDXDayData::high() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.high)
  return high_;
}
inline void TDXDayData::set_high(::google::protobuf::int32 value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.high)
}

// optional int32 low = 4;
inline bool TDXDayData::has_low() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TDXDayData::set_has_low() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TDXDayData::clear_has_low() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TDXDayData::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline ::google::protobuf::int32 TDXDayData::low() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.low)
  return low_;
}
inline void TDXDayData::set_low(::google::protobuf::int32 value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.low)
}

// optional int32 close = 5;
inline bool TDXDayData::has_close() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TDXDayData::set_has_close() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TDXDayData::clear_has_close() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TDXDayData::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline ::google::protobuf::int32 TDXDayData::close() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.close)
  return close_;
}
inline void TDXDayData::set_close(::google::protobuf::int32 value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.close)
}

// optional float amount = 6;
inline bool TDXDayData::has_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TDXDayData::set_has_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TDXDayData::clear_has_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TDXDayData::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline float TDXDayData::amount() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.amount)
  return amount_;
}
inline void TDXDayData::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.amount)
}

// optional int32 volume = 7;
inline bool TDXDayData::has_volume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TDXDayData::set_has_volume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TDXDayData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TDXDayData::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
inline ::google::protobuf::int32 TDXDayData::volume() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.volume)
  return volume_;
}
inline void TDXDayData::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.volume)
}

// optional int32 reserve = 8;
inline bool TDXDayData::has_reserve() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TDXDayData::set_has_reserve() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TDXDayData::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TDXDayData::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 TDXDayData::reserve() const {
  // @@protoc_insertion_point(field_get:XT.TDXDayData.reserve)
  return reserve_;
}
inline void TDXDayData::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXDayData.reserve)
}

// -------------------------------------------------------------------

// TDXMinData

// optional int32 date = 1;
inline bool TDXMinData::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDXMinData::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDXMinData::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDXMinData::clear_date() {
  date_ = 0;
  clear_has_date();
}
inline ::google::protobuf::int32 TDXMinData::date() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.date)
  return date_;
}
inline void TDXMinData::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.date)
}

// optional int32 minutes = 2;
inline bool TDXMinData::has_minutes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDXMinData::set_has_minutes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDXMinData::clear_has_minutes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDXMinData::clear_minutes() {
  minutes_ = 0;
  clear_has_minutes();
}
inline ::google::protobuf::int32 TDXMinData::minutes() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.minutes)
  return minutes_;
}
inline void TDXMinData::set_minutes(::google::protobuf::int32 value) {
  set_has_minutes();
  minutes_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.minutes)
}

// optional float open = 3;
inline bool TDXMinData::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDXMinData::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDXMinData::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDXMinData::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline float TDXMinData::open() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.open)
  return open_;
}
inline void TDXMinData::set_open(float value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.open)
}

// optional float high = 4;
inline bool TDXMinData::has_high() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TDXMinData::set_has_high() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TDXMinData::clear_has_high() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TDXMinData::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline float TDXMinData::high() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.high)
  return high_;
}
inline void TDXMinData::set_high(float value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.high)
}

// optional float low = 5;
inline bool TDXMinData::has_low() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TDXMinData::set_has_low() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TDXMinData::clear_has_low() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TDXMinData::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline float TDXMinData::low() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.low)
  return low_;
}
inline void TDXMinData::set_low(float value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.low)
}

// optional float close = 6;
inline bool TDXMinData::has_close() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TDXMinData::set_has_close() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TDXMinData::clear_has_close() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TDXMinData::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline float TDXMinData::close() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.close)
  return close_;
}
inline void TDXMinData::set_close(float value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.close)
}

// optional float amount = 7;
inline bool TDXMinData::has_amount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TDXMinData::set_has_amount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TDXMinData::clear_has_amount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TDXMinData::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline float TDXMinData::amount() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.amount)
  return amount_;
}
inline void TDXMinData::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.amount)
}

// optional int32 volume = 8;
inline bool TDXMinData::has_volume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TDXMinData::set_has_volume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TDXMinData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TDXMinData::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
inline ::google::protobuf::int32 TDXMinData::volume() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.volume)
  return volume_;
}
inline void TDXMinData::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.volume)
}

// optional int32 reserve = 9;
inline bool TDXMinData::has_reserve() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TDXMinData::set_has_reserve() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TDXMinData::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TDXMinData::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 TDXMinData::reserve() const {
  // @@protoc_insertion_point(field_get:XT.TDXMinData.reserve)
  return reserve_;
}
inline void TDXMinData::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
  // @@protoc_insertion_point(field_set:XT.TDXMinData.reserve)
}

// -------------------------------------------------------------------

// KCBPTagQuoteInfo10

// optional int32 cMarket = 1;
inline bool KCBPTagQuoteInfo10::has_cmarket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_cmarket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KCBPTagQuoteInfo10::clear_has_cmarket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KCBPTagQuoteInfo10::clear_cmarket() {
  cmarket_ = 0;
  clear_has_cmarket();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::cmarket() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.cMarket)
  return cmarket_;
}
inline void KCBPTagQuoteInfo10::set_cmarket(::google::protobuf::int32 value) {
  set_has_cmarket();
  cmarket_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.cMarket)
}

// optional string szStkcode = 2;
inline bool KCBPTagQuoteInfo10::has_szstkcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_szstkcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KCBPTagQuoteInfo10::clear_has_szstkcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KCBPTagQuoteInfo10::clear_szstkcode() {
  szstkcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szstkcode();
}
inline const ::std::string& KCBPTagQuoteInfo10::szstkcode() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.szStkcode)
  return szstkcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_szstkcode(const ::std::string& value) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.szStkcode)
}
inline void KCBPTagQuoteInfo10::set_szstkcode(const char* value) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.KCBPTagQuoteInfo10.szStkcode)
}
inline void KCBPTagQuoteInfo10::set_szstkcode(const char* value, size_t size) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.KCBPTagQuoteInfo10.szStkcode)
}
inline ::std::string* KCBPTagQuoteInfo10::mutable_szstkcode() {
  set_has_szstkcode();
  // @@protoc_insertion_point(field_mutable:XT.KCBPTagQuoteInfo10.szStkcode)
  return szstkcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KCBPTagQuoteInfo10::release_szstkcode() {
  // @@protoc_insertion_point(field_release:XT.KCBPTagQuoteInfo10.szStkcode)
  clear_has_szstkcode();
  return szstkcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_allocated_szstkcode(::std::string* szstkcode) {
  if (szstkcode != NULL) {
    set_has_szstkcode();
  } else {
    clear_has_szstkcode();
  }
  szstkcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szstkcode);
  // @@protoc_insertion_point(field_set_allocated:XT.KCBPTagQuoteInfo10.szStkcode)
}

// optional string szStkname = 3;
inline bool KCBPTagQuoteInfo10::has_szstkname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_szstkname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KCBPTagQuoteInfo10::clear_has_szstkname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KCBPTagQuoteInfo10::clear_szstkname() {
  szstkname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szstkname();
}
inline const ::std::string& KCBPTagQuoteInfo10::szstkname() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.szStkname)
  return szstkname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_szstkname(const ::std::string& value) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.szStkname)
}
inline void KCBPTagQuoteInfo10::set_szstkname(const char* value) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.KCBPTagQuoteInfo10.szStkname)
}
inline void KCBPTagQuoteInfo10::set_szstkname(const char* value, size_t size) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.KCBPTagQuoteInfo10.szStkname)
}
inline ::std::string* KCBPTagQuoteInfo10::mutable_szstkname() {
  set_has_szstkname();
  // @@protoc_insertion_point(field_mutable:XT.KCBPTagQuoteInfo10.szStkname)
  return szstkname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KCBPTagQuoteInfo10::release_szstkname() {
  // @@protoc_insertion_point(field_release:XT.KCBPTagQuoteInfo10.szStkname)
  clear_has_szstkname();
  return szstkname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_allocated_szstkname(::std::string* szstkname) {
  if (szstkname != NULL) {
    set_has_szstkname();
  } else {
    clear_has_szstkname();
  }
  szstkname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szstkname);
  // @@protoc_insertion_point(field_set_allocated:XT.KCBPTagQuoteInfo10.szStkname)
}

// optional double dbClosePrice = 4;
inline bool KCBPTagQuoteInfo10::has_dbcloseprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbcloseprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbcloseprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KCBPTagQuoteInfo10::clear_dbcloseprice() {
  dbcloseprice_ = 0;
  clear_has_dbcloseprice();
}
inline double KCBPTagQuoteInfo10::dbcloseprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbClosePrice)
  return dbcloseprice_;
}
inline void KCBPTagQuoteInfo10::set_dbcloseprice(double value) {
  set_has_dbcloseprice();
  dbcloseprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbClosePrice)
}

// optional double dbOpenPrice = 5;
inline bool KCBPTagQuoteInfo10::has_dbopenprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbopenprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbopenprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KCBPTagQuoteInfo10::clear_dbopenprice() {
  dbopenprice_ = 0;
  clear_has_dbopenprice();
}
inline double KCBPTagQuoteInfo10::dbopenprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbOpenPrice)
  return dbopenprice_;
}
inline void KCBPTagQuoteInfo10::set_dbopenprice(double value) {
  set_has_dbopenprice();
  dbopenprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbOpenPrice)
}

// optional double dbLastPrice = 6;
inline bool KCBPTagQuoteInfo10::has_dblastprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dblastprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KCBPTagQuoteInfo10::clear_has_dblastprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KCBPTagQuoteInfo10::clear_dblastprice() {
  dblastprice_ = 0;
  clear_has_dblastprice();
}
inline double KCBPTagQuoteInfo10::dblastprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbLastPrice)
  return dblastprice_;
}
inline void KCBPTagQuoteInfo10::set_dblastprice(double value) {
  set_has_dblastprice();
  dblastprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbLastPrice)
}

// optional double dbHighPrice = 7;
inline bool KCBPTagQuoteInfo10::has_dbhighprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbhighprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbhighprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KCBPTagQuoteInfo10::clear_dbhighprice() {
  dbhighprice_ = 0;
  clear_has_dbhighprice();
}
inline double KCBPTagQuoteInfo10::dbhighprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbHighPrice)
  return dbhighprice_;
}
inline void KCBPTagQuoteInfo10::set_dbhighprice(double value) {
  set_has_dbhighprice();
  dbhighprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbHighPrice)
}

// optional double dbLowPrice = 8;
inline bool KCBPTagQuoteInfo10::has_dblowprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dblowprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KCBPTagQuoteInfo10::clear_has_dblowprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KCBPTagQuoteInfo10::clear_dblowprice() {
  dblowprice_ = 0;
  clear_has_dblowprice();
}
inline double KCBPTagQuoteInfo10::dblowprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbLowPrice)
  return dblowprice_;
}
inline void KCBPTagQuoteInfo10::set_dblowprice(double value) {
  set_has_dblowprice();
  dblowprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbLowPrice)
}

// optional double dbMatchQty = 9;
inline bool KCBPTagQuoteInfo10::has_dbmatchqty() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbmatchqty() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbmatchqty() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KCBPTagQuoteInfo10::clear_dbmatchqty() {
  dbmatchqty_ = 0;
  clear_has_dbmatchqty();
}
inline double KCBPTagQuoteInfo10::dbmatchqty() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbMatchQty)
  return dbmatchqty_;
}
inline void KCBPTagQuoteInfo10::set_dbmatchqty(double value) {
  set_has_dbmatchqty();
  dbmatchqty_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbMatchQty)
}

// optional double dbMatchAmt = 10;
inline bool KCBPTagQuoteInfo10::has_dbmatchamt() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbmatchamt() {
  _has_bits_[0] |= 0x00000200u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbmatchamt() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void KCBPTagQuoteInfo10::clear_dbmatchamt() {
  dbmatchamt_ = 0;
  clear_has_dbmatchamt();
}
inline double KCBPTagQuoteInfo10::dbmatchamt() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbMatchAmt)
  return dbmatchamt_;
}
inline void KCBPTagQuoteInfo10::set_dbmatchamt(double value) {
  set_has_dbmatchamt();
  dbmatchamt_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbMatchAmt)
}

// optional double dbMaxRiseValue = 11;
inline bool KCBPTagQuoteInfo10::has_dbmaxrisevalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbmaxrisevalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbmaxrisevalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void KCBPTagQuoteInfo10::clear_dbmaxrisevalue() {
  dbmaxrisevalue_ = 0;
  clear_has_dbmaxrisevalue();
}
inline double KCBPTagQuoteInfo10::dbmaxrisevalue() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbMaxRiseValue)
  return dbmaxrisevalue_;
}
inline void KCBPTagQuoteInfo10::set_dbmaxrisevalue(double value) {
  set_has_dbmaxrisevalue();
  dbmaxrisevalue_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbMaxRiseValue)
}

// optional double dbMaxDownValue = 12;
inline bool KCBPTagQuoteInfo10::has_dbmaxdownvalue() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbmaxdownvalue() {
  _has_bits_[0] |= 0x00000800u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbmaxdownvalue() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void KCBPTagQuoteInfo10::clear_dbmaxdownvalue() {
  dbmaxdownvalue_ = 0;
  clear_has_dbmaxdownvalue();
}
inline double KCBPTagQuoteInfo10::dbmaxdownvalue() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbMaxDownValue)
  return dbmaxdownvalue_;
}
inline void KCBPTagQuoteInfo10::set_dbmaxdownvalue(double value) {
  set_has_dbmaxdownvalue();
  dbmaxdownvalue_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbMaxDownValue)
}

// optional double dbAvgPrice = 13;
inline bool KCBPTagQuoteInfo10::has_dbavgprice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbavgprice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbavgprice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void KCBPTagQuoteInfo10::clear_dbavgprice() {
  dbavgprice_ = 0;
  clear_has_dbavgprice();
}
inline double KCBPTagQuoteInfo10::dbavgprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbAvgPrice)
  return dbavgprice_;
}
inline void KCBPTagQuoteInfo10::set_dbavgprice(double value) {
  set_has_dbavgprice();
  dbavgprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbAvgPrice)
}

// optional double dbBuyPrice1 = 14;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice1() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice1() {
  _has_bits_[0] |= 0x00002000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice1() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice1() {
  dbbuyprice1_ = 0;
  clear_has_dbbuyprice1();
}
inline double KCBPTagQuoteInfo10::dbbuyprice1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice1)
  return dbbuyprice1_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice1(double value) {
  set_has_dbbuyprice1();
  dbbuyprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice1)
}

// optional int32 nBuyVolume1 = 15;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume1() {
  nbuyvolume1_ = 0;
  clear_has_nbuyvolume1();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume1)
  return nbuyvolume1_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume1(::google::protobuf::int32 value) {
  set_has_nbuyvolume1();
  nbuyvolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume1)
}

// optional double dbBuyPrice2 = 16;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice2() {
  dbbuyprice2_ = 0;
  clear_has_dbbuyprice2();
}
inline double KCBPTagQuoteInfo10::dbbuyprice2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice2)
  return dbbuyprice2_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice2(double value) {
  set_has_dbbuyprice2();
  dbbuyprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice2)
}

// optional int32 nBuyVolume2 = 17;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume2() {
  nbuyvolume2_ = 0;
  clear_has_nbuyvolume2();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume2)
  return nbuyvolume2_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume2(::google::protobuf::int32 value) {
  set_has_nbuyvolume2();
  nbuyvolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume2)
}

// optional double dbBuyPrice3 = 18;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice3() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice3() {
  _has_bits_[0] |= 0x00020000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice3() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice3() {
  dbbuyprice3_ = 0;
  clear_has_dbbuyprice3();
}
inline double KCBPTagQuoteInfo10::dbbuyprice3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice3)
  return dbbuyprice3_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice3(double value) {
  set_has_dbbuyprice3();
  dbbuyprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice3)
}

// optional int32 nBuyVolume3 = 19;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume3() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume3() {
  _has_bits_[0] |= 0x00040000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume3() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume3() {
  nbuyvolume3_ = 0;
  clear_has_nbuyvolume3();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume3)
  return nbuyvolume3_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume3(::google::protobuf::int32 value) {
  set_has_nbuyvolume3();
  nbuyvolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume3)
}

// optional double dbBuyPrice4 = 20;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice4() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice4() {
  _has_bits_[0] |= 0x00080000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice4() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice4() {
  dbbuyprice4_ = 0;
  clear_has_dbbuyprice4();
}
inline double KCBPTagQuoteInfo10::dbbuyprice4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice4)
  return dbbuyprice4_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice4(double value) {
  set_has_dbbuyprice4();
  dbbuyprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice4)
}

// optional int32 nBuyVolume4 = 21;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume4() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume4() {
  _has_bits_[0] |= 0x00100000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume4() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume4() {
  nbuyvolume4_ = 0;
  clear_has_nbuyvolume4();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume4)
  return nbuyvolume4_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume4(::google::protobuf::int32 value) {
  set_has_nbuyvolume4();
  nbuyvolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume4)
}

// optional double dbBuyPrice5 = 22;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice5() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice5() {
  _has_bits_[0] |= 0x00200000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice5() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice5() {
  dbbuyprice5_ = 0;
  clear_has_dbbuyprice5();
}
inline double KCBPTagQuoteInfo10::dbbuyprice5() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice5)
  return dbbuyprice5_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice5(double value) {
  set_has_dbbuyprice5();
  dbbuyprice5_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice5)
}

// optional int32 nBuyVolume5 = 23;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume5() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume5() {
  _has_bits_[0] |= 0x00400000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume5() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume5() {
  nbuyvolume5_ = 0;
  clear_has_nbuyvolume5();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume5() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume5)
  return nbuyvolume5_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume5(::google::protobuf::int32 value) {
  set_has_nbuyvolume5();
  nbuyvolume5_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume5)
}

// optional double dbBuyPrice6 = 24;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice6() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice6() {
  _has_bits_[0] |= 0x00800000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice6() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice6() {
  dbbuyprice6_ = 0;
  clear_has_dbbuyprice6();
}
inline double KCBPTagQuoteInfo10::dbbuyprice6() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice6)
  return dbbuyprice6_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice6(double value) {
  set_has_dbbuyprice6();
  dbbuyprice6_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice6)
}

// optional int32 nBuyVolume6 = 25;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume6() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume6() {
  _has_bits_[0] |= 0x01000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume6() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume6() {
  nbuyvolume6_ = 0;
  clear_has_nbuyvolume6();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume6() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume6)
  return nbuyvolume6_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume6(::google::protobuf::int32 value) {
  set_has_nbuyvolume6();
  nbuyvolume6_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume6)
}

// optional double dbBuyPrice7 = 26;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice7() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice7() {
  _has_bits_[0] |= 0x02000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice7() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice7() {
  dbbuyprice7_ = 0;
  clear_has_dbbuyprice7();
}
inline double KCBPTagQuoteInfo10::dbbuyprice7() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice7)
  return dbbuyprice7_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice7(double value) {
  set_has_dbbuyprice7();
  dbbuyprice7_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice7)
}

// optional int32 nBuyVolume7 = 27;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume7() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume7() {
  _has_bits_[0] |= 0x04000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume7() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume7() {
  nbuyvolume7_ = 0;
  clear_has_nbuyvolume7();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume7() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume7)
  return nbuyvolume7_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume7(::google::protobuf::int32 value) {
  set_has_nbuyvolume7();
  nbuyvolume7_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume7)
}

// optional double dbBuyPrice8 = 28;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice8() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice8() {
  _has_bits_[0] |= 0x08000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice8() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice8() {
  dbbuyprice8_ = 0;
  clear_has_dbbuyprice8();
}
inline double KCBPTagQuoteInfo10::dbbuyprice8() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice8)
  return dbbuyprice8_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice8(double value) {
  set_has_dbbuyprice8();
  dbbuyprice8_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice8)
}

// optional int32 nBuyVolume8 = 29;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume8() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume8() {
  _has_bits_[0] |= 0x10000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume8() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume8() {
  nbuyvolume8_ = 0;
  clear_has_nbuyvolume8();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume8() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume8)
  return nbuyvolume8_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume8(::google::protobuf::int32 value) {
  set_has_nbuyvolume8();
  nbuyvolume8_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume8)
}

// optional double dbBuyPrice9 = 30;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice9() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice9() {
  _has_bits_[0] |= 0x20000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice9() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice9() {
  dbbuyprice9_ = 0;
  clear_has_dbbuyprice9();
}
inline double KCBPTagQuoteInfo10::dbbuyprice9() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice9)
  return dbbuyprice9_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice9(double value) {
  set_has_dbbuyprice9();
  dbbuyprice9_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice9)
}

// optional int32 nBuyVolume9 = 31;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume9() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume9() {
  _has_bits_[0] |= 0x40000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume9() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume9() {
  nbuyvolume9_ = 0;
  clear_has_nbuyvolume9();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume9() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume9)
  return nbuyvolume9_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume9(::google::protobuf::int32 value) {
  set_has_nbuyvolume9();
  nbuyvolume9_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume9)
}

// optional double dbBuyPrice10 = 32;
inline bool KCBPTagQuoteInfo10::has_dbbuyprice10() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbbuyprice10() {
  _has_bits_[0] |= 0x80000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbbuyprice10() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbbuyprice10() {
  dbbuyprice10_ = 0;
  clear_has_dbbuyprice10();
}
inline double KCBPTagQuoteInfo10::dbbuyprice10() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbBuyPrice10)
  return dbbuyprice10_;
}
inline void KCBPTagQuoteInfo10::set_dbbuyprice10(double value) {
  set_has_dbbuyprice10();
  dbbuyprice10_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbBuyPrice10)
}

// optional int32 nBuyVolume10 = 33;
inline bool KCBPTagQuoteInfo10::has_nbuyvolume10() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbuyvolume10() {
  _has_bits_[1] |= 0x00000001u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbuyvolume10() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void KCBPTagQuoteInfo10::clear_nbuyvolume10() {
  nbuyvolume10_ = 0;
  clear_has_nbuyvolume10();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbuyvolume10() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBuyVolume10)
  return nbuyvolume10_;
}
inline void KCBPTagQuoteInfo10::set_nbuyvolume10(::google::protobuf::int32 value) {
  set_has_nbuyvolume10();
  nbuyvolume10_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBuyVolume10)
}

// optional double dbSalePrice1 = 34;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice1() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice1() {
  _has_bits_[1] |= 0x00000002u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice1() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice1() {
  dbsaleprice1_ = 0;
  clear_has_dbsaleprice1();
}
inline double KCBPTagQuoteInfo10::dbsaleprice1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice1)
  return dbsaleprice1_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice1(double value) {
  set_has_dbsaleprice1();
  dbsaleprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice1)
}

// optional int32 nSaleVolume1 = 35;
inline bool KCBPTagQuoteInfo10::has_nsalevolume1() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume1() {
  _has_bits_[1] |= 0x00000004u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume1() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume1() {
  nsalevolume1_ = 0;
  clear_has_nsalevolume1();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume1)
  return nsalevolume1_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume1(::google::protobuf::int32 value) {
  set_has_nsalevolume1();
  nsalevolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume1)
}

// optional double dbSalePrice2 = 36;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice2() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice2() {
  _has_bits_[1] |= 0x00000008u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice2() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice2() {
  dbsaleprice2_ = 0;
  clear_has_dbsaleprice2();
}
inline double KCBPTagQuoteInfo10::dbsaleprice2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice2)
  return dbsaleprice2_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice2(double value) {
  set_has_dbsaleprice2();
  dbsaleprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice2)
}

// optional int32 nSaleVolume2 = 37;
inline bool KCBPTagQuoteInfo10::has_nsalevolume2() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume2() {
  _has_bits_[1] |= 0x00000010u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume2() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume2() {
  nsalevolume2_ = 0;
  clear_has_nsalevolume2();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume2)
  return nsalevolume2_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume2(::google::protobuf::int32 value) {
  set_has_nsalevolume2();
  nsalevolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume2)
}

// optional double dbSalePrice3 = 38;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice3() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice3() {
  _has_bits_[1] |= 0x00000020u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice3() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice3() {
  dbsaleprice3_ = 0;
  clear_has_dbsaleprice3();
}
inline double KCBPTagQuoteInfo10::dbsaleprice3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice3)
  return dbsaleprice3_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice3(double value) {
  set_has_dbsaleprice3();
  dbsaleprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice3)
}

// optional int32 nSaleVolume3 = 39;
inline bool KCBPTagQuoteInfo10::has_nsalevolume3() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume3() {
  _has_bits_[1] |= 0x00000040u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume3() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume3() {
  nsalevolume3_ = 0;
  clear_has_nsalevolume3();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume3)
  return nsalevolume3_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume3(::google::protobuf::int32 value) {
  set_has_nsalevolume3();
  nsalevolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume3)
}

// optional double dbSalePrice4 = 40;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice4() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice4() {
  _has_bits_[1] |= 0x00000080u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice4() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice4() {
  dbsaleprice4_ = 0;
  clear_has_dbsaleprice4();
}
inline double KCBPTagQuoteInfo10::dbsaleprice4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice4)
  return dbsaleprice4_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice4(double value) {
  set_has_dbsaleprice4();
  dbsaleprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice4)
}

// optional int32 nSaleVolume4 = 41;
inline bool KCBPTagQuoteInfo10::has_nsalevolume4() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume4() {
  _has_bits_[1] |= 0x00000100u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume4() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume4() {
  nsalevolume4_ = 0;
  clear_has_nsalevolume4();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume4)
  return nsalevolume4_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume4(::google::protobuf::int32 value) {
  set_has_nsalevolume4();
  nsalevolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume4)
}

// optional double dbSalePrice5 = 42;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice5() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice5() {
  _has_bits_[1] |= 0x00000200u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice5() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice5() {
  dbsaleprice5_ = 0;
  clear_has_dbsaleprice5();
}
inline double KCBPTagQuoteInfo10::dbsaleprice5() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice5)
  return dbsaleprice5_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice5(double value) {
  set_has_dbsaleprice5();
  dbsaleprice5_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice5)
}

// optional int32 nSaleVolume5 = 43;
inline bool KCBPTagQuoteInfo10::has_nsalevolume5() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume5() {
  _has_bits_[1] |= 0x00000400u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume5() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume5() {
  nsalevolume5_ = 0;
  clear_has_nsalevolume5();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume5() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume5)
  return nsalevolume5_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume5(::google::protobuf::int32 value) {
  set_has_nsalevolume5();
  nsalevolume5_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume5)
}

// optional double dbSalePrice6 = 44;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice6() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice6() {
  _has_bits_[1] |= 0x00000800u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice6() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice6() {
  dbsaleprice6_ = 0;
  clear_has_dbsaleprice6();
}
inline double KCBPTagQuoteInfo10::dbsaleprice6() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice6)
  return dbsaleprice6_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice6(double value) {
  set_has_dbsaleprice6();
  dbsaleprice6_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice6)
}

// optional int32 nSaleVolume6 = 45;
inline bool KCBPTagQuoteInfo10::has_nsalevolume6() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume6() {
  _has_bits_[1] |= 0x00001000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume6() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume6() {
  nsalevolume6_ = 0;
  clear_has_nsalevolume6();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume6() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume6)
  return nsalevolume6_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume6(::google::protobuf::int32 value) {
  set_has_nsalevolume6();
  nsalevolume6_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume6)
}

// optional double dbSalePrice7 = 46;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice7() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice7() {
  _has_bits_[1] |= 0x00002000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice7() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice7() {
  dbsaleprice7_ = 0;
  clear_has_dbsaleprice7();
}
inline double KCBPTagQuoteInfo10::dbsaleprice7() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice7)
  return dbsaleprice7_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice7(double value) {
  set_has_dbsaleprice7();
  dbsaleprice7_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice7)
}

// optional int32 nSaleVolume7 = 47;
inline bool KCBPTagQuoteInfo10::has_nsalevolume7() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume7() {
  _has_bits_[1] |= 0x00004000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume7() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume7() {
  nsalevolume7_ = 0;
  clear_has_nsalevolume7();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume7() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume7)
  return nsalevolume7_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume7(::google::protobuf::int32 value) {
  set_has_nsalevolume7();
  nsalevolume7_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume7)
}

// optional double dbSalePrice8 = 48;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice8() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice8() {
  _has_bits_[1] |= 0x00008000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice8() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice8() {
  dbsaleprice8_ = 0;
  clear_has_dbsaleprice8();
}
inline double KCBPTagQuoteInfo10::dbsaleprice8() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice8)
  return dbsaleprice8_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice8(double value) {
  set_has_dbsaleprice8();
  dbsaleprice8_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice8)
}

// optional int32 nSaleVolume8 = 49;
inline bool KCBPTagQuoteInfo10::has_nsalevolume8() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume8() {
  _has_bits_[1] |= 0x00010000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume8() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume8() {
  nsalevolume8_ = 0;
  clear_has_nsalevolume8();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume8() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume8)
  return nsalevolume8_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume8(::google::protobuf::int32 value) {
  set_has_nsalevolume8();
  nsalevolume8_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume8)
}

// optional double dbSalePrice9 = 50;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice9() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice9() {
  _has_bits_[1] |= 0x00020000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice9() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice9() {
  dbsaleprice9_ = 0;
  clear_has_dbsaleprice9();
}
inline double KCBPTagQuoteInfo10::dbsaleprice9() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice9)
  return dbsaleprice9_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice9(double value) {
  set_has_dbsaleprice9();
  dbsaleprice9_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice9)
}

// optional int32 nSaleVolume9 = 51;
inline bool KCBPTagQuoteInfo10::has_nsalevolume9() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume9() {
  _has_bits_[1] |= 0x00040000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume9() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume9() {
  nsalevolume9_ = 0;
  clear_has_nsalevolume9();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume9() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume9)
  return nsalevolume9_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume9(::google::protobuf::int32 value) {
  set_has_nsalevolume9();
  nsalevolume9_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume9)
}

// optional double dbSalePrice10 = 52;
inline bool KCBPTagQuoteInfo10::has_dbsaleprice10() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsaleprice10() {
  _has_bits_[1] |= 0x00080000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsaleprice10() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void KCBPTagQuoteInfo10::clear_dbsaleprice10() {
  dbsaleprice10_ = 0;
  clear_has_dbsaleprice10();
}
inline double KCBPTagQuoteInfo10::dbsaleprice10() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSalePrice10)
  return dbsaleprice10_;
}
inline void KCBPTagQuoteInfo10::set_dbsaleprice10(double value) {
  set_has_dbsaleprice10();
  dbsaleprice10_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSalePrice10)
}

// optional int32 nSaleVolume10 = 53;
inline bool KCBPTagQuoteInfo10::has_nsalevolume10() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nsalevolume10() {
  _has_bits_[1] |= 0x00100000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nsalevolume10() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void KCBPTagQuoteInfo10::clear_nsalevolume10() {
  nsalevolume10_ = 0;
  clear_has_nsalevolume10();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nsalevolume10() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nSaleVolume10)
  return nsalevolume10_;
}
inline void KCBPTagQuoteInfo10::set_nsalevolume10(::google::protobuf::int32 value) {
  set_has_nsalevolume10();
  nsalevolume10_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nSaleVolume10)
}

// optional int32 cProductClass = 54;
inline bool KCBPTagQuoteInfo10::has_cproductclass() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_cproductclass() {
  _has_bits_[1] |= 0x00200000u;
}
inline void KCBPTagQuoteInfo10::clear_has_cproductclass() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void KCBPTagQuoteInfo10::clear_cproductclass() {
  cproductclass_ = 0;
  clear_has_cproductclass();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::cproductclass() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.cProductClass)
  return cproductclass_;
}
inline void KCBPTagQuoteInfo10::set_cproductclass(::google::protobuf::int32 value) {
  set_has_cproductclass();
  cproductclass_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.cProductClass)
}

// optional int32 nPreOpenInterest = 55;
inline bool KCBPTagQuoteInfo10::has_npreopeninterest() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_npreopeninterest() {
  _has_bits_[1] |= 0x00400000u;
}
inline void KCBPTagQuoteInfo10::clear_has_npreopeninterest() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void KCBPTagQuoteInfo10::clear_npreopeninterest() {
  npreopeninterest_ = 0;
  clear_has_npreopeninterest();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::npreopeninterest() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nPreOpenInterest)
  return npreopeninterest_;
}
inline void KCBPTagQuoteInfo10::set_npreopeninterest(::google::protobuf::int32 value) {
  set_has_npreopeninterest();
  npreopeninterest_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nPreOpenInterest)
}

// optional int32 nOpenInterest = 56;
inline bool KCBPTagQuoteInfo10::has_nopeninterest() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nopeninterest() {
  _has_bits_[1] |= 0x00800000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nopeninterest() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void KCBPTagQuoteInfo10::clear_nopeninterest() {
  nopeninterest_ = 0;
  clear_has_nopeninterest();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nopeninterest() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nOpenInterest)
  return nopeninterest_;
}
inline void KCBPTagQuoteInfo10::set_nopeninterest(::google::protobuf::int32 value) {
  set_has_nopeninterest();
  nopeninterest_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nOpenInterest)
}

// optional double dbSettPrice = 57;
inline bool KCBPTagQuoteInfo10::has_dbsettprice() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbsettprice() {
  _has_bits_[1] |= 0x01000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbsettprice() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbsettprice() {
  dbsettprice_ = 0;
  clear_has_dbsettprice();
}
inline double KCBPTagQuoteInfo10::dbsettprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbSettPrice)
  return dbsettprice_;
}
inline void KCBPTagQuoteInfo10::set_dbsettprice(double value) {
  set_has_dbsettprice();
  dbsettprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbSettPrice)
}

// optional double dbPreSettPrice = 58;
inline bool KCBPTagQuoteInfo10::has_dbpresettprice() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbpresettprice() {
  _has_bits_[1] |= 0x02000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbpresettprice() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbpresettprice() {
  dbpresettprice_ = 0;
  clear_has_dbpresettprice();
}
inline double KCBPTagQuoteInfo10::dbpresettprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbPreSettPrice)
  return dbpresettprice_;
}
inline void KCBPTagQuoteInfo10::set_dbpresettprice(double value) {
  set_has_dbpresettprice();
  dbpresettprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbPreSettPrice)
}

// optional double dbFtClosePrice = 59;
inline bool KCBPTagQuoteInfo10::has_dbftcloseprice() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_dbftcloseprice() {
  _has_bits_[1] |= 0x04000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_dbftcloseprice() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void KCBPTagQuoteInfo10::clear_dbftcloseprice() {
  dbftcloseprice_ = 0;
  clear_has_dbftcloseprice();
}
inline double KCBPTagQuoteInfo10::dbftcloseprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.dbFtClosePrice)
  return dbftcloseprice_;
}
inline void KCBPTagQuoteInfo10::set_dbftcloseprice(double value) {
  set_has_dbftcloseprice();
  dbftcloseprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.dbFtClosePrice)
}

// optional int32 cStopFlag = 60;
inline bool KCBPTagQuoteInfo10::has_cstopflag() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_cstopflag() {
  _has_bits_[1] |= 0x08000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_cstopflag() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void KCBPTagQuoteInfo10::clear_cstopflag() {
  cstopflag_ = 0;
  clear_has_cstopflag();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::cstopflag() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.cStopFlag)
  return cstopflag_;
}
inline void KCBPTagQuoteInfo10::set_cstopflag(::google::protobuf::int32 value) {
  set_has_cstopflag();
  cstopflag_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.cStopFlag)
}

// optional int32 nBusidate = 61;
inline bool KCBPTagQuoteInfo10::has_nbusidate() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nbusidate() {
  _has_bits_[1] |= 0x10000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nbusidate() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void KCBPTagQuoteInfo10::clear_nbusidate() {
  nbusidate_ = 0;
  clear_has_nbusidate();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nbusidate() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nBusidate)
  return nbusidate_;
}
inline void KCBPTagQuoteInfo10::set_nbusidate(::google::protobuf::int32 value) {
  set_has_nbusidate();
  nbusidate_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nBusidate)
}

// optional int32 nUpdateTime = 62;
inline bool KCBPTagQuoteInfo10::has_nupdatetime() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nupdatetime() {
  _has_bits_[1] |= 0x20000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nupdatetime() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void KCBPTagQuoteInfo10::clear_nupdatetime() {
  nupdatetime_ = 0;
  clear_has_nupdatetime();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nupdatetime() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nUpdateTime)
  return nupdatetime_;
}
inline void KCBPTagQuoteInfo10::set_nupdatetime(::google::protobuf::int32 value) {
  set_has_nupdatetime();
  nupdatetime_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nUpdateTime)
}

// optional int32 nUpdateMillisec = 63;
inline bool KCBPTagQuoteInfo10::has_nupdatemillisec() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_nupdatemillisec() {
  _has_bits_[1] |= 0x40000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_nupdatemillisec() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void KCBPTagQuoteInfo10::clear_nupdatemillisec() {
  nupdatemillisec_ = 0;
  clear_has_nupdatemillisec();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo10::nupdatemillisec() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.nUpdateMillisec)
  return nupdatemillisec_;
}
inline void KCBPTagQuoteInfo10::set_nupdatemillisec(::google::protobuf::int32 value) {
  set_has_nupdatemillisec();
  nupdatemillisec_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.nUpdateMillisec)
}

// optional string szReserved = 64;
inline bool KCBPTagQuoteInfo10::has_szreserved() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void KCBPTagQuoteInfo10::set_has_szreserved() {
  _has_bits_[1] |= 0x80000000u;
}
inline void KCBPTagQuoteInfo10::clear_has_szreserved() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void KCBPTagQuoteInfo10::clear_szreserved() {
  szreserved_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szreserved();
}
inline const ::std::string& KCBPTagQuoteInfo10::szreserved() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo10.szReserved)
  return szreserved_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_szreserved(const ::std::string& value) {
  set_has_szreserved();
  szreserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo10.szReserved)
}
inline void KCBPTagQuoteInfo10::set_szreserved(const char* value) {
  set_has_szreserved();
  szreserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.KCBPTagQuoteInfo10.szReserved)
}
inline void KCBPTagQuoteInfo10::set_szreserved(const char* value, size_t size) {
  set_has_szreserved();
  szreserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.KCBPTagQuoteInfo10.szReserved)
}
inline ::std::string* KCBPTagQuoteInfo10::mutable_szreserved() {
  set_has_szreserved();
  // @@protoc_insertion_point(field_mutable:XT.KCBPTagQuoteInfo10.szReserved)
  return szreserved_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KCBPTagQuoteInfo10::release_szreserved() {
  // @@protoc_insertion_point(field_release:XT.KCBPTagQuoteInfo10.szReserved)
  clear_has_szreserved();
  return szreserved_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo10::set_allocated_szreserved(::std::string* szreserved) {
  if (szreserved != NULL) {
    set_has_szreserved();
  } else {
    clear_has_szreserved();
  }
  szreserved_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szreserved);
  // @@protoc_insertion_point(field_set_allocated:XT.KCBPTagQuoteInfo10.szReserved)
}

// -------------------------------------------------------------------

// KCBPTagQuoteInfo5

// optional int32 cMarket = 1;
inline bool KCBPTagQuoteInfo5::has_cmarket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_cmarket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KCBPTagQuoteInfo5::clear_has_cmarket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KCBPTagQuoteInfo5::clear_cmarket() {
  cmarket_ = 0;
  clear_has_cmarket();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::cmarket() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.cMarket)
  return cmarket_;
}
inline void KCBPTagQuoteInfo5::set_cmarket(::google::protobuf::int32 value) {
  set_has_cmarket();
  cmarket_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.cMarket)
}

// optional string szStkcode = 2;
inline bool KCBPTagQuoteInfo5::has_szstkcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_szstkcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KCBPTagQuoteInfo5::clear_has_szstkcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KCBPTagQuoteInfo5::clear_szstkcode() {
  szstkcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szstkcode();
}
inline const ::std::string& KCBPTagQuoteInfo5::szstkcode() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.szStkcode)
  return szstkcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo5::set_szstkcode(const ::std::string& value) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.szStkcode)
}
inline void KCBPTagQuoteInfo5::set_szstkcode(const char* value) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.KCBPTagQuoteInfo5.szStkcode)
}
inline void KCBPTagQuoteInfo5::set_szstkcode(const char* value, size_t size) {
  set_has_szstkcode();
  szstkcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.KCBPTagQuoteInfo5.szStkcode)
}
inline ::std::string* KCBPTagQuoteInfo5::mutable_szstkcode() {
  set_has_szstkcode();
  // @@protoc_insertion_point(field_mutable:XT.KCBPTagQuoteInfo5.szStkcode)
  return szstkcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KCBPTagQuoteInfo5::release_szstkcode() {
  // @@protoc_insertion_point(field_release:XT.KCBPTagQuoteInfo5.szStkcode)
  clear_has_szstkcode();
  return szstkcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo5::set_allocated_szstkcode(::std::string* szstkcode) {
  if (szstkcode != NULL) {
    set_has_szstkcode();
  } else {
    clear_has_szstkcode();
  }
  szstkcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szstkcode);
  // @@protoc_insertion_point(field_set_allocated:XT.KCBPTagQuoteInfo5.szStkcode)
}

// optional string szStkname = 3;
inline bool KCBPTagQuoteInfo5::has_szstkname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_szstkname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KCBPTagQuoteInfo5::clear_has_szstkname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KCBPTagQuoteInfo5::clear_szstkname() {
  szstkname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szstkname();
}
inline const ::std::string& KCBPTagQuoteInfo5::szstkname() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.szStkname)
  return szstkname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo5::set_szstkname(const ::std::string& value) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.szStkname)
}
inline void KCBPTagQuoteInfo5::set_szstkname(const char* value) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.KCBPTagQuoteInfo5.szStkname)
}
inline void KCBPTagQuoteInfo5::set_szstkname(const char* value, size_t size) {
  set_has_szstkname();
  szstkname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.KCBPTagQuoteInfo5.szStkname)
}
inline ::std::string* KCBPTagQuoteInfo5::mutable_szstkname() {
  set_has_szstkname();
  // @@protoc_insertion_point(field_mutable:XT.KCBPTagQuoteInfo5.szStkname)
  return szstkname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KCBPTagQuoteInfo5::release_szstkname() {
  // @@protoc_insertion_point(field_release:XT.KCBPTagQuoteInfo5.szStkname)
  clear_has_szstkname();
  return szstkname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KCBPTagQuoteInfo5::set_allocated_szstkname(::std::string* szstkname) {
  if (szstkname != NULL) {
    set_has_szstkname();
  } else {
    clear_has_szstkname();
  }
  szstkname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szstkname);
  // @@protoc_insertion_point(field_set_allocated:XT.KCBPTagQuoteInfo5.szStkname)
}

// optional int32 cProductClass = 4;
inline bool KCBPTagQuoteInfo5::has_cproductclass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_cproductclass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KCBPTagQuoteInfo5::clear_has_cproductclass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KCBPTagQuoteInfo5::clear_cproductclass() {
  cproductclass_ = 0;
  clear_has_cproductclass();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::cproductclass() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.cProductClass)
  return cproductclass_;
}
inline void KCBPTagQuoteInfo5::set_cproductclass(::google::protobuf::int32 value) {
  set_has_cproductclass();
  cproductclass_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.cProductClass)
}

// optional int32 nTradingDay = 5;
inline bool KCBPTagQuoteInfo5::has_ntradingday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_ntradingday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KCBPTagQuoteInfo5::clear_has_ntradingday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KCBPTagQuoteInfo5::clear_ntradingday() {
  ntradingday_ = 0;
  clear_has_ntradingday();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::ntradingday() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nTradingDay)
  return ntradingday_;
}
inline void KCBPTagQuoteInfo5::set_ntradingday(::google::protobuf::int32 value) {
  set_has_ntradingday();
  ntradingday_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nTradingDay)
}

// optional int32 nPreOpenInterest = 6;
inline bool KCBPTagQuoteInfo5::has_npreopeninterest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_npreopeninterest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KCBPTagQuoteInfo5::clear_has_npreopeninterest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KCBPTagQuoteInfo5::clear_npreopeninterest() {
  npreopeninterest_ = 0;
  clear_has_npreopeninterest();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::npreopeninterest() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nPreOpenInterest)
  return npreopeninterest_;
}
inline void KCBPTagQuoteInfo5::set_npreopeninterest(::google::protobuf::int32 value) {
  set_has_npreopeninterest();
  npreopeninterest_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nPreOpenInterest)
}

// optional double dbPreSettPrice = 7;
inline bool KCBPTagQuoteInfo5::has_dbpresettprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbpresettprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbpresettprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KCBPTagQuoteInfo5::clear_dbpresettprice() {
  dbpresettprice_ = 0;
  clear_has_dbpresettprice();
}
inline double KCBPTagQuoteInfo5::dbpresettprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbPreSettPrice)
  return dbpresettprice_;
}
inline void KCBPTagQuoteInfo5::set_dbpresettprice(double value) {
  set_has_dbpresettprice();
  dbpresettprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbPreSettPrice)
}

// optional double dbOpenPrice = 8;
inline bool KCBPTagQuoteInfo5::has_dbopenprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbopenprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbopenprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KCBPTagQuoteInfo5::clear_dbopenprice() {
  dbopenprice_ = 0;
  clear_has_dbopenprice();
}
inline double KCBPTagQuoteInfo5::dbopenprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbOpenPrice)
  return dbopenprice_;
}
inline void KCBPTagQuoteInfo5::set_dbopenprice(double value) {
  set_has_dbopenprice();
  dbopenprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbOpenPrice)
}

// optional double dbUpperLimitPrice = 9;
inline bool KCBPTagQuoteInfo5::has_dbupperlimitprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbupperlimitprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbupperlimitprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KCBPTagQuoteInfo5::clear_dbupperlimitprice() {
  dbupperlimitprice_ = 0;
  clear_has_dbupperlimitprice();
}
inline double KCBPTagQuoteInfo5::dbupperlimitprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbUpperLimitPrice)
  return dbupperlimitprice_;
}
inline void KCBPTagQuoteInfo5::set_dbupperlimitprice(double value) {
  set_has_dbupperlimitprice();
  dbupperlimitprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbUpperLimitPrice)
}

// optional double dbLowerLimitPrice = 10;
inline bool KCBPTagQuoteInfo5::has_dblowerlimitprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dblowerlimitprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void KCBPTagQuoteInfo5::clear_has_dblowerlimitprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void KCBPTagQuoteInfo5::clear_dblowerlimitprice() {
  dblowerlimitprice_ = 0;
  clear_has_dblowerlimitprice();
}
inline double KCBPTagQuoteInfo5::dblowerlimitprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbLowerLimitPrice)
  return dblowerlimitprice_;
}
inline void KCBPTagQuoteInfo5::set_dblowerlimitprice(double value) {
  set_has_dblowerlimitprice();
  dblowerlimitprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbLowerLimitPrice)
}

// optional double dbSettPrice = 11;
inline bool KCBPTagQuoteInfo5::has_dbsettprice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsettprice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsettprice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void KCBPTagQuoteInfo5::clear_dbsettprice() {
  dbsettprice_ = 0;
  clear_has_dbsettprice();
}
inline double KCBPTagQuoteInfo5::dbsettprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSettPrice)
  return dbsettprice_;
}
inline void KCBPTagQuoteInfo5::set_dbsettprice(double value) {
  set_has_dbsettprice();
  dbsettprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSettPrice)
}

// optional double dbClosePrice = 12;
inline bool KCBPTagQuoteInfo5::has_dbcloseprice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbcloseprice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbcloseprice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void KCBPTagQuoteInfo5::clear_dbcloseprice() {
  dbcloseprice_ = 0;
  clear_has_dbcloseprice();
}
inline double KCBPTagQuoteInfo5::dbcloseprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbClosePrice)
  return dbcloseprice_;
}
inline void KCBPTagQuoteInfo5::set_dbcloseprice(double value) {
  set_has_dbcloseprice();
  dbcloseprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbClosePrice)
}

// optional int32 cTpbz = 13;
inline bool KCBPTagQuoteInfo5::has_ctpbz() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_ctpbz() {
  _has_bits_[0] |= 0x00001000u;
}
inline void KCBPTagQuoteInfo5::clear_has_ctpbz() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void KCBPTagQuoteInfo5::clear_ctpbz() {
  ctpbz_ = 0;
  clear_has_ctpbz();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::ctpbz() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.cTpbz)
  return ctpbz_;
}
inline void KCBPTagQuoteInfo5::set_ctpbz(::google::protobuf::int32 value) {
  set_has_ctpbz();
  ctpbz_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.cTpbz)
}

// optional int32 nUpdateMillisec = 14;
inline bool KCBPTagQuoteInfo5::has_nupdatemillisec() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nupdatemillisec() {
  _has_bits_[0] |= 0x00002000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nupdatemillisec() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void KCBPTagQuoteInfo5::clear_nupdatemillisec() {
  nupdatemillisec_ = 0;
  clear_has_nupdatemillisec();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nupdatemillisec() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nUpdateMillisec)
  return nupdatemillisec_;
}
inline void KCBPTagQuoteInfo5::set_nupdatemillisec(::google::protobuf::int32 value) {
  set_has_nupdatemillisec();
  nupdatemillisec_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nUpdateMillisec)
}

// optional int32 nUpdateTime = 15;
inline bool KCBPTagQuoteInfo5::has_nupdatetime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nupdatetime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nupdatetime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void KCBPTagQuoteInfo5::clear_nupdatetime() {
  nupdatetime_ = 0;
  clear_has_nupdatetime();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nupdatetime() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nUpdateTime)
  return nupdatetime_;
}
inline void KCBPTagQuoteInfo5::set_nupdatetime(::google::protobuf::int32 value) {
  set_has_nupdatetime();
  nupdatetime_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nUpdateTime)
}

// optional int32 nOpenInterest = 16;
inline bool KCBPTagQuoteInfo5::has_nopeninterest() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nopeninterest() {
  _has_bits_[0] |= 0x00008000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nopeninterest() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void KCBPTagQuoteInfo5::clear_nopeninterest() {
  nopeninterest_ = 0;
  clear_has_nopeninterest();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nopeninterest() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nOpenInterest)
  return nopeninterest_;
}
inline void KCBPTagQuoteInfo5::set_nopeninterest(::google::protobuf::int32 value) {
  set_has_nopeninterest();
  nopeninterest_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nOpenInterest)
}

// optional double dbMatchQty = 17;
inline bool KCBPTagQuoteInfo5::has_dbmatchqty() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbmatchqty() {
  _has_bits_[0] |= 0x00010000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbmatchqty() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void KCBPTagQuoteInfo5::clear_dbmatchqty() {
  dbmatchqty_ = 0;
  clear_has_dbmatchqty();
}
inline double KCBPTagQuoteInfo5::dbmatchqty() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbMatchQty)
  return dbmatchqty_;
}
inline void KCBPTagQuoteInfo5::set_dbmatchqty(double value) {
  set_has_dbmatchqty();
  dbmatchqty_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbMatchQty)
}

// optional double dbMatchAmt = 18;
inline bool KCBPTagQuoteInfo5::has_dbmatchamt() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbmatchamt() {
  _has_bits_[0] |= 0x00020000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbmatchamt() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void KCBPTagQuoteInfo5::clear_dbmatchamt() {
  dbmatchamt_ = 0;
  clear_has_dbmatchamt();
}
inline double KCBPTagQuoteInfo5::dbmatchamt() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbMatchAmt)
  return dbmatchamt_;
}
inline void KCBPTagQuoteInfo5::set_dbmatchamt(double value) {
  set_has_dbmatchamt();
  dbmatchamt_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbMatchAmt)
}

// optional double dbLastPrice = 19;
inline bool KCBPTagQuoteInfo5::has_dblastprice() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dblastprice() {
  _has_bits_[0] |= 0x00040000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dblastprice() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void KCBPTagQuoteInfo5::clear_dblastprice() {
  dblastprice_ = 0;
  clear_has_dblastprice();
}
inline double KCBPTagQuoteInfo5::dblastprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbLastPrice)
  return dblastprice_;
}
inline void KCBPTagQuoteInfo5::set_dblastprice(double value) {
  set_has_dblastprice();
  dblastprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbLastPrice)
}

// optional double dbAvgPrice = 20;
inline bool KCBPTagQuoteInfo5::has_dbavgprice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbavgprice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbavgprice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void KCBPTagQuoteInfo5::clear_dbavgprice() {
  dbavgprice_ = 0;
  clear_has_dbavgprice();
}
inline double KCBPTagQuoteInfo5::dbavgprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbAvgPrice)
  return dbavgprice_;
}
inline void KCBPTagQuoteInfo5::set_dbavgprice(double value) {
  set_has_dbavgprice();
  dbavgprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbAvgPrice)
}

// optional double dbHighPrice = 21;
inline bool KCBPTagQuoteInfo5::has_dbhighprice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbhighprice() {
  _has_bits_[0] |= 0x00100000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbhighprice() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void KCBPTagQuoteInfo5::clear_dbhighprice() {
  dbhighprice_ = 0;
  clear_has_dbhighprice();
}
inline double KCBPTagQuoteInfo5::dbhighprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbHighPrice)
  return dbhighprice_;
}
inline void KCBPTagQuoteInfo5::set_dbhighprice(double value) {
  set_has_dbhighprice();
  dbhighprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbHighPrice)
}

// optional double dbLowPrice = 22;
inline bool KCBPTagQuoteInfo5::has_dblowprice() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dblowprice() {
  _has_bits_[0] |= 0x00200000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dblowprice() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void KCBPTagQuoteInfo5::clear_dblowprice() {
  dblowprice_ = 0;
  clear_has_dblowprice();
}
inline double KCBPTagQuoteInfo5::dblowprice() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbLowPrice)
  return dblowprice_;
}
inline void KCBPTagQuoteInfo5::set_dblowprice(double value) {
  set_has_dblowprice();
  dblowprice_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbLowPrice)
}

// optional double dbSalePrice0 = 23;
inline bool KCBPTagQuoteInfo5::has_dbsaleprice0() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsaleprice0() {
  _has_bits_[0] |= 0x00400000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsaleprice0() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void KCBPTagQuoteInfo5::clear_dbsaleprice0() {
  dbsaleprice0_ = 0;
  clear_has_dbsaleprice0();
}
inline double KCBPTagQuoteInfo5::dbsaleprice0() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSalePrice0)
  return dbsaleprice0_;
}
inline void KCBPTagQuoteInfo5::set_dbsaleprice0(double value) {
  set_has_dbsaleprice0();
  dbsaleprice0_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSalePrice0)
}

// optional int32 nSaleVolume0 = 24;
inline bool KCBPTagQuoteInfo5::has_nsalevolume0() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nsalevolume0() {
  _has_bits_[0] |= 0x00800000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nsalevolume0() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void KCBPTagQuoteInfo5::clear_nsalevolume0() {
  nsalevolume0_ = 0;
  clear_has_nsalevolume0();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nsalevolume0() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nSaleVolume0)
  return nsalevolume0_;
}
inline void KCBPTagQuoteInfo5::set_nsalevolume0(::google::protobuf::int32 value) {
  set_has_nsalevolume0();
  nsalevolume0_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nSaleVolume0)
}

// optional double dbBuyPrice0 = 25;
inline bool KCBPTagQuoteInfo5::has_dbbuyprice0() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbbuyprice0() {
  _has_bits_[0] |= 0x01000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbbuyprice0() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void KCBPTagQuoteInfo5::clear_dbbuyprice0() {
  dbbuyprice0_ = 0;
  clear_has_dbbuyprice0();
}
inline double KCBPTagQuoteInfo5::dbbuyprice0() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbBuyPrice0)
  return dbbuyprice0_;
}
inline void KCBPTagQuoteInfo5::set_dbbuyprice0(double value) {
  set_has_dbbuyprice0();
  dbbuyprice0_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbBuyPrice0)
}

// optional int32 nBuyVolume0 = 26;
inline bool KCBPTagQuoteInfo5::has_nbuyvolume0() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nbuyvolume0() {
  _has_bits_[0] |= 0x02000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nbuyvolume0() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void KCBPTagQuoteInfo5::clear_nbuyvolume0() {
  nbuyvolume0_ = 0;
  clear_has_nbuyvolume0();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nbuyvolume0() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nBuyVolume0)
  return nbuyvolume0_;
}
inline void KCBPTagQuoteInfo5::set_nbuyvolume0(::google::protobuf::int32 value) {
  set_has_nbuyvolume0();
  nbuyvolume0_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nBuyVolume0)
}

// optional double dbSalePrice1 = 27;
inline bool KCBPTagQuoteInfo5::has_dbsaleprice1() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsaleprice1() {
  _has_bits_[0] |= 0x04000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsaleprice1() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void KCBPTagQuoteInfo5::clear_dbsaleprice1() {
  dbsaleprice1_ = 0;
  clear_has_dbsaleprice1();
}
inline double KCBPTagQuoteInfo5::dbsaleprice1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSalePrice1)
  return dbsaleprice1_;
}
inline void KCBPTagQuoteInfo5::set_dbsaleprice1(double value) {
  set_has_dbsaleprice1();
  dbsaleprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSalePrice1)
}

// optional int32 nSaleVolume1 = 28;
inline bool KCBPTagQuoteInfo5::has_nsalevolume1() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nsalevolume1() {
  _has_bits_[0] |= 0x08000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nsalevolume1() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void KCBPTagQuoteInfo5::clear_nsalevolume1() {
  nsalevolume1_ = 0;
  clear_has_nsalevolume1();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nsalevolume1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nSaleVolume1)
  return nsalevolume1_;
}
inline void KCBPTagQuoteInfo5::set_nsalevolume1(::google::protobuf::int32 value) {
  set_has_nsalevolume1();
  nsalevolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nSaleVolume1)
}

// optional double dbBuyPrice1 = 29;
inline bool KCBPTagQuoteInfo5::has_dbbuyprice1() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbbuyprice1() {
  _has_bits_[0] |= 0x10000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbbuyprice1() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void KCBPTagQuoteInfo5::clear_dbbuyprice1() {
  dbbuyprice1_ = 0;
  clear_has_dbbuyprice1();
}
inline double KCBPTagQuoteInfo5::dbbuyprice1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbBuyPrice1)
  return dbbuyprice1_;
}
inline void KCBPTagQuoteInfo5::set_dbbuyprice1(double value) {
  set_has_dbbuyprice1();
  dbbuyprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbBuyPrice1)
}

// optional int32 nBuyVolume1 = 30;
inline bool KCBPTagQuoteInfo5::has_nbuyvolume1() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nbuyvolume1() {
  _has_bits_[0] |= 0x20000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nbuyvolume1() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void KCBPTagQuoteInfo5::clear_nbuyvolume1() {
  nbuyvolume1_ = 0;
  clear_has_nbuyvolume1();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nbuyvolume1() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nBuyVolume1)
  return nbuyvolume1_;
}
inline void KCBPTagQuoteInfo5::set_nbuyvolume1(::google::protobuf::int32 value) {
  set_has_nbuyvolume1();
  nbuyvolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nBuyVolume1)
}

// optional double dbSalePrice2 = 31;
inline bool KCBPTagQuoteInfo5::has_dbsaleprice2() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsaleprice2() {
  _has_bits_[0] |= 0x40000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsaleprice2() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void KCBPTagQuoteInfo5::clear_dbsaleprice2() {
  dbsaleprice2_ = 0;
  clear_has_dbsaleprice2();
}
inline double KCBPTagQuoteInfo5::dbsaleprice2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSalePrice2)
  return dbsaleprice2_;
}
inline void KCBPTagQuoteInfo5::set_dbsaleprice2(double value) {
  set_has_dbsaleprice2();
  dbsaleprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSalePrice2)
}

// optional int32 nSaleVolume2 = 32;
inline bool KCBPTagQuoteInfo5::has_nsalevolume2() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nsalevolume2() {
  _has_bits_[0] |= 0x80000000u;
}
inline void KCBPTagQuoteInfo5::clear_has_nsalevolume2() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void KCBPTagQuoteInfo5::clear_nsalevolume2() {
  nsalevolume2_ = 0;
  clear_has_nsalevolume2();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nsalevolume2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nSaleVolume2)
  return nsalevolume2_;
}
inline void KCBPTagQuoteInfo5::set_nsalevolume2(::google::protobuf::int32 value) {
  set_has_nsalevolume2();
  nsalevolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nSaleVolume2)
}

// optional double dbBuyPrice2 = 33;
inline bool KCBPTagQuoteInfo5::has_dbbuyprice2() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbbuyprice2() {
  _has_bits_[1] |= 0x00000001u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbbuyprice2() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void KCBPTagQuoteInfo5::clear_dbbuyprice2() {
  dbbuyprice2_ = 0;
  clear_has_dbbuyprice2();
}
inline double KCBPTagQuoteInfo5::dbbuyprice2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbBuyPrice2)
  return dbbuyprice2_;
}
inline void KCBPTagQuoteInfo5::set_dbbuyprice2(double value) {
  set_has_dbbuyprice2();
  dbbuyprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbBuyPrice2)
}

// optional int32 nBuyVolume2 = 34;
inline bool KCBPTagQuoteInfo5::has_nbuyvolume2() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nbuyvolume2() {
  _has_bits_[1] |= 0x00000002u;
}
inline void KCBPTagQuoteInfo5::clear_has_nbuyvolume2() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void KCBPTagQuoteInfo5::clear_nbuyvolume2() {
  nbuyvolume2_ = 0;
  clear_has_nbuyvolume2();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nbuyvolume2() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nBuyVolume2)
  return nbuyvolume2_;
}
inline void KCBPTagQuoteInfo5::set_nbuyvolume2(::google::protobuf::int32 value) {
  set_has_nbuyvolume2();
  nbuyvolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nBuyVolume2)
}

// optional double dbSalePrice3 = 35;
inline bool KCBPTagQuoteInfo5::has_dbsaleprice3() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsaleprice3() {
  _has_bits_[1] |= 0x00000004u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsaleprice3() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void KCBPTagQuoteInfo5::clear_dbsaleprice3() {
  dbsaleprice3_ = 0;
  clear_has_dbsaleprice3();
}
inline double KCBPTagQuoteInfo5::dbsaleprice3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSalePrice3)
  return dbsaleprice3_;
}
inline void KCBPTagQuoteInfo5::set_dbsaleprice3(double value) {
  set_has_dbsaleprice3();
  dbsaleprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSalePrice3)
}

// optional int32 nSaleVolume3 = 36;
inline bool KCBPTagQuoteInfo5::has_nsalevolume3() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nsalevolume3() {
  _has_bits_[1] |= 0x00000008u;
}
inline void KCBPTagQuoteInfo5::clear_has_nsalevolume3() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void KCBPTagQuoteInfo5::clear_nsalevolume3() {
  nsalevolume3_ = 0;
  clear_has_nsalevolume3();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nsalevolume3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nSaleVolume3)
  return nsalevolume3_;
}
inline void KCBPTagQuoteInfo5::set_nsalevolume3(::google::protobuf::int32 value) {
  set_has_nsalevolume3();
  nsalevolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nSaleVolume3)
}

// optional double dbBuyPrice3 = 37;
inline bool KCBPTagQuoteInfo5::has_dbbuyprice3() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbbuyprice3() {
  _has_bits_[1] |= 0x00000010u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbbuyprice3() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void KCBPTagQuoteInfo5::clear_dbbuyprice3() {
  dbbuyprice3_ = 0;
  clear_has_dbbuyprice3();
}
inline double KCBPTagQuoteInfo5::dbbuyprice3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbBuyPrice3)
  return dbbuyprice3_;
}
inline void KCBPTagQuoteInfo5::set_dbbuyprice3(double value) {
  set_has_dbbuyprice3();
  dbbuyprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbBuyPrice3)
}

// optional int32 nBuyVolume3 = 38;
inline bool KCBPTagQuoteInfo5::has_nbuyvolume3() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nbuyvolume3() {
  _has_bits_[1] |= 0x00000020u;
}
inline void KCBPTagQuoteInfo5::clear_has_nbuyvolume3() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void KCBPTagQuoteInfo5::clear_nbuyvolume3() {
  nbuyvolume3_ = 0;
  clear_has_nbuyvolume3();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nbuyvolume3() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nBuyVolume3)
  return nbuyvolume3_;
}
inline void KCBPTagQuoteInfo5::set_nbuyvolume3(::google::protobuf::int32 value) {
  set_has_nbuyvolume3();
  nbuyvolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nBuyVolume3)
}

// optional double dbSalePrice4 = 39;
inline bool KCBPTagQuoteInfo5::has_dbsaleprice4() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbsaleprice4() {
  _has_bits_[1] |= 0x00000040u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbsaleprice4() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void KCBPTagQuoteInfo5::clear_dbsaleprice4() {
  dbsaleprice4_ = 0;
  clear_has_dbsaleprice4();
}
inline double KCBPTagQuoteInfo5::dbsaleprice4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbSalePrice4)
  return dbsaleprice4_;
}
inline void KCBPTagQuoteInfo5::set_dbsaleprice4(double value) {
  set_has_dbsaleprice4();
  dbsaleprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbSalePrice4)
}

// optional int32 nSaleVolume4 = 40;
inline bool KCBPTagQuoteInfo5::has_nsalevolume4() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nsalevolume4() {
  _has_bits_[1] |= 0x00000080u;
}
inline void KCBPTagQuoteInfo5::clear_has_nsalevolume4() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void KCBPTagQuoteInfo5::clear_nsalevolume4() {
  nsalevolume4_ = 0;
  clear_has_nsalevolume4();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nsalevolume4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nSaleVolume4)
  return nsalevolume4_;
}
inline void KCBPTagQuoteInfo5::set_nsalevolume4(::google::protobuf::int32 value) {
  set_has_nsalevolume4();
  nsalevolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nSaleVolume4)
}

// optional double dbBuyPrice4 = 41;
inline bool KCBPTagQuoteInfo5::has_dbbuyprice4() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_dbbuyprice4() {
  _has_bits_[1] |= 0x00000100u;
}
inline void KCBPTagQuoteInfo5::clear_has_dbbuyprice4() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void KCBPTagQuoteInfo5::clear_dbbuyprice4() {
  dbbuyprice4_ = 0;
  clear_has_dbbuyprice4();
}
inline double KCBPTagQuoteInfo5::dbbuyprice4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.dbBuyPrice4)
  return dbbuyprice4_;
}
inline void KCBPTagQuoteInfo5::set_dbbuyprice4(double value) {
  set_has_dbbuyprice4();
  dbbuyprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.dbBuyPrice4)
}

// optional int32 nBuyVolume4 = 42;
inline bool KCBPTagQuoteInfo5::has_nbuyvolume4() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void KCBPTagQuoteInfo5::set_has_nbuyvolume4() {
  _has_bits_[1] |= 0x00000200u;
}
inline void KCBPTagQuoteInfo5::clear_has_nbuyvolume4() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void KCBPTagQuoteInfo5::clear_nbuyvolume4() {
  nbuyvolume4_ = 0;
  clear_has_nbuyvolume4();
}
inline ::google::protobuf::int32 KCBPTagQuoteInfo5::nbuyvolume4() const {
  // @@protoc_insertion_point(field_get:XT.KCBPTagQuoteInfo5.nBuyVolume4)
  return nbuyvolume4_;
}
inline void KCBPTagQuoteInfo5::set_nbuyvolume4(::google::protobuf::int32 value) {
  set_has_nbuyvolume4();
  nbuyvolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.KCBPTagQuoteInfo5.nBuyVolume4)
}

// -------------------------------------------------------------------

// SinaQuoteData

// optional string exchid = 1;
inline bool SinaQuoteData::has_exchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SinaQuoteData::set_has_exchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SinaQuoteData::clear_has_exchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SinaQuoteData::clear_exchid() {
  exchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exchid();
}
inline const ::std::string& SinaQuoteData::exchid() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.exchid)
  return exchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_exchid(const ::std::string& value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.exchid)
}
inline void SinaQuoteData::set_exchid(const char* value) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SinaQuoteData.exchid)
}
inline void SinaQuoteData::set_exchid(const char* value, size_t size) {
  set_has_exchid();
  exchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SinaQuoteData.exchid)
}
inline ::std::string* SinaQuoteData::mutable_exchid() {
  set_has_exchid();
  // @@protoc_insertion_point(field_mutable:XT.SinaQuoteData.exchid)
  return exchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinaQuoteData::release_exchid() {
  // @@protoc_insertion_point(field_release:XT.SinaQuoteData.exchid)
  clear_has_exchid();
  return exchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_allocated_exchid(::std::string* exchid) {
  if (exchid != NULL) {
    set_has_exchid();
  } else {
    clear_has_exchid();
  }
  exchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchid);
  // @@protoc_insertion_point(field_set_allocated:XT.SinaQuoteData.exchid)
}

// optional string instrid = 2;
inline bool SinaQuoteData::has_instrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SinaQuoteData::set_has_instrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SinaQuoteData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SinaQuoteData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& SinaQuoteData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.instrid)
}
inline void SinaQuoteData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SinaQuoteData.instrid)
}
inline void SinaQuoteData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SinaQuoteData.instrid)
}
inline ::std::string* SinaQuoteData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.SinaQuoteData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinaQuoteData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.SinaQuoteData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.SinaQuoteData.instrid)
}

// optional string instrumentName = 3;
inline bool SinaQuoteData::has_instrumentname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SinaQuoteData::set_has_instrumentname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SinaQuoteData::clear_has_instrumentname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SinaQuoteData::clear_instrumentname() {
  instrumentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrumentname();
}
inline const ::std::string& SinaQuoteData::instrumentname() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.instrumentName)
  return instrumentname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_instrumentname(const ::std::string& value) {
  set_has_instrumentname();
  instrumentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.instrumentName)
}
inline void SinaQuoteData::set_instrumentname(const char* value) {
  set_has_instrumentname();
  instrumentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SinaQuoteData.instrumentName)
}
inline void SinaQuoteData::set_instrumentname(const char* value, size_t size) {
  set_has_instrumentname();
  instrumentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SinaQuoteData.instrumentName)
}
inline ::std::string* SinaQuoteData::mutable_instrumentname() {
  set_has_instrumentname();
  // @@protoc_insertion_point(field_mutable:XT.SinaQuoteData.instrumentName)
  return instrumentname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinaQuoteData::release_instrumentname() {
  // @@protoc_insertion_point(field_release:XT.SinaQuoteData.instrumentName)
  clear_has_instrumentname();
  return instrumentname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_allocated_instrumentname(::std::string* instrumentname) {
  if (instrumentname != NULL) {
    set_has_instrumentname();
  } else {
    clear_has_instrumentname();
  }
  instrumentname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrumentname);
  // @@protoc_insertion_point(field_set_allocated:XT.SinaQuoteData.instrumentName)
}

// optional string dateStr = 4;
inline bool SinaQuoteData::has_datestr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SinaQuoteData::set_has_datestr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SinaQuoteData::clear_has_datestr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SinaQuoteData::clear_datestr() {
  datestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datestr();
}
inline const ::std::string& SinaQuoteData::datestr() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.dateStr)
  return datestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_datestr(const ::std::string& value) {
  set_has_datestr();
  datestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.dateStr)
}
inline void SinaQuoteData::set_datestr(const char* value) {
  set_has_datestr();
  datestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SinaQuoteData.dateStr)
}
inline void SinaQuoteData::set_datestr(const char* value, size_t size) {
  set_has_datestr();
  datestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SinaQuoteData.dateStr)
}
inline ::std::string* SinaQuoteData::mutable_datestr() {
  set_has_datestr();
  // @@protoc_insertion_point(field_mutable:XT.SinaQuoteData.dateStr)
  return datestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinaQuoteData::release_datestr() {
  // @@protoc_insertion_point(field_release:XT.SinaQuoteData.dateStr)
  clear_has_datestr();
  return datestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_allocated_datestr(::std::string* datestr) {
  if (datestr != NULL) {
    set_has_datestr();
  } else {
    clear_has_datestr();
  }
  datestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datestr);
  // @@protoc_insertion_point(field_set_allocated:XT.SinaQuoteData.dateStr)
}

// optional string timeStr = 5;
inline bool SinaQuoteData::has_timestr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SinaQuoteData::set_has_timestr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SinaQuoteData::clear_has_timestr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SinaQuoteData::clear_timestr() {
  timestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestr();
}
inline const ::std::string& SinaQuoteData::timestr() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.timeStr)
  return timestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_timestr(const ::std::string& value) {
  set_has_timestr();
  timestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.timeStr)
}
inline void SinaQuoteData::set_timestr(const char* value) {
  set_has_timestr();
  timestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.SinaQuoteData.timeStr)
}
inline void SinaQuoteData::set_timestr(const char* value, size_t size) {
  set_has_timestr();
  timestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.SinaQuoteData.timeStr)
}
inline ::std::string* SinaQuoteData::mutable_timestr() {
  set_has_timestr();
  // @@protoc_insertion_point(field_mutable:XT.SinaQuoteData.timeStr)
  return timestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinaQuoteData::release_timestr() {
  // @@protoc_insertion_point(field_release:XT.SinaQuoteData.timeStr)
  clear_has_timestr();
  return timestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinaQuoteData::set_allocated_timestr(::std::string* timestr) {
  if (timestr != NULL) {
    set_has_timestr();
  } else {
    clear_has_timestr();
  }
  timestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestr);
  // @@protoc_insertion_point(field_set_allocated:XT.SinaQuoteData.timeStr)
}

// optional double dTotVolume = 6;
inline bool SinaQuoteData::has_dtotvolume() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SinaQuoteData::set_has_dtotvolume() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SinaQuoteData::clear_has_dtotvolume() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SinaQuoteData::clear_dtotvolume() {
  dtotvolume_ = 0;
  clear_has_dtotvolume();
}
inline double SinaQuoteData::dtotvolume() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.dTotVolume)
  return dtotvolume_;
}
inline void SinaQuoteData::set_dtotvolume(double value) {
  set_has_dtotvolume();
  dtotvolume_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.dTotVolume)
}

// optional double turnover = 7;
inline bool SinaQuoteData::has_turnover() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SinaQuoteData::set_has_turnover() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SinaQuoteData::clear_has_turnover() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SinaQuoteData::clear_turnover() {
  turnover_ = 0;
  clear_has_turnover();
}
inline double SinaQuoteData::turnover() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.turnover)
  return turnover_;
}
inline void SinaQuoteData::set_turnover(double value) {
  set_has_turnover();
  turnover_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.turnover)
}

// optional double lastPx = 8;
inline bool SinaQuoteData::has_lastpx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SinaQuoteData::set_has_lastpx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SinaQuoteData::clear_has_lastpx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SinaQuoteData::clear_lastpx() {
  lastpx_ = 0;
  clear_has_lastpx();
}
inline double SinaQuoteData::lastpx() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.lastPx)
  return lastpx_;
}
inline void SinaQuoteData::set_lastpx(double value) {
  set_has_lastpx();
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.lastPx)
}

// optional double openPrice = 9;
inline bool SinaQuoteData::has_openprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SinaQuoteData::set_has_openprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SinaQuoteData::clear_has_openprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SinaQuoteData::clear_openprice() {
  openprice_ = 0;
  clear_has_openprice();
}
inline double SinaQuoteData::openprice() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.openPrice)
  return openprice_;
}
inline void SinaQuoteData::set_openprice(double value) {
  set_has_openprice();
  openprice_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.openPrice)
}

// optional double highPx = 10;
inline bool SinaQuoteData::has_highpx() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SinaQuoteData::set_has_highpx() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SinaQuoteData::clear_has_highpx() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SinaQuoteData::clear_highpx() {
  highpx_ = 0;
  clear_has_highpx();
}
inline double SinaQuoteData::highpx() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.highPx)
  return highpx_;
}
inline void SinaQuoteData::set_highpx(double value) {
  set_has_highpx();
  highpx_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.highPx)
}

// optional double lowPx = 11;
inline bool SinaQuoteData::has_lowpx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SinaQuoteData::set_has_lowpx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SinaQuoteData::clear_has_lowpx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SinaQuoteData::clear_lowpx() {
  lowpx_ = 0;
  clear_has_lowpx();
}
inline double SinaQuoteData::lowpx() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.lowPx)
  return lowpx_;
}
inline void SinaQuoteData::set_lowpx(double value) {
  set_has_lowpx();
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.lowPx)
}

// optional double closePrice = 12;
inline bool SinaQuoteData::has_closeprice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SinaQuoteData::set_has_closeprice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SinaQuoteData::clear_has_closeprice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SinaQuoteData::clear_closeprice() {
  closeprice_ = 0;
  clear_has_closeprice();
}
inline double SinaQuoteData::closeprice() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.closePrice)
  return closeprice_;
}
inline void SinaQuoteData::set_closeprice(double value) {
  set_has_closeprice();
  closeprice_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.closePrice)
}

// optional double bidPrice1 = 13;
inline bool SinaQuoteData::has_bidprice1() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SinaQuoteData::set_has_bidprice1() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SinaQuoteData::clear_has_bidprice1() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SinaQuoteData::clear_bidprice1() {
  bidprice1_ = 0;
  clear_has_bidprice1();
}
inline double SinaQuoteData::bidprice1() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidPrice1)
  return bidprice1_;
}
inline void SinaQuoteData::set_bidprice1(double value) {
  set_has_bidprice1();
  bidprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidPrice1)
}

// optional int32 bidVolume1 = 14;
inline bool SinaQuoteData::has_bidvolume1() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SinaQuoteData::set_has_bidvolume1() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SinaQuoteData::clear_has_bidvolume1() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SinaQuoteData::clear_bidvolume1() {
  bidvolume1_ = 0;
  clear_has_bidvolume1();
}
inline ::google::protobuf::int32 SinaQuoteData::bidvolume1() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidVolume1)
  return bidvolume1_;
}
inline void SinaQuoteData::set_bidvolume1(::google::protobuf::int32 value) {
  set_has_bidvolume1();
  bidvolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidVolume1)
}

// optional double askPrice1 = 15;
inline bool SinaQuoteData::has_askprice1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SinaQuoteData::set_has_askprice1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SinaQuoteData::clear_has_askprice1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SinaQuoteData::clear_askprice1() {
  askprice1_ = 0;
  clear_has_askprice1();
}
inline double SinaQuoteData::askprice1() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askPrice1)
  return askprice1_;
}
inline void SinaQuoteData::set_askprice1(double value) {
  set_has_askprice1();
  askprice1_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askPrice1)
}

// optional int32 askVolume1 = 16;
inline bool SinaQuoteData::has_askvolume1() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SinaQuoteData::set_has_askvolume1() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SinaQuoteData::clear_has_askvolume1() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SinaQuoteData::clear_askvolume1() {
  askvolume1_ = 0;
  clear_has_askvolume1();
}
inline ::google::protobuf::int32 SinaQuoteData::askvolume1() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askVolume1)
  return askvolume1_;
}
inline void SinaQuoteData::set_askvolume1(::google::protobuf::int32 value) {
  set_has_askvolume1();
  askvolume1_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askVolume1)
}

// optional double bidPrice2 = 17;
inline bool SinaQuoteData::has_bidprice2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SinaQuoteData::set_has_bidprice2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SinaQuoteData::clear_has_bidprice2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SinaQuoteData::clear_bidprice2() {
  bidprice2_ = 0;
  clear_has_bidprice2();
}
inline double SinaQuoteData::bidprice2() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidPrice2)
  return bidprice2_;
}
inline void SinaQuoteData::set_bidprice2(double value) {
  set_has_bidprice2();
  bidprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidPrice2)
}

// optional int32 bidVolume2 = 18;
inline bool SinaQuoteData::has_bidvolume2() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SinaQuoteData::set_has_bidvolume2() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SinaQuoteData::clear_has_bidvolume2() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SinaQuoteData::clear_bidvolume2() {
  bidvolume2_ = 0;
  clear_has_bidvolume2();
}
inline ::google::protobuf::int32 SinaQuoteData::bidvolume2() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidVolume2)
  return bidvolume2_;
}
inline void SinaQuoteData::set_bidvolume2(::google::protobuf::int32 value) {
  set_has_bidvolume2();
  bidvolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidVolume2)
}

// optional double askPrice2 = 19;
inline bool SinaQuoteData::has_askprice2() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SinaQuoteData::set_has_askprice2() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SinaQuoteData::clear_has_askprice2() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SinaQuoteData::clear_askprice2() {
  askprice2_ = 0;
  clear_has_askprice2();
}
inline double SinaQuoteData::askprice2() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askPrice2)
  return askprice2_;
}
inline void SinaQuoteData::set_askprice2(double value) {
  set_has_askprice2();
  askprice2_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askPrice2)
}

// optional int32 askVolume2 = 20;
inline bool SinaQuoteData::has_askvolume2() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SinaQuoteData::set_has_askvolume2() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SinaQuoteData::clear_has_askvolume2() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SinaQuoteData::clear_askvolume2() {
  askvolume2_ = 0;
  clear_has_askvolume2();
}
inline ::google::protobuf::int32 SinaQuoteData::askvolume2() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askVolume2)
  return askvolume2_;
}
inline void SinaQuoteData::set_askvolume2(::google::protobuf::int32 value) {
  set_has_askvolume2();
  askvolume2_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askVolume2)
}

// optional double bidPrice3 = 21;
inline bool SinaQuoteData::has_bidprice3() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SinaQuoteData::set_has_bidprice3() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SinaQuoteData::clear_has_bidprice3() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SinaQuoteData::clear_bidprice3() {
  bidprice3_ = 0;
  clear_has_bidprice3();
}
inline double SinaQuoteData::bidprice3() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidPrice3)
  return bidprice3_;
}
inline void SinaQuoteData::set_bidprice3(double value) {
  set_has_bidprice3();
  bidprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidPrice3)
}

// optional int32 bidVolume3 = 22;
inline bool SinaQuoteData::has_bidvolume3() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SinaQuoteData::set_has_bidvolume3() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SinaQuoteData::clear_has_bidvolume3() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SinaQuoteData::clear_bidvolume3() {
  bidvolume3_ = 0;
  clear_has_bidvolume3();
}
inline ::google::protobuf::int32 SinaQuoteData::bidvolume3() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidVolume3)
  return bidvolume3_;
}
inline void SinaQuoteData::set_bidvolume3(::google::protobuf::int32 value) {
  set_has_bidvolume3();
  bidvolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidVolume3)
}

// optional double askPrice3 = 23;
inline bool SinaQuoteData::has_askprice3() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SinaQuoteData::set_has_askprice3() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SinaQuoteData::clear_has_askprice3() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SinaQuoteData::clear_askprice3() {
  askprice3_ = 0;
  clear_has_askprice3();
}
inline double SinaQuoteData::askprice3() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askPrice3)
  return askprice3_;
}
inline void SinaQuoteData::set_askprice3(double value) {
  set_has_askprice3();
  askprice3_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askPrice3)
}

// optional int32 askVolume3 = 24;
inline bool SinaQuoteData::has_askvolume3() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SinaQuoteData::set_has_askvolume3() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SinaQuoteData::clear_has_askvolume3() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SinaQuoteData::clear_askvolume3() {
  askvolume3_ = 0;
  clear_has_askvolume3();
}
inline ::google::protobuf::int32 SinaQuoteData::askvolume3() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askVolume3)
  return askvolume3_;
}
inline void SinaQuoteData::set_askvolume3(::google::protobuf::int32 value) {
  set_has_askvolume3();
  askvolume3_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askVolume3)
}

// optional double bidPrice4 = 25;
inline bool SinaQuoteData::has_bidprice4() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SinaQuoteData::set_has_bidprice4() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SinaQuoteData::clear_has_bidprice4() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SinaQuoteData::clear_bidprice4() {
  bidprice4_ = 0;
  clear_has_bidprice4();
}
inline double SinaQuoteData::bidprice4() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidPrice4)
  return bidprice4_;
}
inline void SinaQuoteData::set_bidprice4(double value) {
  set_has_bidprice4();
  bidprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidPrice4)
}

// optional int32 bidVolume4 = 26;
inline bool SinaQuoteData::has_bidvolume4() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SinaQuoteData::set_has_bidvolume4() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SinaQuoteData::clear_has_bidvolume4() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SinaQuoteData::clear_bidvolume4() {
  bidvolume4_ = 0;
  clear_has_bidvolume4();
}
inline ::google::protobuf::int32 SinaQuoteData::bidvolume4() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidVolume4)
  return bidvolume4_;
}
inline void SinaQuoteData::set_bidvolume4(::google::protobuf::int32 value) {
  set_has_bidvolume4();
  bidvolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidVolume4)
}

// optional double askPrice4 = 27;
inline bool SinaQuoteData::has_askprice4() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SinaQuoteData::set_has_askprice4() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SinaQuoteData::clear_has_askprice4() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SinaQuoteData::clear_askprice4() {
  askprice4_ = 0;
  clear_has_askprice4();
}
inline double SinaQuoteData::askprice4() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askPrice4)
  return askprice4_;
}
inline void SinaQuoteData::set_askprice4(double value) {
  set_has_askprice4();
  askprice4_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askPrice4)
}

// optional int32 askVolume4 = 28;
inline bool SinaQuoteData::has_askvolume4() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SinaQuoteData::set_has_askvolume4() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SinaQuoteData::clear_has_askvolume4() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SinaQuoteData::clear_askvolume4() {
  askvolume4_ = 0;
  clear_has_askvolume4();
}
inline ::google::protobuf::int32 SinaQuoteData::askvolume4() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askVolume4)
  return askvolume4_;
}
inline void SinaQuoteData::set_askvolume4(::google::protobuf::int32 value) {
  set_has_askvolume4();
  askvolume4_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askVolume4)
}

// optional double bidPrice5 = 29;
inline bool SinaQuoteData::has_bidprice5() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SinaQuoteData::set_has_bidprice5() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SinaQuoteData::clear_has_bidprice5() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SinaQuoteData::clear_bidprice5() {
  bidprice5_ = 0;
  clear_has_bidprice5();
}
inline double SinaQuoteData::bidprice5() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidPrice5)
  return bidprice5_;
}
inline void SinaQuoteData::set_bidprice5(double value) {
  set_has_bidprice5();
  bidprice5_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidPrice5)
}

// optional int32 bidVolume5 = 30;
inline bool SinaQuoteData::has_bidvolume5() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SinaQuoteData::set_has_bidvolume5() {
  _has_bits_[0] |= 0x20000000u;
}
inline void SinaQuoteData::clear_has_bidvolume5() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void SinaQuoteData::clear_bidvolume5() {
  bidvolume5_ = 0;
  clear_has_bidvolume5();
}
inline ::google::protobuf::int32 SinaQuoteData::bidvolume5() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.bidVolume5)
  return bidvolume5_;
}
inline void SinaQuoteData::set_bidvolume5(::google::protobuf::int32 value) {
  set_has_bidvolume5();
  bidvolume5_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.bidVolume5)
}

// optional double askPrice5 = 31;
inline bool SinaQuoteData::has_askprice5() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SinaQuoteData::set_has_askprice5() {
  _has_bits_[0] |= 0x40000000u;
}
inline void SinaQuoteData::clear_has_askprice5() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void SinaQuoteData::clear_askprice5() {
  askprice5_ = 0;
  clear_has_askprice5();
}
inline double SinaQuoteData::askprice5() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askPrice5)
  return askprice5_;
}
inline void SinaQuoteData::set_askprice5(double value) {
  set_has_askprice5();
  askprice5_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askPrice5)
}

// optional int32 askVolume5 = 32;
inline bool SinaQuoteData::has_askvolume5() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SinaQuoteData::set_has_askvolume5() {
  _has_bits_[0] |= 0x80000000u;
}
inline void SinaQuoteData::clear_has_askvolume5() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void SinaQuoteData::clear_askvolume5() {
  askvolume5_ = 0;
  clear_has_askvolume5();
}
inline ::google::protobuf::int32 SinaQuoteData::askvolume5() const {
  // @@protoc_insertion_point(field_get:XT.SinaQuoteData.askVolume5)
  return askvolume5_;
}
inline void SinaQuoteData::set_askvolume5(::google::protobuf::int32 value) {
  set_has_askvolume5();
  askvolume5_ = value;
  // @@protoc_insertion_point(field_set:XT.SinaQuoteData.askVolume5)
}

// -------------------------------------------------------------------

// PyAT_OrderExecutionInfo

// optional double price = 1 [default = 0];
inline bool PyAT_OrderExecutionInfo::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyAT_OrderExecutionInfo::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyAT_OrderExecutionInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyAT_OrderExecutionInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline double PyAT_OrderExecutionInfo::price() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderExecutionInfo.price)
  return price_;
}
inline void PyAT_OrderExecutionInfo::set_price(double value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderExecutionInfo.price)
}

// optional int32 quantity = 2 [default = 0];
inline bool PyAT_OrderExecutionInfo::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyAT_OrderExecutionInfo::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyAT_OrderExecutionInfo::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyAT_OrderExecutionInfo::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 PyAT_OrderExecutionInfo::quantity() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderExecutionInfo.quantity)
  return quantity_;
}
inline void PyAT_OrderExecutionInfo::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderExecutionInfo.quantity)
}

// optional double commission = 3 [default = 0];
inline bool PyAT_OrderExecutionInfo::has_commission() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyAT_OrderExecutionInfo::set_has_commission() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyAT_OrderExecutionInfo::clear_has_commission() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyAT_OrderExecutionInfo::clear_commission() {
  commission_ = 0;
  clear_has_commission();
}
inline double PyAT_OrderExecutionInfo::commission() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderExecutionInfo.commission)
  return commission_;
}
inline void PyAT_OrderExecutionInfo::set_commission(double value) {
  set_has_commission();
  commission_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderExecutionInfo.commission)
}

// optional string filldatetime = 4 [default = ""];
inline bool PyAT_OrderExecutionInfo::has_filldatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PyAT_OrderExecutionInfo::set_has_filldatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PyAT_OrderExecutionInfo::clear_has_filldatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PyAT_OrderExecutionInfo::clear_filldatetime() {
  filldatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filldatetime();
}
inline const ::std::string& PyAT_OrderExecutionInfo::filldatetime() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderExecutionInfo.filldatetime)
  return filldatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderExecutionInfo::set_filldatetime(const ::std::string& value) {
  set_has_filldatetime();
  filldatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderExecutionInfo.filldatetime)
}
inline void PyAT_OrderExecutionInfo::set_filldatetime(const char* value) {
  set_has_filldatetime();
  filldatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PyAT_OrderExecutionInfo.filldatetime)
}
inline void PyAT_OrderExecutionInfo::set_filldatetime(const char* value, size_t size) {
  set_has_filldatetime();
  filldatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PyAT_OrderExecutionInfo.filldatetime)
}
inline ::std::string* PyAT_OrderExecutionInfo::mutable_filldatetime() {
  set_has_filldatetime();
  // @@protoc_insertion_point(field_mutable:XT.PyAT_OrderExecutionInfo.filldatetime)
  return filldatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PyAT_OrderExecutionInfo::release_filldatetime() {
  // @@protoc_insertion_point(field_release:XT.PyAT_OrderExecutionInfo.filldatetime)
  clear_has_filldatetime();
  return filldatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderExecutionInfo::set_allocated_filldatetime(::std::string* filldatetime) {
  if (filldatetime != NULL) {
    set_has_filldatetime();
  } else {
    clear_has_filldatetime();
  }
  filldatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filldatetime);
  // @@protoc_insertion_point(field_set_allocated:XT.PyAT_OrderExecutionInfo.filldatetime)
}

// -------------------------------------------------------------------

// PyAT_OrderData

// optional int32 id = 1 [default = 0];
inline bool PyAT_OrderData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyAT_OrderData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyAT_OrderData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyAT_OrderData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PyAT_OrderData::id() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.id)
  return id_;
}
inline void PyAT_OrderData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.id)
}

// optional int32 ordertype = 2 [default = 0];
inline bool PyAT_OrderData::has_ordertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyAT_OrderData::set_has_ordertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyAT_OrderData::clear_has_ordertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyAT_OrderData::clear_ordertype() {
  ordertype_ = 0;
  clear_has_ordertype();
}
inline ::google::protobuf::int32 PyAT_OrderData::ordertype() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.ordertype)
  return ordertype_;
}
inline void PyAT_OrderData::set_ordertype(::google::protobuf::int32 value) {
  set_has_ordertype();
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.ordertype)
}

// optional int32 orderaction = 3 [default = 0];
inline bool PyAT_OrderData::has_orderaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyAT_OrderData::set_has_orderaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyAT_OrderData::clear_has_orderaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyAT_OrderData::clear_orderaction() {
  orderaction_ = 0;
  clear_has_orderaction();
}
inline ::google::protobuf::int32 PyAT_OrderData::orderaction() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.orderaction)
  return orderaction_;
}
inline void PyAT_OrderData::set_orderaction(::google::protobuf::int32 value) {
  set_has_orderaction();
  orderaction_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.orderaction)
}

// optional string instrid = 4 [default = ""];
inline bool PyAT_OrderData::has_instrid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PyAT_OrderData::set_has_instrid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PyAT_OrderData::clear_has_instrid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PyAT_OrderData::clear_instrid() {
  instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrid();
}
inline const ::std::string& PyAT_OrderData::instrid() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.instrid)
  return instrid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_instrid(const ::std::string& value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.instrid)
}
inline void PyAT_OrderData::set_instrid(const char* value) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PyAT_OrderData.instrid)
}
inline void PyAT_OrderData::set_instrid(const char* value, size_t size) {
  set_has_instrid();
  instrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PyAT_OrderData.instrid)
}
inline ::std::string* PyAT_OrderData::mutable_instrid() {
  set_has_instrid();
  // @@protoc_insertion_point(field_mutable:XT.PyAT_OrderData.instrid)
  return instrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PyAT_OrderData::release_instrid() {
  // @@protoc_insertion_point(field_release:XT.PyAT_OrderData.instrid)
  clear_has_instrid();
  return instrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_allocated_instrid(::std::string* instrid) {
  if (instrid != NULL) {
    set_has_instrid();
  } else {
    clear_has_instrid();
  }
  instrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrid);
  // @@protoc_insertion_point(field_set_allocated:XT.PyAT_OrderData.instrid)
}

// optional int32 quantity = 5 [default = 0];
inline bool PyAT_OrderData::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PyAT_OrderData::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PyAT_OrderData::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PyAT_OrderData::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 PyAT_OrderData::quantity() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.quantity)
  return quantity_;
}
inline void PyAT_OrderData::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.quantity)
}

// optional int32 filledsz = 6 [default = 0];
inline bool PyAT_OrderData::has_filledsz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PyAT_OrderData::set_has_filledsz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PyAT_OrderData::clear_has_filledsz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PyAT_OrderData::clear_filledsz() {
  filledsz_ = 0;
  clear_has_filledsz();
}
inline ::google::protobuf::int32 PyAT_OrderData::filledsz() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.filledsz)
  return filledsz_;
}
inline void PyAT_OrderData::set_filledsz(::google::protobuf::int32 value) {
  set_has_filledsz();
  filledsz_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.filledsz)
}

// optional double avgfillprice = 7 [default = 0];
inline bool PyAT_OrderData::has_avgfillprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PyAT_OrderData::set_has_avgfillprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PyAT_OrderData::clear_has_avgfillprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PyAT_OrderData::clear_avgfillprice() {
  avgfillprice_ = 0;
  clear_has_avgfillprice();
}
inline double PyAT_OrderData::avgfillprice() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.avgfillprice)
  return avgfillprice_;
}
inline void PyAT_OrderData::set_avgfillprice(double value) {
  set_has_avgfillprice();
  avgfillprice_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.avgfillprice)
}

// optional bool goodtillcanceled = 8 [default = true];
inline bool PyAT_OrderData::has_goodtillcanceled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PyAT_OrderData::set_has_goodtillcanceled() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PyAT_OrderData::clear_has_goodtillcanceled() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PyAT_OrderData::clear_goodtillcanceled() {
  goodtillcanceled_ = true;
  clear_has_goodtillcanceled();
}
inline bool PyAT_OrderData::goodtillcanceled() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.goodtillcanceled)
  return goodtillcanceled_;
}
inline void PyAT_OrderData::set_goodtillcanceled(bool value) {
  set_has_goodtillcanceled();
  goodtillcanceled_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.goodtillcanceled)
}

// optional double commissions = 9 [default = 0];
inline bool PyAT_OrderData::has_commissions() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PyAT_OrderData::set_has_commissions() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PyAT_OrderData::clear_has_commissions() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PyAT_OrderData::clear_commissions() {
  commissions_ = 0;
  clear_has_commissions();
}
inline double PyAT_OrderData::commissions() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.commissions)
  return commissions_;
}
inline void PyAT_OrderData::set_commissions(double value) {
  set_has_commissions();
  commissions_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.commissions)
}

// optional bool allornone = 10 [default = false];
inline bool PyAT_OrderData::has_allornone() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PyAT_OrderData::set_has_allornone() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PyAT_OrderData::clear_has_allornone() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PyAT_OrderData::clear_allornone() {
  allornone_ = false;
  clear_has_allornone();
}
inline bool PyAT_OrderData::allornone() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.allornone)
  return allornone_;
}
inline void PyAT_OrderData::set_allornone(bool value) {
  set_has_allornone();
  allornone_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.allornone)
}

// optional int32 orderstate = 11 [default = 0];
inline bool PyAT_OrderData::has_orderstate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PyAT_OrderData::set_has_orderstate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PyAT_OrderData::clear_has_orderstate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PyAT_OrderData::clear_orderstate() {
  orderstate_ = 0;
  clear_has_orderstate();
}
inline ::google::protobuf::int32 PyAT_OrderData::orderstate() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.orderstate)
  return orderstate_;
}
inline void PyAT_OrderData::set_orderstate(::google::protobuf::int32 value) {
  set_has_orderstate();
  orderstate_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.orderstate)
}

// optional string submitdatetime = 12 [default = ""];
inline bool PyAT_OrderData::has_submitdatetime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PyAT_OrderData::set_has_submitdatetime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PyAT_OrderData::clear_has_submitdatetime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PyAT_OrderData::clear_submitdatetime() {
  submitdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_submitdatetime();
}
inline const ::std::string& PyAT_OrderData::submitdatetime() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.submitdatetime)
  return submitdatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_submitdatetime(const ::std::string& value) {
  set_has_submitdatetime();
  submitdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.submitdatetime)
}
inline void PyAT_OrderData::set_submitdatetime(const char* value) {
  set_has_submitdatetime();
  submitdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PyAT_OrderData.submitdatetime)
}
inline void PyAT_OrderData::set_submitdatetime(const char* value, size_t size) {
  set_has_submitdatetime();
  submitdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PyAT_OrderData.submitdatetime)
}
inline ::std::string* PyAT_OrderData::mutable_submitdatetime() {
  set_has_submitdatetime();
  // @@protoc_insertion_point(field_mutable:XT.PyAT_OrderData.submitdatetime)
  return submitdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PyAT_OrderData::release_submitdatetime() {
  // @@protoc_insertion_point(field_release:XT.PyAT_OrderData.submitdatetime)
  clear_has_submitdatetime();
  return submitdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_allocated_submitdatetime(::std::string* submitdatetime) {
  if (submitdatetime != NULL) {
    set_has_submitdatetime();
  } else {
    clear_has_submitdatetime();
  }
  submitdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), submitdatetime);
  // @@protoc_insertion_point(field_set_allocated:XT.PyAT_OrderData.submitdatetime)
}

// optional double executionprice = 20 [default = 0];
inline bool PyAT_OrderData::has_executionprice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PyAT_OrderData::set_has_executionprice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PyAT_OrderData::clear_has_executionprice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PyAT_OrderData::clear_executionprice() {
  executionprice_ = 0;
  clear_has_executionprice();
}
inline double PyAT_OrderData::executionprice() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.executionprice)
  return executionprice_;
}
inline void PyAT_OrderData::set_executionprice(double value) {
  set_has_executionprice();
  executionprice_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.executionprice)
}

// optional int32 executionquantity = 21 [default = 0];
inline bool PyAT_OrderData::has_executionquantity() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PyAT_OrderData::set_has_executionquantity() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PyAT_OrderData::clear_has_executionquantity() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PyAT_OrderData::clear_executionquantity() {
  executionquantity_ = 0;
  clear_has_executionquantity();
}
inline ::google::protobuf::int32 PyAT_OrderData::executionquantity() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.executionquantity)
  return executionquantity_;
}
inline void PyAT_OrderData::set_executionquantity(::google::protobuf::int32 value) {
  set_has_executionquantity();
  executionquantity_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.executionquantity)
}

// optional double executioncommission = 22 [default = 0];
inline bool PyAT_OrderData::has_executioncommission() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PyAT_OrderData::set_has_executioncommission() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PyAT_OrderData::clear_has_executioncommission() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PyAT_OrderData::clear_executioncommission() {
  executioncommission_ = 0;
  clear_has_executioncommission();
}
inline double PyAT_OrderData::executioncommission() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.executioncommission)
  return executioncommission_;
}
inline void PyAT_OrderData::set_executioncommission(double value) {
  set_has_executioncommission();
  executioncommission_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.executioncommission)
}

// optional string executiondatetime = 23 [default = ""];
inline bool PyAT_OrderData::has_executiondatetime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PyAT_OrderData::set_has_executiondatetime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PyAT_OrderData::clear_has_executiondatetime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PyAT_OrderData::clear_executiondatetime() {
  executiondatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_executiondatetime();
}
inline const ::std::string& PyAT_OrderData::executiondatetime() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.executiondatetime)
  return executiondatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_executiondatetime(const ::std::string& value) {
  set_has_executiondatetime();
  executiondatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.executiondatetime)
}
inline void PyAT_OrderData::set_executiondatetime(const char* value) {
  set_has_executiondatetime();
  executiondatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XT.PyAT_OrderData.executiondatetime)
}
inline void PyAT_OrderData::set_executiondatetime(const char* value, size_t size) {
  set_has_executiondatetime();
  executiondatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XT.PyAT_OrderData.executiondatetime)
}
inline ::std::string* PyAT_OrderData::mutable_executiondatetime() {
  set_has_executiondatetime();
  // @@protoc_insertion_point(field_mutable:XT.PyAT_OrderData.executiondatetime)
  return executiondatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PyAT_OrderData::release_executiondatetime() {
  // @@protoc_insertion_point(field_release:XT.PyAT_OrderData.executiondatetime)
  clear_has_executiondatetime();
  return executiondatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PyAT_OrderData::set_allocated_executiondatetime(::std::string* executiondatetime) {
  if (executiondatetime != NULL) {
    set_has_executiondatetime();
  } else {
    clear_has_executiondatetime();
  }
  executiondatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), executiondatetime);
  // @@protoc_insertion_point(field_set_allocated:XT.PyAT_OrderData.executiondatetime)
}

// optional int32 xtoid = 30 [default = 0];
inline bool PyAT_OrderData::has_xtoid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PyAT_OrderData::set_has_xtoid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PyAT_OrderData::clear_has_xtoid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PyAT_OrderData::clear_xtoid() {
  xtoid_ = 0;
  clear_has_xtoid();
}
inline ::google::protobuf::int32 PyAT_OrderData::xtoid() const {
  // @@protoc_insertion_point(field_get:XT.PyAT_OrderData.xtoid)
  return xtoid_;
}
inline void PyAT_OrderData::set_xtoid(::google::protobuf::int32 value) {
  set_has_xtoid();
  xtoid_ = value;
  // @@protoc_insertion_point(field_set:XT.PyAT_OrderData.xtoid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace XT

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_XTData_2eproto__INCLUDED
